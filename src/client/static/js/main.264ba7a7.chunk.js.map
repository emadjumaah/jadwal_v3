{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pubups/PopupDeprtment.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","pages/calendar/Main.tsx","contexts/calendarReport/index.ts","pages/calendar/Employees.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/ImageUpload.tsx","pages/options/Company.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","pages/adds/Employees.tsx","hooks/useHResourses.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","components/filters/DateNavigatorReports.tsx","pages/adds/Invoices.tsx","hooks/useAccounts.ts","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","hooks/useCompany.ts","pubups/PopupAppointment.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","constants/reports.ts","pages/reports/SalesReport.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","pubups/PopupExpenses.tsx","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","hooks/useOResourses.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","graphql/query/getReceipts.ts","pubups/PopupReceipt.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupTaskAppointment.tsx","pubups/PopupAppointmentTask.tsx","graphql/query/getTaskEvents.ts","Shared/EventsTable.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","systemsNames","nameAr","colors","drawerWidth","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","resourses","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","all","da","index","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","bc","bg","uname","names","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","createdAtFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","taskNameFormatter","progressFormatter","position","bottom","right","fontWeight","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","commitAppointmentChanges","added","changed","deleted","addEvent","editEvent","removeEvent","items","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","optimisticResponse","__typename","updateEvent","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","opType","refNo","eventNo","progress","evQty","taskId","check","commandComponents","add","onExecute","textAlign","m","Fab","edit","IconButton","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","marginBottom","categoryName","categoryNameAr","brandName","brandNameAr","Loading","CircularProgress","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","onChange","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","Checkbox","checked","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","desc","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDate","maxDate","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","employees","departments","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","Landing","getLandingChartData","freshChartData","chartData","useDepartments","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","PaperComponent","handle","cancel","PopupLayout","alrt","onlyclose","print","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","PopupDeprtment","setNewValue","reset","trim","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","nameEn","description","multiline","rowsMax","InputProps","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","close","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","printsave","from","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","customers","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","setDepartvalue","depError","setDepError","setDaysoff","emplRef","useRef","depart","resType","closeModal","resetAll","target","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","setResType","emplslist","setEmplslist","useEmployees","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","useServices","servId","serv","se","onFormClose","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","src","textTransform","letterSpacing","invoiceNo","PureComponent","indexTheList","PopupInvoice","servicesproducts","company","tasks","loading","setLoading","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","setCustvalue","taskvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","tsk","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","getActions","loadActions","actionsData","eventId","onSelectServiceChange","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","refresQuery","getInvoices","createInvoice","payment","paymentAr","toLocaleTimeString","language","toLocaleDateString","logo","tel1","mob","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","getTasks","getfins","finData","bt","Main","visible","resourseData","setResourseData","setRows","useTasks","getEvents","refreshCharts","createEvent","deleteEvent","getCalEvents","evnData","eventsData","events","ap","startend","isMonth","curDate","innerHeight","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","CalendarReportContext","EmployeesAppoints","grouping","resourceName","setMainResourceNameDispatch","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","serverURL","UPLOAD_SERVER","ImageUpload","setLogo","setFile","uploadFile","file","formData","FormData","append","axios","post","then","filename","catch","err","files","Company","editCompany","active","setActive","tel2","alt","objectFit","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showEditCommand","showAddCommand","inputComponent","Departments","Employees","useHResourses","Customers","Services","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","Invoices","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","defaultSorting","onSortingChange","srt","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","Accounts","useAccounts","br","CashTransfareSelect","PopupFinance","debaccounts","setDebaccounts","cridaccounts","setCridaccounts","setDebitAcc","setCreditAcc","ca","ot","filtereddebits","filteredcredit","fullwidth","Finance","getFinances","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupAppointment","openInvoice","setOpenInvoice","setMinutes","custId","statNo","cu","stat","Appointments","periodvalue","setPeriodvalue","loadEvents","deleteEventById","removeEventById","taskIdFormatter","checkedIcon","FilterSelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","limitTags","SalesFilter","setServicevalue","setItemType","setCatvalue","categories","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","catvalueLocal","setCatvalueLocal","itemTypeLocal","setItemTypeLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","groupList","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","categoryIds","departmentIds","employeeIds","customerIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","buffer","saveAs","Blob","FilterSelect","FinanceReport","mainaccounts","balance","unshift","accNameAr","accName","accountIds","showInGroupFooter","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","initCalendarReportContext","calendarReportReducer","PopupExpenses","fullwidtth","Expenses","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PurchaseReport","suppliers","brands","supplierIds","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResourses","PopupReceipt","custError","setCustError","Receipt","getReceipts","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","UTC","SelectMulti","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","PopupTaskAppointment","setEvList","setRrule","openMulti","setOpenMulti","rRule","eventlist","PopupAppointmentTask","custRef","EventsTable","getTaskEvents","PopupTaskInvoice","handlePrint","PopupTask","tasktitle","setTasktitle","openEvent","setOpenEvent","evList","getTaskItems","finalItems","autoNo","evssum","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","loadTasks","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","initTasksContext","tasksReducer","Content","getCompany","getComp","compData","updateCompany","comp1","refreshcompany","useCompany","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.264ba7a7.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// uri: process.env.GRAPHQL_URI || \"http://jadwal:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean) {\r\n    getDepartments(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resType: Int) {\r\n    getEmployees(isRTL: $isRTL, resType: $resType) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resType\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices($start: Date, $end: Date, $search: String) {\r\n    getInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses($start: Date, $end: Date, $search: String) {\r\n    getExpenses(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  localuri: \"jadwal\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\n\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"ادارة المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 2.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: \"ادارة المهام\",\r\n    titleEn: \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"sales\",\r\n    uri: \"sales\",\r\n    titleAr: \"ادارة المبيعات\",\r\n    titleEn: \"Sales\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"المالية\",\r\n    titleEn: \"Finance\",\r\n    icon: \"finance\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"cash\",\r\n        uri: \"cash\",\r\n        titleAr: \"ادارة النقدية\",\r\n        titleEn: \"Cash\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 42,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"ادارة المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 43,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"ادارة المصروفات\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"ادارة القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصروفات\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير المالية\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 81,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: \"الأقسام\",\r\n        titleEn: \"Departments\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 82,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: \"الموظفين\",\r\n        titleEn: \"Employees\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 83,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 84,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      // {\r\n      //   id: 85,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 86,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 87,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      {\r\n        id: 88,\r\n        name: \"customers\",\r\n        uri: \"customers\",\r\n        titleAr: \"العملاء\",\r\n        titleEn: \"Customers\",\r\n        mainId: 8,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"accounts\",\r\n    uri: \"accounts\",\r\n    titleAr: \"ادارة الحسابات\",\r\n    titleEn: \"Accounts\",\r\n    icon: \"account\",\r\n    role: menuRoles.branchAdmin,\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصروفات\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصروفات\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصروفات\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(1).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\n\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصروفات\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n\r\n    const dates = rrule.all;\r\n    const list = dates.map((da: any, index: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n        index,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : null;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: \"#58ac58\",\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {parseInt(value)}%\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n  };\r\n};\r\n\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton style={{ padding: 5 }} onClick={onExecute} title=\"Edit row\">\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(1).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 65,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n}: any) => {\r\n  const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          minDate={startPeriod}\r\n          maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          minDate={startPeriod}\r\n          maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const { children, menuitem, isRTL, refresh, theme } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(theme.palette.primary.light, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24 }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, employees, departments, theme, menuitem } = props;\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box style={{ padding: 5 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            {raseeds && salesMonthTotal && eventsMonthCount && (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBoxDark\r\n                    title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                    value={moneyFormat(raseeds?.cash)}\r\n                    icon=\"cash\"\r\n                    color={prim}\r\n                    salesColor={salesColor}\r\n                    eventColor={eventColor}\r\n                  ></InfoBoxDark>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBoxDark\r\n                    title={words.card}\r\n                    value={moneyFormat(raseeds?.card)}\r\n                    icon=\"card\"\r\n                    color={prim}\r\n                    salesColor={salesColor}\r\n                    eventColor={eventColor}\r\n                  ></InfoBoxDark>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"اليوم\" : \"Today\"}\r\n                    value={moneyFormat(salesTodayTotal)}\r\n                    icon=\"sales\"\r\n                    color={salesColor}\r\n                    desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                  ></InfoBox>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                    value={moneyFormat(salesMonthTotal)}\r\n                    icon=\"sales\"\r\n                    color={salesColor}\r\n                    desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                  ></InfoBox>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"اليوم\" : \"Today\"}\r\n                    value={moneyFormatSimple(eventsTodayCount)}\r\n                    icon=\"event\"\r\n                    color={eventColor}\r\n                    desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                  ></InfoBox>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                    value={moneyFormatSimple(eventsMonthCount)}\r\n                    icon=\"event\"\r\n                    color={eventColor}\r\n                    desc={\r\n                      isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                    }\r\n                  ></InfoBox>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          {todayEvents && (\r\n            <Grid item xs={12} md={4}>\r\n              <PercentChart\r\n                pricolor={salesColor}\r\n                seccolor={eventColor}\r\n                data={todayEvents}\r\n                height={300}\r\n                prim={prim}\r\n                isRTL={isRTL}\r\n              />\r\n            </Grid>\r\n          )}\r\n          {salesDays && (\r\n            <Grid item xs={12} md={8}>\r\n              <SalesDaysChart\r\n                dataKey=\"total\"\r\n                isRTL={isRTL}\r\n                data={salesDays}\r\n                color={salesColor}\r\n                height={300}\r\n                prim={prim}\r\n              ></SalesDaysChart>\r\n            </Grid>\r\n          )}\r\n          {nextEventDays && (\r\n            <Grid item xs={12} md={4}>\r\n              <DaysEvents\r\n                dataKey=\"count\"\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n                data={nextEventDays}\r\n                height={300}\r\n                prim={prim}\r\n              ></DaysEvents>\r\n            </Grid>\r\n          )}\r\n          {eventDays && (\r\n            <Grid item xs={12} md={8}>\r\n              <EventsDaysChart\r\n                dataKey=\"count\"\r\n                isRTL={isRTL}\r\n                data={eventDays}\r\n                color={eventColor}\r\n                pricolor={salesColor}\r\n                seccolor={eventColor}\r\n                height={300}\r\n                prim={prim}\r\n              ></EventsDaysChart>\r\n            </Grid>\r\n          )}\r\n          {salesMonth && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsEmpChart\r\n                data={salesMonth}\r\n                isRTL={isRTL}\r\n                color={salesColor}\r\n                title={\r\n                  isRTL\r\n                    ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                    : \"Month Sales - Employee\"\r\n                }\r\n                employees={employees}\r\n                prim={prim}\r\n                height={400}\r\n              ></MonthsEmpChart>\r\n            </Grid>\r\n          )}\r\n          {salesMonth && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsEmpChart\r\n                data={salesMonth}\r\n                isRTL={isRTL}\r\n                color={salesColor}\r\n                title={\r\n                  isRTL\r\n                    ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                    : \"Month Sales - Department\"\r\n                }\r\n                departments={departments}\r\n                height={400}\r\n                prim={prim}\r\n              ></MonthsEmpChart>\r\n            </Grid>\r\n          )}\r\n          {salesMonths && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsChart\r\n                data={salesMonths}\r\n                isRTL={isRTL}\r\n                color={salesColor}\r\n                prim={prim}\r\n                dataKey=\"total\"\r\n                title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                height={400}\r\n              ></MonthsChart>\r\n            </Grid>\r\n          )}\r\n          {eventMonths && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsChart\r\n                data={eventMonths}\r\n                isRTL={isRTL}\r\n                color={eventColor}\r\n                dataKey=\"count\"\r\n                title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                prim={prim}\r\n                height={400}\r\n              ></MonthsChart>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {!onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"الغاء\" : \"Cancel\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"حفظ\" : \"Save\"}\r\n            </Typography>\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n        {onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#000000\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#000000\");\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      email,\r\n      color,\r\n      info,\r\n      resType: 1,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            required\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n  console.log(row);\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResType(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resType}\r\n            onChange={(e: any) => {\r\n              setResType(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={1}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resType === 1 ? words.employee : words.resourses}\r\n            disabled={!resType}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId,\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId,\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <AutoField\r\n          name=\"employee\"\r\n          title={words.employee}\r\n          words={words}\r\n          options={employees}\r\n          value={emplvalue}\r\n          setSelectValue={setEmplvalue}\r\n          setSelectError={setEmplError}\r\n          selectError={emplError}\r\n          refernce={emplRef}\r\n          register={register}\r\n          width={150}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"md\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={!isNew}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              backgroundColor: \"#aaa\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 10 }}></div>\r\n        </Grid>\r\n        <Grid item xs={6}></Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.price)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.qty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={5}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQSxaeDLKDa72WBXKkOegxEYVz8hJiLQd1KvGG6NJhay6bQHBY5ksUG2NREN2xrn8rloQ&usqp=CAU\"></img>\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Contact</div>\r\n            <div style={contItem}>+974 55257956</div>\r\n            <div style={contItem}>info@5gmobile.qa</div>\r\n            <div style={contItem}>www.5gmobile.qa</div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Address</div>\r\n            <div style={contItem}>Al-Gharafa Mobile Complex</div>\r\n            <div style={contItem}>Doha, Qatar</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 50, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Afsar Moh.</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 50, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Thank you for your business.</div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { print } from \"../common\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const taskId = row.taskId;\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // print={isElectron ? handlePrint : handleReactPrint}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5 printData={printData} ref={componentRef} />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert, successAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [type, setType] = useState(2);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    if (isNew) {\r\n      reset();\r\n    } else {\r\n      reset();\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(2);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onSelectServiceChange(amount, \"amount\");\r\n    onSelectServiceChange(JSON.stringify(itemsList), \"items\");\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  const onSelectServiceChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n    if (nextValue?.employeeId) {\r\n      const itememp = employees.filter(\r\n        (emp: any) => emp._id === nextValue.employeeId\r\n      )[0];\r\n      onNewFieldChange(itememp, \"employee\");\r\n    }\r\n    if (nextValue?.departmentId) {\r\n      const itemdep = departments.filter(\r\n        (dep: any) => dep._id === nextValue.departmentId\r\n      )[0];\r\n      onNewFieldChange(itemdep, \"department\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees}\r\n                value={row.employee}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport { print } from \"../common\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      // handlePrint();\r\n      // await successAlert(setAlrt);\r\n      await editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\nimport { useCustomers } from \"../../../hooks\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n  } = appointmentData;\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList.map((il: any) => {\r\n            return (\r\n              <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n                {isRTL ? il.nameAr : il.name}\r\n              </Typography>\r\n            );\r\n          })}\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginLeft: 61, marginTop: -30 }}>\r\n          <Typography style={{ marginTop: 5 }} gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        customers={customers}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        employees={employees}\r\n        departments={departments}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    alrt,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        status\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      mainResourceName,\r\n      departvalue,\r\n      emplvalue,\r\n      status,\r\n    },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n  const refreshCharts = {\r\n    refetchQueries: [\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refreshCharts);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\"\r\n        ? employees\r\n        : mainResourceName === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      mainResourceName,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees, mainResourceName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\"\r\n        ? employees\r\n        : value === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3, 7, 30]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Box style={{ marginBottom: 3 }}>\r\n              <EventsCalFilter\r\n                count={rows.length}\r\n                departvalue={departvalue}\r\n                setDepartvalue={setDepartvalueDispatch}\r\n                emplvalue={emplvalue}\r\n                setEmplvalue={setEmplvalueDispatch}\r\n                departments={departments}\r\n                employees={employees}\r\n                status={status}\r\n                setStatus={setStatusDispatch}\r\n                setMainResourceName={setMainResourceNameDispatch}\r\n                mainResourceName={mainResourceName}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                theme={theme}\r\n                refresh={refresh}\r\n              ></EventsCalFilter>\r\n            </Box>\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={\r\n          isMonth\r\n            ? \"auto\"\r\n            : isMobile\r\n            ? window.innerHeight\r\n            : window.innerHeight - 60\r\n        }\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n        {!isMonth && (\r\n          <EditRecurrenceMenu\r\n            messages={{\r\n              current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n              currentAndFollowing: isRTL\r\n                ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                : \"This and following appointments\",\r\n              all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n              menuEditingTitle: isRTL\r\n                ? \"تعديل موعد متكرر\"\r\n                : \"Edit recurring appointment\",\r\n              menuDeletingTitle: isRTL\r\n                ? \"حذف موعد متكرر\"\r\n                : \"Delete recurring appointment\",\r\n              cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n              commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n            }}\r\n          />\r\n        )}\r\n        {/* {!isMonth && <IntegratedEditing />} */}\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <WeekView\r\n          name=\"Week\"\r\n          displayName=\"Week\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <MonthView intervalCount={1} />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          showOpenButton={isEditor ? true : false}\r\n          // showDeleteButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              editEvent={editEvent}\r\n              company={company}\r\n              theme={theme}\r\n              viewonly={isMobile}\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        {/* {!isMonth && <AppointmentForm />} */}\r\n        {!isMonth && (\r\n          <AppointmentForm\r\n            overlayComponent={(args: any) => (\r\n              <PopupLayoutBox\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                alrt={alrt}\r\n                open={args.visible || false}\r\n                title={title}\r\n                onSubmit={commitChanges}\r\n                mt={0}\r\n                mb={50}\r\n                {...args}\r\n                onClose={args.onHide}\r\n                isMobile={isMobile}\r\n              ></PopupLayoutBox>\r\n            )}\r\n            basicLayoutComponent={(pr: any) => (\r\n              <AppointForm\r\n                departments={departments}\r\n                employees={employees}\r\n                servicesproducts={services}\r\n                theme={theme}\r\n                tasks={tasks}\r\n                isMobile={isMobile}\r\n                {...pr}\r\n              ></AppointForm>\r\n            )}\r\n            commandButtonComponent={CommandAppointment}\r\n          />\r\n        )}\r\n        <AllDayPanel />\r\n        {!isMonth && <DragDropProvider></DragDropProvider>}\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n  const { customers } = useCustomers();\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    departments,\r\n    employees,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst serverURL = process.env.UPLOAD_SERVER || \"http://jadwal:4000\";\r\n\r\nconst ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport ImageUpload from \"../../common/ImageUpload\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n\r\n            <img\r\n              src={logo}\r\n              alt={company?.name}\r\n              height={100}\r\n              style={{\r\n                objectFit: \"contain\",\r\n                borderRadius: 10,\r\n                marginTop: 5,\r\n              }}\r\n            />\r\n            <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, PopupEditing } from \"../../Shared\";\r\nimport { useDepartments } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport { avatarPatternFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Departments({ isRTL, words, isEditor, theme }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n  ]);\r\n\r\n  const { departments, addDepartment, editDepartment, removeDepartment } =\r\n    useDepartments();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n        >\r\n          <PopupDeprtment></PopupDeprtment>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\n\r\nexport default function Employees({ isRTL, words, isEditor, theme }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useHResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupEmployee></PopupEmployee>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 1 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Customers(props: any) {\r\n  const { isRTL, words, isEditor, theme, menuitem } = props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"mobile\", title: words.mobile },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.address },\r\n  ]);\r\n\r\n  const {\r\n    customers,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n    refreshcustomer,\r\n  } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshcustomer}\r\n    >\r\n      <Paper>\r\n        <Grid rows={customers} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginTop: 4 }}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginTop: 4, marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      startDate < startPeriod ||\r\n      startDate > endPeriod ||\r\n      endDate < startPeriod ||\r\n      endDate > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography\r\n              style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n            >\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      // {\r\n      //   query: getReminders,\r\n      // },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          {!isMobile && <SearchState />}\r\n\r\n          <IntegratedSorting />\r\n          {!isMobile && <IntegratedFiltering />}\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          {!isMobile && <Toolbar />}\r\n          {!isMobile && (\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n          )}\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  setItemType,\r\n  catvalue,\r\n  setCatvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  categories,\r\n  total,\r\n  words,\r\n  isRTL,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [catvalueLocal, setCatvalueLocal] = React.useState([]);\r\n  const [itemTypeLocal, setItemTypeLocal] = React.useState(null);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setCatvalueLocal(catvalue);\r\n      setItemTypeLocal(itemType);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setCatvalueLocal([]);\r\n    setItemTypeLocal(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setCatvalue([]);\r\n    setItemType(null);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setCatvalue(catvalueLocal);\r\n    setItemType(itemTypeLocal);\r\n    setOpen(false);\r\n  };\r\n\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...catvalue,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              {/* <SelectServProd\r\n                value={itemTypeLocal}\r\n                onChange={setItemTypeLocal}\r\n                isRTL={isRTL}\r\n                words={words}\r\n              ></SelectServProd> */}\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {categories && categories.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={categories}\r\n                  value={catvalueLocal}\r\n                  setValue={setCatvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"category\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={services}\r\n                value={servicevalueLocal}\r\n                setValue={setServicevalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"serviceproduct\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  categories,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services} // items\r\n            itemType={itemType}\r\n            setItemType={setsetItemTypeDispatch}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={mainaccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 6);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 380 : undefined,\r\n            right: isRTL ? undefined : 380,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            categories={null}\r\n            catvalue={[]}\r\n            setCatvalue={() => null}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            marginTop: 4,\r\n            zIndex: 115,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={eventStatus}\r\n            value={status}\r\n            setValue={setStatusDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"status\"\r\n            nomulti\r\n            width={180}\r\n          ></FilterSelectCkeckBox>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={customers}\r\n            value={custvalue?.[0]}\r\n            setValue={setCustvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"customer\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 1 ? words.employee : words.resourses}\r\n                disabled={!resType}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 2 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport PopupDeprtment from \"./PopupDeprtment\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [openDept, setOpenDept] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const openDepartment = () => {\r\n    setOpenDept(true);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      color,\r\n      info,\r\n      resType: 2,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\n\r\nexport default function Resourses({ isRTL, words, isEditor, theme }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useOResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupResourses></PopupResourses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts($start: Date, $end: Date, $search: String) {\r\n    getReceipts(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers, useDepartments } from \"../hooks\";\r\n\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer,\r\n      department,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCustvalue(null);\r\n    setTaskvalue(null);\r\n    setCustError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.from}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"debitAcc\", title: words.to },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginTop: 5 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"docNo\", title: words.no },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={180}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={180}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={180}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  setEvList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (!row) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n  };\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      startDate < startPeriod ||\r\n      startDate > endPeriod ||\r\n      endDate < startPeriod ||\r\n      endDate > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const event = {\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist });\r\n    setEvList(eventlist);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    height={200}\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      startDate < startPeriod ||\r\n      startDate > endPeriod ||\r\n      endDate < startPeriod ||\r\n      endDate > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <PopupAddMultiEvents\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                  disabled={desabledSave}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            <Box style={{ marginTop: 20 }}>\r\n              <AutoFieldLocal\r\n                name=\"status\"\r\n                title={words.status}\r\n                words={words}\r\n                options={eventStatus}\r\n                value={status}\r\n                setSelectValue={setStatus}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                width={200}\r\n              ></AutoFieldLocal>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskEvents($taskId: Int) {\r\n    getTaskEvents(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n} from \"./colorFormat\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { createEvent, deleteEventById, updateEvent } from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupAppointmentTask from \"../pubups/PopupAppointmentTask\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  rows,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  isNew,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTaskEvents,\r\n        variables: { taskId },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentTask\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              taskId={taskId}\r\n              employee={employee}\r\n              department={department}\r\n              customer={customer}\r\n              company={company}\r\n              isEditor={isEditor}\r\n            ></PopupAppointmentTask>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport { print } from \"../common\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getTaskEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const events = eventsData?.data?.[\"getTaskEvents\"]?.data || [];\r\n    const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      const finalItems = _(itemsWqtyprice)\r\n        .groupBy(\"_id\")\r\n        .map((array, key) => ({\r\n          name: array[0].name,\r\n          nameAr: array[0].nameAr,\r\n          categoryId: array[0].categoryId,\r\n          categoryName: array[0].categoryName,\r\n          categoryNameAr: array[0].categoryNameAr,\r\n          departmentId: array[0].departmentId,\r\n          departmentName: array[0].departmentName,\r\n          departmentNameAr: array[0].departmentNameAr,\r\n          departmentColor: array[0].departmentColor,\r\n          employeeId: array[0].employeeId,\r\n          employeeName: array[0].employeeName,\r\n          employeeNameAr: array[0].employeeNameAr,\r\n          employeeColor: array[0].employeeColor,\r\n          autoNo: array[0].autoNo,\r\n          docNo: array[0].docNo,\r\n          cost: array[0].cost,\r\n          itemType: array[0].itemType,\r\n          index: array[0].index,\r\n          itemprice: array[0].itemprice,\r\n          itemqty: _.sumBy(array, \"itemqty\"),\r\n          itemtotal: _.sumBy(array, \"itemtotal\"),\r\n        }))\r\n        .orderBy(\"index\")\r\n        .value();\r\n      setItemsList(finalItems);\r\n    }\r\n    if (events && events.length > 0) {\r\n      setEvList(indexTheList(events));\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData, itemsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setMinutes(0);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { taskId: row.id };\r\n      getEvents({ variables });\r\n      getItems({ variables });\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setEvList([]);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      start < startPeriod ||\r\n      start > endPeriod ||\r\n      end < startPeriod ||\r\n      end > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const events =\r\n      evList && evList.length > 0 ? JSON.stringify(evList) : undefined;\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 2,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"lg\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextFieldLocal\r\n                  required\r\n                  name=\"tasktitle\"\r\n                  label={words.name}\r\n                  value={tasktitle}\r\n                  onChange={(e: any) => setTasktitle(e.target.value)}\r\n                  row={row}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"customer\"\r\n                  title={words.customer}\r\n                  words={words}\r\n                  options={customers}\r\n                  value={custvalue}\r\n                  setSelectValue={setCustvalue}\r\n                  setSelectError={setCustError}\r\n                  selectError={custError}\r\n                  refernce={custRef}\r\n                  register={register}\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  showphone\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"department\"\r\n                  title={words.department}\r\n                  words={words}\r\n                  options={departments}\r\n                  value={departvalue}\r\n                  setSelectValue={setDepartvalue}\r\n                  setSelectError={setDepartError}\r\n                  selectError={departError}\r\n                  refernce={departRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"employee\"\r\n                  title={words.employee}\r\n                  words={words}\r\n                  options={employees}\r\n                  value={emplvalue}\r\n                  setSelectValue={setEmplvalue}\r\n                  setSelectError={setEmplError}\r\n                  selectError={emplError}\r\n                  refernce={emplRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  day={day}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"flex-start\",\r\n                  marginInlineStart: 10,\r\n                }}\r\n              >\r\n                {isNew && (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Add Events\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n              {!loading && evList.length > 0 && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    rows={evList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          setEvList={setEvList}\r\n        ></PopupTaskAppointment>\r\n        <PopupTaskInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          task={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupTaskInvoice>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getLandingChartData } from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, useMediaQuery } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\n\r\nexport const getRowId = (row: { id: any }) => row.id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.progress,\r\n    col.evQty,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const {\r\n    state: { sort },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const [loadTasks, eventsData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeTaskById({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getTasks?.data) {\r\n      const { data } = eventsData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n    >\r\n      <>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            marginTop: 10,\r\n            marginRight: 10,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setOpenGantt(true)}\r\n          >\r\n            {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n          </Button>\r\n        </Box>\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            {!isMobile && <SearchState />}\r\n\r\n            <IntegratedSorting />\r\n            {!isMobile && <IntegratedFiltering />}\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            {!isMobile && <Toolbar />}\r\n            {!isMobile && (\r\n              <SearchPanel\r\n                inputComponent={(props: any) => {\r\n                  return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n                }}\r\n              />\r\n            )}\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n        </Paper>\r\n      </>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport { MainCalendar } from \"../calendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport {\r\n  useBranches,\r\n  useDepartments,\r\n  useEmployees,\r\n  useServices,\r\n  useSuppliers,\r\n} from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport EmployeesAppoints from \"../calendar/Employees\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { departments, refreshdepartment, addDepartment, editDepartment } =\r\n    useDepartments();\r\n  const { employees, refreshemployee, addEmployee, editEmployee } =\r\n    useEmployees();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      {/* <AppBar\r\n        company={company}\r\n\r\n        isRTL={isRTL}\r\n        user={user}\r\n        network={network}\r\n      ></AppBar> */}\r\n      {/* <AppBar logout={logout} isRTL={isRTL} user={user}></AppBar> */}\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                employees={employees}\r\n                departments={departments}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  departments={departments}\r\n                  addDepartment={addDepartment}\r\n                  editDepartment={editDepartment}\r\n                  employees={employees}\r\n                  addEmployee={addEmployee}\r\n                  editEmployee={editEmployee}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesAppoints\r\n                  menuitem={menuitem}\r\n                  // resourseData={resourseData}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesAppoints>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshdepartment}\r\n              >\r\n                <Departments></Departments>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Employees></Employees>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Resourses></Resourses>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nrequire(\"dotenv\").config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}