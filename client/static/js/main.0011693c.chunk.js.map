{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getGroups.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/createGroup.ts","graphql/mutation/deleteGroup.ts","graphql/mutation/updateGroup.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pubups/PopupDeprtment.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","pages/calendar/Main.tsx","contexts/calendarReport/index.ts","pages/calendar/Employees.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/upload.tsx","pages/options/Company.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","pages/adds/Employees.tsx","hooks/useHResourses.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","components/filters/DateNavigatorReports.tsx","pages/adds/Invoices.tsx","hooks/useAccounts.ts","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","hooks/useCompany.ts","pubups/PopupAppointment.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","constants/reports.ts","pages/reports/SalesReport.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","pubups/PopupExpenses.tsx","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","hooks/useOResourses.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","graphql/query/getReceipts.ts","graphql/query/getInvoicesList.ts","pubups/PopupReceipt.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupTaskAppointment.tsx","pubups/PopupAppointmentTask.tsx","graphql/query/getTaskEvents.ts","Shared/EventsTable.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","Shared/EventsTableEdit.tsx","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","graphql/query/getReportDocuments.ts","contexts/documentsReport/index.ts","pages/reports/DocumentsReport.tsx","contexts/documentsReport/documentsReducer.ts","contexts/servicesReport/index.ts","graphql/query/getReportServices.ts","pages/reports/ServicesReport.tsx","contexts/servicesReport/servicesReducer.ts","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","systemsNames","nameAr","colors","drawerWidth","isProd","imageUploadOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","taskvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","resourses","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","all","da","index","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","bc","bg","uname","names","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","createdAtFormatter","fromToFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","taskStatusFormatter","CircularProgress","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","currencyFormatterEmpty","doneFormatter","editEvent","Checkbox","checked","onChange","optimisticResponse","__typename","updateEvent","invoiceReceiptFormatter","valuePercent","position","bottom","right","fontWeight","taskIdFormatter","tasks","tsk","taskNameFormatter","progressFormatter","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","compressEvents","events","times","ev","commitAppointmentChanges","added","changed","deleted","addEvent","removeEvent","items","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","opType","refNo","eventNo","progress","evQty","taskId","fromto","done","invo","totalinvoiced","totalpaid","toatlExpenses","desc","check","commandComponents","add","onExecute","textAlign","m","Fab","edit","IconButton","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","marginBottom","categoryName","categoryNameAr","brandName","brandNameAr","Loading","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","employees","departments","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","Landing","getLandingChartData","freshChartData","chartData","useDepartments","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","innerHeight","PaperComponent","handle","cancel","PopupLayout","alrt","onlyclose","print","savetitle","preventclose","saving","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","PopupDeprtment","setNewValue","setSaving","reset","trim","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","nameEn","description","multiline","rowsMax","InputProps","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","close","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","printsave","from","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","customers","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","setDepartvalue","depError","setDepError","setDaysoff","emplRef","useRef","depart","resType","closeModal","resetAll","target","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","setResType","emplslist","setEmplslist","useEmployees","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","useServices","servId","serv","se","onFormClose","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","src","textTransform","letterSpacing","invoiceNo","PureComponent","indexTheList","PopupInvoice","servicesproducts","company","loading","setLoading","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","setCustvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","getActions","loadActions","actionsData","eventId","onSelectServiceChange","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","refresQuery","getInvoices","createInvoice","payment","paymentAr","toLocaleTimeString","language","toLocaleDateString","logo","tel1","mob","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","getTasks","getfins","finData","bt","Main","visible","resourseData","setResourseData","setRows","useTasks","getEvents","refreshCharts","createEvent","deleteEvent","getCalEvents","evnData","eventsData","ap","startend","isMonth","curDate","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","CalendarReportContext","EmployeesAppoints","grouping","resourceName","setMainResourceNameDispatch","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","ImageOnlineUpload","url","setUrl","image","setImage","localimage","setLocalImage","fileInput","removeImage","URL","createObjectURL","opacity","img","files","click","objectFit","uploadPhotoOnline","imageCompression","compressedImage","FormData","append","fetch","method","json","Company","editCompany","setLogo","active","setActive","iconimage","setIconimage","iconurl","setIconurl","tel2","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showEditCommand","showAddCommand","inputComponent","Departments","Employees","useHResourses","Customers","Services","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","minDate","Invoices","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","defaultSorting","onSortingChange","srt","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","Accounts","useAccounts","br","CashTransfareSelect","PopupFinance","debaccounts","setDebaccounts","cridaccounts","setCridaccounts","setDebitAcc","setCreditAcc","ca","ot","filtereddebits","filteredcredit","fullwidth","Finance","getFinances","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupAppointment","openInvoice","setOpenInvoice","tasktitle","setTasktitle","setMinutes","custId","statNo","cu","stat","Appointments","periodvalue","setPeriodvalue","loadEvents","deleteEventById","removeEventById","checkedIcon","FilterSelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","limitTags","SalesFilter","setServicevalue","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","taskvalueLocal","setTaskvalueLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","groupList","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","departmentIds","employeeIds","customerIds","taskIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","setItemType","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","then","buffer","saveAs","Blob","FilterSelect","FinanceReport","mainaccounts","balance","unshift","accNameAr","accName","accountIds","categoryIds","showInGroupFooter","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","initCalendarReportContext","calendarReportReducer","PopupExpenses","fullwidtth","Expenses","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PurchaseReport","suppliers","categories","brands","supplierIds","setCatvalue","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResourses","PopupReceipt","custError","setCustError","invoices","setInvoices","invoicevalue","setInvoicevalue","getInvoicesList","invoicesData","ndata","Receipt","getReceipts","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","UTC","SelectMulti","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","PopupTaskAppointment","setEvList","setRrule","openMulti","setOpenMulti","rRule","eventlist","PopupAppointmentTask","custRef","EventsTable","getTaskEvents","PopupTaskInvoice","EventsTableEdit","PopupTask","openEvent","setOpenEvent","evList","getTaskItems","finalItems","autoNo","evssum","evDone","isTaskNew","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","loadTasks","tasksData","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","initTasksContext","tasksReducer","DocumentsReportContext","DocumentsReport","getReportDocuments","initDocumentsReportContext","documentsReportReducer","ServicesReportContext","ServicesReport","getReportServices","initServicesReportContext","servicesReportReducer","Content","getCompany","getComp","compData","updateCompany","comp1","refreshcompany","useCompany","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","documentsStore","documentsDispatch","servicesStore","servicesDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","config","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0011693c.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// local\r\n// uri: \"http://jadwal-server:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean) {\r\n    getDepartments(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGroups($isRTL: Boolean) {\r\n    getGroups(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n        tasks\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resType: Int) {\r\n    getEmployees(isRTL: $isRTL, resType: $resType) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resType\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        documentNo\r\n        startDate\r\n        endDate\r\n        cost\r\n        model\r\n        type\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices($start: Date, $end: Date, $search: String) {\r\n    getInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        eventId\r\n        taskId\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n        desc\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses($start: Date, $end: Date, $search: String) {\r\n    getExpenses(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGroup(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    createGroup(branch: $branch, name: $name, nameAr: $nameAr, tasks: $tasks) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGroup($_id: String) {\r\n    deleteGroup(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGroup(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    updateGroup(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tasks: $tasks\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      refNo: $refNo\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      refNo: $refNo\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  localuri: \"jadwal-server:4000\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\n\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 0.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: \"ادارة المهام\",\r\n    titleEn: \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"ادارة المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    name: \"sales\",\r\n    uri: \"sales\",\r\n    titleAr: \"ادارة الفواتير\",\r\n    titleEn: \"Sales\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"ادارة المالية\",\r\n    titleEn: \"Finance\",\r\n    icon: \"finance\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"cash\",\r\n        uri: \"cash\",\r\n        titleAr: \"ادارة النقدية\",\r\n        titleEn: \"Cash\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 42,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"ادارة المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 43,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"ادارة المصروفات\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"ادارة القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.5,\r\n        name: \"docreports\",\r\n        uri: \"docreports\",\r\n        titleAr: \"تقرير الوثائق\",\r\n        titleEn: \"Documents Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.7,\r\n        name: \"servicesreports\",\r\n        uri: \"servicesreports\",\r\n        titleAr: \"تقرير الخدمات\",\r\n        titleEn: \"Services Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصروفات\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير الحسابات\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 81,\r\n        name: \"customers\",\r\n        uri: \"customers\",\r\n        titleAr: \"العملاء\",\r\n        titleEn: \"Customers\",\r\n        mainId: 8,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 82,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: \"الأقسام\",\r\n        titleEn: \"Departments\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 83,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: \"الموظفين\",\r\n        titleEn: \"Employees\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 84,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 85,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n\r\n      // {\r\n      //   id: 85,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 86,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 87,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n\r\n      {\r\n        id: 89,\r\n        name: \"accounts\",\r\n        uri: \"accounts\",\r\n        titleAr: \"الحسابات\",\r\n        titleEn: \"Accounts\",\r\n        icon: \"account\",\r\n        mainId: 8,\r\n        role: menuRoles.branchAdmin,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصروفات\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصروفات\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصروفات\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n\r\nexport const isProd = process.env.NODE_ENV === \"production\";\r\n\r\nexport const UPLOAD_PRESET = \"sfnboslv\";\r\nexport const CLOUD_NAME = \"fivegstore\";\r\nexport const imageUploadOptions = {\r\n  maxSizeMB: 1,\r\n  maxWidthOrHeight: 1280,\r\n  useWebWorker: true,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(1).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\n\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصروفات\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n\r\n    const dates = rrule.all;\r\n    const list = dates.map((da: any, index: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n        index,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : null;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Checkbox, CircularProgress, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const fromToFormatter = ({ row }: any) => {\r\n  const start = covertToTimeOnly(row.startDate);\r\n  const end = covertToTimeOnly(row.endDate);\r\n  return (\r\n    <div>\r\n      {start} {end}\r\n    </div>\r\n  );\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const taskStatusFormatter = ({ value }: any) => {\r\n  if (value === 1) {\r\n    return <CircularProgress style={{ color: \"#58ac58\" }} size={16} />;\r\n  } else {\r\n    return (\r\n      <Box\r\n        style={{\r\n          width: 18,\r\n          height: 18,\r\n          borderRadius: 9,\r\n          backgroundColor: \"#ddd\",\r\n        }}\r\n      ></Box>\r\n    );\r\n  }\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\nexport const moneyFormatEmpty = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const currencyFormatterEmpty = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormatEmpty(value)}</span>;\r\n};\r\nexport const doneFormatter = ({ row, editEvent }: any) => {\r\n  const status = row.status === 10 ? 2 : 10;\r\n  const id = row.id;\r\n  const variables = { id, status };\r\n  return (\r\n    <span>\r\n      <Checkbox\r\n        style={{ padding: 0, margin: 0 }}\r\n        checked={row.status === 10}\r\n        onChange={async (e: any) => {\r\n          await editEvent({\r\n            variables,\r\n            optimisticResponse: {\r\n              __typename: \"updateEvent\",\r\n              updateEvent: {\r\n                __typename: \"Operation\",\r\n                id,\r\n                ...row,\r\n                ...variables,\r\n              },\r\n            },\r\n          });\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\nexport const invoiceReceiptFormatter = ({ value, row }: any) => {\r\n  const { amount } = row;\r\n  const valuePercent = (value / amount) * 100;\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: valuePercent,\r\n          height: 15,\r\n          backgroundColor: \"#58ac58\",\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 30 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? moneyFormat(value) : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: \"#58ac58\",\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? `${parseInt(value)}%` : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const compressEvents = (events: any) => {\r\n  if (events && events.length > 0) {\r\n    const event = events[0];\r\n    const times = events.map((ev: any) => {\r\n      return {\r\n        startDate: ev.startDate,\r\n        endDate: ev.endDate,\r\n      };\r\n    });\r\n    return JSON.stringify({ event, times });\r\n  } else {\r\n    return JSON.stringify([]);\r\n  }\r\n};\r\n\r\nexport const decompressEvents = (events: any) => {\r\n  if (events) {\r\n    const data = JSON.parse(events);\r\n    const { event, times } = data;\r\n    if (event && times) {\r\n      const readyEvents = times.map((evt: any) => {\r\n        return {\r\n          ...event,\r\n          startDate: evt.startDate,\r\n          endDate: evt.endDate,\r\n        };\r\n      });\r\n      return readyEvents;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    id: {\r\n      id: 25,\r\n      ref: \"id\",\r\n      name: \"id\",\r\n      title: isRTL ? \"الرقم\" : \"No\",\r\n    },\r\n    fromto: {\r\n      id: 25,\r\n      ref: \"fromto\",\r\n      name: \"fromto\",\r\n      title: isRTL ? \"الوقت\" : \"Time\",\r\n    },\r\n    done: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    invo: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    totalinvoiced: {\r\n      id: 26,\r\n      ref: \"totalinvoiced\",\r\n      name: \"totalinvoiced\",\r\n      title: isRTL ? \"فواتير\" : \"Invoices\",\r\n    },\r\n    totalpaid: {\r\n      id: 27,\r\n      ref: \"totalpaid\",\r\n      name: \"totalpaid\",\r\n      title: isRTL ? \"مقبوض\" : \"Receipts\",\r\n    },\r\n    toatlExpenses: {\r\n      id: 28,\r\n      ref: \"toatlExpenses\",\r\n      name: \"toatlExpenses\",\r\n      title: isRTL ? \"مصروف\" : \"Expenses\",\r\n    },\r\n    desc: {\r\n      id: 29,\r\n      ref: \"desc\",\r\n      name: \"desc\",\r\n      title: isRTL ? \"البيان\" : \"Description\",\r\n    },\r\n    item: {\r\n      id: 30,\r\n      ref: \"item\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n  };\r\n};\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton style={{ padding: 5 }} onClick={onExecute} title=\"Edit row\">\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف المدخل ؟\"\r\n              : \"Are you sure you want to delete this row?\"\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(1).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 20,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\n// import { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n}: any) => {\r\n  // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const { children, menuitem, isRTL, refresh, theme } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(theme.palette.primary.light, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24 }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, employees, departments, theme, menuitem } = props;\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box\r\n        style={{\r\n          height: window.innerHeight - 90,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Box style={{ margin: 20, marginBottom: 20 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              {raseeds && salesMonthTotal && eventsMonthCount && (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                      value={moneyFormat(raseeds?.cash)}\r\n                      icon=\"cash\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={words.card}\r\n                      value={moneyFormat(raseeds?.card)}\r\n                      icon=\"card\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormat(salesTodayTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormat(salesMonthTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormatSimple(eventsTodayCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormatSimple(eventsMonthCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={\r\n                        isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                      }\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            {todayEvents && (\r\n              <Grid item xs={12} md={4}>\r\n                <PercentChart\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  data={todayEvents}\r\n                  height={300}\r\n                  prim={prim}\r\n                  isRTL={isRTL}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {salesDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <SalesDaysChart\r\n                  dataKey=\"total\"\r\n                  isRTL={isRTL}\r\n                  data={salesDays}\r\n                  color={salesColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></SalesDaysChart>\r\n              </Grid>\r\n            )}\r\n            {nextEventDays && (\r\n              <Grid item xs={12} md={4}>\r\n                <DaysEvents\r\n                  dataKey=\"count\"\r\n                  theme={theme}\r\n                  isRTL={isRTL}\r\n                  data={nextEventDays}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></DaysEvents>\r\n              </Grid>\r\n            )}\r\n            {eventDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <EventsDaysChart\r\n                  dataKey=\"count\"\r\n                  isRTL={isRTL}\r\n                  data={eventDays}\r\n                  color={eventColor}\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></EventsDaysChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                      : \"Month Sales - Employee\"\r\n                  }\r\n                  employees={employees}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                      : \"Month Sales - Department\"\r\n                  }\r\n                  departments={departments}\r\n                  height={400}\r\n                  prim={prim}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={salesMonths}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  prim={prim}\r\n                  dataKey=\"total\"\r\n                  title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n            {eventMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={eventMonths}\r\n                  isRTL={isRTL}\r\n                  color={eventColor}\r\n                  dataKey=\"count\"\r\n                  title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n    savetitle = isRTL ? \"حفظ\" : \"Save\",\r\n    taskvalue,\r\n    preventclose = false,\r\n    saving,\r\n  } = props;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={preventclose ? () => null : onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title} {taskvalue ? ` - ${taskvalue?.title}` : \"\"}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n            disabled={saving}\r\n          >\r\n            <Typography\r\n              style={{ marginLeft: 5, marginRight: 5 }}\r\n              variant=\"subtitle2\"\r\n            >\r\n              {savetitle}\r\n            </Typography>\r\n            {saving && <CircularProgress color=\"primary\" size={16} />}\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n        {/* {onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )} */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#AAAAAA\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#AAAAAA\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#AAAAAA\");\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      email,\r\n      color,\r\n      info,\r\n      resType: 1,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResType(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resType}\r\n            onChange={(e: any) => {\r\n              setResType(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={1}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resType === 1 ? words.employee : words.resourses}\r\n            disabled={!resType}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n    setDepartvalue(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <AutoField\r\n          name=\"employee\"\r\n          title={words.employee}\r\n          words={words}\r\n          options={employees}\r\n          value={emplvalue}\r\n          setSelectValue={setEmplvalue}\r\n          setSelectError={setEmplError}\r\n          selectError={emplError}\r\n          refernce={emplRef}\r\n          register={register}\r\n          width={150}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"md\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={!isNew}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              backgroundColor: \"#aaa\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 10 }}></div>\r\n        </Grid>\r\n        <Grid item xs={6}></Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.price)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.qty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={5}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQSxaeDLKDa72WBXKkOegxEYVz8hJiLQd1KvGG6NJhay6bQHBY5ksUG2NREN2xrn8rloQ&usqp=CAU\"></img>\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Contact</div>\r\n            <div style={contItem}>+974 55257956</div>\r\n            <div style={contItem}>info@5gmobile.qa</div>\r\n            <div style={contItem}>www.5gmobile.qa</div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Address</div>\r\n            <div style={contItem}>Al-Gharafa Mobile Complex</div>\r\n            <div style={contItem}>Doha, Qatar</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 50, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Afsar Moh.</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 50, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Thank you for your business.</div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { print } from \"../common\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const taskId = row.taskId;\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // print={isElectron ? handlePrint : handleReactPrint}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5 printData={printData} ref={componentRef} />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      setSaving(false);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [type, setType] = useState(2);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    setSaving(true);\r\n\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    reset();\r\n    setSaving(false);\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(2);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onSelectServiceChange(amount, \"amount\");\r\n    onSelectServiceChange(JSON.stringify(itemsList), \"items\");\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  const onSelectServiceChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n    if (nextValue?.employeeId) {\r\n      const itememp = employees.filter(\r\n        (emp: any) => emp._id === nextValue.employeeId\r\n      )[0];\r\n      onNewFieldChange(itememp, \"employee\");\r\n    }\r\n    if (nextValue?.departmentId) {\r\n      const itemdep = departments.filter(\r\n        (dep: any) => dep._id === nextValue.departmentId\r\n      )[0];\r\n      onNewFieldChange(itemdep, \"department\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees}\r\n                value={row.employee}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport { print } from \"../common\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      taskId: appoint.taskId,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\nimport { useCustomers } from \"../../../hooks\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n  } = appointmentData;\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList.map((il: any) => {\r\n            return (\r\n              <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n                {isRTL ? il.nameAr : il.name}\r\n              </Typography>\r\n            );\r\n          })}\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginLeft: 61, marginTop: -30 }}>\r\n          <Typography style={{ marginTop: 5 }} gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        customers={customers}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        employees={employees}\r\n        departments={departments}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    alrt,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        status\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      mainResourceName,\r\n      departvalue,\r\n      emplvalue,\r\n      status,\r\n    },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n  const refreshCharts = {\r\n    refetchQueries: [\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refreshCharts);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\"\r\n        ? employees\r\n        : mainResourceName === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      mainResourceName,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees, mainResourceName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\"\r\n        ? employees\r\n        : value === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        marginTop: isMobile ? 47 : undefined,\r\n        height: window.innerHeight - 10,\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Box style={{ margin: 10 }}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={4}>\r\n            <DateNavigator\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              currentViewNameChange={currentViewNameChange}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentDate={currentDate}\r\n              views={[1, 3, 7, 30]}\r\n            ></DateNavigator>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Box style={{ marginBottom: 3 }}>\r\n                <EventsCalFilter\r\n                  count={rows.length}\r\n                  departvalue={departvalue}\r\n                  setDepartvalue={setDepartvalueDispatch}\r\n                  emplvalue={emplvalue}\r\n                  setEmplvalue={setEmplvalueDispatch}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  status={status}\r\n                  setStatus={setStatusDispatch}\r\n                  setMainResourceName={setMainResourceNameDispatch}\r\n                  mainResourceName={mainResourceName}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  refresh={refresh}\r\n                ></EventsCalFilter>\r\n              </Box>\r\n            </Hidden>\r\n          </Grid>\r\n        </Grid>\r\n        <Box style={{ margin: 0 }}>\r\n          <Scheduler\r\n            data={rows}\r\n            height={\r\n              isMonth\r\n                ? \"auto\"\r\n                : isMobile\r\n                ? window.innerHeight\r\n                : window.innerHeight - 90\r\n            }\r\n            firstDayOfWeek={6}\r\n            locale={isRTL ? \"ar\" : \"en\"}\r\n          >\r\n            {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n            {!isMonth && (\r\n              <EditRecurrenceMenu\r\n                messages={{\r\n                  current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n                  currentAndFollowing: isRTL\r\n                    ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                    : \"This and following appointments\",\r\n                  all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n                  menuEditingTitle: isRTL\r\n                    ? \"تعديل موعد متكرر\"\r\n                    : \"Edit recurring appointment\",\r\n                  menuDeletingTitle: isRTL\r\n                    ? \"حذف موعد متكرر\"\r\n                    : \"Delete recurring appointment\",\r\n                  cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n                  commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n                }}\r\n              />\r\n            )}\r\n            {/* {!isMonth && <IntegratedEditing />} */}\r\n            <ViewState\r\n              currentViewName={currentViewName}\r\n              onCurrentViewNameChange={currentViewNameChange}\r\n              currentDate={currentDate}\r\n              onCurrentDateChange={currentDateChange}\r\n            />\r\n            <DayView\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <DayView\r\n              name=\"3Days\"\r\n              displayName=\"3 Days\"\r\n              intervalCount={3}\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <WeekView\r\n              name=\"Week\"\r\n              displayName=\"Week\"\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <MonthView intervalCount={1} />\r\n            {/* <Toolbar /> */}\r\n            <Appointments appointmentContentComponent={AppointmentContent} />\r\n            <Resources\r\n              data={resourseData}\r\n              mainResourceName={mainResourceName}\r\n            />\r\n            <AppointmentTooltip\r\n              showCloseButton\r\n              showOpenButton={isEditor ? true : false}\r\n              // showDeleteButton\r\n              visible={visible}\r\n              onVisibilityChange={() => setVisible(!visible)}\r\n              contentComponent={({ appointmentData }) => (\r\n                <RenderToolTip\r\n                  appointmentData={appointmentData}\r\n                  setVisible={setVisible}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  editEvent={editEvent}\r\n                  company={company}\r\n                  theme={theme}\r\n                  viewonly={isMobile}\r\n                ></RenderToolTip>\r\n              )}\r\n            />\r\n            {/* {!isMonth && <AppointmentForm />} */}\r\n            {!isMonth && (\r\n              <AppointmentForm\r\n                overlayComponent={(args: any) => (\r\n                  <PopupLayoutBox\r\n                    isRTL={isRTL}\r\n                    theme={theme}\r\n                    alrt={alrt}\r\n                    open={args.visible || false}\r\n                    title={title}\r\n                    onSubmit={commitChanges}\r\n                    mt={0}\r\n                    mb={50}\r\n                    {...args}\r\n                    onClose={args.onHide}\r\n                    isMobile={isMobile}\r\n                  ></PopupLayoutBox>\r\n                )}\r\n                basicLayoutComponent={(pr: any) => (\r\n                  <AppointForm\r\n                    departments={departments}\r\n                    employees={employees}\r\n                    servicesproducts={services}\r\n                    theme={theme}\r\n                    tasks={tasks}\r\n                    isMobile={isMobile}\r\n                    {...pr}\r\n                  ></AppointForm>\r\n                )}\r\n                commandButtonComponent={CommandAppointment}\r\n              />\r\n            )}\r\n            <AllDayPanel />\r\n            {!isMonth && <DragDropProvider></DragDropProvider>}\r\n            <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n          </Scheduler>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n  const { customers } = useCustomers();\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    departments,\r\n    employees,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  CLOUD_NAME,\r\n  imageUploadOptions,\r\n  UPLOAD_PRESET,\r\n} from \"../constants/sizes\";\r\n\r\nconst serverURL = \"http://jadwal-server:4000\";\r\n\r\nexport const FileUpload = () => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadfile`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderFile = () => {\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <p>file location {data.path}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input type=\"file\" name=\"file\" onChange={handleChange} />\r\n        {data.path && renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageOnlineUpload = ({\r\n  url,\r\n  setUrl,\r\n  image,\r\n  setImage,\r\n  width,\r\n  height,\r\n  size,\r\n}) => {\r\n  const [localimage, setLocalImage]: any = useState(null);\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  const selectImage = (e: any) => {\r\n    const img = e.target?.files?.[0];\r\n    if (img) {\r\n      setImage(img);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setUrl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setLocalImage(URL.createObjectURL(image));\r\n    } else {\r\n      setLocalImage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        ref={fileInput}\r\n        style={{\r\n          width: 0.1,\r\n          height: 0.1,\r\n          opacity: 0,\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n        }}\r\n        type=\"file\"\r\n        onChange={selectImage}\r\n      />\r\n      {localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={localimage}\r\n          />\r\n        </Box>\r\n      )}\r\n      {url && !localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={url}\r\n          />\r\n        </Box>\r\n      )}\r\n      {!localimage && !url && (\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            overflow: \"hidden\",\r\n            width: width,\r\n            height: height,\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#eaeaea\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => fileInput.current.click()}\r\n        >\r\n          <Typography style={{ color: \"#bbb\", fontSize: 14 }}>\r\n            {size}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const uploadPhotoOnline = async (image: any) => {\r\n  try {\r\n    const compressedImage = await imageCompression(image, imageUploadOptions);\r\n    const d = new FormData();\r\n    d.append(\"file\", compressedImage);\r\n    d.append(\"upload_preset\", UPLOAD_PRESET);\r\n    d.append(\"cloud_name\", CLOUD_NAME);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/fivegstore/image/upload\",\r\n      {\r\n        method: \"post\",\r\n        body: d,\r\n      }\r\n    );\r\n    const json = await res.json();\r\n    return json.url;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  ImageOnlineUpload,\r\n  ImageUpload,\r\n  uploadPhotoOnline,\r\n} from \"../../common/upload\";\r\nimport { isProd } from \"../../constants/sizes\";\r\n\r\nconsole.log(\"isProd\", isProd);\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [iconimage, setIconimage] = useState(null);\r\n  const [iconurl, setIconurl] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n      setIconurl(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n    let icon: any;\r\n    if (iconimage) {\r\n      icon = await uploadPhotoOnline(iconimage);\r\n      icon = icon.replace(\"http://\", \"https://\");\r\n    }\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo: icon ? icon : logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            {!isProd && (\r\n              <>\r\n                <img\r\n                  src={logo}\r\n                  alt={company?.name}\r\n                  height={100}\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    borderRadius: 10,\r\n                    marginTop: 5,\r\n                  }}\r\n                />\r\n                <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n              </>\r\n            )}\r\n            <Box style={{ marginBottom: 20 }}></Box>\r\n            {isProd && (\r\n              <ImageOnlineUpload\r\n                url={iconurl}\r\n                setUrl={setIconurl}\r\n                image={iconimage}\r\n                setImage={setIconimage}\r\n                width={300}\r\n                height={150}\r\n                size=\"400x200\"\r\n              ></ImageOnlineUpload>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    setSaving(true);\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setSaving(false);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useDepartments } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport { avatarPatternFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Departments({ isRTL, words, isEditor, theme }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const { departments, addDepartment, editDepartment, removeDepartment } =\r\n    useDepartments();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n      <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n        >\r\n          <PopupDeprtment></PopupDeprtment>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\n\r\nexport default function Employees({ isRTL, words, isEditor, theme }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useHResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupEmployee></PopupEmployee>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 1 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Customers(props: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const { isRTL, words, isEditor, theme, menuitem } = props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"mobile\", title: words.mobile },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.theaddress },\r\n  ]);\r\n\r\n  const {\r\n    customers,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n    refreshcustomer,\r\n  } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshcustomer}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={customers} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginTop: 4 }}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginTop: 4, marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert, Loading } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n      setTasktitle(row?.title);\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n      taskvalue={taskvalue}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 180, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography\r\n              style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n            >\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.title,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          {!isMobile && <SearchState />}\r\n\r\n          <IntegratedSorting />\r\n          {!isMobile && <IntegratedFiltering />}\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          {!isMobile && <Toolbar />}\r\n          {!isMobile && (\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n          )}\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  tasks,\r\n  taskvalue,\r\n  setTaskvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  total,\r\n  words,\r\n  isRTL,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [taskvalueLocal, setTaskvalueLocal] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setTaskvalueLocal(taskvalue);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setTaskvalueLocal([]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setTaskvalue([]);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setTaskvalue(taskvalueLocal);\r\n    setOpen(false);\r\n  };\r\n\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...taskvalue,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {tasks && tasks.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={tasks}\r\n                  value={taskvalueLocal}\r\n                  setValue={setTaskvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"task\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              {servicevalue && servicevalue.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={services}\r\n                  value={servicevalueLocal}\r\n                  setValue={setServicevalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"serviceproduct\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"taskId\",\r\n    name: isRTL ? \"تجميع بحسب المهمة\" : \"Group By Operation\",\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"opType\",\r\n    name: isRTL ? \"تجميع بحسب الوثيقة\" : \"Group By Document\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services} // items\r\n            itemType={itemType}\r\n            setItemType={setsetItemTypeDispatch}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            tasks={tasks}\r\n            taskvalue={taskvalue}\r\n            setTaskvalue={setTaskvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    console.log(variables);\r\n\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <FilterSelectCkeckBox\r\n              options={tasks}\r\n              value={taskvalue?.[0]}\r\n              setValue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"task\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <FilterSelectCkeckBox\r\n            options={mainaccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 9\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 380 : undefined,\r\n            right: isRTL ? undefined : 380,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            tasks={tasks}\r\n            taskvalue={taskvalue}\r\n            setTaskvalue={setTaskvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            marginTop: 4,\r\n            zIndex: 115,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={eventStatus}\r\n            value={status}\r\n            setValue={setStatusDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"status\"\r\n            nomulti\r\n            width={180}\r\n          ></FilterSelectCkeckBox>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={customers}\r\n            value={custvalue?.[0]}\r\n            setValue={setCustvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"customer\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب المصروف\" : \"Expenses Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={isRTL ? \"حساب الدفع\" : \"Payment Acc\"}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 1 ? words.employee : words.resourses}\r\n                disabled={!resType}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <FilterSelectCkeckBox\r\n              options={tasks}\r\n              value={taskvalue?.[0]}\r\n              setValue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"task\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 2 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport PopupDeprtment from \"./PopupDeprtment\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [openDept, setOpenDept] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const openDepartment = () => {\r\n    setOpenDept(true);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      color,\r\n      info,\r\n      resType: 2,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\n\r\nexport default function Resourses({ isRTL, words, isEditor, theme }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useOResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupResourses></PopupResourses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts($start: Date, $end: Date, $search: String) {\r\n    getReceipts(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoicesList(\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoicesList(\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getInvoicesList from \"../graphql/query/getInvoicesList\";\r\n\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [invoices, setInvoices] = useState<any>([]);\r\n  const [invoicevalue, setInvoicevalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  const [loadInvoices, invoicesData]: any = useLazyQuery(getInvoicesList, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  useEffect(() => {\r\n    if (custvalue) {\r\n      const variables = { customerId: custvalue._id };\r\n      loadInvoices({ variables });\r\n    }\r\n  }, [custvalue, open]);\r\n\r\n  useEffect(() => {\r\n    if (invoicesData?.data?.getInvoicesList?.data) {\r\n      const { data } = invoicesData.data.getInvoicesList;\r\n      if (data?.length > 0) {\r\n        const ndata = data.map((d: any) => {\r\n          const title = `${d.docNo} - ${d.amount}QR`;\r\n          return {\r\n            ...d,\r\n            name: title,\r\n            nameAr: title,\r\n          };\r\n        });\r\n        setInvoices(ndata);\r\n        if (row.refNo) {\r\n          const inv = ndata.filter((ts: any) => ts.docNo === row.refNo)?.[0];\r\n          setInvoicevalue(inv);\r\n        }\r\n      }\r\n    }\r\n  }, [invoicesData]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: invoicevalue ? invoicevalue.taskId : undefined,\r\n      refNo: invoicevalue ? invoicevalue.docNo : undefined,\r\n      customer,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setInvoices([]);\r\n    setCustvalue(null);\r\n    setInvoicevalue(null);\r\n    setCustError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب القبض\" : \"Receipt Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"invoice\"\r\n                title={isRTL ? \"الفواتير\" : \"Invoices\"}\r\n                words={words}\r\n                options={invoices}\r\n                value={invoicevalue}\r\n                setSelectValue={setInvoicevalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                disabled={!custvalue}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginTop: 5 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    setSaving(true);\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    setSaving(false);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n    setSaving(false);\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={240}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  setEvList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (!row) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setSaving(false);\r\n  };\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const event = {\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist });\r\n    setEvList(eventlist);\r\n    setSaving(false);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    height={200}\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <PopupAddMultiEvents\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                  disabled={desabledSave}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            <Box style={{ marginTop: 20 }}>\r\n              <AutoFieldLocal\r\n                name=\"status\"\r\n                title={words.status}\r\n                words={words}\r\n                options={eventStatus}\r\n                value={status}\r\n                setSelectValue={setStatus}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                width={200}\r\n              ></AutoFieldLocal>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskEvents($taskId: Int) {\r\n    getTaskEvents(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { createEvent, deleteEventById, updateEvent } from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupAppointmentTask from \"../pubups/PopupAppointmentTask\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  open,\r\n  rows,\r\n  setRows,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  isNew,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.fromto,\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTaskEvents,\r\n        variables: { taskId },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentTask\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              taskId={taskId}\r\n              employee={employee}\r\n              department={department}\r\n              customer={customer}\r\n              company={company}\r\n              isEditor={isEditor}\r\n            ></PopupAppointmentTask>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      // handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { createEvent, deleteEventById, updateEvent } from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupAppointmentTask from \"../pubups/PopupAppointmentTask\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport LoadingInline from \"./LoadingInline\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTableEdit({\r\n  open,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  isNew,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n}: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.fromto,\r\n    col.docNo,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTaskEvents,\r\n        variables: { taskId },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getTaskEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const variables = { taskId };\r\n    getEvents({ variables });\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const data = eventsData?.data?.[\"getTaskEvents\"]?.data;\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    const events = data || [];\r\n    setRows(events);\r\n  }, [eventsData]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {loading && <LoadingInline></LoadingInline>}\r\n\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentTask\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              taskId={taskId}\r\n              employee={employee}\r\n              department={department}\r\n              customer={customer}\r\n              company={company}\r\n              isEditor={isEditor}\r\n            ></PopupAppointmentTask>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { compressEvents } from \"../common/time\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\nimport EventsTableEdit from \"../Shared/EventsTableEdit\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n  refresh,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      const finalItems = _(itemsWqtyprice)\r\n        .groupBy(\"_id\")\r\n        .map((array, key) => ({\r\n          name: array[0].name,\r\n          nameAr: array[0].nameAr,\r\n          categoryId: array[0].categoryId,\r\n          categoryName: array[0].categoryName,\r\n          categoryNameAr: array[0].categoryNameAr,\r\n          departmentId: array[0].departmentId,\r\n          departmentName: array[0].departmentName,\r\n          departmentNameAr: array[0].departmentNameAr,\r\n          departmentColor: array[0].departmentColor,\r\n          employeeId: array[0].employeeId,\r\n          employeeName: array[0].employeeName,\r\n          employeeNameAr: array[0].employeeNameAr,\r\n          employeeColor: array[0].employeeColor,\r\n          autoNo: array[0].autoNo,\r\n          docNo: array[0].docNo,\r\n          cost: array[0].cost,\r\n          itemType: array[0].itemType,\r\n          index: array[0].index,\r\n          itemprice: array[0].itemprice,\r\n          itemqty: _.sumBy(array, \"itemqty\"),\r\n          itemtotal: _.sumBy(array, \"itemtotal\"),\r\n        }))\r\n        .orderBy(\"index\")\r\n        .value();\r\n      setItemsList(finalItems);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setMinutes(0);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 1)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const variables = { taskId: row.id };\r\n      getItems({ variables });\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setEvList([]);\r\n    setSaving(false);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   start < startPeriod ||\r\n    //   start > endPeriod ||\r\n    //   end < startPeriod ||\r\n    //   end > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!tasktitle) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة اسم للمهمة\" : \"Please add Task title\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (!evList || evList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة موعد\" : \"Please add Appointment\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const events =\r\n      evList && evList.length > 0 ? compressEvents(evList) : undefined;\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 1,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      evQty: evList.length,\r\n      evDone: 0,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setTimeout(() => {\r\n        refresh();\r\n        onCloseForm();\r\n      }, 2000);\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"lg\"\r\n      preventclose\r\n      saving={saving}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextFieldLocal\r\n                  required\r\n                  name=\"tasktitle\"\r\n                  label={words.title}\r\n                  value={tasktitle}\r\n                  onChange={(e: any) => setTasktitle(e.target.value)}\r\n                  row={row}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"customer\"\r\n                  title={words.customer}\r\n                  words={words}\r\n                  options={customers}\r\n                  value={custvalue}\r\n                  setSelectValue={setCustvalue}\r\n                  setSelectError={setCustError}\r\n                  selectError={custError}\r\n                  refernce={custRef}\r\n                  register={register}\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  showphone\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"department\"\r\n                  title={words.department}\r\n                  words={words}\r\n                  options={departments}\r\n                  value={departvalue}\r\n                  setSelectValue={setDepartvalue}\r\n                  setSelectError={setDepartError}\r\n                  selectError={departError}\r\n                  refernce={departRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"employee\"\r\n                  title={words.employee}\r\n                  words={words}\r\n                  options={employees}\r\n                  value={emplvalue}\r\n                  setSelectValue={setEmplvalue}\r\n                  setSelectError={setEmplError}\r\n                  selectError={emplError}\r\n                  refernce={emplRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  day={day}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"flex-start\",\r\n                  marginInlineStart: 10,\r\n                }}\r\n              >\r\n                {isNew && (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Add Events\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n              {isNew && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    open={open}\r\n                    isTaskNew={isNew}\r\n                    rows={evList}\r\n                    setRows={setEvList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n              {!isNew && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTableEdit\r\n                    open={open}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                  ></EventsTableEdit>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          setEvList={setEvList}\r\n        ></PopupTaskAppointment>\r\n        <PopupTaskInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          task={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupTaskInvoice>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getLandingChartData } from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  invoiceReceiptFormatter,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  taskStatusFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, useMediaQuery } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    // col.start,\r\n    // col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    col.toatlExpenses,\r\n    col.amount,\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const {\r\n    state: { sort },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n    >\r\n      <>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            marginTop: 10,\r\n            marginRight: 10,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setOpenGantt(true)}\r\n          >\r\n            {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n          </Button>\r\n        </Box>\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            {!isMobile && <SearchState />}\r\n\r\n            <IntegratedSorting />\r\n            {!isMobile && <IntegratedFiltering />}\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={taskStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\", \"toatlExpenses\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"totalinvoiced\", \"totalpaid\"]}\r\n              formatterComponent={invoiceReceiptFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            {!isMobile && <Toolbar />}\r\n            {!isMobile && (\r\n              <SearchPanel\r\n                inputComponent={(props: any) => {\r\n                  return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n                }}\r\n              />\r\n            )}\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n                refresh={refresh}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n          {alrt.show && (\r\n            <AlertLocal\r\n              isRTL={isRTL}\r\n              type={alrt?.type}\r\n              msg={alrt?.msg}\r\n              top\r\n            ></AlertLocal>\r\n          )}\r\n        </Paper>\r\n      </>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportDocuments(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportDocuments(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        opType\r\n        taskId\r\n        branch\r\n        time\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const DocumentsReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default DocumentsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportDocuments from \"../../graphql/query/getReportDocuments\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function DocumentsReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportDocuments, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(DocumentsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportDocuments\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 380 : undefined,\r\n            right: isRTL ? undefined : 380,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={[]}\r\n            setServicevalue={() => null}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            tasks={tasks}\r\n            taskvalue={taskvalue}\r\n            setTaskvalue={setTaskvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            marginTop: 4,\r\n            zIndex: 115,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={eventStatus}\r\n            value={status}\r\n            setValue={setStatusDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"status\"\r\n            nomulti\r\n            width={180}\r\n          ></FilterSelectCkeckBox>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={timeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initDocumentsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const documentsReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const ServicesReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default ServicesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportServices(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportServices(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportServices from \"../../graphql/query/getReportServices\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function ServicesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportServices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ServicesReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportServices\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 380 : undefined,\r\n            right: isRTL ? undefined : 380,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            tasks={tasks}\r\n            taskvalue={taskvalue}\r\n            setTaskvalue={setTaskvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            marginTop: 4,\r\n            zIndex: 115,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={eventStatus}\r\n            value={status}\r\n            setValue={setStatusDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"status\"\r\n            nomulti\r\n            width={180}\r\n          ></FilterSelectCkeckBox>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initServicesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const servicesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport { MainCalendar } from \"../calendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport {\r\n  useBranches,\r\n  useDepartments,\r\n  useEmployees,\r\n  useServices,\r\n  useSuppliers,\r\n} from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport EmployeesAppoints from \"../calendar/Employees\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport DocumentsReport from \"../reports/DocumentsReport\";\r\nimport {\r\n  documentsReportReducer,\r\n  initDocumentsReportContext,\r\n} from \"../../contexts/documentsReport/documentsReducer\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\nimport ServicesReport from \"../reports/ServicesReport\";\r\nimport {\r\n  initServicesReportContext,\r\n  servicesReportReducer,\r\n} from \"../../contexts/servicesReport/servicesReducer\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { departments, refreshdepartment, addDepartment, editDepartment } =\r\n    useDepartments();\r\n  const { employees, refreshemployee, addEmployee, editEmployee } =\r\n    useEmployees();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [documentsStore, documentsDispatch] = useReducer(\r\n    documentsReportReducer,\r\n    initDocumentsReportContext\r\n  );\r\n  const [servicesStore, servicesDispatch] = useReducer(\r\n    servicesReportReducer,\r\n    initServicesReportContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      {/* <AppBar\r\n        company={company}\r\n\r\n        isRTL={isRTL}\r\n        user={user}\r\n        network={network}\r\n      ></AppBar> */}\r\n      {/* <AppBar logout={logout} isRTL={isRTL} user={user}></AppBar> */}\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                employees={employees}\r\n                departments={departments}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  departments={departments}\r\n                  addDepartment={addDepartment}\r\n                  editDepartment={editDepartment}\r\n                  employees={employees}\r\n                  addEmployee={addEmployee}\r\n                  editEmployee={editEmployee}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesAppoints\r\n                  menuitem={menuitem}\r\n                  // resourseData={resourseData}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesAppoints>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshdepartment}\r\n              >\r\n                <Departments></Departments>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Employees></Employees>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Resourses></Resourses>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/docreports\"\r\n            component={() => (\r\n              <DocumentsReportContext.Provider\r\n                value={{\r\n                  state: documentsStore,\r\n                  dispatch: documentsDispatch,\r\n                }}\r\n              >\r\n                <DocumentsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></DocumentsReport>\r\n              </DocumentsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/servicesreports\"\r\n            component={() => (\r\n              <ServicesReportContext.Provider\r\n                value={{\r\n                  state: servicesStore,\r\n                  dispatch: servicesDispatch,\r\n                }}\r\n              >\r\n                <ServicesReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></ServicesReport>\r\n              </ServicesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable import/first */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nrequire(\"dotenv\").config();\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/first */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}