{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getGroups.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/createGroup.ts","graphql/mutation/deleteGroup.ts","graphql/mutation/updateGroup.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","constants/reports.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pages/calendar/common/SelectLocalNoby.tsx","pubups/PopupDeprtment.tsx","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","hooks/useCompany.ts","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","pages/calendar/Main.tsx","pages/calendar/MainCalendar.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/upload.tsx","pages/options/Company.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","hooks/useHResourses.tsx","pages/adds/Employees.tsx","graphql/query/getObjectEvents.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupAppointmentCustomer.tsx","Shared/EventsCustomer.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","components/filters/DateNavigatorReports.tsx","pages/reports/SalesReport.tsx","Shared/InvoicesCustomer.tsx","hooks/useAccounts.ts","graphql/query/getReceipts.ts","graphql/query/getInvoicesList.ts","pubups/PopupReceipt.tsx","Shared/ReceiptCustomer.tsx","pubups/PopupExpenses.tsx","Shared/ExpensesCustomer.tsx","pubups/PopupTaskAppointment.tsx","Shared/EventsTable.tsx","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","Shared/TableComponent.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","pubups/PopupTaskView.tsx","Shared/TasksCustomer.tsx","pubups/PopupCustomerView.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","pages/adds/Invoices.tsx","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","pubups/PopupAppointment.tsx","pubups/PopupDepartmentView.tsx","pubups/PopupEmployeeView.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","contexts/calendarReport/index.ts","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","hooks/useOResourses.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","graphql/query/getReportDocuments.ts","contexts/documentsReport/index.ts","pages/reports/DocumentsReport.tsx","contexts/documentsReport/documentsReducer.ts","contexts/servicesReport/index.ts","graphql/query/getReportServices.ts","pages/reports/ServicesReport.tsx","contexts/servicesReport/servicesReducer.ts","pages/adds/ManageEmployees.tsx","pages/adds/ManageDepartments.tsx","pages/calendar/Employees.tsx","pages/calendar/EmployeesCalendar.tsx","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","systemsNames","nameAr","colors","drawerWidth","imageUploadOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","taskvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","resourses","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","dates","all","ritems","items","trim","da","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","groupList","documentTypes","sectionTypes","bc","bg","uname","names","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","sectionsTypeFormatter","nameObj","st","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","documentTimeFormatter","opType","createdAtFormatter","fromToFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatEmpty","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","currencyFormatterEmpty","dueAmountFormatter","due","totalinvoiced","totalpaid","red","incomeAmountFormatter","inc","toatlExpenses","green","doneFormatter","editEvent","Checkbox","blue","checked","onChange","optimisticResponse","__typename","updateEvent","invoiceReceiptFormatter","valuePercent","position","bottom","right","fontWeight","taskIdFormatter","tasks","tsk","nameLinkFormat","setOpenItem","textAlign","deepPurple","taskNameFormatter","progressFormatter","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","compressEvents","events","times","ev","commitAppointmentChanges","added","changed","deleted","addEvent","removeEvent","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","refNo","eventNo","progress","evQty","taskId","fromto","done","invo","desc","amountdebit","amountcredit","check","commandComponents","add","onExecute","m","Fab","edit","IconButton","marginBottom","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","categoryName","categoryNameAr","brandName","brandNameAr","Loading","CircularProgress","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","employees","departments","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","bgcolor","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","cancel","close","nameEn","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","print","printsave","from","description","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","customers","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","Landing","useDepartments","useEmployees","getLandingChartData","freshChartData","chartData","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","innerHeight","resType","depType","PaperComponent","handle","PopupLayout","alrt","onlyclose","savetitle","preventclose","saving","bgc","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","SelectLocalNoby","PopupDeprtment","setNewValue","setSaving","setDepType","reset","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","target","multiline","rowsMax","InputProps","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","setDepartvalue","depError","setDepError","setDaysoff","setResType","emplRef","useRef","depart","closeModal","resetAll","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","emplslist","setEmplslist","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","useServices","servId","serv","se","onFormClose","index","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","showEditCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","company","src","logo","alt","objectFit","tel1","textTransform","letterSpacing","invoiceNo","PureComponent","getTasks","getfins","finData","bt","getCompany","getComp","compData","updateCompany","editCompany","comp1","refreshcompany","indexTheList","PopupInvoice","servicesproducts","loading","setLoading","useTasks","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","useCompany","setCustvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","dept","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","em","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","manamentTabs","taskManamentTabs","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","tasktitle","setTasktitle","getActions","loadActions","actionsData","eventId","tks","t","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","onCloseAppoint","refresQuery","getInvoices","createInvoice","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","Main","visible","resourseData","setResourseData","setRows","getEvents","createEvent","deleteEvent","getCalEvents","evnData","eventsData","ap","startend","isMonth","curDate","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","MainCalendar","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","ImageOnlineUpload","url","setUrl","image","setImage","localimage","setLocalImage","fileInput","removeImage","URL","createObjectURL","opacity","img","files","click","uploadPhotoOnline","imageCompression","compressedImage","FormData","append","fetch","method","json","Company","setLogo","active","setActive","iconimage","setIconimage","iconurl","setIconurl","tel2","mob","appid","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showAddCommand","inputComponent","Departments","resTypes","Employees","useHResourses","UTC","checkedIcon","SelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","fullwidth","PopupAppointmentCustomer","custError","setCustError","custRef","setRrule","openMulti","setOpenMulti","openInvoice","setOpenInvoice","setMinutes","custId","statNo","rRule","cu","stat","EventsCustomer","getObjectEvents","deleteEventById","removeEventById","FilterSelectMulti","limitTags","SalesFilter","setServicevalue","types","setTypes","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","taskvalueLocal","setTaskvalueLocal","typesvalueLocal","setTypesvalueLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","minDate","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","departmentIds","employeeIds","customerIds","taskIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","grouping","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","setItemType","defaultSorting","onSortingChange","srt","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","then","buffer","saveAs","Blob","InvoicesCustomer","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","PopupReceipt","debaccounts","setDebaccounts","setDebitAcc","setCreditAcc","invoices","setInvoices","invoicevalue","setInvoicevalue","useAccounts","getInvoicesList","invoicesData","ndata","ca","filteredcredit","filtereddebits","ReceiptCustomer","getReceipts","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupExpenses","cridaccounts","setCridaccounts","fullwidtth","ExpensesCustomer","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PopupTaskAppointment","addEventsToList","eventlist","EventsTable","removeEventFromList","departmentFormatter","employeeFormatter","PopupTask","startrange","endrange","openEvent","setOpenEvent","evList","setEvList","evssum","evDone","isTaskNew","sorted","sortBy","orange","PopupTaskInvoice","TabPanel","other","hidden","useStyles","tabs","borderRight","divider","PopupTaskView","setRow","opened","getTaskItems","finalItems","autoNo","viewtotal","Tabs","orientation","Tab","TasksCustomer","openItem","loadTasks","tasksData","tsks","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","defaultHiddenColumnNames","PopupCustomerView","Customers","Services","Invoices","Accounts","br","CashTransfareSelect","PopupFinance","ot","Finance","getFinances","PopupAppointment","number","Tafgeet","PopupDepartmentView","PopupEmployeeView","Appointments","setDue","periodvalue","setPeriodvalue","setName","openTaskItem","setOpenTaskItem","openCustomerItem","setOpenCustomerItem","openEmployeeItem","setOpenEmployeeItem","openDepartmentItem","setOpenDepartmentItem","setEmployeeItem","setDepartmentItem","setCustomerItem","loadEvents","pointerEvents","taskIdLinkFormat","FilterSelect","FinanceReport","mainaccounts","balance","unshift","accNameAr","accName","accountIds","categoryIds","showInGroupFooter","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","initCalendarReportContext","calendarReportReducer","CalendarReportContext","Expenses","PurchaseReport","suppliers","categories","brands","supplierIds","setCatvalue","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResourses","Receipt","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","initTasksContext","tasksReducer","DocumentsReportContext","DocumentsReport","getReportDocuments","getTypesValue","initDocumentsReportContext","documentsReportReducer","ServicesReportContext","ServicesReport","getReportServices","initServicesReportContext","servicesReportReducer","ManageEmployees","ManageDepartments","EmployeesAppoints","resourceName","setMainResourceNameDispatch","EmployeesCalendar","setstate","emps","Content","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","documentsStore","documentsDispatch","servicesStore","servicesDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","config","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3313382b.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// local\r\n// uri: \"http://jadwal-server:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean) {\r\n    getDepartments(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        depType\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGroups($isRTL: Boolean) {\r\n    getGroups(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n        tasks\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resTypes: [Int]) {\r\n    getEmployees(isRTL: $isRTL, resTypes: $resTypes) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resType\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        documentNo\r\n        startDate\r\n        endDate\r\n        cost\r\n        model\r\n        type\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n    $taskId: Int\r\n    $due: Boolean\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n      taskId: $taskId\r\n      due: $due\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoices(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        eventId\r\n        taskId\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n        desc\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getExpenses(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGroup(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    createGroup(branch: $branch, name: $name, nameAr: $nameAr, tasks: $tasks) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGroup($_id: String) {\r\n    deleteGroup(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGroup(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    updateGroup(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tasks: $tasks\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      refNo: $refNo\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      refNo: $refNo\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  localuri: \"jadwal-server:4000\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\n\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 0.5,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: \"المهام\",\r\n    titleEn: \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.7,\r\n    name: \"customers\",\r\n    uri: \"customers\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n    icon: \"business\",\r\n    req: \"pos\",\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1.8,\r\n    name: \"manageemployees\",\r\n    uri: \"manageemployees\",\r\n    titleAr: \"الموظفين\",\r\n    titleEn: \"Employees\",\r\n    icon: \"group\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1.9,\r\n    name: \"managedepartments\",\r\n    uri: \"managedepartments\",\r\n    titleAr: \"الأقسام\",\r\n    titleEn: \"Departments\",\r\n    icon: \"depart\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"الوثائق\",\r\n    titleEn: \"Finance\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"sales\",\r\n        uri: \"sales\",\r\n        titleAr: \"ادارة الفواتير\",\r\n        titleEn: \"Sales\",\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      // {\r\n      //   id: 42,\r\n      //   name: \"cash\",\r\n      //   uri: \"cash\",\r\n      //   titleAr: \"ادارة النقدية\",\r\n      //   titleEn: \"Cash\",\r\n      //   icon: \"finance\",\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      {\r\n        id: 43,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"ادارة المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"ادارة المصاريف\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 45,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"ادارة القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 62,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: \"الأقسام\",\r\n        titleEn: \"Departments\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 63,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: \"الموظفين\",\r\n        titleEn: \"Employees\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 64,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 65,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n\r\n      // {\r\n      //   id: 65,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 66,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 67,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n\r\n      {\r\n        id: 69,\r\n        name: \"accounts\",\r\n        uri: \"accounts\",\r\n        titleAr: \"الحسابات\",\r\n        titleEn: \"Accounts\",\r\n        icon: \"account\",\r\n        mainId: 6,\r\n        role: menuRoles.branchAdmin,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.5,\r\n        name: \"docreports\",\r\n        uri: \"docreports\",\r\n        titleAr: \"تقرير الوثائق\",\r\n        titleEn: \"Documents Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.7,\r\n        name: \"servicesreports\",\r\n        uri: \"servicesreports\",\r\n        titleAr: \"تقرير الخدمات\",\r\n        titleEn: \"Services Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصاريف\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير الحسابات\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصاريف\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصاريف\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصاريف\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n\r\nexport const isProd = process.env.NODE_ENV === \"production\";\r\n\r\nexport const UPLOAD_PRESET = \"sfnboslv\";\r\nexport const CLOUD_NAME = \"fivegstore\";\r\nexport const imageUploadOptions = {\r\n  maxSizeMB: 1,\r\n  maxWidthOrHeight: 1280,\r\n  useWebWorker: true,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(0).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"3Days\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Business from \"@material-ui/icons/Business\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"business\":\r\n      return <Business style={style}></Business>;\r\n    case \"group\":\r\n      return <GroupIcon style={style}></GroupIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"depart\":\r\n      return <Dashboard style={style}></Dashboard>;\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصاريف\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as Tafgeet from \"tafgeetjs\";\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist, isRTL }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n    const dates = rrule.all;\r\n    const ritems = JSON.parse(event.items);\r\n    const isTitle = event?.title && event?.title?.trim()?.length > 0;\r\n    const title = isTitle\r\n      ? event?.title\r\n      : isRTL\r\n      ? ritems[0]?.nameAr\r\n      : ritems[0]?.name;\r\n    const list = dates.map((da: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        title,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : 0;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n\r\nexport const tafkeet = (number: any) => {\r\n  const stringText = new Tafgeet(number, \"QAR\").parse();\r\n  return stringText;\r\n};\r\n","import { operationTypes } from \".\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"taskId\",\r\n    name: isRTL ? \"تجميع بحسب المهمة\" : \"Group By Operation\",\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"opType\",\r\n    name: isRTL ? \"تجميع بحسب الوثيقة\" : \"Group By Document\",\r\n  },\r\n];\r\n\r\nexport const documentTypes = [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: \"All\",\r\n    nameAr: \"الكل\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: operationTypes.event,\r\n    name: \"Appointment\",\r\n    nameAr: \"المواعيد\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: operationTypes.salesInvoice,\r\n    name: \"Invoice\",\r\n    nameAr: \"الفواتير\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: operationTypes.customerReceipt,\r\n    name: \"Receipt\",\r\n    nameAr: \"المقبوض\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: operationTypes.expenses,\r\n    name: \"Expenses\",\r\n    nameAr: \"المصروف\",\r\n  },\r\n];\r\n\r\nexport const sectionTypes = [\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    name: \"Managment\",\r\n    nameAr: \"اداري\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    name: \"Operational\",\r\n    nameAr: \"فني\",\r\n  },\r\n];\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  CircularProgress,\r\n  colors,\r\n  fade,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const sectionsTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const nameObj = sectionTypes.filter((st: any) => st.value === value)?.[0];\r\n  const name = nameObj ? (lang === \"ar\" ? nameObj.nameAr : nameObj.name) : \"\";\r\n\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\nexport const documentTimeFormatter = ({ row }: any) => {\r\n  const { time, startDate } = row;\r\n  const value = row.opType === 80 ? startDate : time;\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const fromToFormatter = ({ row }: any) => {\r\n  const start = covertToTimeOnly(row.startDate);\r\n  const end = covertToTimeOnly(row.endDate);\r\n  return (\r\n    <div>\r\n      {start} {end}\r\n    </div>\r\n  );\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\nexport const departmentFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL\r\n        ? row?.department?.departmentNameAr\r\n        : row?.department?.departmentName}\r\n    </div>\r\n  );\r\n};\r\nexport const employeeFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL ? row?.employee?.employeeNameAr : row?.employee?.employeeName}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const taskStatusFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 18,\r\n        height: 18,\r\n        borderRadius: 9,\r\n        backgroundColor: value === 10 ? \"#39a539a0\" : \"#ffffff0\",\r\n      }}\r\n    >\r\n      {value === 1 && (\r\n        <CircularProgress style={{ color: \"#9958ac9b\" }} size={16} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\nexport const moneyFormatEmpty = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const currencyFormatterEmpty = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormatEmpty(value)}</span>;\r\n};\r\n\r\nexport const dueAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row.totalpaid ? row.totalpaid : 0;\r\n  const due = totalinvoiced - totalpaid;\r\n  if (due) {\r\n    return (\r\n      <span style={{ color: colors.red[400] }}>{moneyFormatEmpty(due)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const incomeAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const toatlExpenses = row.toatlExpenses ? row.toatlExpenses : 0;\r\n  const inc = totalinvoiced - toatlExpenses;\r\n  if (inc) {\r\n    return (\r\n      <span style={{ color: colors.green[800] }}>{moneyFormatEmpty(inc)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const doneFormatter = ({ row, editEvent }: any) => {\r\n  const status = row.status === 10 ? 2 : 10;\r\n  const id = row.id;\r\n  const variables = { id, status };\r\n  return (\r\n    <span>\r\n      <Checkbox\r\n        style={{ padding: 5, color: colors.blue[500] }}\r\n        checked={row.status === 10}\r\n        onChange={async (e: any) => {\r\n          await editEvent({\r\n            variables,\r\n            optimisticResponse: {\r\n              __typename: \"updateEvent\",\r\n              updateEvent: {\r\n                __typename: \"Operation\",\r\n                id,\r\n                ...row,\r\n                ...variables,\r\n              },\r\n            },\r\n          });\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\nexport const invoiceReceiptFormatter = ({ value, row }: any) => {\r\n  const { amount } = row;\r\n  const valuePercent = (value / amount) * 100;\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: valuePercent,\r\n          height: 15,\r\n          backgroundColor: fade(colors.green[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 30 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? moneyFormat(value) : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\n\r\nexport const nameLinkFormat = ({ row, value, setItem, setOpenItem }: any) => {\r\n  return (\r\n    <Box\r\n      onClick={() => {\r\n        setItem(row);\r\n        setOpenItem(true);\r\n      }}\r\n      style={{\r\n        cursor: \"pointer\",\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Typography\r\n        style={{\r\n          fontSize: 13,\r\n          textAlign: \"start\",\r\n          color: colors.deepPurple[500],\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdLinkFormat = ({\r\n  value,\r\n  tasks,\r\n  setItem,\r\n  setOpenItem,\r\n  setName,\r\n}: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value)?.[0];\r\n  if (task) {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setItem(task);\r\n          setName(\"task\");\r\n          setOpenItem(true);\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 13,\r\n            textAlign: \"start\",\r\n            color: colors.deepPurple[500],\r\n          }}\r\n        >\r\n          {task.title}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\n\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: fade(colors.blue[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? `${parseInt(value)}%` : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const compressEvents = (events: any) => {\r\n  if (events && events.length > 0) {\r\n    const event = events[0];\r\n    const times = events.map((ev: any) => {\r\n      return {\r\n        startDate: ev.startDate,\r\n        endDate: ev.endDate,\r\n      };\r\n    });\r\n    return JSON.stringify({ event, times });\r\n  } else {\r\n    return JSON.stringify([]);\r\n  }\r\n};\r\n\r\nexport const decompressEvents = (events: any) => {\r\n  if (events) {\r\n    const data = JSON.parse(events);\r\n    const { event, times } = data;\r\n    if (event && times) {\r\n      const readyEvents = times.map((evt: any) => {\r\n        return {\r\n          ...event,\r\n          startDate: evt.startDate,\r\n          endDate: evt.endDate,\r\n        };\r\n      });\r\n      return readyEvents;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    id: {\r\n      id: 25,\r\n      ref: \"id\",\r\n      name: \"id\",\r\n      title: isRTL ? \"الرقم\" : \"No\",\r\n    },\r\n    fromto: {\r\n      id: 25,\r\n      ref: \"fromto\",\r\n      name: \"fromto\",\r\n      title: isRTL ? \"الوقت\" : \"Time\",\r\n    },\r\n    done: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    invo: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    totalinvoiced: {\r\n      id: 26,\r\n      ref: \"totalinvoiced\",\r\n      name: \"totalinvoiced\",\r\n      title: isRTL ? \"الفواتير\" : \"Invoices\",\r\n    },\r\n    totalpaid: {\r\n      id: 27,\r\n      ref: \"totalpaid\",\r\n      name: \"totalpaid\",\r\n      title: isRTL ? \"المقبوضات\" : \"Receipts\",\r\n    },\r\n    toatlExpenses: {\r\n      id: 28,\r\n      ref: \"toatlExpenses\",\r\n      name: \"toatlExpenses\",\r\n      title: isRTL ? \"المصاريف\" : \"Expenses\",\r\n    },\r\n    desc: {\r\n      id: 29,\r\n      ref: \"desc\",\r\n      name: \"desc\",\r\n      title: isRTL ? \"البيان\" : \"Description\",\r\n    },\r\n    item: {\r\n      id: 30,\r\n      ref: \"item\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    amountdebit: {\r\n      id: 31,\r\n      ref: \"debit\",\r\n      name: \"debit\",\r\n      title: isRTL ? \"مدين\" : \"Debit\",\r\n    },\r\n    amountcredit: {\r\n      id: 32,\r\n      ref: \"credit\",\r\n      name: \"credit\",\r\n      title: isRTL ? \"دائن\" : \"Credit\",\r\n    },\r\n  };\r\n};\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      style={{ padding: 5, marginTop: 3, marginBottom: 3 }}\r\n      onClick={onExecute}\r\n      title=\"Edit row\"\r\n    >\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف المدخل ؟\"\r\n              : \"Are you sure you want to delete this row?\"\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 20,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\n// import { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n  ...rest\r\n}: any) => {\r\n  // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n      {...rest}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const {\r\n    children,\r\n    menuitem,\r\n    isRTL,\r\n    refresh,\r\n    theme,\r\n    bgcolor = theme.palette.primary.light,\r\n  } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(bgcolor, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(bgcolor, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24, color: \"#eee\" }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, theme, menuitem } = props;\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box\r\n        style={{\r\n          height: window.innerHeight - 90,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Box style={{ margin: 20, marginBottom: 20 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              {raseeds && salesMonthTotal && eventsMonthCount && (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                      value={moneyFormat(raseeds?.cash)}\r\n                      icon=\"cash\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={words.card}\r\n                      value={moneyFormat(raseeds?.card)}\r\n                      icon=\"card\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormat(salesTodayTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormat(salesMonthTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormatSimple(eventsTodayCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormatSimple(eventsMonthCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={\r\n                        isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                      }\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            {todayEvents && (\r\n              <Grid item xs={12} md={4}>\r\n                <PercentChart\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  data={todayEvents}\r\n                  height={300}\r\n                  prim={prim}\r\n                  isRTL={isRTL}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {salesDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <SalesDaysChart\r\n                  dataKey=\"total\"\r\n                  isRTL={isRTL}\r\n                  data={salesDays}\r\n                  color={salesColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></SalesDaysChart>\r\n              </Grid>\r\n            )}\r\n            {nextEventDays && (\r\n              <Grid item xs={12} md={4}>\r\n                <DaysEvents\r\n                  dataKey=\"count\"\r\n                  theme={theme}\r\n                  isRTL={isRTL}\r\n                  data={nextEventDays}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></DaysEvents>\r\n              </Grid>\r\n            )}\r\n            {eventDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <EventsDaysChart\r\n                  dataKey=\"count\"\r\n                  isRTL={isRTL}\r\n                  data={eventDays}\r\n                  color={eventColor}\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></EventsDaysChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                      : \"Month Sales - Employee\"\r\n                  }\r\n                  employees={employees.filter((emp: any) => emp.resType === 1)}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                      : \"Month Sales - Department\"\r\n                  }\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  height={400}\r\n                  prim={prim}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={salesMonths}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  prim={prim}\r\n                  dataKey=\"total\"\r\n                  title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n            {eventMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={eventMonths}\r\n                  isRTL={isRTL}\r\n                  color={eventColor}\r\n                  dataKey=\"count\"\r\n                  title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n    savetitle = isRTL ? \"حفظ\" : \"Save\",\r\n    taskvalue,\r\n    preventclose = false,\r\n    saving,\r\n    bgcolor,\r\n  } = props;\r\n  const bgc = bgcolor ? fade(bgcolor, 0.1) : \"#eee\";\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={preventclose ? () => null : onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: bgc,\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title} {taskvalue ? ` - ${taskvalue?.title}` : \"\"}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n            disabled={saving}\r\n          >\r\n            <Typography\r\n              style={{ marginLeft: 5, marginRight: 5 }}\r\n              variant=\"subtitle2\"\r\n            >\r\n              {savetitle}\r\n            </Typography>\r\n            {saving && <CircularProgress color=\"primary\" size={16} />}\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocalNoby = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\nimport { SelectLocalNoby } from \"../pages/calendar/common/SelectLocalNoby\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [depType, setDepType] = useState(1);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#AAAAAA\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n      setDepType(row.depType);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      depType,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#AAAAAA\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#AAAAAA\");\r\n    setSaving(false);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <SelectLocalNoby\r\n                options={sectionTypes}\r\n                value={depType}\r\n                onChange={(e: any) => setDepType(Number(e.target.value))}\r\n                isRTL={isRTL}\r\n              ></SelectLocalNoby>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else if (option.title && !option.name) {\r\n              nm = option?.title;\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { SelectLocalNoby } from \"../pages/calendar/common/SelectLocalNoby\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n  const [resType, setResType] = useState(1);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n      setResType(row.resType);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      resType,\r\n      email,\r\n      color,\r\n      info,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n    setSaving(false);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <SelectLocalNoby\r\n                options={sectionTypes}\r\n                value={resType}\r\n                onChange={(e: any) => setResType(Number(e.target.value))}\r\n                isRTL={isRTL}\r\n                width={230}\r\n              ></SelectLocalNoby>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === resType)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResType(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === 2)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resType}\r\n            onChange={(e: any) => {\r\n              setResType(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={3}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resType === 3 ? words.resourses : words.employee}\r\n            disabled={!resType}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n    setDepartvalue(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <Box>\r\n          <Box style={{ marginRight: 10, marginTop: -20 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resType}\r\n              onChange={(e: any) => {\r\n                setResType(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={3}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            // title={words.employee}\r\n            words={words}\r\n            disabled={!resType}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={180}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n        </Box>\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments.filter((dep: any) => dep.depType === 2)}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"lg\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={true}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n\r\n          <Box style={{ position: \"absolute\", marginTop: -80, right: 480 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resType}\r\n              onChange={(e: any) => {\r\n                setResType(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={1}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 15 }}></div>\r\n        </Grid>\r\n        <Grid item xs={7}></Grid>\r\n        <Grid item xs={3}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemprice)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.itemqty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemtotal)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    const { company } = this.props;\r\n\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={5}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderLeftWidth: 1,\r\n                borderTopColor: \"#ccc\",\r\n                borderBottomColor: \"#ccc\",\r\n                borderLeftColor: \"#ccc\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n                borderTopLeftRadius: 15,\r\n                height: 90,\r\n              }}\r\n            >\r\n              <img\r\n                src={company?.logo}\r\n                alt={company?.name}\r\n                height={100}\r\n                style={{\r\n                  objectFit: \"contain\",\r\n                  borderRadius: 10,\r\n                  marginTop: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                backgroundColor: \"#eee\",\r\n                borderTopRightRadius: 15,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderRightWidth: 1,\r\n                borderBottomColor: \"#ccc\",\r\n                borderTopColor: \"#ccc\",\r\n                borderRightColor: \"#ccc\",\r\n                height: 90,\r\n              }}\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Contact</div>\r\n                  <div style={contItem}>{company.tel1}</div>\r\n                  <div style={contItem}>{company?.email}</div>\r\n                  <div style={contItem}>{company?.website}</div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Address</div>\r\n                  <div style={contItem}>{company?.address}</div>\r\n                  {/* <div style={contItem}>Doha, Qatar</div> */}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 80, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Name</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 40, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\", color: \"#999\", fontSize: 11 }}>\r\n            Thank you for your business.\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        status\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  task,\r\n  value,\r\n  name,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n  const { tasks } = useTasks();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const { company } = useCompany();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n\r\n      if (!task && row.taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === row.taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleReactPrint();\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n            disabled={name === \"customerId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            disabled={name === \"taskId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n            disabled={name === \"employeeId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n            disabled={name === \"departmentId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      setSaving(false);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n\r\nexport const manamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: 4,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const customerTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n];\r\nexport const employeeTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const taskManamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [type, setType] = useState(1);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    setSaving(true);\r\n\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    reset();\r\n    setSaving(false);\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(1);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(row?.title);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      if (row.taskId) {\r\n        const tks = tasks.filter((t: any) => t.id === row.taskId)?.[0];\r\n        setTaskvalue(tks);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onFieldChange({ amount });\r\n    onFieldChange({ items: JSON.stringify(itemsList) });\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n    setEmplvalue(newValue);\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (taskvalue?.employeeId) {\r\n        const empl = employees.filter(\r\n          (em: any) => em._id === taskvalue?.employeeId\r\n        )?.[0];\r\n        onNewFieldChange(empl, \"employee\");\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                autoFocus={true}\r\n                name=\"tasktitle\"\r\n                label={words.title}\r\n                value={tasktitle}\r\n                onChange={(e: any) => {\r\n                  setTasktitle(e.target.value);\r\n                  onNewFieldChange(e.target.value, \"title\");\r\n                }}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees.filter((em: any) => em.resType === 1)}\r\n                value={emplvalue}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments.filter((dep: any) => dep.depType === 1)}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport {\r\n  useCustomers,\r\n  useDepartments,\r\n  useEmployees,\r\n  useLastNos,\r\n} from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n  onCloseAppoint = () => null,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { company } = useCompany();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    const depId = appoint.departmentId;\r\n    const empId = appoint.employeeId;\r\n    if (depId) {\r\n      const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n      setDepartvalue(depart);\r\n    }\r\n    if (empId) {\r\n      const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n      setEmplvalue(empl);\r\n    }\r\n    if (appoint.taskId) {\r\n      const empl = tasks.filter((emp: any) => emp.id === appoint.taskId)[0];\r\n      setTaskvalue(empl);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n      onCloseAppoint();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const date = appoint?.startDate ? new Date(appoint?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n    taskId,\r\n    title,\r\n  } = appointmentData;\r\n\r\n  const task = tasks.filter((t: any) => t.id === taskId)?.[0];\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ alignItems: \"center\", justifyContent: \"flex-start\" }}>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {task?.title}\r\n          </Typography>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList?.[0] && (\r\n            <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n              {isRTL ? itemsList?.[0].nameAr : itemsList?.[0].name}\r\n            </Typography>\r\n          )}\r\n\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginTop: -25, marginRight: 60 }}>\r\n          <Typography gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      mainResourceName,\r\n      departvalue,\r\n      emplvalue,\r\n      status,\r\n    },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\"\r\n        ? employees\r\n        : mainResourceName === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      mainResourceName,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees, mainResourceName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\"\r\n        ? employees\r\n        : value === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        marginTop: isMobile ? 47 : undefined,\r\n        height: window.innerHeight - 10,\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Box style={{ margin: 10 }}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={4}>\r\n            <DateNavigator\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              currentViewNameChange={currentViewNameChange}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentDate={currentDate}\r\n              views={[1, 3, 7, 30]}\r\n            ></DateNavigator>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Box style={{ marginBottom: 3 }}>\r\n                <EventsCalFilter\r\n                  count={rows.length}\r\n                  departvalue={departvalue}\r\n                  setDepartvalue={setDepartvalueDispatch}\r\n                  emplvalue={emplvalue}\r\n                  setEmplvalue={setEmplvalueDispatch}\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  employees={employees.filter((dep: any) => dep.resType === 1)}\r\n                  status={status}\r\n                  setStatus={setStatusDispatch}\r\n                  setMainResourceName={setMainResourceNameDispatch}\r\n                  mainResourceName={mainResourceName}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  refresh={refresh}\r\n                ></EventsCalFilter>\r\n              </Box>\r\n            </Hidden>\r\n          </Grid>\r\n        </Grid>\r\n        <Box style={{ margin: 0 }}>\r\n          <Scheduler\r\n            data={rows}\r\n            height={\r\n              isMonth\r\n                ? \"auto\"\r\n                : isMobile\r\n                ? window.innerHeight\r\n                : window.innerHeight - 90\r\n            }\r\n            firstDayOfWeek={6}\r\n            locale={isRTL ? \"ar\" : \"en\"}\r\n          >\r\n            {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n            {!isMonth && (\r\n              <EditRecurrenceMenu\r\n                messages={{\r\n                  current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n                  currentAndFollowing: isRTL\r\n                    ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                    : \"This and following appointments\",\r\n                  all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n                  menuEditingTitle: isRTL\r\n                    ? \"تعديل موعد متكرر\"\r\n                    : \"Edit recurring appointment\",\r\n                  menuDeletingTitle: isRTL\r\n                    ? \"حذف موعد متكرر\"\r\n                    : \"Delete recurring appointment\",\r\n                  cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n                  commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n                }}\r\n              />\r\n            )}\r\n            {/* {!isMonth && <IntegratedEditing />} */}\r\n            <ViewState\r\n              currentViewName={currentViewName}\r\n              onCurrentViewNameChange={currentViewNameChange}\r\n              currentDate={currentDate}\r\n              onCurrentDateChange={currentDateChange}\r\n            />\r\n            <DayView\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <DayView\r\n              name=\"3Days\"\r\n              displayName=\"3 Days\"\r\n              intervalCount={3}\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <WeekView\r\n              name=\"Week\"\r\n              displayName=\"Week\"\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <MonthView intervalCount={1} />\r\n            {/* <Toolbar /> */}\r\n            <Appointments appointmentContentComponent={AppointmentContent} />\r\n            <Resources\r\n              data={resourseData}\r\n              mainResourceName={mainResourceName}\r\n            />\r\n            <AppointmentTooltip\r\n              showCloseButton\r\n              showOpenButton={isEditor ? true : false}\r\n              // showDeleteButton\r\n              visible={visible}\r\n              onVisibilityChange={() => setVisible(!visible)}\r\n              contentComponent={({ appointmentData }) => (\r\n                <RenderToolTip\r\n                  appointmentData={appointmentData}\r\n                  setVisible={setVisible}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  editEvent={editEvent}\r\n                  company={company}\r\n                  theme={theme}\r\n                  viewonly={isMobile}\r\n                  tasks={tasks}\r\n                ></RenderToolTip>\r\n              )}\r\n            />\r\n            {/* {!isMonth && <AppointmentForm />} */}\r\n            {!isMonth && (\r\n              <AppointmentForm\r\n                overlayComponent={(args: any) => (\r\n                  <PopupLayoutBox\r\n                    isRTL={isRTL}\r\n                    theme={theme}\r\n                    alrt={{}}\r\n                    open={args.visible || false}\r\n                    title={title}\r\n                    onSubmit={commitChanges}\r\n                    mt={0}\r\n                    mb={50}\r\n                    {...args}\r\n                    onClose={args.onHide}\r\n                    isMobile={isMobile}\r\n                  ></PopupLayoutBox>\r\n                )}\r\n                basicLayoutComponent={(pr: any) => (\r\n                  <AppointForm\r\n                    departments={departments}\r\n                    employees={employees}\r\n                    servicesproducts={services}\r\n                    theme={theme}\r\n                    tasks={tasks}\r\n                    isMobile={isMobile}\r\n                    {...pr}\r\n                  ></AppointForm>\r\n                )}\r\n                commandButtonComponent={CommandAppointment}\r\n              />\r\n            )}\r\n            <AllDayPanel />\r\n            {!isMonth && <DragDropProvider></DragDropProvider>}\r\n            <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n          </Scheduler>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useDepartments, useEmployees } from \"../../hooks\";\r\nimport Main from \"./Main\";\r\n\r\nconst MainCalendar = (props: any) => {\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  return (\r\n    <Main {...props} employees={employees} departments={departments}></Main>\r\n  );\r\n};\r\n\r\nexport default MainCalendar;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  CLOUD_NAME,\r\n  imageUploadOptions,\r\n  UPLOAD_PRESET,\r\n} from \"../constants/sizes\";\r\n\r\nconst serverURL = \"http://jadwal-server:4000\";\r\n\r\nexport const FileUpload = () => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadfile`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderFile = () => {\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <p>file location {data.path}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input type=\"file\" name=\"file\" onChange={handleChange} />\r\n        {data.path && renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageOnlineUpload = ({\r\n  url,\r\n  setUrl,\r\n  image,\r\n  setImage,\r\n  width,\r\n  height,\r\n  size,\r\n}) => {\r\n  const [localimage, setLocalImage]: any = useState(null);\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  const selectImage = (e: any) => {\r\n    const img = e.target?.files?.[0];\r\n    if (img) {\r\n      setImage(img);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setUrl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setLocalImage(URL.createObjectURL(image));\r\n    } else {\r\n      setLocalImage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        ref={fileInput}\r\n        style={{\r\n          width: 0.1,\r\n          height: 0.1,\r\n          opacity: 0,\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n        }}\r\n        type=\"file\"\r\n        onChange={selectImage}\r\n      />\r\n      {localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={localimage}\r\n          />\r\n        </Box>\r\n      )}\r\n      {url && !localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={url}\r\n          />\r\n        </Box>\r\n      )}\r\n      {!localimage && !url && (\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            overflow: \"hidden\",\r\n            width: width,\r\n            height: height,\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#eaeaea\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => fileInput.current.click()}\r\n        >\r\n          <Typography style={{ color: \"#bbb\", fontSize: 14 }}>\r\n            {size}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const uploadPhotoOnline = async (image: any) => {\r\n  try {\r\n    const compressedImage = await imageCompression(image, imageUploadOptions);\r\n    const d = new FormData();\r\n    d.append(\"file\", compressedImage);\r\n    d.append(\"upload_preset\", UPLOAD_PRESET);\r\n    d.append(\"cloud_name\", CLOUD_NAME);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/fivegstore/image/upload\",\r\n      {\r\n        method: \"post\",\r\n        body: d,\r\n      }\r\n    );\r\n    const json = await res.json();\r\n    return json.url;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  ImageOnlineUpload,\r\n  ImageUpload,\r\n  uploadPhotoOnline,\r\n} from \"../../common/upload\";\r\nimport { isProd } from \"../../constants/sizes\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [iconimage, setIconimage] = useState(null);\r\n  const [iconurl, setIconurl] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n      setIconurl(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n    let icon: any;\r\n    if (iconimage) {\r\n      icon = await uploadPhotoOnline(iconimage);\r\n      icon = icon.replace(\"http://\", \"https://\");\r\n    }\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo: icon ? icon : logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            {!isProd && (\r\n              <>\r\n                <img\r\n                  src={logo}\r\n                  alt={company?.name}\r\n                  height={100}\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    borderRadius: 10,\r\n                    marginTop: 5,\r\n                  }}\r\n                />\r\n                <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n              </>\r\n            )}\r\n            <Box style={{ marginBottom: 20 }}></Box>\r\n            {isProd && (\r\n              <ImageOnlineUpload\r\n                url={iconurl}\r\n                setUrl={setIconurl}\r\n                image={iconimage}\r\n                setImage={setIconimage}\r\n                width={300}\r\n                height={150}\r\n                size=\"400x200\"\r\n              ></ImageOnlineUpload>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flexDirection: \"row\",\r\n              direction: \"ltr\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n            }}\r\n          >\r\n            <Box\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 11,\r\n                color: \"#ccc\",\r\n              }}\r\n            >\r\n              App ID:{\" \"}\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 11,\r\n                color: \"#ccc\",\r\n              }}\r\n            >\r\n              {company?.appid}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    setSaving(true);\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setSaving(false);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useDepartments } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Departments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"depType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartments();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"depType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resTypes: [1, 2] },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Employees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"resType\", title: isRTL ? \"القطاع\" : \"Section\" },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"resType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getObjectEvents(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $taskId: Int\r\n  ) {\r\n    getObjectEvents(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    setSaving(true);\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    setSaving(false);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n    setSaving(false);\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={240}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      setTasktitle(row?.title);\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      bgcolor={colors.blue[500]}\r\n      mb={20}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                      disabled={name === \"customerId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"taskId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                      disabled={name === \"employeeId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"departmentId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Box>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAddMultiEvents\r\n          open={openMulti}\r\n          onClose={() => setOpenMulti(false)}\r\n          onSubmit={setRrule}\r\n          theme={theme}\r\n          isRTL={isRTL}\r\n          words={words}\r\n        ></PopupAddMultiEvents>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  updateEvent,\r\n} from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport getObjectEvents from \"../graphql/query/getObjectEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport LoadingInline from \"./LoadingInline\";\r\nimport PopupAppointmentCustomer from \"../pubups/PopupAppointmentCustomer\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  id,\r\n  name,\r\n  isNew,\r\n  company,\r\n  value,\r\n}: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    col.docNo,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n  const { tasks } = useTasks();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getObjectEvents,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getObjectEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n    getEvents({ variables });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const data = eventsData?.data?.[\"getObjectEvents\"]?.data;\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    const events = data || [];\r\n    setRows(events);\r\n  }, [eventsData]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      {loading && <LoadingInline></LoadingInline>}\r\n\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n\r\n          <VirtualTable\r\n            height={600}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentCustomer\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              company={company}\r\n              isEditor={isEditor}\r\n              tasks={tasks}\r\n              name={name}\r\n              value={value}\r\n            ></PopupAppointmentCustomer>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  tasks,\r\n  taskvalue,\r\n  setTaskvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  total,\r\n  words,\r\n  isRTL,\r\n  documentTypes,\r\n  types,\r\n  setTypes,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [taskvalueLocal, setTaskvalueLocal] = React.useState([]);\r\n  const [typesvalueLocal, setTypesvalueLocal] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setTaskvalueLocal(taskvalue);\r\n      setTypesvalueLocal(types);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setTaskvalueLocal([]);\r\n    setTypesvalueLocal([]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setTaskvalue([]);\r\n    setTypes([]);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setTaskvalue(taskvalueLocal);\r\n    setTypes(typesvalueLocal);\r\n    setOpen(false);\r\n  };\r\n  const tt = types ? types : [];\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...taskvalue,\r\n    ...tt,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              {documentTypes && (\r\n                <FilterSelectMulti\r\n                  options={documentTypes}\r\n                  value={typesvalueLocal}\r\n                  setValue={setTypesvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"type\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {tasks && tasks.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={tasks}\r\n                  value={taskvalueLocal}\r\n                  setValue={setTaskvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"task\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              {servicevalue && servicevalue.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={services}\r\n                  value={servicevalueLocal}\r\n                  setValue={setServicevalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"serviceproduct\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n  color = theme.palette.primary.main,\r\n  bgcolor = fade(theme.palette.primary.dark, 0.12),\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n        minWidth: 450,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: bgcolor,\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#bbb\" : color,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{}}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services} // items\r\n              itemType={itemType}\r\n              setItemType={setsetItemTypeDispatch}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { PopupInvoice } from \"../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { getColumns } from \"../common/columns\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { TableComponent } from \"../pages/reports/SalesReport\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function InvoicesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={amountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"total\", \"discount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n          <PopupInvoice\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            tasks={tasks}\r\n          ></PopupInvoice>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getReceipts(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoicesList(\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoicesList(\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getInvoicesList from \"../graphql/query/getInvoicesList\";\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [invoices, setInvoices] = useState<any>([]);\r\n  const [invoicevalue, setInvoicevalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  const [loadInvoices, invoicesData]: any = useLazyQuery(getInvoicesList, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  useEffect(() => {\r\n    if (custvalue) {\r\n      const variables = { customerId: custvalue._id };\r\n      loadInvoices({ variables });\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [custvalue, open]);\r\n\r\n  useEffect(() => {\r\n    if (invoicesData?.data?.getInvoicesList?.data) {\r\n      const { data } = invoicesData.data.getInvoicesList;\r\n      if (data?.length > 0) {\r\n        const ndata = data.map((d: any) => {\r\n          const title = `${d.docNo} - ${d.amount}QR`;\r\n          return {\r\n            ...d,\r\n            name: title,\r\n            nameAr: title,\r\n          };\r\n        });\r\n        setInvoices(ndata);\r\n        if (row.refNo) {\r\n          const inv = ndata.filter((ts: any) => ts.docNo === row.refNo)?.[0];\r\n          setInvoicevalue(inv);\r\n        }\r\n      }\r\n    }\r\n  }, [invoicesData]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const department = invoicevalue\r\n      ? {\r\n          departmentId: invoicevalue.departmentId,\r\n          departmentName: invoicevalue.departmentName,\r\n          departmentNameAr: invoicevalue.departmentNameAr,\r\n          departmentColor: invoicevalue.departmentColor,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = invoicevalue\r\n      ? {\r\n          employeeId: invoicevalue.employeeId,\r\n          employeeName: invoicevalue.employeeName,\r\n          employeeNameAr: invoicevalue.employeeNameAr,\r\n          employeeColor: invoicevalue.employeeColor,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: invoicevalue ? invoicevalue.taskId : undefined,\r\n      refNo: invoicevalue ? invoicevalue.docNo : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    console.log(variables);\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setInvoices([]);\r\n    setCustvalue(null);\r\n    setInvoicevalue(null);\r\n    setCustError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n                disabled={name === \"customerId\"}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب القبض\" : \"Receipt Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"invoice\"\r\n                title={isRTL ? \"الفواتير\" : \"Invoices\"}\r\n                words={words}\r\n                options={invoices}\r\n                value={invoicevalue}\r\n                setSelectValue={setInvoicevalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                disabled={!custvalue}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\n\r\nimport getReceipts from \"../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../pubups/PopupReceipt\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ReceiptCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            customerAccountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addFinance}\r\n          editAction={editFinance}\r\n        >\r\n          <PopupReceipt name={name} value={value} tasks={tasks}></PopupReceipt>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const customer = taskvalue\r\n      ? {\r\n          customerId: taskvalue.customerId,\r\n          customerName: taskvalue.customerName,\r\n          customerNameAr: taskvalue.customerNameAr,\r\n          customerPhone: taskvalue.customerPhone,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب المصروف\" : \"Expenses Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={isRTL ? \"حساب الدفع\" : \"Payment Acc\"}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                disabled={name === \"taskId\"}\r\n              ></AutoFieldLocal>\r\n\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اداري\" : \"Managment\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                />\r\n                <FormControlLabel\r\n                  value={3}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 3 ? words.resourses : words.employee}\r\n                disabled={!resType || name === \"employeeId\"}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n                disabled={name === \"departmentId\"}\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport PopupExpenses from \"../pubups/PopupExpenses\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ExpensesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addExpenses}\r\n          editAction={editExpenses}\r\n        >\r\n          <PopupExpenses\r\n            name={name}\r\n            value={value}\r\n            tasks={tasks}\r\n          ></PopupExpenses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  addEventsToList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const start = new Date();\r\n    const end = new Date();\r\n    start.setMinutes(0);\r\n    end.setHours(end.getHours() + 1);\r\n    end.setMinutes(0);\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n    setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    setCustvalue(customer);\r\n    setDepartvalue(department);\r\n    setEmplvalue(employee);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setSaving(false);\r\n    setTasktitle(null);\r\n  };\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const event = {\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      user: user._id,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist, isRTL });\r\n    addEventsToList(eventlist);\r\n    setSaving(false);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n      bgcolor={colors.blue[500]}\r\n      savetitle={isRTL ? \"متابعة\" : \"Proceed\"}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  height={200}\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  departmentFormatter,\r\n  employeeFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { Command } from \"./Command\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  rows,\r\n  removeEventFromList,\r\n  isRTL,\r\n  words,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 1, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    {\r\n      id: 4,\r\n      ref: \"department\",\r\n      name: \"departmentname\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      id: 5,\r\n      ref: \"employee\",\r\n      name: \"employeename\",\r\n      title: words.employee,\r\n    },\r\n\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeEventFromList(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 500,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 500,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <VirtualTable\r\n            height={500}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentname\"]}\r\n            formatterComponent={(props: any) =>\r\n              departmentFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeename\"]}\r\n            formatterComponent={(props: any) =>\r\n              employeeFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <TableEditColumn\r\n            showDeleteCommand={rows && rows.length > 1}\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, colors, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { compressEvents } from \"../common/time\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n  refresh,\r\n  startrange,\r\n  endrange,\r\n  value = null,\r\n  name = null,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const addEventsToList = (events: any) => {\r\n    const newArray = [...evList, ...events];\r\n    const sorted = _.sortBy(newArray, \"startDate\");\r\n    const listwithindex = indexTheList(sorted);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  const removeEventFromList = (index: any) => {\r\n    const newList = [...evList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue && name !== \"departmentId\") {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setHours(23, 59, 59, 999);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 1)?.[0]);\r\n      setEvList([]);\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setSaving(false);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!tasktitle) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة اسم للمهمة\" : \"Please add Task title\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && (!evList || evList.length === 0)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة موعد\" : \"Please add Appointment\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const events =\r\n      evList && evList.length > 0 ? compressEvents(evList) : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 1,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      evQty: evList ? evList.length : undefined,\r\n      evDone: isNew ? 0 : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setTimeout(() => {\r\n        refresh();\r\n        onCloseForm();\r\n      }, 1000);\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      saving={saving}\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={4}>\r\n            <TextFieldLocal\r\n              required\r\n              autoFocus={true}\r\n              name=\"tasktitle\"\r\n              label={words.title}\r\n              value={tasktitle}\r\n              onChange={(e: any) => setTasktitle(e.target.value)}\r\n              row={row}\r\n              fullWidth\r\n              mb={0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"customer\"\r\n              title={words.customer}\r\n              words={words}\r\n              options={customers}\r\n              value={custvalue}\r\n              setSelectValue={setCustvalue}\r\n              setSelectError={setCustError}\r\n              selectError={custError}\r\n              refernce={custRef}\r\n              register={register}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              showphone\r\n              disabled={name === \"customerId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"employee\"\r\n              title={words.employee}\r\n              words={words}\r\n              options={employees.filter((em: any) => em.resType === 1)}\r\n              value={emplvalue}\r\n              setSelectValue={setEmplvalue}\r\n              setSelectError={setEmplError}\r\n              selectError={emplError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              day={day}\r\n              disabled={name === \"employeeId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter((dep: any) => dep.depType === 1)}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepartError}\r\n              selectError={departError}\r\n              refernce={departRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              disabled={name === \"departmentId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={10}>\r\n            {isNew && (\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#F3F3F3\",\r\n                  marginTop: 15,\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\",\r\n                    marginInlineStart: 10,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    {isRTL ? \"اضافة مواعيد\" : \"Add Appointments\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    isTaskNew={isNew}\r\n                    rows={evList}\r\n                    removeEventFromList={removeEventFromList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                    start={startrange}\r\n                    end={endrange}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          addEventsToList={addEventsToList}\r\n        ></PopupTaskAppointment>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { VirtualTable } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { colors, fade, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\nconst stylesBlue = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.blue[500], 0.13),\r\n    },\r\n  },\r\n});\r\nconst stylesGreen = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.green[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesRed = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.red[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesOrange = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.orange[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesPurple = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.deepPurple[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesGrey = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.grey[400], 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponentBlue = withStyles(stylesBlue, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGreen = withStyles(stylesGreen, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentRed = withStyles(stylesRed, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentOrange = withStyles(stylesOrange, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentPurple = withStyles(stylesPurple, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGrey = withStyles(stylesGrey, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n      const depId = task.departmentId;\r\n      const empId = task.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      // handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={null}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport _ from \"lodash\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\nimport { taskManamentTabs } from \"../constants/rrule\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 224,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskView = ({\r\n  open,\r\n  onClose,\r\n  item,\r\n  tasks,\r\n  isNew,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n  const [row, setRow] = useState(item);\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (item?.id && tasks && tasks.length > 0) {\r\n      const opened = tasks.filter((ts: any) => ts.id === item.id)?.[0];\r\n      setRow(opened);\r\n    }\r\n  }, [tasks]);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n      if (items && items.length > 0) {\r\n        const ids = items.map((it: any) => it.itemId);\r\n        const servlist = servicesproducts.filter((ser: any) =>\r\n          ids.includes(ser._id)\r\n        );\r\n\r\n        const itemsWqtyprice = items.map((item: any, index: any) => {\r\n          const {\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n          } = item;\r\n          const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n          return {\r\n            ...serv,\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n            index,\r\n            itemprice: item.itemPrice,\r\n            itemqty: item.qty,\r\n            itemtotal: item.total,\r\n            // itemtotalcost: item.qty * serv.cost,\r\n          };\r\n        });\r\n        const finalItems = _(itemsWqtyprice)\r\n          .groupBy(\"_id\")\r\n          .map((array, key) => ({\r\n            _id: array[0]._id,\r\n            name: array[0].name,\r\n            nameAr: array[0].nameAr,\r\n            categoryId: array[0].categoryId,\r\n            categoryName: array[0].categoryName,\r\n            categoryNameAr: array[0].categoryNameAr,\r\n            departmentId: array[0].departmentId,\r\n            departmentName: array[0].departmentName,\r\n            departmentNameAr: array[0].departmentNameAr,\r\n            departmentColor: array[0].departmentColor,\r\n            employeeId: array[0].employeeId,\r\n            employeeName: array[0].employeeName,\r\n            employeeNameAr: array[0].employeeNameAr,\r\n            employeeColor: array[0].employeeColor,\r\n            autoNo: array[0].autoNo,\r\n            docNo: array[0].docNo,\r\n            cost: array[0].cost,\r\n            itemType: array[0].itemType,\r\n            index: array[0].index,\r\n            itemprice: array[0].itemprice,\r\n            itemqty: _.sumBy(array, \"itemqty\"),\r\n            itemtotal: _.sumBy(array, \"itemtotal\"),\r\n          }))\r\n          .orderBy(\"index\")\r\n          .value();\r\n        setItemsList(finalItems);\r\n      }\r\n    }\r\n  }, [itemsData, open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const variables = { taskId: row.id };\r\n      getItems({ variables });\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setEvList([]);\r\n    setValue(0);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const viewtotal = total ? total : amount;\r\n  const title = `${words.task} : ${row?.title}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      alrt={{}}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      onlyclose\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n              }}\r\n            >\r\n              <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n\r\n              {row && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <TabPanel value={value} index={0}>\r\n                    <EventsCustomer\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      customers={customers}\r\n                      servicesproducts={servicesproducts}\r\n                      isEditor={isEditor}\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      theme={theme}\r\n                      isNew={isNew}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></EventsCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                    <InvoicesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      company={company}\r\n                      servicesproducts={servicesproducts}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></InvoicesCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                    <ReceiptCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ReceiptCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={3}>\r\n                    <ExpensesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ExpensesCustomer>\r\n                  </TabPanel>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      marginLeft: 20,\r\n                      marginRight: 20,\r\n                    }}\r\n                  >\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(viewtotal)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {progress}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalinvoiced)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalpaid)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.red[500] }}\r\n                      >\r\n                        {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.red[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(totalinvoiced - totalpaid)}\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(toatlExpenses)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.blue[500] }}\r\n                      >\r\n                        {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.blue[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          {row && (\r\n            <Grid item xs={1}>\r\n              <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n                <Tabs\r\n                  orientation=\"vertical\"\r\n                  variant=\"scrollable\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"items\"\r\n                  className={classes.tabs}\r\n                >\r\n                  {taskManamentTabs.map((item: any) => {\r\n                    return (\r\n                      <Tab\r\n                        style={{\r\n                          backgroundColor:\r\n                            value === item.id ? \"#eee\" : undefined,\r\n                        }}\r\n                        label={isRTL ? item.nameAr : item.name}\r\n                        {...a11yProps(item.id)}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Tabs>\r\n              </Box>\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  margin: 7,\r\n                  padding: 8,\r\n                  borderRadius: 5,\r\n                  alignItems: \"flex-start\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    marginTop: 10,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  {row.title}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.customer}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.customerNameAr : row.customerName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.employee}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.employeeNameAr : row.employeeName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.department}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.departmentNameAr : row.departmentName}\r\n                </Typography>\r\n              </Box>\r\n              <Box style={{ padding: 10, marginTop: 20 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.newInvoice}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {row && (\r\n          <PopupTaskAppointment\r\n            open={openEvent}\r\n            onClose={() => setOpenEvent(false)}\r\n            row={null}\r\n            isNew={true}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            setEvList={setEvList}\r\n          ></PopupTaskAppointment>\r\n        )}\r\n        {row && (\r\n          <PopupTaskInvoice\r\n            open={openInvoice}\r\n            onClose={() => setOpenInvoice(false)}\r\n            task={row}\r\n            customers={customers}\r\n            services={servicesproducts}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            theme={theme}\r\n            items={itemsList}\r\n          ></PopupTaskInvoice>\r\n        )}\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  TableColumnVisibility,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \".\";\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"./colorFormat\";\r\nimport { AlertLocal } from \"../components\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport PopupTask from \"../pubups/PopupTask\";\r\nimport createTask from \"../graphql/mutation/createTask\";\r\nimport updateTask from \"../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../hooks\";\r\nimport { errorAlert, errorDeleteAlert } from \"./helpers\";\r\nimport { TableComponent } from \"./TableComponent\";\r\nimport PopupTaskView from \"../pubups/PopupTaskView\";\r\nimport useTasks from \"../hooks/useTasks\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function TasksCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n  value,\r\n  name,\r\n  id,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const { tasks } = useTasks();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getTasks\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <TableColumnVisibility\r\n          columnExtensions={tableColumnVisibilityColumnExtensions}\r\n          defaultHiddenColumnNames={[\r\n            col.department.name,\r\n            col.evQty.name,\r\n            col.toatlExpenses.name,\r\n            col.start.name,\r\n            col.end.name,\r\n          ]}\r\n        />\r\n        <DataTypeProvider\r\n          for={[\"title\"]}\r\n          formatterComponent={(props: any) =>\r\n            nameLinkFormat({ ...props, setItem, setOpenItem })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"start\", \"end\"]}\r\n          formatterComponent={createdAtFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"due\"]}\r\n          formatterComponent={dueAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n          formatterComponent={currencyFormatterEmpty}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"totalinvoiced\"]}\r\n          formatterComponent={invoiceReceiptFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"income\"]}\r\n          formatterComponent={incomeAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"tasktype\"]}\r\n          formatterComponent={taskNameFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"progress\"]}\r\n          formatterComponent={progressFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addTask} editAction={editTask}>\r\n          <PopupTask\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            addCustomer={addCustomer}\r\n            editCustomer={editCustomer}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            isEditor={isEditor}\r\n            refresh={refresh}\r\n          ></PopupTask>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n      {item && (\r\n        <PopupTaskView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n          refresh={refresh}\r\n          addAction={addTask}\r\n          editAction={editTask}\r\n        ></PopupTaskView>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupCustomerView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.customer} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomerView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport {\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Customers(props: any) {\r\n  const { isRTL, words, menuitem, isEditor, theme, company, servicesproducts } =\r\n    props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [rows, setRows] = useState([]);\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.address },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getCustomers, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getCustomers,\r\n        variables: { isRTL },\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getCustomers\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    loadTasks({ isRTL });\r\n  }, []);\r\n\r\n  const [addCustomer] = useMutation(createCustomer, refresQuery);\r\n  const [editCustomer] = useMutation(updateCustomer, refresQuery);\r\n  const [removeCustomer] = useMutation(deleteCustomer, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getCustomers?.data) {\r\n      const { data } = tasksData.data.getCustomers;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"email\", \"address\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupCustomerView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { TableComponent } from \"../reports/SalesReport\";\r\nimport { colors } from \"@material-ui/core\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert, Loading } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  fade,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { tafkeet } from \"../common/helpers\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n      setTasktitle(row?.title);\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n      taskvalue={taskvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (dep: any) => dep.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  marginTop: 5,\r\n                  backgroundColor: fade(colors.grey[400], 0.2),\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 180, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: fade(colors.grey[400], 0.2),\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <Typography\r\n                style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n              >\r\n                {words.total} : {moneyFormat(totals.amount)}\r\n              </Typography>\r\n              {totals?.amount && (\r\n                <Typography style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                  {tafkeet(totals.amount)}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          onCloseAppoint={onClose}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupDepartmentView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.department} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDepartmentView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupEmployeeView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.employee} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployeeView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n  nameLinkFormat,\r\n  taskIdLinkFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  colors,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [due, setDue] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    col.customer,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [openTaskItem, setOpenTaskItem] = useState(false);\r\n  const [openCustomerItem, setOpenCustomerItem] = useState(false);\r\n  const [openEmployeeItem, setOpenEmployeeItem] = useState(false);\r\n  const [openDepartmentItem, setOpenDepartmentItem] = useState(false);\r\n\r\n  const onCloseTaskItem = () => {\r\n    setOpenTaskItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseCustomerItem = () => {\r\n    setOpenCustomerItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseEmployeeItem = () => {\r\n    setOpenEmployeeItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseDepartmentItem = () => {\r\n    setOpenDepartmentItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n\r\n  const setEmployeeItem = (data: any) => {\r\n    const empl = employees.filter((em: any) => em._id === data.employeeId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"employee\");\r\n    }\r\n  };\r\n  const setDepartmentItem = (data: any) => {\r\n    const empl = departments.filter(\r\n      (em: any) => em._id === data.departmentId\r\n    )?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"department\");\r\n    }\r\n  };\r\n  const setCustomerItem = (data: any) => {\r\n    const empl = customers.filter((em: any) => em._id === data.customerId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"customer\");\r\n    }\r\n  };\r\n\r\n  const { tasks } = useTasks();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n  const { employees, addEmployee, editEmployee } = useEmployees();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n      due,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end, due]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  useEffect(() => {\r\n    if (name === \"department\") {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"employee\") {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"customer\") {\r\n      console.log(\"customer\", item);\r\n\r\n      if (customers && customers.length > 0) {\r\n        const opened = customers.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments, employees, customers]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.startDate.name, togglingEnabled: false },\r\n    { columnName: col.fromto.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              opacity: due ? 0.5 : undefined,\r\n              pointerEvents: due ? \"none\" : undefined,\r\n            }}\r\n          >\r\n            <DateNavigatorReports\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              currentDate={currentDate}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentViewNameChange={currentViewNameChange}\r\n              endDate={endDate}\r\n              endDateChange={endDateChange}\r\n              views={[1, 7, 30, 365, 1000]}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              color={colors.blue[700]}\r\n              bgcolor={colors.blue[50]}\r\n            ></DateNavigatorReports>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              padding: 0,\r\n              margin: 0,\r\n              backgroundColor: colors.blue[50],\r\n              paddingRight: 10,\r\n              marginLeft: 40,\r\n              marginRight: 40,\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={{ padding: 7 }}\r\n                  checked={due}\r\n                  onChange={() => setDue(!due)}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography\r\n                  style={{ color: colors.blue[700] }}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {isRTL ? \"المواعيد المتأخرة\" : \"Due Appointments\"}\r\n                </Typography>\r\n              }\r\n              style={{ fontSize: 14 }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            columnExtensions={tableColumnVisibilityColumnExtensions}\r\n            defaultHiddenColumnNames={[\r\n              // col.title.name,\r\n              col.status.name,\r\n              col.docNo.name,\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdLinkFormat({\r\n                ...props,\r\n                tasks,\r\n                setItem,\r\n                setOpenItem: setOpenTaskItem,\r\n                setName,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeeNameAr\", \"employeeName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setEmployeeItem,\r\n                setOpenItem: setOpenEmployeeItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentNameAr\", \"departmentName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setDepartmentItem,\r\n                setOpenItem: setOpenDepartmentItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"customerNameAr\", \"customerName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setCustomerItem,\r\n                setOpenItem: setOpenCustomerItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 110,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n        <PopupDepartmentView\r\n          open={openDepartmentItem}\r\n          onClose={onCloseDepartmentItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n        <PopupEmployeeView\r\n          open={openEmployeeItem}\r\n          onClose={onCloseEmployeeItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n        <PopupTaskView\r\n          open={openTaskItem}\r\n          onClose={onCloseTaskItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n        ></PopupTaskView>\r\n        <PopupCustomerView\r\n          open={openCustomerItem}\r\n          onClose={onCloseCustomerItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    console.log(variables);\r\n\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n            }}\r\n          >\r\n            <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n              <FilterSelectCkeckBox\r\n                options={tasks}\r\n                value={taskvalue?.[0]}\r\n                setValue={setTaskvalueDispatch}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"task\"\r\n                nomulti\r\n                width={250}\r\n              ></FilterSelectCkeckBox>\r\n            </Box>\r\n            <FilterSelectCkeckBox\r\n              options={mainaccounts}\r\n              value={accvalue?.[0]}\r\n              setValue={setAccvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"account\"\r\n              nomulti\r\n              width={250}\r\n            ></FilterSelectCkeckBox>\r\n            {/* <Box\r\n              style={{\r\n                minWidth: 120,\r\n                marginRight: isRTL ? 40 : undefined,\r\n                marginLeft: isRTL ? undefined : 40,\r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n                {currencyFormatter({ value: total })}\r\n              </Typography>\r\n            </Box> */}\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 9\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={customers}\r\n              value={custvalue?.[0]}\r\n              setValue={setCustvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"customer\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              minWidth: 120,\r\n              marginRight: 90,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <FilterSelectCkeckBox\r\n              options={tasks}\r\n              value={taskvalue?.[0]}\r\n              setValue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"task\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resTypes: [3] },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      color,\r\n      info,\r\n      resType: 3,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter((dep: any) => dep.depType === 2)}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Resourses({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useOResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupResourses></PopupResourses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={8}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginBottom: -15 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اداري\" : \"Managment\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={3}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}></Grid>\r\n                <Grid item xs={8}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport {\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, colors } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.deepPurple[400]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            color={colors.deepPurple[700]}\r\n            bgcolor={colors.deepPurple[50]}\r\n          ></DateNavigatorReports>\r\n          <Box style={{}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setOpenGantt(true)}\r\n            >\r\n              {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            <SearchState />\r\n\r\n            <IntegratedSorting />\r\n            <IntegratedFiltering />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n              tableComponent={TableComponent}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              defaultHiddenColumnNames={[\r\n                col.department.name,\r\n                col.evQty.name,\r\n                col.toatlExpenses.name,\r\n                col.start.name,\r\n                col.end.name,\r\n              ]}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"title\"]}\r\n              formatterComponent={(props: any) =>\r\n                nameLinkFormat({ ...props, setItem, setOpenItem })\r\n              }\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"due\"]}\r\n              formatterComponent={dueAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"totalinvoiced\"]}\r\n              formatterComponent={invoiceReceiptFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"income\"]}\r\n              formatterComponent={incomeAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n                refresh={refresh}\r\n                startrange={start}\r\n                endrange={end}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n          {alrt.show && (\r\n            <AlertLocal\r\n              isRTL={isRTL}\r\n              type={alrt?.type}\r\n              msg={alrt?.msg}\r\n              top\r\n            ></AlertLocal>\r\n          )}\r\n          {item && (\r\n            <PopupTaskView\r\n              open={openItem}\r\n              onClose={onCloseItem}\r\n              item={item}\r\n              tasks={rows}\r\n              isNew={false}\r\n              theme={theme}\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              addCustomer={addCustomer}\r\n              editCustomer={editCustomer}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              isEditor={isEditor}\r\n              refresh={refresh}\r\n              startrange={start}\r\n              endrange={end}\r\n              addAction={addTask}\r\n              editAction={editTask}\r\n            ></PopupTaskView>\r\n          )}\r\n        </Paper>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportDocuments(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportDocuments(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        opType\r\n        taskId\r\n        branch\r\n        time\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const DocumentsReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default DocumentsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  documentTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportDocuments from \"../../graphql/query/getReportDocuments\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function DocumentsReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportDocuments, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(DocumentsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportDocuments\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          types: inActiveColumns(\"types\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={[]}\r\n              setServicevalue={() => null}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n              zIndex: 115,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={documentTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initDocumentsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const documentsReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const ServicesReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default ServicesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportServices(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportServices(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportServices from \"../../graphql/query/getReportServices\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function ServicesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportServices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(ServicesReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportServices\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"total\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"total\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initServicesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const servicesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  daysoffFormatter,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { useCustomers, useDepartments } from \"../../hooks\";\r\n\r\nexport default function ManageEmployees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  servicesproducts,\r\n  company,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResourses();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [employees]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid\r\n          rows={employees.filter((em: any) => em.resType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\r\n              \"email\",\r\n              \"info\",\r\n              \"phone\",\r\n              \"daysoff\",\r\n              \"avatar\",\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupEmployeeView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\n\r\nexport default function ManageDepartments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  company,\r\n  servicesproducts,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { customers } = useCustomers();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"depType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid\r\n          rows={departments.filter((em: any) => em.depType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"avatar\", \"depType\", \"desc\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"depType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupDepartmentView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n    employees,\r\n    departments,\r\n    customers,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport EmployeesAppoints from \"./Employees\";\r\n\r\nconst EmployeesCalendar = (props: any) => {\r\n  const [state, setstate] = useState([]);\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const emps = employees.filter((em: any) => em.resType === 1);\r\n      setstate(emps);\r\n    }\r\n  }, [employees]);\r\n\r\n  return (\r\n    <EmployeesAppoints\r\n      {...props}\r\n      employees={state}\r\n      departments={departments}\r\n      customers={customers}\r\n    ></EmployeesAppoints>\r\n  );\r\n};\r\n\r\nexport default EmployeesCalendar;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport MainCalendar from \"../calendar/MainCalendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport { useBranches, useServices, useSuppliers } from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport DocumentsReport from \"../reports/DocumentsReport\";\r\nimport {\r\n  documentsReportReducer,\r\n  initDocumentsReportContext,\r\n} from \"../../contexts/documentsReport/documentsReducer\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\nimport ServicesReport from \"../reports/ServicesReport\";\r\nimport {\r\n  initServicesReportContext,\r\n  servicesReportReducer,\r\n} from \"../../contexts/servicesReport/servicesReducer\";\r\nimport ManageEmployees from \"../adds/ManageEmployees\";\r\nimport ManageDepartments from \"../adds/ManageDepartments\";\r\nimport EmployeesCalendar from \"../calendar/EmployeesCalendar\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [documentsStore, documentsDispatch] = useReducer(\r\n    documentsReportReducer,\r\n    initDocumentsReportContext\r\n  );\r\n  const [servicesStore, servicesDispatch] = useReducer(\r\n    servicesReportReducer,\r\n    initServicesReportContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesCalendar>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n                isEditor={isEditor}\r\n                company={company}\r\n                servicesproducts={services}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <Departments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Departments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/managedepartments\"\r\n            component={() => (\r\n              <ManageDepartments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageDepartments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <Employees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Employees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/manageemployees\"\r\n            component={() => (\r\n              <ManageEmployees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageEmployees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <Resourses\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Resourses>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/docreports\"\r\n            component={() => (\r\n              <DocumentsReportContext.Provider\r\n                value={{\r\n                  state: documentsStore,\r\n                  dispatch: documentsDispatch,\r\n                }}\r\n              >\r\n                <DocumentsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></DocumentsReport>\r\n              </DocumentsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/servicesreports\"\r\n            component={() => (\r\n              <ServicesReportContext.Provider\r\n                value={{\r\n                  state: servicesStore,\r\n                  dispatch: servicesDispatch,\r\n                }}\r\n              >\r\n                <ServicesReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></ServicesReport>\r\n              </ServicesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable import/first */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nrequire(\"dotenv\").config();\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/first */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}