{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getGroups.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/createGroup.ts","graphql/mutation/deleteGroup.ts","graphql/mutation/updateGroup.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","constants/reports.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pages/calendar/common/SelectLocalNoby.tsx","pubups/PopupDeprtment.tsx","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","hooks/useCompany.ts","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","pages/calendar/Main.tsx","pages/calendar/MainCalendar.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/upload.tsx","pages/options/Company.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","hooks/useHResourses.tsx","pages/adds/Employees.tsx","graphql/query/getObjectEvents.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupAppointmentCustomer.tsx","Shared/EventsCustomer.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","components/filters/DateNavigatorReports.tsx","pages/reports/SalesReport.tsx","Shared/InvoicesCustomer.tsx","hooks/useAccounts.ts","graphql/query/getReceipts.ts","graphql/query/getInvoicesList.ts","pubups/PopupReceipt.tsx","Shared/ReceiptCustomer.tsx","pubups/PopupExpenses.tsx","Shared/ExpensesCustomer.tsx","pubups/PopupTaskAppointment.tsx","Shared/EventsTable.tsx","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","Shared/TableComponent.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","pubups/PopupTaskView.tsx","Shared/TasksCustomer.tsx","pubups/PopupCustomerView.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","pages/adds/Invoices.tsx","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","pubups/PopupAppointment.tsx","pubups/PopupDepartmentView.tsx","pubups/PopupEmployeeView.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","contexts/calendarReport/index.ts","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","hooks/useOResourses.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","graphql/query/getReportDocuments.ts","contexts/documentsReport/index.ts","pages/reports/DocumentsReport.tsx","contexts/documentsReport/documentsReducer.ts","contexts/servicesReport/index.ts","graphql/query/getReportServices.ts","pages/reports/ServicesReport.tsx","contexts/servicesReport/servicesReducer.ts","pages/adds/ManageEmployees.tsx","pages/adds/ManageDepartments.tsx","pages/calendar/Employees.tsx","pages/calendar/EmployeesCalendar.tsx","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","systemsNames","nameAr","colors","drawerWidth","imageUploadOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","taskvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","resourses","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","dates","all","ritems","items","trim","da","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","groupList","documentTypes","sectionTypes","bc","bg","uname","names","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","sectionsTypeFormatter","nameObj","st","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","documentTimeFormatter","opType","createdAtFormatter","fromToFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatEmpty","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","currencyFormatterEmpty","dueAmountFormatter","due","totalinvoiced","totalpaid","red","incomeAmountFormatter","inc","toatlExpenses","green","doneFormatter","editEvent","Checkbox","blue","checked","onChange","optimisticResponse","__typename","updateEvent","invoiceReceiptFormatter","valuePercent","position","bottom","right","fontWeight","taskIdFormatter","tasks","tsk","nameLinkFormat","setOpenItem","textAlign","deepPurple","taskNameFormatter","progressFormatter","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","compressEvents","events","times","ev","commitAppointmentChanges","added","changed","deleted","addEvent","removeEvent","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","refNo","eventNo","progress","evQty","taskId","fromto","done","invo","desc","amountdebit","amountcredit","createdAt","check","commandComponents","add","onExecute","m","Fab","edit","IconButton","marginBottom","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","categoryName","categoryNameAr","brandName","brandNameAr","Loading","CircularProgress","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","employees","departments","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","bgcolor","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","cancel","close","nameEn","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","print","printsave","from","description","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","customers","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","Landing","useDepartments","useEmployees","getLandingChartData","freshChartData","chartData","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","innerHeight","resType","depType","PaperComponent","handle","PopupLayout","alrt","onlyclose","savetitle","preventclose","saving","bgc","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","SelectLocalNoby","PopupDeprtment","setNewValue","setSaving","setDepType","reset","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","target","multiline","rowsMax","InputProps","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","setDepartvalue","depError","setDepError","setDaysoff","setResType","emplRef","useRef","depart","closeModal","resetAll","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","emplslist","setEmplslist","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","useServices","servId","serv","se","onFormClose","index","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","showEditCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","company","src","logo","alt","objectFit","tel1","textTransform","letterSpacing","invoiceNo","PureComponent","getTasks","getfins","finData","bt","getCompany","getComp","compData","updateCompany","editCompany","comp1","refreshcompany","indexTheList","PopupInvoice","servicesproducts","loading","setLoading","useTasks","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","useCompany","setCustvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","dept","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","em","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","manamentTabs","taskManamentTabs","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","tasktitle","setTasktitle","getActions","loadActions","actionsData","eventId","tks","t","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","onCloseAppoint","refresQuery","getInvoices","createInvoice","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","Main","visible","resourseData","setResourseData","setRows","getEvents","createEvent","deleteEvent","getCalEvents","evnData","eventsData","ap","startend","isMonth","curDate","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","MainCalendar","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","ImageOnlineUpload","url","setUrl","image","setImage","localimage","setLocalImage","fileInput","removeImage","URL","createObjectURL","opacity","img","files","click","uploadPhotoOnline","imageCompression","compressedImage","FormData","append","fetch","method","json","Company","setLogo","active","setActive","iconimage","setIconimage","iconurl","setIconurl","tel2","mob","appid","appversion","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showAddCommand","inputComponent","Departments","resTypes","Employees","useHResourses","UTC","checkedIcon","SelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","fullwidth","PopupAppointmentCustomer","custError","setCustError","custRef","setRrule","openMulti","setOpenMulti","openInvoice","setOpenInvoice","setMinutes","custId","statNo","rRule","cu","stat","EventsCustomer","getObjectEvents","deleteEventById","removeEventById","FilterSelectMulti","limitTags","SalesFilter","setServicevalue","types","setTypes","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","taskvalueLocal","setTaskvalueLocal","typesvalueLocal","setTypesvalueLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","minDate","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","departmentIds","employeeIds","customerIds","taskIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","grouping","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","setItemType","defaultSorting","onSortingChange","srt","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","then","buffer","saveAs","Blob","InvoicesCustomer","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","PopupReceipt","debaccounts","setDebaccounts","setDebitAcc","setCreditAcc","invoices","setInvoices","invoicevalue","setInvoicevalue","useAccounts","getInvoicesList","invoicesData","ndata","ca","filteredcredit","filtereddebits","ReceiptCustomer","getReceipts","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupExpenses","cridaccounts","setCridaccounts","fullwidtth","ExpensesCustomer","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PopupTaskAppointment","addEventsToList","eventlist","EventsTable","removeEventFromList","departmentFormatter","employeeFormatter","PopupTask","startrange","endrange","openEvent","setOpenEvent","evList","setEvList","evssum","evDone","isTaskNew","sorted","sortBy","orange","PopupTaskInvoice","TabPanel","other","hidden","useStyles","tabs","borderRight","divider","PopupTaskView","setRow","opened","getTaskItems","finalItems","autoNo","viewtotal","Tabs","orientation","Tab","TasksCustomer","openItem","loadTasks","tasksData","tsks","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","defaultHiddenColumnNames","PopupCustomerView","Customers","Services","Invoices","Accounts","br","CashTransfareSelect","PopupFinance","ot","Finance","getFinances","PopupAppointment","number","Tafgeet","PopupDepartmentView","PopupEmployeeView","Appointments","setDue","periodvalue","setPeriodvalue","setName","openTaskItem","setOpenTaskItem","openCustomerItem","setOpenCustomerItem","openEmployeeItem","setOpenEmployeeItem","openDepartmentItem","setOpenDepartmentItem","setEmployeeItem","setDepartmentItem","setCustomerItem","loadEvents","pointerEvents","taskIdLinkFormat","FilterSelect","FinanceReport","mainaccounts","balance","unshift","accNameAr","accName","accountIds","categoryIds","showInGroupFooter","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","initCalendarReportContext","calendarReportReducer","CalendarReportContext","Expenses","PurchaseReport","suppliers","categories","brands","supplierIds","setCatvalue","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResourses","Receipt","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","initTasksContext","tasksReducer","DocumentsReportContext","DocumentsReport","getReportDocuments","getTypesValue","initDocumentsReportContext","documentsReportReducer","ServicesReportContext","ServicesReport","getReportServices","initServicesReportContext","servicesReportReducer","ManageEmployees","ManageDepartments","EmployeesAppoints","resourceName","setMainResourceNameDispatch","EmployeesCalendar","setstate","emps","Content","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","documentsStore","documentsDispatch","servicesStore","servicesDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","config","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"igdAAaA,GAAc,CACzBC,MAAO,CACLC,UAAW,CACTC,KAAM,SAERC,eAAgB,CACdC,OAAQ,SAEVC,eAAgB,CACdD,OAAQ,SAEVE,kBAAmB,CACjBF,OAAQ,SAEVG,cAAe,CACbL,KAAM,SAERM,aAAc,CACZJ,OAAQ,SAEVK,cAAe,CACbL,OAAQ,SAEVM,YAAa,CACXC,OAAO,GAETC,iBAAkB,CAChBR,OAAQ,SAEVS,OAAQ,CACNX,KAAM,SAERY,SAAU,CACRZ,KAAM,SAERa,aAAc,CACZX,OAAQ,SAEVY,WAAY,CACVC,QAAS,UAGbC,UAAW,CACTX,cAAe,CACbY,UAAW,CAETC,WAAY,EACZC,YAAa,EACbC,QAAS,OAMJC,GAAc,CACzBC,UAAW,MACXC,WAAY,CACVC,WAAW,8HACXC,SAAU,GACVC,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,KAEpB9B,MAAO,CACLC,UAAW,CACTC,KAAM,SAERC,eAAgB,CACdC,OAAQ,SAEVC,eAAgB,CACdD,OAAQ,SAEVE,kBAAmB,CACjBF,OAAQ,SAEVG,cAAe,CACbL,KAAM,SAERM,aAAc,CACZJ,OAAQ,SAEVK,cAAe,CACbL,OAAQ,SAEVM,YAAa,CACXC,OAAO,GAETC,iBAAkB,CAChBR,OAAQ,SAEVS,OAAQ,CACNX,KAAM,SAERY,SAAU,CACRZ,KAAM,SAERa,aAAc,CACZX,OAAQ,SAEVY,WAAY,CACVC,QAAS,UAGbC,UAAW,CACTX,cAAe,CACbY,UAAW,CAETC,WAAY,EACZC,YAAa,EACbC,QAAS,OC9GJS,GAAW,CACtB,CACEC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,c,sCC5DJC,GAAeC,cAAW,SAACC,GAAD,MAAY,CACjDC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,UAAWF,EAAMG,QAAQ,GACzBvC,OAAQoC,EAAMG,QAAQ,GACtBK,gBAAiBR,EAAMR,QAAQG,UAAUD,MAE3Ce,KAAM,CACJC,MAAO,OACPR,UAAWF,EAAMG,QAAQ,IAE3BQ,OAAQ,CACN/C,OAAQoC,EAAMG,QAAQ,EAAG,EAAG,QAGnBS,GAAgBb,cAAW,SAACC,GAAD,OACtCa,aAAa,CACXC,KAAM,CACJV,QAAS,QAGXW,QAASf,EAAMgB,OAAOD,QACtBE,QAAS,CACPC,KAAM,QAiCCC,IA5BkBpB,cAAW,SAACC,GAAD,OACxCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLV,MAAO,OACPW,OAAQ,QAEVzD,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKcX,aAAW,CACpCe,KAAM,CACJQ,SAAU,KAEZC,MAAO,CACLF,OAAQ,QAICG,GAAmBzB,cAAW,SAACC,GAAD,OACzCa,aAAa,CACXY,YAAa,CACX7D,OAAQoC,EAAMG,QAAQ,IAExBuB,YAAa,CACXxB,UAAWF,EAAMG,QAAQ,SAKlBwB,GAAiB5B,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,QACRX,MAAO,QACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETkB,UAAW,CACTzC,SAAU,SA4BH0C,IAxBoB9B,cAAW,SAACC,GAAD,OAC1Ca,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,OACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETkB,UAAW,CACTzC,SAAU,SAKWY,cAAW,SAACC,GAAD,OACpCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETkB,UAAW,CACTzC,SAAU,U,IAKiBY,cAAW,SAACC,GAAD,OAC1Ca,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKkBX,cAAW,SAACC,GAAD,OACxCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAIiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAIiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAIcX,cAAW,SAACC,GAAD,OACpCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNsC,UAAW,GACXmB,OAAQ,GACRX,MAAO,KAETI,KAAM,CACJJ,MAAO,aAIqBX,cAAW,SAACC,GAAD,OAC3Ca,aAAa,CACXiB,SAAU,CACRT,OAAQ,OACRX,MAAO,QACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,U,sCC1PPqB,GAAcC,aAAaC,QAAQ,SACnCC,GAAQH,GAAcI,KAAKC,MAAML,IAAe,KAEhDM,GAAQH,GAAQA,GAAMG,MAAQ,KAI9BC,GAAWC,aAAe,CAC9BC,IAAKC,mIAAYC,cAGbC,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAChC,MAAO,CACLA,QAAQ,6BACHA,GADE,IAELC,cAAeV,GAAK,iBAAaA,IAAU,SAKpCW,GAAS,IAAIC,KAAa,CACrCC,KAAMP,GAASQ,OAAOb,IACtBc,MAAO,IAAIC,O,mBCvBEC,ICAAA,aAAf,wUCAeA,aAAf,+SCAeA,aAAf,8THAeA,aAAf,4eIAeA,gBAAf,2xBCAeA,gBAAf,8mBCAeA,ICAAA,aAAf,+uBDAeA,aAAf,uvBEAeA,ICAAA,aAAf,qvBCAeA,aAAf,mwBFAeA,aAAf,6rCGAeA,gBAAf,yqBCDeA,gBAAf,+2CCCeA,gBAAf,oHCAeA,gBAAf,ohBCAeA,gBAAf,8YCAeA,gBAAf,usBCAeA,gBAAf,06BCAeA,ICAAA,aAAf,mIDAeA,aAAf,y4CEAeA,ICAAA,aAAf,8jCCAeA,aAAf,0HCAeA,aAAf,0hBHAeA,aAAf,oIIDeA,gBAAf,8hCCCeA,ICAAA,aAAf,47CDAeA,aAAf,uhDEAeA,ICAAA,aAAf,42BCAeA,aAAf,k1BCAeA,aAAf,40BCAeA,aAAf,kUCAeA,aAAf,4QCAeA,aAAf,6fCAeA,aAAf,+fCAeA,aAAf,iJRAeA,aAAf,sJSAeA,ICDAA,aAAf,4mCDCeA,aAAf,0cEAeA,gBAAf,0oCCAeA,ICAAA,aAAf,gxBDAeA,aAAf,gnBEAeA,ICAAA,aAAf,sUCAeA,aAAf,2JCAeA,aAAf,yWCAeA,aAAf,q0BCAeA,aAAf,uJCAeA,aAAf,w2BCAeA,aAAf,wOCAeA,aAAf,qJCAeA,aAAf,yRCAeA,aAAf,8RCAeA,aAAf,uJCAeA,aAAf,iWZAeA,aAAf,4ZaAeA,gBAAf,iKCAeA,gBAAf,8bCAeA,gBAAf,45BCAeA,gBAAf,6JCAeA,gBAAf,+7BCAeA,gBAAf,kgBCAeA,gBAAf,6JCAeA,gBAAf,qiBCAeA,gBAAf,oxBCAeA,gBAAf,qJCAeA,gBAAf,uzBCAeA,gBAAf,6/CCAeA,gBAAf,iJCAeA,gBAAf,0hDCAeA,gBAAf,o4CCAeA,gBAAf,2JCAeA,gBAAf,w3CCAeA,gBAAf,s3BCAeA,gBAAf,2JCAeA,gBAAf,y5BCAeA,gBAAf,o4BCAeA,gBAAf,yKCAeA,gBAAf,u6BCAeA,gBAAf,krBCAeA,gBAAf,2JCAeA,gBAAf,qqBCAeA,gBAAf,8yBCAeA,gBAAf,+uCCAeA,gBAAf,kmBCAeA,gBAAf,qJCAeA,gBAAf,o9BCAeA,gBAAf,wHCAeA,gBAAf,sJCAeA,ICAAA,aAAf,4HDAeA,aAAf,8iBEAeA,gBAAf,+JCAeA,ICAAA,aAAf,4wCCAeA,aAAf,mzCCAeA,aAAf,2KHAeA,aAAf,waIAeA,gBAAf,0cCAeA,gBAAf,6JCAeA,gBAAf,syBCAeA,gBAAf,y0BCAeA,gBAAf,6JCAeA,gBAAf,oRCAeA,gBAAf,+LCDaC,GAAe,SAACC,EAAcC,GACzC,QAAKD,IAGS,OAAVC,GACFzB,aAAa0B,WAAWF,IACjB,IAETxB,aAAa2B,QAAQH,EAAMrB,KAAKyB,UAAUH,KACnC,KAGII,GAAe,SAACL,EAAcM,GACzC,IAAKN,EACH,OAAO,KAET,IAAMC,EAAQzB,aAAaC,QAAQuB,GACnC,OAAIC,EACKtB,KAAKC,MAAMqB,GAEdK,IAEsB,IADAP,GAAaC,EAAMM,GAElCA,EAIN,MC5BIC,GAAY,CACvBC,KAAM,KACNC,QAAS,IACTC,KAAM,KACN7B,MAAO,KACP8B,SAAU,CACRC,SAAU,GACVC,MAAO,IACPC,IAAK,MAEPC,QAAS,KACTC,OAAQ,KACRC,SAAU,sBCTCC,GAAe,SAACC,EAAmBC,GAC9C,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,6BAAKF,GAAZ,IAAmBX,KAAMY,EAAOE,UAClC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBR,SAAUS,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBV,QAASW,EAAOE,UACrC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBJ,QAASK,EAAOE,UACrC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmBH,OAAQI,EAAOE,UACpC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBF,SAAUG,EAAOE,UACtC,IAAK,QACH,OAAO,6BACFH,GADL,IAEET,KAAMU,EAAOE,QAAQZ,KACrB7B,MAAOuC,EAAOE,QAAQzC,QAE1B,IAAK,SACH,OAAO,6BAAKsC,GAAZ,IAAmBT,KAAM,KAAM7B,MAAO,OAExC,QACE,MAAM,IAAI0C,MAAM,uB,+JCxBTC,GAAU,CACrBC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,GAAI,KACJC,IAAK,MACLC,IAAK,OAGMC,GACL,OADKA,GAEN,MAFMA,GAGL,OAHKA,GAKH,SA8FGC,GAAe,SAACxB,GAC3B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAMwB,cAGFC,GAAgB,SAACzB,GAAe,IAAD,IAC1C,OAAW,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OAAsBxB,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAMuB,aAA5B,iBAAsB,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAA1C,aAAsB,EAA6BC,QAG/CC,GAAgB,SAAC5B,EAAW6B,GAAoB,IAAD,UAC1D,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,EAAcvB,EAAK0B,eAFnB,iBAEA,EAA6BG,UAF7B,aAEA,EAAsCF,QAa7BG,GAAW,SAAC9B,EAAW6B,GAAoB,IAAD,sBACrD,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAFpB,iBAEA,EAA8BG,UAF9B,aAEA,EAAuCF,SAFvC,OAGA3B,QAHA,IAGAA,GAHA,UAGAA,EAAMuB,aAHN,iBAGA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAHpB,iBAGA,EAA8BG,UAH9B,aAGA,EAAwCN,OAHxC,OAIAvB,QAJA,IAIAA,GAJA,UAIAA,EAAMuB,aAJN,iBAIA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAJpB,iBAIA,EAA8BG,UAJ9B,aAIA,EAAwCN,MAG/BQ,GAAiB,SAAC/B,EAAW6B,GAAoB,IAAD,sBAC3D,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAFpB,iBAEA,EAA8BG,UAF9B,aAEA,EAAuCF,SAFvC,OAGA3B,QAHA,IAGAA,GAHA,UAGAA,EAAMuB,aAHN,iBAGA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAHpB,iBAGA,EAA8BG,UAH9B,aAGA,EAAwCN,OAHxC,OAIAvB,QAJA,IAIAA,GAJA,UAIAA,EAAMuB,aAJN,iBAIA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAJpB,iBAIA,EAA8BG,UAJ9B,aAIA,EAAwCN,MAe/BS,GAAW,SAAChC,EAAW6B,GAAoB,IAAD,kCACrD,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAFpB,iBAEA,EAA8BG,UAF9B,aAEA,EAAuCF,SAFvC,OAGA3B,QAHA,IAGAA,GAHA,UAGAA,EAAMuB,aAHN,iBAGA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAHpB,iBAGA,EAA8BG,UAH9B,aAGA,EAAwCN,OAHxC,OAIAvB,QAJA,IAIAA,GAJA,UAIAA,EAAMuB,aAJN,iBAIA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAJpB,iBAIA,EAA8BG,UAJ9B,aAIA,EAAwCN,OAJxC,OAKAvB,QALA,IAKAA,GALA,UAKAA,EAAMuB,aALN,iBAKA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eALpB,iBAKA,EAA8BG,UAL9B,aAKA,EAAwCN,OALxC,OAMAvB,QANA,IAMAA,GANA,UAMAA,EAAMuB,aANN,iBAMA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eANpB,iBAMA,EAA8BG,UAN9B,aAMA,EAAwCN,MA8B/BU,GACC,aADDA,GAEE,cAFFA,GAGD,WAHCA,GAID,WAGCC,GAAY,SAACC,EAAcnC,GACtC,OAAQmC,GACN,KAAKF,GACH,OAAOT,GAAaxB,GACtB,KAAKiC,GACH,OAAOR,GAAczB,GACvB,KAAKiC,GACH,OAAOL,GAAc5B,EAAMc,GAAQC,KACrC,KAAKkB,GACH,OAAOL,GAAc5B,EAAMc,GAAQE,KAErC,QACE,OAAO,kBAAM,QC/NNoB,GAAW,CACtB,CACEC,GAAI,EACJ/C,KAAM,OACNhB,IAAK,IACLgE,QAAS,mDACTC,QAAS,OACTC,KAAM,OACNC,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,6CACTC,QAAS,WACTC,KAAM,WACNC,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,EACJ/C,KAAM,eACNhB,IAAK,eACLgE,QAAS,mDACTC,QAAS,eACTC,KAAM,QACNC,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,IACJ/C,KAAM,QACNhB,IAAK,QACLgE,QAAS,uCACTC,QAAS,aACTC,KAAM,OACNC,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,IACJ/C,KAAM,YACNhB,IAAK,YACLgE,QAAS,6CACTC,QAAS,YACTC,KAAM,WACNC,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,IACJ/C,KAAM,kBACNhB,IAAK,kBACLgE,QAAS,mDACTC,QAAS,YACTC,KAAM,QACNC,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,IACJ/C,KAAM,oBACNhB,IAAK,oBACLgE,QAAS,6CACTC,QAAS,cACTC,KAAM,SACNC,IAAK,KACLC,IAAK,MAGP,CACEL,GAAI,EACJ/C,KAAM,UACNhB,IAAK,UACLgE,QAAS,6CACTC,QAAS,UACTC,KAAM,QACNC,IAAK,MACLC,IAAK,KACLC,QAAS,CACP,CACEN,GAAI,GACJ/C,KAAM,QACNhB,IAAK,QACLgE,QAAS,kFACTC,QAAS,QACTE,IAAK,MACLC,IAAK,MAYP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,wFACTC,QAAS,WACTC,KAAM,UACNC,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,kFACTC,QAAS,WACTC,KAAM,WACNC,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,aACNhB,IAAK,aACLgE,QAAS,2GACTC,QAAS,qBACTC,KAAM,UACNC,IAAK,KACLC,IAAK,QAKX,CACEL,GAAI,EACJ/C,KAAM,OACNhB,IAAK,OACLgE,QAAS,mDACTC,QAAS,YACTC,KAAM,MACNC,IAAK,KACLC,IAAK,KACLC,QAAS,CACP,CACEN,GAAI,GACJ/C,KAAM,cACNhB,IAAK,cACLgE,QAAS,6CACTC,QAAS,cACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,YACNhB,IAAK,YACLgE,QAAS,mDACTC,QAAS,YACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,YACNhB,IAAK,YACLgE,QAAS,6CACTC,QAAS,YACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,6CACTC,QAAS,WACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAkCP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,mDACTC,QAAS,WACTC,KAAM,UACNI,OAAQ,EACRT,KAAMF,GACNQ,IAAK,KACLC,IAAK,QAIX,CACEL,GAAI,EACJ/C,KAAM,UACNhB,IAAK,UACLgE,QAAS,mDACTC,QAAS,UACTC,KAAM,SACNC,IAAK,KACLC,IAAK,KACLC,QAAS,CACP,CACEN,GAAI,GACJ/C,KAAM,eACNhB,IAAK,eACLgE,QAAS,4EACTC,QAAS,qBACTK,OAAQ,EACRH,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,GACJ/C,KAAM,aACNhB,IAAK,aACLgE,QAAS,kFACTC,QAAS,kBACTE,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,KACJ/C,KAAM,aACNhB,IAAK,aACLgE,QAAS,4EACTC,QAAS,mBACTE,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,KACJ/C,KAAM,kBACNhB,IAAK,kBACLgE,QAAS,4EACTC,QAAS,kBACTE,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,GACJ/C,KAAM,cACNhB,IAAK,cACLgE,QAAS,wFACTC,QAAS,eACTJ,KAAMF,GACNW,OAAQ,EACRH,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,iBACNhB,IAAK,iBACLgE,QAAS,4EACTC,QAAS,kBACTJ,KAAMF,GACNW,OAAQ,EACRH,IAAK,MACLC,IAAK,MAGP,CACEL,GAAI,GACJ/C,KAAM,iBACNhB,IAAK,iBACLgE,QAAS,kFACTC,QAAS,kBACTK,OAAQ,EACRH,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,gBACNhB,IAAK,gBACLgE,QAAS,kFACTC,QAAS,iBACTJ,KAAMF,GACNW,OAAQ,EACRH,IAAK,KACLC,IAAK,QAIX,CACEL,GAAI,EACJ/C,KAAM,QACNhB,IAAK,QACLgE,QAAS,+DACTC,QAAS,QACTJ,KAAMF,GACNO,KAAM,OACNC,IAAK,KACLC,IAAK,MAGP,CACEL,GAAI,GACJ/C,KAAM,UACNhB,IAAK,UACLgE,QAAS,yDACTC,QAAS,UACTC,KAAM,UACNC,IAAK,KACLC,IAAK,OAylBIG,GAAe,CAC1B9B,IAAK,CACHzB,KAAM,WACNwD,OAAQ,6EAEV9B,IAAK,CACH1B,KAAM,QACNwD,OAAQ,6EAEV7B,IAAK,CACH3B,KAAM,WACNwD,OAAQ,mFAEV5B,IAAK,CACH5B,KAAM,WACNwD,OAAQ,6EAEV3B,IAAK,CACH7B,KAAM,YACNwD,OAAQ,uEAEV1B,GAAI,CACF9B,KAAM,kBACNwD,OAAQ,kHAEVzB,IAAK,CACH/B,KAAM,oBACNwD,OAAQ,sGAEVxB,IAAK,CACHhC,KAAM,qBACNwD,OAAQ,mHC13BCC,GAAS,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCnIWC,GAAc,IAMdC,GAAqB,CAChCC,UAAW,EACXC,iBAAkB,KAClBC,cAAc,G,kBCNVC,GACJ,0GAEIC,GAAcC,OAAaC,MAAM,CACrClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,aAEVG,GAAgB,CAAEC,SAAUC,aAAYR,KAE/CS,GAAcR,OAAaC,MAAM,CACrCQ,SAAUT,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7CM,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAElCO,GAAgB,CAAEL,SAAUC,aAAYC,KAE/CI,GAAYZ,OAAaC,MAAM,CACnClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,aAEVW,GAAc,CAAEP,SAAUC,aAAYK,KAE7CE,GAAed,OAAaC,MAAM,CACtClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WACrBa,MAAOf,OAAaE,aAETc,GAAiB,CAAEV,SAAUC,aAAYO,KAEhDG,GAAajB,OAAaC,MAAM,CACpClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WACrBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,WACHkB,MAAOpB,OAAaoB,UAETC,GAAe,CAAEf,SAAUC,aAAYU,KAC9CK,GAAYtB,OAAaC,MAAM,CACnClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WACrBqB,MAAOvB,OAAaG,IAAI,GAAGD,aAEhBsB,GAAc,CAAElB,SAAUC,aAAYe,KAE7CG,GAAazB,OAAaC,MAAM,CACpClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WACrBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,WACHa,MAAOf,OAAaE,aAETwB,GAAe,CAAEpB,SAAUC,aAAYkB,KAE9CE,GAAgB3B,OAAaC,MAAM,CACvCsB,MAAOvB,OAAaG,IAAI,GAAGD,WAC3B0B,IAAK5B,OAAaG,IAAI,GAAGD,aAEd2B,GAAkB,CAAEvB,SAAUC,aAAYoB,K,SC5D1CG,GAAiB,CAE5BC,aAAc,GACdC,eAAgB,GAChBC,cAAe,GACfC,YAAa,GACbC,gBAAiB,GACjBC,iBAAkB,GAElBC,gBAAiB,GACjBC,cAAe,GACfC,iBAAkB,GAClBC,eAAgB,GAChBC,gBAAiB,GACjBC,iBAAkB,GAElBC,gBAAiB,GACjBC,iBAAkB,GAElBC,SAAU,GAIVC,QAAS,GACTC,UAAW,GACXC,aAAc,GAEdC,MAAO,GACPC,KAAM,GACNC,QAAS,GAGTC,KAAM,IAGKC,GAAe,CAC1BC,GAAI,CACFvH,KAAM,UACNwD,OAAQ,uCACRgE,IAAK,gBAEPC,GAAI,CACFzH,KAAM,YACNwD,OAAQ,wCACRgE,IAAK,kBAEPE,GAAI,CACF1H,KAAM,iBACNwD,OAAQ,oDACRgE,IAAK,iBAEPG,GAAI,CACF3H,KAAM,eACNwD,OAAQ,sEACRgE,IAAK,eAEPI,GAAI,CACF5H,KAAM,UACNwD,OAAQ,wCACRgE,IAAK,mBAEPK,GAAI,CACF7H,KAAM,iBACNwD,OAAQ,0DACRgE,IAAK,oBAEPM,GAAI,CACF9H,KAAM,mBACNwD,OAAQ,gEACRgE,IAAK,mBAEPO,GAAI,CACF/H,KAAM,iBACNwD,OAAQ,8CACRgE,IAAK,iBAEPQ,GAAI,CACFhI,KAAM,oBACNwD,OAAQ,0DACRgE,IAAK,oBAEPS,GAAI,CACFjI,KAAM,kBACNwD,OAAQ,4EACRgE,IAAK,kBAEPU,GAAI,CACFlI,KAAM,UACNwD,OAAQ,wCACRgE,IAAK,mBAEPW,GAAI,CACFnI,KAAM,oBACNwD,OAAQ,gEACRgE,IAAK,oBAEPY,GAAI,CACFpI,KAAM,WACNwD,OAAQ,oDACRgE,IAAK,mBAEPa,GAAI,CACFrI,KAAM,YACNwD,OAAQ,oDACRgE,IAAK,oBAEPc,GAAI,CACFtI,KAAM,WACNwD,OAAQ,uCACRgE,IAAK,YAEPe,GAAI,CACFvI,KAAM,UACNwD,OAAQ,iCACRgE,IAAK,WAEPgB,GAAI,CACFxI,KAAM,iBACNwD,OAAQ,gDACRgE,IAAK,aAEPiB,GAAI,CACFzI,KAAM,oBACNwD,OAAQ,4DACRgE,IAAK,gBAEPkB,GAAI,CACF1I,KAAM,cACNwD,OAAQ,2BACRgE,IAAK,SAEPmB,GAAI,CACF3I,KAAM,iBACNwD,OAAQ,oDACRgE,IAAK,SAsDIoB,GAAgB,CAC3BC,EAAG,YACHC,EAAG,YACHC,EAAG,UACHC,EAAG,WACHzB,GAAI,aAEO0B,GAAgB,CAC3BJ,EAAG,uEACHC,EAAG,oDACHC,EAAG,oDACHC,EAAG,oDACHzB,GAAI,qDAEO2B,GAAc,CACzB,CAAEnG,GAAI,EAAG/C,KAAM,YAAawD,OAAQ,uEAAiBwB,MAAO,WAC5D,CAAEjC,GAAI,EAAG/C,KAAM,YAAawD,OAAQ,oDAAawB,MAAO,WACxD,CAAEjC,GAAI,EAAG/C,KAAM,UAAWwD,OAAQ,oDAAawB,MAAO,WACtD,CAAEjC,GAAI,EAAG/C,KAAM,WAAYwD,OAAQ,oDAAawB,MAAO,WACvD,CAAEjC,GAAI,GAAI/C,KAAM,YAAawD,OAAQ,oDAAawB,MAAO,YAyD9CmE,GAAc,CACzBN,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHzB,GAAI,WAGO6B,GAAW,CACtBC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,GAEMC,GAAc,CACzBC,EAAG,MACHC,EAAG,MACHjB,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHe,EAAG,OAGQC,GAAc,CACzBX,IAAK,CACHtG,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,iCACRyG,MAAO,OAETX,IAAK,CACHvG,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,iCACRyG,MAAO,OAETV,IAAK,CACHxG,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,6CACRyG,MAAO,OAETT,IAAK,CACHzG,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,mDACRyG,MAAO,OAETR,IAAK,CACH1G,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,mDACRyG,MAAO,OAETP,IAAK,CACH3G,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,uCACRyG,MAAO,OAETN,IAAK,CACH5G,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACRyG,MAAO,QAIEC,GAAW,CACtB,CACEnH,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,iCACRyG,MAAO,OAET,CACElH,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,iCACRyG,MAAO,OAET,CACElH,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,6CACRyG,MAAO,OAET,CACElH,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,mDACRyG,MAAO,OAET,CACElH,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,mDACRyG,MAAO,OAET,CACElH,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,uCACRyG,MAAO,OAET,CACElH,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACRyG,MAAO,QCzXEE,GAAkBC,yBAAmC,IAEnDD,MCFFE,GAAe,CAC1BC,iBAAkB,SAClBC,gBAAiB,QACjBC,YAAa,IAAIC,KACjBC,YAAa,KACbC,UAAW,KACXC,OAAQ,KACRC,KAAM,KACNC,KAAM,CAAC,CAAEC,WAAY,YAAavP,UAAW,UAGlCwP,GAAkB,SAAC7J,EAAsBC,GACpD,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAO,6BAAKF,GAAZ,IAAmBmJ,iBAAkBlJ,EAAOE,UAC9C,IAAK,qBACH,OAAO,6BAAKH,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmByJ,OAAQxJ,EAAOE,UACpC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB0J,KAAMzJ,EAAOE,UAClC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAElC,QACE,MAAM,IAAIC,MAAM,uBC7BP0J,GAFcb,yBAAwC,ICAxDc,GAAoB,CAC/BX,gBAAiB,MACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,YAAavP,UAAW,UAGlC4P,GAAgB,SAACjK,EAA2BC,GACvD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBChBP8J,GAFejB,yBAAwC,ICAzDkB,GAAqB,CAChCf,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,OACTC,OAAO,EACPC,UAAW,WACXhB,KAAM,CAAC,CAAEC,WAAY,OAAQvP,UAAW,UAG7BuQ,GAAiB,SAAC5K,EAA2BC,GACxD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwK,UAAWvK,EAAOE,UACvC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBC9CPyK,GAFe5B,yBAAwC,ICAzD6B,GAAqB,CAChC1B,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVE,QAAS,OACTC,OAAO,EACPC,UAAW,WACXhB,KAAM,CAAC,CAAEC,WAAY,OAAQvP,UAAW,UAG7B0Q,GAAiB,SAAC/K,EAA2BC,GACxD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCzCP4K,GAJsB/B,yBACnC,ICDWgC,GAA4B,CACvC7B,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVE,QAAS,OACTC,OAAO,EACPC,UAAW,WACXhB,KAAM,CAAC,CAAEC,WAAY,OAAQvP,UAAW,UAG7B6Q,GAAwB,SACnClL,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwK,UAAWvK,EAAOE,UACvC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBC9CP+K,GAJsBlC,yBACnC,ICDWmC,GAA4B,CACvChC,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVE,QAAS,OACTC,OAAO,EACPC,UAAW,WACXhB,KAAM,CAAC,CAAEC,WAAY,OAAQvP,UAAW,UAG7BgR,GAAwB,SACnCrL,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBC9CPkL,GAFgBrC,yBAAwC,ICA1DsC,GAAsB,CACjCnC,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,OAAQvP,UAAW,UAG7BmR,GAAkB,SAACxL,EAA2BC,GACzD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBChBPqL,GAFcxC,yBAAmC,ICEjDyC,GAFazC,yBAAwC,ICAvD0C,GAAmB,CAC9BvC,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,OAAQvP,UAAW,UAG7BuR,GAAe,SAAC5L,EAA2BC,GACtD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCdPyL,ICFA,IAAIvC,KACR,IAAIA,KDHmBL,yBAChC,KEDW6C,GAAyB,CACpC1C,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVE,UAAW,GACXC,QAAS,OACTC,OAAO,EACPC,UAAW,OACXhB,KAAM,CAAC,CAAEC,WAAY,SAAUvP,UAAW,SAC1C0R,SAAU,MAGCC,GAAqB,SAAChM,EAA2BC,GAC5D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwK,UAAWvK,EAAOE,UACvC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmB+L,SAAU9L,EAAOE,UACtC,QACE,MAAM,IAAIC,MAAM,uBC5CP6L,GAJsBhD,yBAEnC,ICFWiD,GAA4B,CACvC9C,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACX2C,UAAW,GACX7B,SAAU,GACV8B,WAAY,GACZ3B,QAAS,OACTC,OAAO,EACPC,UAAW,OACXhB,KAAM,CAAC,CAAEC,WAAY,SAAUvP,UAAW,UAG/BgS,GAAwB,SACnCrM,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,gBACH,OAAO,6BAAKH,GAAZ,IAAmBmM,UAAWlM,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,gBACH,OAAO,6BAAKH,GAAZ,IAAmBoM,WAAYnM,EAAOE,UACxC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uB,QCyEPkM,GArGD,SAACzT,GACb,IAAM0T,EAAUpR,KADiB,EAGPqR,oBAAS,MAHF,oBAG1BC,EAH0B,KAGnBC,EAHmB,OAKeC,aAAQ7J,EAAIW,eAApDmJ,EALyB,EAKzBA,SAAUC,EALe,EAKfA,aAAcC,EALC,EAKDA,OALC,EASdC,sBAAWtB,IAF5BuB,EAP+B,EAO/BA,SACaC,EARkB,EAQ/BC,UAAaD,MARkB,EAUfE,aAAYC,IAAvBC,EAV0B,qBAY3BC,EAAQ,yCAAG,WAAOC,GAAP,wCAAAC,EAAA,6DACPjK,EAAuBgK,EAAvBhK,SAAUC,EAAa+J,EAAb/J,SADH,SAEQ6J,EAAQ,CAAEI,UAAW,CAAElK,WAAUC,cAFzC,WAGmB,KAAtB,QADNkK,EAFS,cAGH,IAARA,GAAA,UAAAA,EAAUhE,YAAV,mBAAgB0D,aAAhB,eAAuBO,IAHZ,0BAI+BD,EAAShE,KAAK0D,MAAlD1D,EAJK,EAILA,KAAMkE,EAJD,EAICA,YAAaC,EAJd,EAIcA,aACrBtO,EALO,6BAMRmK,GANQ,IAOX5I,MAAOtD,KAAKC,MAAMiM,EAAK5I,SAPZ,SASPzC,GAAOyP,aATA,OAUPpQ,EAAQF,KAAKyB,UAAU,CAAE2O,cAAaC,iBAC5Cb,EAAS,CAAE9M,KAAM,QAASC,QAAS,CAAEZ,OAAM7B,WAC3CqQ,OAAOC,SAASC,SAChBvB,EAAS,MAbI,yBAc0B,KAAtB,OAARgB,QAAQ,IAARA,GAAA,UAAAA,EAAUhE,YAAV,mBAAgB0D,aAAhB,eAAuBO,KAChCjB,EAASgB,EAAShE,KAAK0D,MAAMX,OAfhB,4CAAH,sDAmBRyB,EAAW,SAACC,GACE,KAAdA,EAAEC,SACJvB,EAAaS,EAAbT,IAIJ,OACE,qCACE,gBAACwB,GAAA,EAAD,CAAWC,UAAU,OAAO3R,SAAS,KAArC,UACE,eAAC4R,GAAA,EAAD,IACA,uBAAKC,UAAWjC,EAAQjR,MAAxB,UACE,eAACmT,GAAA,EAAD,CAAQD,UAAWjC,EAAQ3Q,OAA3B,SACE,eAAC,KAAD,MAEF,eAAC8S,GAAA,EAAD,CAAYJ,UAAU,KAAKxU,QAAQ,KAAnC,SACGmT,EAAQ,sEAAiB,YAG5B,wBAAMuB,UAAWjC,EAAQzQ,KAAM6S,YAAU,EAAzC,UACE,eAACC,GAAA,EAAD,CACEC,WAAS,EACTC,MAAO7B,EAAQ,sEAAiB,WAChCpO,KAAK,WACL/E,QAAQ,WACRiV,SAAUnC,EACVH,QAAOK,EAAOvJ,SACdyL,UAAWd,EACXlL,UAAQ,EACRiM,WAAS,IAEX,eAACL,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAO7B,EAAQ,gEAAgB,WAC/B/M,KAAK,WACLpG,QAAQ,WACRiV,SAAUnC,EACVH,QAAOK,EAAOtJ,SACdwL,UAAWd,EACXgB,WAAYzC,QAAgB0C,EAC5BnM,UAAQ,EACRiM,WAAS,IAGX,eAACG,GAAA,EAAD,CACElP,KAAK,SACL+O,WAAS,EACTnV,QAAQ,YACR+J,MAAM,UACN2K,UAAWjC,EAAQvQ,OACnBqT,MAAO,CAAE3S,OAAQ,IACjB4S,QAASzC,EAAaS,GAPxB,SASGL,EAAQ,sEAAiB,gBAIhC,eAACsC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,gBAACd,GAAA,EAAD,CAAY5U,QAAQ,QAAQ+J,MAAM,gBAAgB4L,MAAM,SAAxD,UACG,kBACD,eAACC,GAAA,EAAD,CAAM7L,MAAM,UAAU8L,KAAK,yBAA3B,wBAEQ,KACP,IAAIrG,MAAOsG,cACX,e,qnBC5FE,SAASC,GAAT,GAA6C,IAA3B9N,EAA0B,EAA1BA,KAAM8B,EAAoB,EAApBA,MAAO9K,EAAa,EAAbA,KACtCsW,EAAQ,CAAExL,QAAOrJ,SAAUzB,QAAcoW,GAC/C,OAAQpN,GACN,IAAK,OACH,OAAO,eAAC,KAAD,CAAsBsN,MAAOA,IACtC,IAAK,WACH,OAAO,eAAC,KAAD,CAAmBA,MAAOA,IACnC,IAAK,QACH,OAAO,eAAC,KAAD,CAAyBA,MAAOA,IACzC,IAAK,WACH,OAAO,eAAC,KAAD,CAAkBA,MAAOA,IAClC,IAAK,WACH,OAAO,eAAC,KAAD,CAAaA,MAAOA,IAC7B,IAAK,YACH,OAAO,eAAC,KAAD,CAAwBA,MAAOA,IACxC,IAAK,UACH,OAAO,eAAC,KAAD,CAAaA,MAAOA,IAC7B,IAAK,MACH,OAAO,eAAC,KAAD,CAAQA,MAAOA,IACxB,IAAK,OACH,OAAO,eAAC,KAAD,CAAYA,MAAOA,IAC5B,IAAK,WACH,OAAO,eAAC,KAAD,CAAUA,MAAOA,IAC1B,IAAK,QACH,OAAO,eAAC,KAAD,CAAWA,MAAOA,IAC3B,IAAK,UACH,OAAO,eAAC,KAAD,CAAcA,MAAOA,IAC9B,IAAK,OACH,OAAO,eAAC,KAAD,CAAyBA,MAAOA,IACzC,IAAK,OACH,OAAO,eAAC,KAAD,CAAqBA,MAAOA,IACrC,IAAK,OACH,OACE,eAAC,KAAD,CAA4BA,MAAOA,IAEvC,IAAK,SACH,OAAO,eAAC,KAAD,CAAWA,MAAOA,IAC3B,IAAK,UACH,OACE,eAAC,KAAD,CAA2BA,MAAOA,IAEtC,IAAK,WACH,OACE,eAAC,KAAD,CAA2BA,MAAOA,IAEtC,IAAK,QACH,OAAO,eAAC,KAAD,CAAmBA,MAAOA,IACnC,IAAK,SACH,OAAO,eAAC,KAAD,CAAgBA,MAAOA,IAChC,IAAK,UACH,OAAO,eAAC,KAAD,CAAoBA,MAAOA,IACpC,IAAK,SACH,OAAO,eAAC,KAAD,CAAeA,MAAOA,IAC/B,IAAK,OACH,OAAO,eAAC,KAAD,CAAUA,MAAOA,IAE1B,QACE,OAAO,0BCvEN,IAAMS,GAAa,SAAC/N,EAAW1G,EAAY0U,GAChD,IAAMlM,EAAQkM,EACVC,aAAK3U,EAAMR,QAAQG,UAAUD,KAAM,IACnCiV,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,IAC3C,OACE,eAAC+U,GAAA,EAAD,UACE,eAACJ,GAAD,CAAQ9N,KAAMA,EAAM8B,MAAOA,EAAO9K,KAAM,Q,oDCmD/BmX,GA1DE,SAAC,GAWN,IAVVC,EAUS,EAVTA,KACA5D,EASS,EATTA,QACAU,EAQS,EARTA,MACA5R,EAOS,EAPTA,MACA+U,EAMS,EANTA,QACAC,EAKS,EALTA,YACAC,EAIS,EAJTA,SAEA/Q,GAES,EAHTgR,EAGS,EAFThR,MACAiR,EACS,EADTA,cACS,EACeC,KAAMjE,UAAS,GAD9B,oBACFkE,EADE,KACIC,EADJ,KAMT,OACE,iCACE,gBAACC,GAAA,EAAD,CACEhP,GAAIuO,EAAKvO,GACTiP,IAAK5D,EAAQ,WAAQkC,EACrBX,UAAWjC,EAAQuE,MACnBxB,QAVc,WAClBqB,GAASD,IAULrB,MAAO,CAAE0B,OAAQ,WALnB,UAOGjB,GAAWK,EAAKpO,KAAM1G,GAAO,GAC9B,eAAC2V,GAAA,EAAD,CACElW,QAASmS,EAAQkD,EAAKtO,QAAUsO,EAAKrO,QACrC0M,UAAWvB,EAAQV,EAAQ0E,OAAS1E,EAAQ2E,OAC5C7B,MAAO,CAAEpV,YAAa,GAAIkX,WAAY,KAEvCT,EACC,eAAC,KAAD,CAAYrB,MAAO,CAAExL,MAAO,OAAQrJ,SAAU,MAE9C,eAAC,KAAD,CAAY6U,MAAO,CAAExL,MAAO,OAAQrJ,SAAU,SAGlD,eAAC4W,GAAA,EAAD,CAAUC,GAAIX,EAAMY,QAAQ,OAAOC,eAAa,EAAhD,SACE,eAACC,GAAA,EAAD,CAAMC,gBAAc,EAApB,SACGrB,EAAQsB,KAAI,SAACC,GAAD,OD5BI,SAAC,GAShB,IARV1E,EAQS,EARTA,MACAV,EAOS,EAPTA,QACA8D,EAMS,EANTA,YACAC,EAKS,EALTA,SACAH,EAIS,EAJTA,KACA9U,EAGS,EAHTA,MACAkE,EAES,EAFTA,KACAiR,EACS,EADTA,cAEMT,EAAaI,EAAKtR,OAASyR,EAASzR,KAE1C,OADasR,EAAKzO,MAAOD,GAAU0O,EAAKzO,KAAMnC,GAM5C,eAAC,KAAD,CACE8P,MAAO,CACLuC,eAAgB,OAChB/N,MAAOkM,EACH,OACAC,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,KAE7C2W,GAAE,UAAK1B,EAAKtS,KACZyR,QAAS,WACPe,EAAYF,GACRK,GACFA,GAAc,IAXpB,SAgBE,eAACI,GAAA,EAAD,CACEkB,QAAM,EACNtD,UAAWjC,EAAQwF,OACnB1C,MAAO,CACLxT,gBAAiBkU,EAAa1U,EAAMR,QAAQC,QAAQkX,UAAO7C,GAJ/D,SAOE,eAAC6B,GAAA,EAAD,CACElW,QAASmS,EAAQkD,EAAKtO,QAAUsO,EAAKrO,QACrCuN,MAAO,CACLxL,MAAOkM,EAAa1U,EAAMR,QAAQG,UAAUD,UAAOoU,QAZpDgB,EAAKvO,IAlBL,wBAAUuO,EAAKvO,ICgBdqQ,CAAY,CACVhF,QACAkD,KAAMwB,EACNpF,UACA8D,cACAC,WACAjV,QACAkE,OACAiR,6BCyCC0B,GA3FF,SAAC,GAYF,IAXVjF,EAWS,EAXTA,MACAqD,EAUS,EAVTA,SACAD,EASS,EATTA,YACA9D,EAQS,EARTA,QACAlR,EAOS,EAPTA,MACAkE,EAMS,EANTA,KACA4S,EAKS,EALTA,KACA3B,EAIS,EAJTA,cACA4B,EAGS,EAHTA,OACA/T,EAES,EAFTA,OACAgU,EACS,EADTA,QAEA,OACE,eAACb,GAAA,EAAD,UACGW,EAAKT,KAAI,SAACvB,EAAWI,GACpB,IAAMH,EAAUD,EAAKjO,QACf6N,EAAaI,EAAKtR,OAASyR,EAASzR,KAE1C,OADasR,EAAKzO,MAAOD,GAAU0O,EAAKzO,KAAMnC,GAK5C,kCACI6Q,GACA,eAAC,KAAD,CACEf,MAAO,CACLuC,eAAgB,OAChB/N,MAAOkM,EAAa,OAAS,QAE/B8B,GAAE,UAAK1B,EAAKtS,KACZyR,QAAO,wBAAE,uBAAA9B,EAAA,yDACS,KAAZ2C,EAAKvO,GADF,uBAELwQ,IAFK,SAGC/T,EAAOyP,aAHR,OAILuE,EAAQC,KAAK,KAJR,sBAMLjC,EAAYF,GACRK,GACFA,GAAc,GARX,2CANX,SAmBE,gBAACI,GAAA,EAAD,CACEC,IAAK5D,EAAQ,WAAQkC,EACrBX,UAAWjC,EAAQuE,MACnBzB,MAAO,CACL0B,OAAQ,UACRlV,gBAAiBkU,EACb1U,EAAMR,QAAQC,QAAQkX,UACtB7C,GAPR,UAUGW,GAAWK,EAAKpO,KAAM1G,EAAO0U,GAE9B,eAACiB,GAAA,EAAD,CACElW,QAASmS,EAAQkD,EAAKtO,QAAUsO,EAAKrO,QACrC0M,UAAWvB,EAAQV,EAAQ0E,OAAS1E,EAAQ2E,OAC5C7B,MAAO,CACL8B,WAAY,EACZtN,MAAOkM,EACH1U,EAAMR,QAAQG,UAAUD,UACxBoU,UAMbiB,GACC,eAAC,GAAD,CACED,KAAMA,EACN5D,QAASA,EACTwD,WAAYA,EACZ9C,MAAOA,EACP5R,MAAOA,EACP+U,QAASA,EACTG,EAAGA,EACHF,YAAaA,EACbC,SAAUA,EACV/Q,KAAMA,EACNiR,cAAeA,MA1DXL,EAAKvO,IAHR,wBAAUuO,EAAKvO,U,wEC1BnB2Q,GAAc,SAAC1T,GAAkD,IAApC2T,EAAmC,uDAAvB,GAAIC,EAAmB,uDAAP,GACpE,IAAK5T,EAAM,MAAO,OAElB,IADA,IAAI6T,EAAO,EACFnC,EAAI,EAAGA,EAAI1R,EAAK8T,OAAQpC,IAC/BmC,EAAO7T,EAAK+T,WAAWrC,KAAOmC,GAAQ,GAAKA,GAG7C,IAAMG,EAAIH,EAAO,IACjB,MAAO,OAASG,EAAI,KAAOL,EAAI,MAAQC,EAAI,M,UCAhCK,GAEN,MAFMA,GAGN,MAHMA,GAIN,MAJMA,GAKN,MALMA,GAON,MAPMA,GAQN,MAGMC,GAAY,CACvB,CACEnR,GAAI,EACJ/C,KAAM,kBACNwD,OAAQ,qDAEV,CACET,GAAI,EACJ/C,KAAM,qBACNwD,OAAQ,6EAEV,CACET,GAAI,EACJ/C,KAAM,kBACNwD,OAAQ,wEAIC2Q,GAAc,SAAC,GAAmB,IAAjBpR,EAAgB,EAAhBA,GAAIqL,EAAY,EAAZA,MAC1BgG,EAAWF,GAAUG,QAAO,SAACC,GAAD,OAAaA,EAAGvR,KAAOA,KACzD,OAAIqR,GAAYA,EAASN,OAAS,EACzB1F,EAAQgG,EAAS,GAAG5Q,OAAS4Q,EAAS,GAAGpU,KAEzC,IC7CEuU,GACJ,EADIA,GAEH,EAEGC,GACJ,EADIA,GAEH,EAGGC,GACG,EADHA,GAEO,EAGPC,GACL,EADKA,GAEU,EAFVA,GAQgB,EARhBA,GAeD,GAECC,GAAe,CAC1B9L,EAAG,CAAEzE,IAAK,IAAMC,IAAK,MACrByE,EAAG,CAAE1E,IAAK,KAAMC,IAAK,MACrB0E,EAAG,CAAE3E,IAAK,KAAMC,IAAK,MACrB2E,EAAG,CAAE5E,IAAK,KAAMC,IAAK,MACrB0F,EAAG,CAAE3F,IAAK,KAAMC,IAAK,MACrBwF,EAAG,CAAEzF,IAAK,KAAMC,IAAK,MACrBuQ,EAAG,CAAExQ,IAAK,IAAMC,IAAK,MACrBwQ,EAAG,CAAEzQ,IAAK,KAAMC,IAAK,MACrByQ,EAAG,CAAE1Q,IAAK,KAAMC,IAAK,MACrBkD,GAAI,CAAEnD,IAAK,IAAMC,IAAK,MACtBoD,GAAI,CAAErD,IAAK,KAAMC,IAAK,MACtBqD,GAAI,CAAEtD,IAAK,KAAMC,IAAK,MACtBsD,GAAI,CAAEvD,IAAK,IAAMC,IAAK,MACtBuD,GAAI,CAAExD,IAAK,IAAMC,IAAK,MACtBwD,GAAI,CAAEzD,IAAK,IAAMC,IAAK,OAGX0Q,GAAkB,CAC7BC,KAAM,CACJC,WAAYP,GACZQ,OAAQ,OACRC,SAAU,6CACVC,QAASZ,GACTa,UAAWZ,IAEba,oBAAqB,CACnBL,WAAYP,GACZQ,OAAQ,sBACRC,SAAU,mDACVC,QAASZ,GACTa,UAAWZ,IAEbc,UAAW,CACTN,WAhDS,EAiDTC,OAAQ,YACRC,SAAU,6CACVC,QAASZ,GACTa,UAAWZ,IAEbe,qBAAsB,CACpBP,WAtDoB,EAuDpBC,OAAQ,uBACRC,SAAU,+FACVC,QAASZ,GACTa,UAAWZ,IAEbgB,aAAc,CACZR,WA5DY,EA6DZC,OAAQ,eACRC,SAAU,kFACVC,QAASZ,GACTa,UAAWZ,IAEbiB,yBAA0B,CACxBT,WAlEwB,EAmExBC,OAAQ,2BACRC,SAAU,kFACVC,QAASZ,GACTa,UAAWZ,IAEbkB,iBAAkB,CAChBV,WAxEgB,EAyEhBC,OAAQ,mBACRC,SAAU,mDACVC,QAASZ,GACTa,UAAWZ,IAEbmB,0BAA2B,CACzBX,WAAYP,GACZQ,OAAQ,4BACRC,SAAU,+FACVC,QAASZ,GACTa,UAAWZ,IAEboB,sBAAuB,CACrBZ,WApFqB,EAqFrBC,OAAQ,wBACRC,SAAU,yFACVC,QAASZ,GACTa,UAAWZ,IAEbqB,yBAA0B,CACxBb,WA1FwB,GA2FxBC,OAAQ,2BACRC,SAAU,oKACVC,QAASZ,GACTa,UAAWZ,IAEbsB,oBAAqB,CACnBd,WAhGmB,GAiGnBC,OAAQ,sBACRC,SAAU,sIACVC,QAASZ,GACTa,UAAWZ,IAEbuB,mBAAoB,CAClBf,WAtGkB,GAuGlBC,OAAQ,qBACRC,SAAU,mHACVC,QAASZ,GACTa,UAAWZ,IAEbwB,OAAQ,CACNhB,WA5GM,GA6GNC,OAAQ,SACRC,SAAU,yDACVC,QAASZ,GACTa,UAAWZ,IAEbyB,cAAe,CACbjB,WAlHa,GAmHbC,OAAQ,gBACRC,SAAU,kFACVC,QAASZ,GACTa,UAAWZ,IAEb0B,SAAU,CACRlB,WAAYP,GACZQ,OAAQ,WACRC,SAAU,mDACVC,QAASZ,GACTa,UAAWZ,KAIF2B,GAAsB,CAAC,gBAC7BrB,GAAgBC,MADY,gBAE5BD,GAAgBO,qBAFY,gBAG5BP,GAAgBQ,WAHY,gBAI5BR,GAAgBS,sBAJY,gBAK5BT,GAAgBU,cALY,gBAM5BV,GAAgBW,0BANY,gBAO5BX,GAAgBY,kBAPY,gBAQ5BZ,GAAgBa,2BARY,gBAS5Bb,GAAgBc,uBATY,gBAU5Bd,GAAgBe,0BAVY,gBAW5Bf,GAAgBgB,qBAXY,gBAY5BhB,GAAgBiB,oBAZY,gBAa5BjB,GAAgBkB,QAbY,gBAc5BlB,GAAgBmB,eAdY,gBAe5BnB,GAAgBoB,WAGVE,GAA2B,CAAC,gBAClCtB,GAAgBC,MADiB,gBAEjCD,GAAgBa,4BAEVU,GAA2B,CAAC,gBAClCvB,GAAgBO,qBADiB,gBAEjCP,GAAgBmB,eAFiB,gBAGjCnB,GAAgBkB,SAGVM,GAAyB,CAAC,gBAAKxB,GAAgBY,mBAC/Ca,GAAyB,CAAC,gBAAKzB,GAAgBoB,WAC/CM,GAAyB,CAAC,gBAAK1B,GAAgBQ,YAE/CmB,GAA6B,CAAC,gBACpC3B,GAAgBS,sBADmB,gBAEnCT,GAAgBU,cAFmB,gBAGnCV,GAAgBW,0BAHmB,gBAInCX,GAAgBc,uBAJmB,gBAKnCd,GAAgBe,0BALmB,gBAMnCf,GAAgBgB,qBANmB,gBAOnChB,GAAgBiB,qBAGVW,GACG,IADHA,GAEL,KAFKA,GAGL,KAHKA,GAIU,KAJVA,GAKA,KALAA,GAMO,IANPA,GAQG,IARHA,GASQ,KATRA,GAUO,KAVPA,GAWS,KAXTA,GAaO,KAbPA,GAcU,KAdVA,GAeI,IAfJA,GAgBQ,KAhBRA,GAiBK,KAjBLA,GAkBI,KAlBJA,GAmBU,KAnBVA,GAqBK,IArBLA,GAsBM,KAtBNA,GAuBI,KAvBJA,GAwBK,KAxBLA,GA0BW,KA1BXA,GA2BG,KA3BHA,GA4Be,KA5BfA,GA6BY,KA7BZA,GA8BQ,IA9BRA,GA+BM,KA/BNA,GAgCK,KAGLC,GAAW,CACtBC,KAAK,cACHC,KAAMH,GACN3W,KAAM,OACNwD,OAAQ,8CACLuR,GAAgBC,MAErB+B,KAAK,cACHD,KAAMH,GACN3W,KAAM,OACNwD,OAAQ,kCACLuR,GAAgBC,MAErBgC,KAAK,cACHF,KAAMH,GACN3W,KAAM,OACNwD,OAAQ,kCACLuR,GAAgBC,MAErBiC,oBAAoB,cAClBH,KAAMH,GACN3W,KAAM,sBACNwD,OAAQ,oDACLuR,GAAgBO,qBAErB4B,UAAU,cACRJ,KAAMH,GACN3W,KAAM,YACNwD,OAAQ,8CACLuR,GAAgBQ,WAErB4B,iBAAiB,cACfL,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,oDACLuR,GAAgBY,kBAErByB,aAAa,cACXN,KAAMH,GACN3W,KAAM,eACNwD,OAAQ,mFACLuR,GAAgBkB,QAErBoB,kBAAkB,cAChBP,KAAMH,GACN3W,KAAM,oBACNwD,OAAQ,6EACLuR,GAAgBkB,QAErBqB,iBAAiB,cACfR,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,qGACLuR,GAAgBkB,QAErBsB,mBAAmB,cACjBT,KAAMH,GACN3W,KAAM,qBACNwD,OAAQ,uEACLuR,GAAgBkB,QAErBuB,oBAAoB,cAClBV,KAAMH,GACN3W,KAAM,0BACNwD,OAAQ,4FACLuR,GAAgBa,2BAErB6B,iBAAiB,cACfX,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,+FACLuR,GAAgBa,2BAErB8B,cAAc,cACZZ,KAAMH,GACN3W,KAAM,gBACNwD,OAAQ,mFACLuR,GAAgBmB,eAErByB,kBAAkB,cAChBb,KAAMH,GACN3W,KAAM,WACNwD,OAAQ,0DACLuR,GAAgBmB,eAErB0B,eAAe,cACbd,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,uEACLuR,GAAgBmB,eAErB2B,cAAc,cACZf,KAAMH,GACN3W,KAAM,gBACNwD,OAAQ,+FACLuR,GAAgBmB,eAErB4B,oBAAoB,cAClBhB,KAAMH,GACN3W,KAAM,sBACNwD,OAAQ,sGACLuR,GAAgBmB,eAErB6B,eAAe,cACbjB,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,mFACLuR,GAAgBoB,UAErB6B,gBAAgB,cACdlB,KAAMH,GACN3W,KAAM,kBACNwD,OAAQ,mFACLuR,GAAgBoB,UAErB8B,cAAc,cACZnB,KAAMH,GACN3W,KAAM,gBACNwD,OAAQ,mFACLuR,GAAgBoB,UAErB+B,eAAe,cACbpB,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,iEACLuR,GAAgBoB,UAErBgC,qBAAqB,cACnBrB,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,uEACLuR,GAAgBS,sBAErB4C,aAAa,cACXtB,KAAMH,GACN3W,KAAM,yBACNwD,OAAQ,mFACLuR,GAAgBU,cAErB4C,yBAAyB,cACvBvB,KAAMH,GACN3W,KAAM,wCACNwD,OAAQ,6JACLuR,GAAgBW,0BAErB4C,sBAAsB,cACpBxB,KAAMH,GACN3W,KAAM,wBACNwD,OAAQ,0FACLuR,GAAgBc,uBAErB0C,kBAAkB,cAChBzB,KAAMH,GACN3W,KAAM,oBACNwD,OAAQ,+FACLuR,GAAgBe,0BAErB0C,gBAAgB,cACd1B,KAAMH,GACN3W,KAAM,kBACNwD,OAAQ,gGACLuR,GAAgBgB,qBAErB0C,eAAe,cACb3B,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,yFACLuR,GAAgBiB,qBC7XV0C,IDiYgB,gBACtB9B,GAASC,MADY,gBAErBD,GAASG,MAFY,gBAGrBH,GAASI,MAHY,gBAIrBJ,GAASK,qBAJY,gBAKrBL,GAASM,WALY,gBAMrBN,GAASO,kBANY,gBAOrBP,GAASQ,cAPY,gBAQrBR,GAASgB,gBARY,gBASrBhB,GAASiB,eATY,gBAUrBjB,GAASW,oBAVY,gBAWrBX,GAASa,kBAXY,gBAYrBb,GAASY,qBAZY,gBAarBZ,GAASc,eAbY,gBAcrBd,GAASe,mBAdY,gBAerBf,GAASS,mBAfY,gBAgBrBT,GAASU,kBAhBY,gBAiBrBV,GAASkB,qBAjBY,gBAkBrBlB,GAASmB,gBAlBY,gBAmBrBnB,GAASoB,iBAnBY,gBAoBrBpB,GAASqB,eApBY,gBAqBrBrB,GAASsB,gBArBY,gBAsBrBtB,GAASuB,sBAtBY,gBAuBrBvB,GAASwB,cAvBY,gBAwBrBxB,GAASyB,0BAxBY,gBAyBrBzB,GAAS0B,uBAzBY,gBA0BrB1B,GAAS2B,mBA1BY,gBA2BrB3B,GAAS4B,iBA3BY,gBA4BrB5B,GAAS6B,gBAIkB,gBAC3B7B,GAASC,MADiB,gBAE1BD,GAASG,MAFiB,gBAG1BH,GAASI,MAHiB,gBAI1BJ,GAASY,qBAIkB,gBAC3BZ,GAASK,qBADiB,gBAE1BL,GAASQ,cAFiB,gBAG1BR,GAASgB,gBAHiB,gBAI1BhB,GAASiB,eAJiB,gBAK1BjB,GAASW,oBAIgB,gBACzBX,GAASO,kBADe,gBAExBP,GAASc,eAFe,gBAGxBd,GAASe,mBAHe,gBAIxBf,GAASS,mBAJe,gBAKxBT,GAASU,kBALe,gBAMxBV,GAASkB,qBAIgB,gBACzBlB,GAASmB,gBADe,gBAExBnB,GAASoB,iBAFe,gBAGxBpB,GAASqB,eAHe,gBAIxBrB,GAASsB,gBAIgB,gBAAKtB,GAASM,WAGV,gBAC7BN,GAASa,kBADmB,gBAE5Bb,GAASuB,sBAFmB,gBAG5BvB,GAASwB,cAHmB,gBAI5BxB,GAASyB,0BAJmB,gBAK5BzB,GAAS0B,uBALmB,gBAM5B1B,GAAS2B,mBANmB,gBAO5B3B,GAAS4B,iBAPmB,gBAQ5B5B,GAAS6B,gBCtdEE,UAAUC,UAAUC,cAEFC,QAAQ,cAKhB,SAC1BC,EACAC,EACAC,GAEI,IADJ7K,IACG,yDACG8K,EAAYH,EAASlG,KAAI,SAACsG,GAC9B,MAAO,CACLC,KAAMhL,EAAQ+K,EAAI3V,OAAS2V,EAAInZ,KAC/B+C,GAAIoW,EAAIE,IAAMF,EAAIE,IAAMF,EAAIpW,GAC5BiC,MAAOmU,EAAInU,UAGTsU,EAAY,CAChB,CACEN,YACAC,QACAC,cAGJ,OAAOI,IAwBHC,GAAc,SAACjG,EAAW9R,GAC9B,QAAiB,OAAb8R,EAAKnQ,MAAgB3B,EAAQgY,SAASlG,EAAKnQ,OA2DpCsW,GAAgB,SAAC,GAA0C,IAAxCvS,EAAuC,EAAvCA,MAAOwS,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAavL,EAAY,EAAZA,MACzD,GAAKsL,EAEE,CAAC,IAAD,QACCE,EAAY1S,EAAM2S,UAAUC,WAC5BC,EAAc7S,EAAM2S,UAAUG,aAC9BC,EAAU/S,EAAMiE,QAAQ2O,WACxBI,EAAYhT,EAAMiE,QAAQ6O,aAC1BG,EAAQT,EAAMU,IACdC,EAAS1b,KAAKC,MAAMsI,EAAMoT,OAE1BrB,GADe,OAAL/R,QAAK,IAALA,OAAA,EAAAA,EAAO+R,SAAc,OAAL/R,QAAK,IAALA,GAAA,UAAAA,EAAO+R,aAAP,mBAAcsB,cAAd,eAAsBzG,QAAS,EAC1C,OACjB5M,QADiB,IACjBA,OADiB,EACjBA,EAAO+R,MACP7K,EAAK,UACLiM,EAAO,UADF,aACL,EAAW7W,OADN,UAEL6W,EAAO,UAFF,aAEL,EAAWra,KA+Bf,OA9Bama,EAAMtH,KAAI,SAAC2H,GACtB,IAAMC,EAAOD,EAAGzJ,cACV2J,EAAQF,EAAGG,WACXC,EAAMJ,EAAGK,UACThB,EAAY,IAAIpP,KAAKgQ,EAAMC,EAAOE,EAAKhB,EAAWG,GAClD5O,EAAU,IAAIV,KAAKgQ,EAAMC,EAAOE,EAAKX,EAASC,EAAW,EAAG,GAE5DY,EAAWnB,EAAY9G,KAAI,SAACkI,GAAa,IACrCC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,WAAYpV,EAAQkV,EAARlV,IACxBqV,EAAWC,GAAY,CAC3BtB,YACA1O,UACA6P,WACAC,aACApV,QAEF,OAAO,6BACFkV,GADL,IAEEG,gBAIJ,OAAO,6BACFhU,GADL,IAEE+R,QACAmC,QAASzc,KAAKyB,UAAU0a,GACxBjB,YACA1O,eAzCJ,MAAO,CAACjE,IAgDCiU,GAAc,SAAC,GAMhB,IALVtB,EAKS,EALTA,UACA1O,EAIS,EAJTA,QACA6P,EAGS,EAHTA,SACAC,EAES,EAFTA,WACApV,EACS,EADTA,IAKMwV,EACS,WAAbL,EACI,IACa,SAAbA,EACA,KACa,QAAbA,EACA,MACA,EACAM,EATwB,WAAfL,EASMI,EAASxV,GAAQwV,EAASxV,EACzC0V,EAAQ,IAAI9Q,KAXD,WAAfwQ,GAA0C,WAAfA,EAA0BpB,EAAY1O,GAWlCqQ,UAAYF,EAC7C,OAAO,IAAI7Q,KAAK8Q,I,sCC/LLE,GAAY,SAACrN,GAAD,MAAgB,CACvC,CACErL,GAAI,EACJ9C,MAAO,OACPD,KAAMoO,EAAQ,0DAAe,eAE/B,CACErL,GAAI,EACJ9C,MAAO,WACPD,KAAMoO,EAAQ,+FAAsB,qBAEtC,CACErL,GAAI,EACJ9C,MAAO,aACPD,KAAMoO,EAAQ,yFAAqB,uBAErC,CACErL,GAAI,EACJ9C,MAAO,UACPD,KAAMoO,EAAQ,+FAAsB,oBAEtC,CACErL,GAAI,EACJ9C,MAAO,WACPD,KAAMoO,EAAQ,+FAAsB,qBAEtC,CACErL,GAAI,EACJ9C,MAAO,WACPD,KAAMoO,EAAQ,qGAAuB,qBAEvC,CACErL,GAAI,EACJ9C,MAAO,SACPD,KAAMoO,EAAQ,+FAAsB,mBAEtC,CACErL,GAAI,EACJ9C,MAAO,SACPD,KAAMoO,EAAQ,+FAAsB,sBAEtC,CACErL,GAAI,EACJ9C,MAAO,SACPD,KAAMoO,EAAQ,qGAAuB,uBAI5BsN,GAAgB,CAC3B,CACE3Y,GAAI,EACJ9C,MAAO,OACPD,KAAM,MACNwD,OAAQ,4BAEV,CACET,GAAI,EACJ9C,MAAO8F,GAAemB,MACtBlH,KAAM,cACNwD,OAAQ,oDAEV,CACET,GAAI,EACJ9C,MAAO8F,GAAeC,aACtBhG,KAAM,UACNwD,OAAQ,oDAEV,CACET,GAAI,EACJ9C,MAAO8F,GAAeK,gBACtBpG,KAAM,UACNwD,OAAQ,8CAEV,CACET,GAAI,EACJ9C,MAAO8F,GAAee,SACtB9G,KAAM,WACNwD,OAAQ,+CAICmY,GAAe,CAC1B,CACE5Y,GAAI,EACJ9C,MAAO,EACPD,KAAM,YACNwD,OAAQ,kCAEV,CACET,GAAI,EACJ9C,MAAO,EACPD,KAAM,cACNwD,OAAQ,uB,UCzFG,SAASoM,GAAT,GAMN,IALP5P,EAKM,EALNA,KACA0E,EAIM,EAJNA,SAIM,IAHNxK,YAGM,MAHC,GAGD,MAFN0hB,UAEM,MAFD,OAEC,EADNC,EACM,EADNA,GAEMC,EAAQ9b,GAAc0E,EACtBM,EAAQ6W,IAAUC,EAAQpI,GAAY,GAAD,OAAIoI,EAAJ,WAAqB,IAC1DC,EAAQD,EAAQA,EAAME,MAAM,KAAO,GACrCC,EAAU,GAWd,OAROA,EAFHF,EAAMjI,OAAS,EACjBgI,EACY,UAAMC,EAAM,GACjBG,UAAU,EAAG,GACbC,eAFK,OAEWJ,EAAM,GAAGG,UAAU,EAAG,GAAGC,eACjC,GAEfL,EAAmBA,EAAMI,UAAU,EAAG,GAAGC,cAA4B,GAIrE,eAACC,GAAA,EAAD,CAASnD,MAAO6C,GAAgB,GAAhC,SACE,eAACpL,GAAA,EAAD,CACE2L,OAAQ,EACRzf,QAAQ,OACRE,WAAW,SACXwf,eAAe,SACf9L,MAAO,CACLtT,MAAOhD,EACP2D,OAAQ3D,EACRqiB,aAAcriB,EAAO,EACrB8C,gBAAiBgI,EACjBwX,YAAaZ,GAVjB,SAaE,eAAC/L,GAAA,EAAD,CACEW,MAAO,CACLxL,MAAO,OACPtJ,WAAY,aACZC,SAAUzB,EAAO,EAAIA,EAAO,GAJhC,SAOG+hB,QC3CI,SAASQ,GAAT,GAMN,IALPzc,EAKM,EALNA,KACA0E,EAIM,EAJNA,SAIM,IAHNxK,YAGM,MAHC,GAGD,MAFN0hB,UAEM,MAFD,OAEC,EADNC,EACM,EADNA,GAEMC,EAAQ9b,GAAc0E,EACtBM,EAAQ6W,IAAUC,EAAQpI,GAAYoI,GAAS,IAErD,OACE,eAACM,GAAA,EAAD,CAASnD,MAAO6C,GAAgB,GAAhC,SACE,eAACpL,GAAA,EAAD,CACE2L,OAAQ,EACRzf,QAAQ,OACRE,WAAW,SACXwf,eAAe,SACf9L,MAAO,CACLtT,MAAOhD,EACP2D,OAAQ3D,EACRqiB,aAAcriB,EAAO,EACrB8C,gBAAiBgI,EACjBwX,YAAaZ,OCKhB,IAUMc,GAAiB,SAAC,GAAD,IAAGzc,EAAH,EAAGA,MAAH,OAC5B,eAACyQ,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,IACPW,OAAQ,GACRb,gBAAiBiD,MAIV0c,GAAmB,SAAC,GAA2B,IACtDC,EAD6B3c,EAAwB,EAAxBA,MAAOmO,EAAiB,EAAjBA,MAExC,GAAInO,EAAO,CACT,IAAM4c,EAAMle,KAAKC,MAAMqB,GACvB2c,EAAOE,OAAOC,KAAKF,GAAKxI,QAAO,SAAC2I,GAAD,OAAkB,IAAXH,EAAIG,MAE5C,OAAIJ,EAEA,eAAClM,GAAA,EAAD,UACGkM,EAAK/J,KAAI,SAAC+H,GAAc,IAAD,IACtB,OACE,wBAAgBpK,MAAO,CAAEnV,YAAa,EAAGD,WAAY,GAArD,UACGgT,EAAK,UAAGpE,GAAY4Q,UAAf,aAAG,EAAkBpX,OAArB,UAA8BwG,GAAY4Q,UAA1C,aAA8B,EAAkB5a,KAAM,MADnD4a,SAQlBlK,GAAA,EAEI,eAACA,GAAA,EAAD,MAwBIuM,GAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,IAC/Bld,EAAgBkd,EAAhBld,KAAMgF,EAAUkY,EAAVlY,MAEd,OACE,eAAC0L,GAAA,EAAD,UACE,eAAC+L,GAAD,CAAazc,KAAMA,EAAM6b,GAAI7W,OAItBmY,GAAwB,SAAC,GAAoB,IAAD,EAAjBld,EAAiB,EAAjBA,MAE9BO,EADMH,GAAa,SACnBG,KACF4c,EAAO,UAAGzB,GAAatH,QAAO,SAACgJ,GAAD,OAAaA,EAAGpd,QAAUA,YAAjD,aAAG,EAAuD,GACjED,EAAOod,EAAoB,OAAT5c,EAAgB4c,EAAQ5Z,OAAS4Z,EAAQpd,KAAQ,GAEzE,OAAO,gCAAOA,KAGHsd,GAAkB,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,IACxBld,EAA0Bkd,EAA1Bld,KAAM0E,EAAoBwY,EAApBxY,SAAUM,EAAUkY,EAAVlY,MAExB,OACE,eAAC0L,GAAA,EAAD,UACE,eAAC,GAAD,CAAQhM,SAAUA,EAAU1E,KAAMA,EAAM6b,GAAI7W,OAYrCuY,GAAkB,SAAC,GAAoB,IAAlBtd,EAAiB,EAAjBA,MAExBO,EADMH,GAAa,SACnBG,KACR,OACE,eAACqP,GAAA,EAAD,CAAYW,MAAO,CAAExL,MAAQ/E,EAAkB,MAAV,SAArC,SACIA,EAIW,OAATO,EACA,2BACA,WALS,OAATA,EACE,2BACA,YAOCgd,GAAe,SAACC,GAC3B,OAAIA,EACW,IAAIhT,KAAKgT,GACVC,eAAe,QAAS,CAClC9C,IAAK,UACLF,MAAO,UACPD,KAAM,YAGD,IAiBEkD,GAAwB,SAACF,GACpC,OAAIA,EACW,IAAIhT,KAAKgT,GACVC,eAAe,QAAS,CAClC9C,IAAK,UACLF,MAAO,UACPD,KAAM,UACNmD,KAAM,UACNC,OAAQ,YAGH,IAGEC,GAAmB,SAACL,GAC/B,OAAIA,EACW,IAAIhT,KAAKgT,GACVC,eAAe,QAAS,CAClCE,KAAM,UACNC,OAAQ,UACRE,QAAQ,IAGH,IAgBEC,GAAuB,SAACP,EAAWrP,GAC9C,OAAIqP,EACW,IAAIhT,KAAKgT,GACVC,eAAetP,EAAQ,QAAU,QAAS,CACpD6P,QAAS,OACTrD,IAAK,UACLF,MAAO,OACPD,KAAM,UACNmD,KAAM,UACNC,OAAQ,YAGH,IAGEK,GAAa,SAACT,EAAWrP,GACpC,OAAIqP,EACW,IAAIhT,KAAKgT,GACVC,eAAetP,EAAQ,QAAU,QAAS,CACpDwM,IAAK,UACLF,MAAO,OACPD,KAAM,YAGD,IAGE0D,GAAiB,SAACV,EAAWrP,GACxC,OAAIqP,EACW,IAAIhT,KAAKgT,GACVC,eAAetP,EAAQ,QAAU,QAAS,CACpD6P,QAAS,QACTrD,IAAK,UACLF,MAAO,OACPD,KAAM,YAGD,IAIE2D,GAAgB,SAACX,EAAWrP,GACvC,OAAIqP,EACW,IAAIhT,KAAKgT,GACVC,eAAetP,EAAQ,QAAU,QAAS,CACpDwM,IAAK,UACLF,MAAO,SAGF,IAGE2D,GAAqB,SAACZ,EAAWrP,GAC5C,OAAIqP,EACW,IAAIhT,KAAKgT,GACVC,eAAetP,EAAQ,QAAU,QAAS,CACpDsM,MAAO,OACPD,KAAM,YAGD,IAIE6D,GAAgB,SAAC,GAAkB,IACtCb,EADqC,EAAfP,IACtBO,KACR,OAAO,+BAAMD,GAAaC,MAEfc,GAAwB,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,IAC9BO,EAAoBP,EAApBO,KAAM5D,EAAcqD,EAAdrD,UACR5Z,EAAuB,KAAfid,EAAIsB,OAAgB3E,EAAY4D,EAC9C,OAAO,+BAAMD,GAAavd,MAGfwe,GAAqB,SAAC,GAAoB,IAAlBxe,EAAiB,EAAjBA,MACnC,OAAO,+BAAMud,GAAavd,MAEfye,GAAkB,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,IAC1Brc,EAAQid,GAAiBZ,EAAIrD,WAC7B/Y,EAAMgd,GAAiBZ,EAAI/R,SACjC,OACE,iCACGtK,EADH,IACWC,MAiCF6d,GAAiB,SAAC,GAAoB,IAAlB1e,EAAiB,EAAjBA,MAC/B,OAAO,sBAAKuQ,MAAO,CAAE7U,SAAU,IAAxB,SAA+BsE,KAmB3B2e,GAAoB,SAAC,GAAkB,IAC1C/E,EADyC,EAAfqD,IAC1BrD,UACR,OAAO,+BAAMiE,GAAiBjE,MAMnBgF,GAAuB,SAAC,GAAoB,IAAlB5e,EAAiB,EAAjBA,MAE7BO,EADMH,GAAa,SACnBG,KACF8Q,EAAOpI,GAAYmL,QAAO,SAACyK,GAAD,OAAaA,EAAG/b,KAAO9C,KACvD,OAAIqR,GAAQA,EAAKwC,OAAS,EAEtB,uBAAMtD,MAAO,CAAExL,MAAOmE,GAAYlJ,IAAlC,SACY,OAATO,EAAgB8Q,EAAK,GAAG9N,OAAS8N,EAAK,GAAGtR,OAIvC,0BAmBE+e,GAAgC,SAAC9e,GAC5C,IACQO,EADMH,GAAa,SACnBG,KACF8Q,EAAOpI,GAAYmL,QAAO,SAACyK,GAAD,OAAaA,EAAG/b,KAAO9C,KACvD,OAAIqR,GAAQA,EAAKwC,OAAS,EACR,OAATtT,EAAgB8Q,EAAK,GAAG9N,OAAS8N,EAAK,GAAGtR,KAEzC,IAIEgf,GAAc,SAACC,GAC1B,OAAIA,IACGC,MAAMD,GACFA,EAAOE,QAAQ,GAAGC,QAAQ,oBAAqB,OAGnD,QAEIC,GAAmB,SAACJ,GAC/B,OAAIA,IACGC,MAAMD,GACFA,EAAOE,QAAQ,GAAGC,QAAQ,oBAAqB,OAGnD,IAeIE,GAAoB,SAACL,GAChC,OAAIA,EACKA,EAAOE,QAAQ,GAAGC,QAAQ,oBAAqB,OAE/C,KAIEG,GAAkB,SAAC,GAAkB,IAAhBrC,EAAe,EAAfA,IAE1B+B,EADsB/B,EAApBsC,MAAoBtC,EAAbuC,SAGf,OAAO,sBAAKjP,MAAO,CAAExL,MAAO,WAArB,SAAmCga,GAAYC,MAE3CS,GAAoB,SAAC,GAAoB,IAAlBzf,EAAiB,EAAjBA,MAClC,OAAO,uBAAMuQ,MAAO,CAAExL,MAAO,WAAtB,SAAoCga,GAAY/e,MAE5C0f,GAAyB,SAAC,GAAoB,IAAlB1f,EAAiB,EAAjBA,MACvC,OAAO,uBAAMuQ,MAAO,CAAExL,MAAO,WAAtB,SAAoCqa,GAAiBpf,MAGjD2f,GAAqB,SAAC,GAAkB,IAAhB1C,EAAe,EAAfA,IAG7B2C,GAFgB3C,EAAI4C,cAAgB5C,EAAI4C,cAAgB,IAC5C5C,EAAI6C,UAAY7C,EAAI6C,UAAY,GAElD,OAAIF,EAEA,uBAAMrP,MAAO,CAAExL,MAAOvB,KAAOuc,IAAI,MAAjC,SAA0CX,GAAiBQ,KAGtD,2BAGEI,GAAwB,SAAC,GAAkB,IAAhB/C,EAAe,EAAfA,IAGhCgD,GAFgBhD,EAAI4C,cAAgB5C,EAAI4C,cAAgB,IACxC5C,EAAIiD,cAAgBjD,EAAIiD,cAAgB,GAE9D,OAAID,EAEA,uBAAM1P,MAAO,CAAExL,MAAOvB,KAAO2c,MAAM,MAAnC,SAA4Cf,GAAiBa,KAGxD,2BAGEG,GAAgB,SAAC,GAA6B,IAA3BnD,EAA0B,EAA1BA,IAAKoD,EAAqB,EAArBA,UAC7B1V,EAAwB,KAAfsS,EAAItS,OAAgB,EAAI,GACjC7H,EAAKma,EAAIna,GACT6L,EAAY,CAAE7L,KAAI6H,UACxB,OACE,gCACE,eAAC2V,GAAA,EAAD,CACE/P,MAAO,CAAElV,QAAS,EAAG0J,MAAOvB,KAAO+c,KAAK,MACxCC,QAAwB,KAAfvD,EAAItS,OACb8V,SAAQ,yCAAE,WAAOpR,GAAP,UAAAX,EAAA,sEACF2R,EAAU,CACd1R,YACA+R,mBAAoB,CAClBC,WAAY,cACZC,YAAY,2BACVD,WAAY,YACZ7d,MACGma,GACAtO,MATD,2CAAF,sDAcR5J,MAAM,eAKD8b,GAA0B,SAAC,GAAyB,IAAvB7gB,EAAsB,EAAtBA,MAElC8gB,EAAgB9gB,EAFwC,EAAfid,IACvC+B,OACgC,IACxC,OACE,gBAACvO,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,IACPW,OAAQ,GACRb,gBAAiB,QAJrB,UAOE,eAAC0T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO6jB,EACPljB,OAAQ,GACRb,gBAAiBmU,aAAK1N,KAAO2c,MAAM,KAAM,OAG7C,eAAC1P,GAAA,EAAD,CAAKF,MAAO,CAAEwQ,SAAU,WAAYC,OAAQ,GAAIC,MAAO,IAAvD,SACE,eAACrR,GAAA,EAAD,CACEW,MAAO,CAAEhV,UAAW,MAAO2lB,WAAY,QACvClmB,QAAQ,UAFV,SAIGgF,EAAQ+e,GAAY/e,GAAS,WAO3BmhB,GAAkB,SAAC,GAA2B,IAAzBnhB,EAAwB,EAAxBA,MAC1BkH,EADkD,EAAjBka,MACpBhN,QAAO,SAACiN,GAAD,OAAcA,EAAIve,KAAO9C,KACnD,OAAIkH,GAAQA,EAAK2M,OAAS,EACjB,uBAAMtD,MAAO,CAAExL,MAAO,WAAtB,SAAoCmC,EAAK,GAAG8R,QAE5C,uBAAMzI,MAAO,CAAExL,MAAO,cAIpBuc,GAAiB,SAAC,GAA+C,IAA7CrE,EAA4C,EAA5CA,IAAKjd,EAAuC,EAAvCA,MAAOE,EAAgC,EAAhCA,QAASqhB,EAAuB,EAAvBA,YACpD,OACE,eAAC9Q,GAAA,EAAD,CACED,QAAS,WACPtQ,EAAQ+c,GACRsE,GAAY,IAEdhR,MAAO,CACL0B,OAAQ,UACRqK,aAAc,GAPlB,SAUE,eAAC1M,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACV8lB,UAAW,QACXzc,MAAOvB,KAAOie,WAAW,MAJ7B,SAOGzhB,OAwCI0hB,GAAoB,SAAC,GAAoB,IAAlB1hB,EAAiB,EAAjBA,MAG5BmO,EAAiB,OAFT/N,GAAa,SACnBG,KAER,OACE,uBAAMgQ,MAAO,CAAExL,MAAO,WAAtB,SACGmP,GAAY,CAAEpR,GAAI9C,EAAOmO,aAInBwT,GAAoB,SAAC,GAAoB,IAAlB3hB,EAAiB,EAAjBA,MAClC,OACE,gBAACyQ,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,IACPW,OAAQ,GACRb,gBAAiB,QAJrB,UAOE,eAAC0T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO+C,EACPpC,OAAQ,GACRb,gBAAiBmU,aAAK1N,KAAO+c,KAAK,KAAM,OAG5C,eAAC9P,GAAA,EAAD,CAAKF,MAAO,CAAEwQ,SAAU,WAAYC,OAAQ,GAAIC,MAAO,IAAvD,SACE,eAACrR,GAAA,EAAD,CACEW,MAAO,CAAEhV,UAAW,MAAO2lB,WAAY,QACvClmB,QAAQ,UAFV,SAIGgF,EAAK,UAAM4hB,SAAS5hB,GAAf,KAA2B,WAgB9B6hB,GAAkB,SAAC,GAAoB,IAAD,IAAjB7hB,EAAiB,EAAjBA,MAG1BD,EACK,OAHGK,GAAa,SACnBG,KAEN,OAAgB8G,SAAhB,IAAgBA,IAAhB,UAAgBA,GAAerH,UAA/B,aAAgB,EAAuBuD,OAAvC,OAAgD8D,SAAhD,IAAgDA,IAAhD,UAAgDA,GAAerH,UAA/D,aAAgD,EAAuBD,KACzE,OAAO,gCAAOA,KAEH+hB,GAAsB,SAAC,GAAkB,IAAhB7E,EAAe,EAAfA,IAC9Bld,EACS,IAAbkd,EAAI7b,KAAa6b,EAAI/X,MAAqB,IAAb+X,EAAI7b,KAAa6b,EAAI7X,MAAQ,eAC5D,OAAO,gCAAOrF,KAGHgiB,GAAkB,SAAC1Q,GAC9B,IAAM2Q,EAAM,OAAG3Q,QAAH,IAAGA,OAAH,EAAGA,EAAM2Q,OACfC,EAAK,OAAG5Q,QAAH,IAAGA,OAAH,EAAGA,EAAM4Q,MACd9M,EAAO,OAAG9D,QAAH,IAAGA,OAAH,EAAGA,EAAM8D,QAWtB,OATEA,IAAYb,IAAoB2N,EAAQ,EACpCA,EACA9M,IAAYb,IAAoB0N,EAAS,GACxCA,EACD7M,IAAYb,IAAqB0N,EAAS,EAC1CA,EACA7M,IAAYb,IAAqB2N,EAAQ,GACxCA,EACD,GAyCKC,GAAmB,SAACnoB,EAAY4c,EAAexI,GAC1D,IAAMgU,EAAUxL,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAI8U,OAAS9c,EAAMiG,SACjE,OACE,sBAAKuQ,MAAO,CAAE7U,SAAU,IAAxB,SACGymB,GAAWA,EAAQtO,OAAS,EACzB1F,EACEgU,EAAQ,GAAG5e,OACX4e,EAAQ,GAAGpiB,KACb,MAKGqiB,GAA2B,SACtCroB,EACA4c,EACAxI,GACI,IAAD,QACGkU,GACC,OAALtoB,QAAK,IAALA,GAAA,UAAAA,EAAOkjB,WAAP,eAAYqF,aAAwC,QAArB,OAALvoB,QAAK,IAALA,GAAA,UAAAA,EAAOkjB,WAAP,eAAYsF,WAClCpU,EAAK,OACHpU,QADG,IACHA,GADG,UACHA,EAAOkjB,WADJ,aACH,EAAYuF,eADT,OAEHzoB,QAFG,IAEHA,GAFG,UAEHA,EAAOkjB,WAFJ,aAEH,EAAYwF,kBACdpS,EACN,GAAIgS,EACF,OAAO,sBAAK9R,MAAO,CAAE7U,SAAU,IAAxB,SAA+B2mB,IAEtC,IAAMF,EAAUxL,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAI8U,OAAS9c,EAAMiG,SAEjE,OACE,sBAAKuQ,MAAO,CAAE7U,SAAU,IAAxB,SACGymB,GAAWA,EAAQtO,OAAS,EACzB1F,EACEgU,EAAQ,GAAG5e,OACX4e,EAAQ,GAAGpiB,KACb,MCjcC2iB,GAAuB,SAAC,GAAyC,IAAvClF,EAAsC,EAAtCA,KAAMmF,EAAgC,EAAhCA,KAAMxU,EAA0B,EAA1BA,MAAOjD,EAAmB,EAAnBA,QACxD,GAAa,QAATyX,EAAgB,CAClB,IAAM/hB,EAAQ,IAAI4J,KAAKgT,GACvB5c,EAAMgiB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAM/hB,EAAM,IAAI2J,KAAKgT,GAGrB,OAFA3c,EAAI+hB,SAAS,GAAI,GAAI,GAAI,KAElB,CAAEhiB,QAAOC,MAAKgiB,ODxGO,SAACrF,EAAWrP,GAC1C,OAAIqP,EACW,IAAIhT,KAAKgT,GACVC,eAAetP,EAAQ,QAAU,QAAS,CACpD6P,QAAS,OACTrD,IAAK,UACLF,MAAO,OACPD,KAAM,YAGD,GC6FQsI,CAAiBtF,EAAMrP,IAGxC,GAAa,UAATwU,EAAkB,CACpB,IAAM/hB,EAAQ,IAAI4J,KAAKgT,GACvB5c,EAAMgiB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAM/hB,EAAM,IAAI2J,KAAKgT,GACrB3c,EAAIkiB,QAAQliB,EAAI+Z,UAAY,GAC5B/Z,EAAI+hB,SAAS,GAAI,GAAI,GAAI,KACzB,IAAMpI,EAAO5Z,EAAMkQ,cAKnB,MAAO,CAAElQ,QAAOC,MAAKgiB,OAJT,UAAM1E,GAAcvd,EAAOuN,GAA3B,cAAuCgQ,GACjDtd,EACAsN,GAFU,YAGPqM,IAGP,GAAa,SAATmI,EAAiB,CACnB,IAAM/hB,EAAQ,IAAI4J,KAAKgT,GACjBwF,EAAQpiB,EAAMqiB,SACdC,EAAmB,IAAVF,EAAc,EAAIA,EAAQ,EACnCG,EAAiB,IAAVH,EAAc,EAAc,IAAVA,EAAc,EAAI,EAAIA,EAErDpiB,EAAMmiB,QAAQniB,EAAMga,UAAYsI,GAChCtiB,EAAMgiB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAM/hB,EAAM,IAAI2J,KAAKgT,GACrB3c,EAAIkiB,QAAQliB,EAAI+Z,UAAYuI,GAC5BtiB,EAAI+hB,SAAS,GAAI,GAAI,GAAI,KACzB,IAAMpI,EAAO5Z,EAAMkQ,cAKnB,MAAO,CAAElQ,QAAOC,MAAKgiB,OAJT,UAAM1E,GAAcvd,EAAOuN,GAA3B,cAAuCgQ,GACjDtd,EACAsN,GAFU,YAGPqM,IAGP,GAAa,UAATmI,EAAkB,CACpB,IAAMS,EAAO,IAAI5Y,KAAKgT,GAChB/C,EAAQ2I,EAAK1I,WACbF,EAAO4I,EAAKtS,cACZlQ,EAAQ,IAAI4J,KAAKgQ,EAAMC,EAAO,EAAG,EAAG,EAAG,EAAG,GAGhD,MAAO,CAAE7Z,QAAOC,IAFJ,IAAI2J,KAAKgQ,EAAMC,EAAQ,EAAG,EAAG,GAAI,GAAI,GAAI,KAEhCoI,OADNzE,GAAmBxd,EAAOuN,IAG3C,GAAa,SAATwU,EAAiB,CACnB,IACMnI,EADO,IAAIhQ,KAAKgT,GACJ1M,cAIlB,MAAO,CAAElQ,MAHK,IAAI4J,KAAKgQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAG5B3Z,IAFJ,IAAI2J,KAAKgQ,EAAM,GAAI,GAAI,GAAI,GAAI,GAAI,KAE1BqI,OADT,UAAM1U,EAAQ,qBAAQ,OAAtB,YAAgCqM,IAG9C,GAAa,WAATmI,EAAmB,CACrB,IAAM/hB,EAAQ,IAAI4J,KAAKgT,GACvB5c,EAAMgiB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAM/hB,EAAMqK,EAAU,IAAIV,KAAKU,GAAW,IAAIV,KAK9C,OAJA3J,EAAI+hB,SAAS,GAAI,GAAI,GAAI,KAIlB,CAAEhiB,QAAOC,MAAKgiB,OAHN5E,GAAWT,EAAMrP,GAGHkV,UAFXpF,GAAW/S,EAASiD,MAoE7BmV,GAAuB,WAClC,IACM9I,GADO,IAAIhQ,MACCsG,cAGlB,MAAO,CAAEyS,YAFW,IAAI/Y,KAAKgQ,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhCgJ,UADJ,IAAIhZ,KAAKgQ,EAAO,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,OAI9CiJ,GAAc,SAAC9G,EAAWxO,GAAoC,IAAxBe,EAAuB,uDAAZ,QACtDwU,EAAY,GAClB,GAAiB,QAAbxU,EAAoB,CACtB,IAAMsO,EAAO,IAAIhT,KACXmZ,EAAKC,KAAKC,KAAKlH,EAAO,GAE5Ba,EAAKuF,QAAQvF,EAAK5C,UAAY+I,GAE9B,IAAK,IAAIlS,EAAI,EAAGA,EAAIkL,EAAMlL,IACxB+L,EAAKuF,QAAQvF,EAAK5C,UAAY,GAC9B8I,EAAKlQ,KAAK2K,GAAc,IAAI3T,KAAKgT,GAAOrP,IAE1C,OAAOuV,EAEP,IAAMlG,EAAO,IAAIhT,KACjBgT,EAAKuF,QAAQvF,EAAK5C,UAAY+B,GAE9B,IAAK,IAAIlL,EAAI,EAAGA,EAAIkL,EAAMlL,IACxB+L,EAAKuF,QAAQvF,EAAK5C,UAAY,GAC9B8I,EAAKlQ,KAAK2K,GAAc,IAAI3T,KAAKgT,GAAOrP,IAE1C,OAAOuV,GAGEI,GAAgB,SAACC,EAAU5V,GACtC,IAAMuV,EAAY,GAEZlG,EAAO,IAAIhT,KACjBgT,EAAKwG,SAASxG,EAAK9C,WAAaqJ,GAEhC,IAAK,IAAItS,EAAI,EAAGA,EAAIsS,EAAKtS,IACvB+L,EAAKwG,SAASxG,EAAK9C,WAAa,GAChCgJ,EAAKlQ,KAAK4K,GAAmB,IAAI5T,KAAKgT,GAAOrP,IAE/C,OAAOuV,GAGIO,GAAiB,SAACC,GAC7B,GAAIA,GAAUA,EAAOrQ,OAAS,EAAG,CAC/B,IAAM5M,EAAQid,EAAO,GACfC,EAAQD,EAAOtR,KAAI,SAACwR,GACxB,MAAO,CACLxK,UAAWwK,EAAGxK,UACd1O,QAASkZ,EAAGlZ,YAGhB,OAAOxM,KAAKyB,UAAU,CAAE8G,QAAOkd,UAE/B,OAAOzlB,KAAKyB,UAAU,KChebkkB,GAAwB,yCAAG,kFAAA3V,EAAA,yDACtC4V,EADsC,EACtCA,MACAC,EAFsC,EAEtCA,QACAC,EAHsC,EAGtCA,QACAC,EAJsC,EAItCA,SACApE,EALsC,EAKtCA,UACAqE,EANsC,EAMtCA,YACAvW,EAPsC,EAOtCA,MAPsC,UAUhCmW,EAVgC,oBAYhCtL,EAQEsL,EARFtL,MACAY,EAOE0K,EAPF1K,UACA1O,EAMEoZ,EANFpZ,QACAmP,EAKEiK,EALFjK,MACAgI,EAIEiC,EAJFjC,SACAsC,EAGEL,EAHFK,WACAC,EAEEN,EAFFM,SACGC,EAnB6B,aAoB9BP,EApB8B,8EAqBChB,KAA3BC,EArB0B,EAqB1BA,YAAaC,EArBa,EAqBbA,YAEnB5J,EAAY2J,GACZ3J,EAAY4J,GACZtY,EAAUqY,GACVrY,EAAUsY,GACV5J,EAAY1O,GACZ0O,EAAUgB,YAAc1P,EAAQ0P,WA5BA,gBA8BhC3L,OAAO6V,MAAM3W,EAAQ,+FAAsB,yBA9BX,8BAgC1BQ,EAhC0B,cAiC9BqK,QACAY,YACA1O,UACAmP,QACAgI,SAAUA,EACN,CACEC,WAAYD,EAASjJ,IACrBqJ,aAAcJ,EAAStiB,KACvByiB,eAAgBH,EAAS9e,OACzBwhB,cAAe1C,EAASnd,YAE1BmL,EACJsU,WAAYA,EACR,CACEK,aAAcL,EAAWvL,IACzB6L,eAAgBN,EAAW5kB,KAC3BmlB,iBAAkBP,EAAWphB,OAC7B4hB,gBAAiBR,EAAW5f,YAE9BsL,EACJuU,SAAUA,EACN,CACEQ,WAAYR,EAASxL,IACrBiM,aAAcT,EAAS7kB,KACvBulB,eAAgBV,EAASrhB,OACzBgiB,cAAeX,EAAS7f,MACxBygB,cAAeZ,EAAS1f,YAE1BmL,GACDwU,GA9D2B,UAgE1BJ,EAAS,CAAE9V,cAhEe,YAmEhC4V,EAnEgC,wBAoE5BzhB,EAAK+Z,OAAOC,KAAKyH,GAAS,GAC1B3Z,EAAO2Z,EAAQzhB,GACbuX,EAAmDzP,EAAnDyP,MAAOgI,EAA4CzX,EAA5CyX,SAAUsC,EAAkC/Z,EAAlC+Z,WAAYC,EAAsBha,EAAtBga,SAAaC,EAtEhB,aAsEyBja,EAtEzB,8CAwE5B+D,EAxE4B,cAyEhC7L,GAAI2iB,OAAO3iB,GACXuX,QACAuK,SAAUA,EACN,CACEQ,WAAYR,EAASxL,IACrBiM,aAAcT,EAAS7kB,KACvBulB,eAAgBV,EAASrhB,OACzBgiB,cAAeX,EAAS7f,MACxBygB,cAAeZ,EAAS1f,YAE1BmL,EACJsU,WAAYA,EACR,CACEK,aAAcL,EAAWvL,IACzB6L,eAAgBN,EAAW5kB,KAC3BmlB,iBAAkBP,EAAWphB,OAC7B4hB,gBAAiBR,EAAW5f,YAE9BsL,EACJgS,SAAUA,EACN,CACEC,WAAYD,EAASjJ,IACrBqJ,aAAcJ,EAAStiB,KACvByiB,eAAgBH,EAAS9e,OACzBwhB,cAAe1C,EAASnd,YAE1BmL,GACDwU,GApG6B,UAsG5BxE,EAAU,CACd1R,YACA+R,mBAAoB,CAClBC,WAAY,cACZC,YAAY,cACVD,WAAY,YACZ7d,MACG6L,MA7GyB,gBAkHpB0B,IAAZmU,EAlHgC,kCAmH5BE,EAAY,CAAE/V,UAAW,CAAE7L,GAAI2iB,OAAOjB,MAnHV,0DAsHpCkB,QAAQC,IAAR,MAtHoC,0DAAH,sDA4QxBC,GAAmB,SAACpI,GAA+B,IAApBqI,EAAmB,uDAAZ,QACjD,OAAOrI,EAAKC,eAAeoI,EAAM,CAC/BlI,KAAM,UACNC,OAAQ,UACRE,QAAQ,KClRCgI,GAAW,SAAC7I,GAAD,OAAuBA,EAAI7D,KAEtC2M,GAAa,SAAC,GAA2B,IAAzB5X,EAAwB,EAAxBA,MAAO6X,EAAiB,EAAjBA,MAClC,MAAO,CACLC,GAAI,CAAEnjB,GAAI,EAAGyE,IAAK,KAAMxH,KAAM,KAAMiZ,MAAOgN,EAAMC,IACjDrM,UAAW,CAAE9W,GAAI,IAAKyE,IAAK,OAAQxH,KAAM,YAAaiZ,MAAOgN,EAAMxI,MACnE5c,MAAO,CAAEkC,GAAI,IAAKyE,IAAK,OAAQxH,KAAM,QAASiZ,MAAOgN,EAAMplB,OAC3DC,IAAK,CAAEiC,GAAI,IAAKyE,IAAK,OAAQxH,KAAM,MAAOiZ,MAAOgN,EAAMnlB,KACvDqlB,SAAU,CAAEpjB,GAAI,IAAKyE,IAAK,WAAYxH,KAAM,WAAYiZ,MAAOgN,EAAM5kB,MACrEoc,KAAM,CAAE1a,GAAI,EAAGyE,IAAK,OAAQxH,KAAM,OAAQiZ,MAAOgN,EAAMG,UACvDC,OAAQ,CAAEtjB,GAAI,EAAGyE,IAAK,SAAUxH,KAAM,SAAUiZ,MAAOgN,EAAMxI,MAC7D6I,MAAO,CAAEvjB,GAAI,EAAGyE,IAAK,QAASxH,KAAM,QAASiZ,MAAOgN,EAAMC,IAC1DjN,MAAO,CAAElW,GAAI,EAAGyE,IAAK,QAASxH,KAAM,QAASiZ,MAAOgN,EAAMjmB,MAC1DumB,QAAS,CAAExjB,GAAI,EAAGyE,IAAK,UAAWxH,KAAM,UAAWiZ,MAAOgN,EAAMC,IAChErB,SAAU,CACR9hB,GAAI,EACJyE,IAAK,WACLxH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOgN,EAAMpB,UAEf2B,QAAS,CACPzjB,GAAI,EACJyE,IAAK,UACLxH,KAAMoO,EAAQ,aAAe,WAC7B6K,MAAOgN,EAAMO,SAEf5B,WAAY,CACV7hB,GAAI,EACJyE,IAAK,aACLxH,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOgN,EAAMrB,YAEf6B,SAAU,CACR1jB,GAAI,EACJyE,IAAK,WACLxH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOgN,EAAMQ,UAEfnE,SAAU,CACRvf,GAAI,GACJyE,IAAK,WACLxH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOgN,EAAM3D,UAEfoE,SAAU,CACR3jB,GAAI,GACJyE,IAAK,WACLxH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOgN,EAAMS,UAEf9b,OAAQ,CAAE7H,GAAI,GAAIyE,IAAK,SAAUxH,KAAM,SAAUiZ,MAAOgN,EAAMrb,QAC9DqU,OAAQ,CAAElc,GAAI,GAAIyE,IAAK,SAAUxH,KAAM,SAAUiZ,MAAOgN,EAAMhH,QAC9Djd,IAAK,CACHe,GAAI,GACJyE,IAAK,MACLxH,KAAMoO,EAAQ,YAAc,UAC5B6K,MAAOgN,EAAM7D,SAEfuE,MAAO,CACL5jB,GAAI,GACJyE,IAAK,QACLxH,KAAMoO,EAAQ,cAAgB,YAC9B6K,MAAO7K,EAAQ,kFAAmB,sBAEpC8T,MAAO,CAAEnf,GAAI,GAAIyE,IAAK,QAASxH,KAAM,QAASiZ,MAAOgN,EAAM/D,OAC3DD,OAAQ,CAAElf,GAAI,GAAIyE,IAAK,SAAUxH,KAAM,SAAUiZ,MAAOgN,EAAMhE,QAC9D7M,QAAS,CAAErS,GAAI,GAAIyE,IAAK,UAAWxH,KAAM,UAAWiZ,MAAO,WAC3D2N,SAAU,CAAE7jB,GAAI,GAAIyE,IAAK,WAAYxH,KAAM,WAAYiZ,MAAO,YAC9DuF,OAAQ,CACNzb,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,6CAAY,YAE7ByY,MAAO,CACL9jB,GAAI,GACJyE,IAAK,QACLxH,KAAM,QACNiZ,MAAO7K,EAAQ,0DAAe,OAEhC0Y,QAAS,CACP/jB,GAAI,GACJyE,IAAK,UACLxH,KAAM,UACNiZ,MAAO7K,EAAQ,0DAAe,OAEhC2Y,SAAU,CACRhkB,GAAI,GACJyE,IAAK,WACLxH,KAAM,WACNiZ,MAAO7K,EAAQ,sEAAiB,YAElC4Y,MAAO,CACLjkB,GAAI,GACJyE,IAAK,QACLxH,KAAM,QACNiZ,MAAO7K,EAAQ,sEAAiB,gBAElC6Y,OAAQ,CACNlkB,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,uCAAW,QAE5BrL,GAAI,CACFA,GAAI,GACJyE,IAAK,KACLxH,KAAM,KACNiZ,MAAO7K,EAAQ,iCAAU,MAE3B8Y,OAAQ,CACNnkB,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,iCAAU,QAE3B+Y,KAAM,CACJpkB,GAAI,GACJyE,IAAK,OACLxH,KAAM,OACNiZ,MAAO7K,EAAQ,6CAAY,QAE7BgZ,KAAM,CACJrkB,GAAI,GACJyE,IAAK,OACLxH,KAAM,OACNiZ,MAAO7K,EAAQ,6CAAY,QAE7B0R,cAAe,CACb/c,GAAI,GACJyE,IAAK,gBACLxH,KAAM,gBACNiZ,MAAO7K,EAAQ,mDAAa,YAE9B2R,UAAW,CACThd,GAAI,GACJyE,IAAK,YACLxH,KAAM,YACNiZ,MAAO7K,EAAQ,yDAAc,YAE/B+R,cAAe,CACbpd,GAAI,GACJyE,IAAK,gBACLxH,KAAM,gBACNiZ,MAAO7K,EAAQ,mDAAa,YAE9BiZ,KAAM,CACJtkB,GAAI,GACJyE,IAAK,OACLxH,KAAM,OACNiZ,MAAO7K,EAAQ,uCAAW,eAE5BkD,KAAM,CACJvO,GAAI,GACJyE,IAAK,OACLxH,KAAMoO,EAAQ,aAAe,WAC7B6K,MAAOgN,EAAMO,SAEfc,YAAa,CACXvkB,GAAI,GACJyE,IAAK,QACLxH,KAAM,QACNiZ,MAAO7K,EAAQ,2BAAS,SAE1BmZ,aAAc,CACZxkB,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,2BAAS,UAE1BoZ,UAAW,CACTzkB,GAAI,GACJyE,IAAK,YACLxH,KAAM,YACNiZ,MAAO7K,EAAQ,4EAAkB,kBCzK1B3M,GACTgmB,GADShmB,IAAKC,GACd+lB,GADc/lB,IAEZhD,GAAQ2B,GAAa,SACrBK,GAAI,OAAGhC,SAAH,IAAGA,QAAH,EAAGA,GAAOgC,KAQPuB,GAEE,kBAAMwlB,GAAqB/mB,GAAMe,KAFnCQ,GAME,kBAAMwlB,GAAqB/mB,GAAMgB,KC+C1CgmB,GAAoB,CACxBC,IA7DgB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEnB,OADiB3lB,MAAuBA,KAKtC,sBAAKuO,MAAO,CAAEiR,UAAW,UAAzB,SACE,eAAC/Q,GAAA,EAAD,CAAKmX,EAAG,EAAR,SACE,eAACC,GAAA,EAAD,CAAK9iB,MAAM,UAAUyL,QAASmX,EAAW3O,MAAM,iBAA/C,SACE,eAAC,KAAD,CAASzI,MAAO,CAAE7U,SAAU,YAN3B,0BA2DTosB,KA9CiB,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,UAEpB,OADiB3lB,MAAuBA,KAKtC,eAAC+lB,GAAA,EAAD,CACExX,MAAO,CAAElV,QAAS,EAAGoB,UAAW,EAAGurB,aAAc,GACjDxX,QAASmX,EACT3O,MAAM,WAHR,SAKE,eAAC,KAAD,CAAkBzI,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAR3C,0BA4CTkjB,OA/BmB,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UAEdpnB,EADMH,GAAa,SACnBG,KAER,OADiByB,MAAuBA,KAKtC,eAAC+lB,GAAA,EAAD,CACEvX,QAAS,WAELvB,OAAOiZ,QACI,OAAT3nB,EACI,6IACA,8CAGNonB,KAGJ3O,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAbpB,SAeE,eAAC,KAAD,CAAoBkV,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAlB7C,2BA6BEojB,GAAU,SAAC,GAAuB,IAArBrlB,EAAoB,EAApBA,GAAI6kB,EAAgB,EAAhBA,UACtBS,EAAgBX,GAAkB3kB,GACxC,OAAO,eAACslB,EAAD,CAAeT,UAAWA,K,qBCf7BF,GAAyB,CAC7BY,WAvDiB,SAAC,GAAwB,IAAtBV,EAAqB,EAArBA,UAEZpnB,EADMH,GAAa,SACnBG,KAER,OADoByB,KAMlB,sBAAKuO,MAAO,CAAEiR,UAAW,UAAzB,SACE,eAAC/Q,GAAA,EAAD,CAAKmX,EAAG,EAAR,SACE,eAACtX,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,GAAIW,OAAQ,IAC5B5C,QAAQ,YACRwV,QAASmX,EACT5iB,MAAM,UAJR,SAME,eAAC6K,GAAA,EAAD,UAAsB,OAATrP,EAAgB,qBAAQ,eAZpC,0BAmDT+nB,aA9BmB,SAAC,GAAwB,IAAtBX,EAAqB,EAArBA,UAEdpnB,EADMH,GAAa,SACnBG,KAER,OADoByB,KAMlB,eAAC+lB,GAAA,EAAD,CACEvX,QAAS,WAELvB,OAAOiZ,QACI,OAAT3nB,EACI,6IACA,8CAGNonB,KAGJ3O,MAAM,aAZR,SAcE,eAAC,KAAD,MAlBK,0BA0BTuP,aAjCmB,SAAC,GAAD,EAAGZ,UAAH,OAAwB,2BA6C9Ba,GATY,SAAC,GAA4B,IAA1B1lB,EAAyB,EAAzBA,GAAI6kB,EAAqB,EAArBA,UAC1BS,EAAgBX,GAAkB3kB,GACxC,OACE,eAAC2N,GAAA,EAAD,UACE,eAAC2X,EAAD,CAAeT,UAAWA,OCnEhC,I,UCFe,SAASc,GAAT,GAAmD,IAA/BrnB,EAA8B,EAA9BA,KAAMsnB,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAK1H,EAAc,EAAdA,MACjD,OACE,eAAC2H,GAAA,EAAD,CACErY,MAAO,CACLwQ,SAAU,WACVC,OAAQ2H,OAAMtY,EAAY,EAC1BsY,IAAKA,EAAM,QAAKtY,EAChBwY,KAAM5H,OAAQ5Q,EAAY,EAC1B4Q,MAAOA,EAAQ,OAAI5Q,EACnBpT,MAAO,OACPJ,WAAY,SACZwf,eAAgB,UAElByM,SAAU1nB,EAXZ,SAaGsnB,IChBA,SAASK,GAAMC,GACpB,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAAc,IAALF,MAW/C,IAAMI,GAAS,yCAAG,sCAAA1a,EAAA,6DAAS2a,EAAT,EAASA,QAASX,EAAlB,EAAkBA,IAAKtnB,EAAvB,EAAuBA,KAAvB,IAA6BsS,SAA7B,MAAiC,EAAjC,EACvB2V,EAAQ,CAAEC,MAAM,EAAMZ,MAAKtnB,SADJ,SAEjB2nB,GAAMrV,GAFW,OAGvB2V,EAAQ,CAAEC,MAAM,EAAOZ,IAAK,GAAItnB,KAAM,SAHf,2CAAH,sDAMTmoB,GAAY,yCAAG,WAAOF,EAAclb,GAArB,UAAAO,EAAA,sEACpB0a,GAAU,CACdC,UACAX,IAAKva,EAAQ,+FAAsB,yBACnC/M,KAAM,UACNsS,EAAG,MALqB,2CAAH,wDASZ8V,GAAc,yCAAG,WAAOH,EAAclb,GAArB,UAAAO,EAAA,sDAC5B0a,GAAU,CACRC,UACAX,IAAKva,EAAQ,8IAAkC,4BAC/C/M,KAAM,UAJoB,2CAAH,wDAQdqoB,GAAU,yCAAG,WAAOJ,EAAclb,GAArB,UAAAO,EAAA,sEAClB0a,GAAU,CACdC,UACAX,IAAKva,EAAQ,qHAA6B,qBAC1C/M,KAAM,QACNsS,EAAG,IALmB,2CAAH,wDAQVgW,GAAa,yCAAG,WAAOL,EAAcX,GAArB,UAAAha,EAAA,sEACrB0a,GAAU,CACdC,UACAX,MACAtnB,KAAM,QACNsS,EAAG,IALsB,2CAAH,wDASbiW,GAAiB,yCAAG,WAAON,EAAclb,GAArB,UAAAO,EAAA,sEACzB0a,GAAU,CACdC,UACAX,IAAKva,EAAQ,wIAAiC,qBAC9C/M,KAAM,QACNsS,EAAG,IAL0B,2CAAH,wDASjBkW,GAAgB,yCAAG,WAAOP,EAAclb,GAArB,UAAAO,EAAA,sEACxB0a,GAAU,CACdC,UACAX,IAAKva,EACD,+LACA,yCACJ/M,KAAM,QACNsS,EAAG,IAPyB,2CAAH,wDAWhBmW,GAAY,yCAAG,WAAOR,EAAcX,GAArB,UAAAha,EAAA,sEACpB0a,GAAU,CACdC,UACAX,MACAtnB,KAAM,QACNsS,EAAG,IALqB,2CAAH,wDAQZoW,GAAW,yCAAG,WAAOT,EAAcX,GAArB,UAAAha,EAAA,sEACnB0a,GAAU,CACdC,UACAX,MACAtnB,KAAM,UACNsS,EAAG,IALoB,2CAAH,wDASXqW,GAAgB,SAAC7Q,EAAU8Q,GAAsB,IAAD,IAC3D,OAAU,OAAH9Q,QAAG,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAYof,UAAZ,eAAuBnb,IAAKnQ,KAAKC,MAAMua,EAAItO,KAAKof,GAAUpf,MAAQ,MC1FrE9G,GACJ,0GAEIC,GAAcC,OAAaC,MAAM,CACrClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,aAEVG,GAAgB,CAAEC,SAAUC,aAAYR,KAE/CS,GAAcR,OAAaC,MAAM,CACrCQ,SAAUT,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7CM,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAElCO,GAAgB,CAAEL,SAAUC,aAAYC,KAE/CylB,GAAgBjmB,OAAaC,MAAM,CACvCQ,SAAUT,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7CM,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAElC8lB,GAAkB,CAAE5lB,SAAUC,aAAY0lB,KACjDE,GAAiBnmB,OAAaC,MAAM,CACxCQ,SAAUT,SAEComB,GAAmB,CAAE9lB,SAAUC,aAAY4lB,KAElDvlB,GAAYZ,OAAaC,MAAM,CACnClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAGhCS,GAAc,CAAEP,SAAUC,aAAYK,KAC7CylB,GAAarmB,OAAaC,MAAM,CACpCS,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7CkmB,YAAatmB,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAChDmmB,aAAcvmB,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAGtComB,GAAe,CAAElmB,SAAUC,aAAY8lB,KAE9CvlB,GAAed,OAAaC,MAAM,CACtClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC3CW,MAAOf,SAEIgB,GAAiB,CAAEV,SAAUC,aAAYO,KAEhDG,GAAajB,OAAaC,MAAM,CACpClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WACrBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,WACHkB,MAAOpB,OAAaoB,UAETC,GAAe,CAAEf,SAAUC,aAAYU,KAC9CK,GAAYtB,OAAaC,MAAM,CACnCwmB,QAASzmB,OACTjE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WACrBqB,MAAOvB,OAAaG,IAAI,GAAGD,aAEhBsB,GAAc,CAAElB,SAAUC,aAAYe,KAE7CG,GAAazB,OAAaC,MAAM,CACpClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC3Cc,MAAOlB,SAEI0B,GAAe,CAAEpB,SAAUC,aAAYkB,KAC9CilB,GAAgB1mB,OAAaC,MAAM,CACvC+a,OAAQhb,OAAaG,IAAI,GAAGD,WAAWymB,WAEvCC,KAAM5mB,SAEK6mB,GAAkB,CAAEvmB,SAAUC,aAAYmmB,KAEjDI,GAAc9mB,OAAaC,MAAM,CACrCoe,SAAUre,OAAaE,WACvBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,aAEQ6mB,GAAkB,CAAEzmB,SAAUC,aAAYumB,K,wBCnFxC,SAASE,GAAT,GAMN,IALPpZ,EAKM,EALNA,KACAnE,EAIM,EAJNA,QACAwd,EAGM,EAHNA,QACAC,EAEM,EAFNA,SACArtB,EACM,EADNA,SAEA,OACE,eAACstB,GAAA,EAAD,CACEvZ,KAAMA,EACNqZ,QAASA,EACTptB,SAAUA,EACV4P,QAAS,CAAEjR,MAAOiR,EAAQ9P,OAJ5B,SAMGutB,I,cCZQ,SAASE,GAAT,GAWN,IAVPtd,EAUM,EAVNA,SACAE,EASM,EATNA,OACAjO,EAQM,EARNA,KACAiQ,EAOM,EAPNA,MACAiN,EAMM,EANNA,IAMM,IALN/Y,gBAKM,aAJN6L,iBAIM,SAHNsb,EAGM,EAHNA,QACAlxB,EAEM,EAFNA,OACG+e,EACG,qGACN,OACE,eAACpJ,GAAA,EAAD,cACEC,UAAWA,EACXub,aAAa,MACbpnB,SAAUA,EACVnE,KAAMA,EACNoQ,WAAS,EAET9P,cAAiB,OAAH4c,QAAG,IAAHA,OAAA,EAAAA,EAAMld,KAASsrB,GAAW,GACxCrb,MAAOA,EACPrC,QAAOK,EAAOjO,GACdkQ,SAAUnC,EACV9S,QAAQ,WACRuV,MAAO,CAAEpW,OAAQA,QAAkBkW,GACnClW,OAAO,SACH+e,I,gDC7BK,SAASqS,GAAT,GAON,IAWHxrB,EAjBJsR,EAMM,EANNA,KACAma,EAKM,EALNA,IACArd,EAIM,EAJNA,MACAwM,EAGM,EAHNA,IACA8Q,EAEM,EAFNA,SACAC,EACM,EADNA,UAOQ3mB,EAAmBsM,EAAnBtM,MAAO4mB,EAAYta,EAAZsa,QACThP,EAAOgP,EAAUjtB,KAAKC,MAAMgtB,GAAW,KACvCC,KAAQjP,IAAQhC,IAAMgC,EAAKhC,GAE3BzV,GAAY,OAAJmM,QAAI,IAAJA,OAAA,EAAAA,EAAMnM,OAAN,OAAcmM,QAAd,IAAcA,OAAd,EAAcA,EAAMnM,MAAQ,KAO1C,OAJEnF,EADE0rB,EACKtd,EAAK,OAAGkD,QAAH,IAAGA,OAAH,EAAGA,EAAI,UAAMoa,EAAN,OAAP,OAA6Bpa,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAOoa,GAEzCtd,EAAK,OAAGkD,QAAH,IAAGA,OAAH,EAAGA,EAAM9N,OAAT,OAAkB8N,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMtR,KAGpC,gBAAC0Q,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZtB,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiB6uB,EAAQ,eAAYvb,EACrCgM,eAAgB,iBARpB,UAWGhL,EAAKtM,QAAUymB,GACd,gBAAC/a,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAAC8T,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACR0e,aAAc,EACdvf,gBAAiBgI,GAAgB,OACjCtI,UAAW,KAGf,eAACmT,GAAA,EAAD,CACEW,MAAOxL,EAzCC,CAChB5J,WAAY,GACZC,YAAa,IAuCsB,GAC3BJ,QAASmT,EAAQ,YAAc,YAFjC,SAIGpO,QAILgF,GACA,eAAC6K,GAAA,EAAD,CAAY5U,QAASmT,EAAQ,YAAc,YAA3C,SACGpO,IAGJ2rB,GACC,eAAC9b,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVqJ,MAAO,OACP8mB,YAAa,GACbC,aAAc,IALlB,SAQG5mB,OCtEX,SAAS6mB,GAAUhI,GACjB,GAAIA,EAAM,EACR,OAAOA,EAAI7E,QAAQ,GAAGC,QAAQ,oBAAqB,OAIvD,IA2De6M,GA3DQ,SAAC,GAA0B,IAAxB3a,EAAuB,EAAvBA,KAAMlD,EAAiB,EAAjBA,MAC9B,OACE,eAACsC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNlC,UAAW4S,EAAQ,MAAQ,OAJ/B,SAOE,gBAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEwQ,SAAU,WAAY4H,IAAK,GAAzC,UACE,eAAClY,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CACEW,MAAO,CACLiR,UAAWrT,EAAQ,QAAU,QAFjC,SAKGA,EAAQkD,EAAK9N,OAAS8N,EAAKtR,SAGhC,gBAAC0Q,GAAA,EAAD,CAAK9T,QAAQ,OAAOC,cAAc,MAAM2T,MAAO,CAAEyX,aAAc,GAA/D,UACG3W,EAAK4a,cACJ,eAACrc,GAAA,EAAD,CACEW,MAAO,CACLxL,MAAO,UACP9H,MAAO,IACPvB,SAAU,GACVowB,aAAc,GACdD,YAAa,GACbrK,UAAWrT,EAAQ,QAAU,QAE/BnT,QAASmT,EAAQ,YAAc,UATjC,SAWGA,EAAQkD,EAAK6a,eAAiB7a,EAAK4a,eAGvC5a,EAAK8a,WACJ,eAACvc,GAAA,EAAD,CACEW,MAAO,CACLnV,YAAa,GACb2J,MAAO,UACP9H,MAAO,IACPvB,SAAU,IAEZV,QAASmT,EAAQ,YAAc,UAPjC,SASGA,EAAQkD,EAAK+a,YAAc/a,EAAK8a,YAGrC,eAACvc,GAAA,EAAD,CACEW,MAAO,CAAExL,MAAO,UAAW9H,MAAO,IAAKvB,SAAU,IACjDV,QAASmT,EAAQ,YAAc,UAFjC,SAIGkD,EAAK9L,MAAQwmB,GAAU1a,EAAK9L,OAAS,eC1DlD,IAmBe8mB,GAnBC,SAAC,GAAe,IAAble,EAAY,EAAZA,MACjB,OACE,eAACsC,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,WACV4H,IAAK,GACL1H,MAAO9S,OAAQkC,EAAY,GAC3BwY,KAAM1a,EAAQ,QAAKkC,GAErB1T,QAAQ,OACRc,KAAK,IACL4e,eAAe,SACfxf,WAAW,SAVb,SAYE,eAACyvB,GAAA,EAAD,OCXS,SAASC,GAAQxyB,GAAa,IACnCwC,EAA0DxC,EAA1DwC,MAAOkE,EAAmD1G,EAAnD0G,KAAe+rB,GAAoCzyB,EAA7C+G,QAA6C/G,EAApCyyB,QAAQlZ,EAA4BvZ,EAA5BuZ,OAAQ/T,EAAoBxF,EAApBwF,OAAQgU,EAAYxZ,EAAZwZ,QAEhDxO,EACFxI,EAAMR,QAAQI,WAAWC,QAG7B,OACE,eAACqU,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,QAFb,SAKG8D,GACC,eAAC,KAAMgsB,SAAP,UACE,gBAAChc,GAAA,EAAD,CACE9T,QAAQ,OACRE,WAAW,SACX0T,MAAO,CACL8L,eAAgBmQ,EAAS,aAAe,gBACxC/uB,KAAM,EACNquB,aAAcU,OAASnc,EAAY,GACnCwb,YAAaW,OAASnc,EAAY,GAClC5T,UAAW+vB,OAASnc,EAAY,IARpC,UAWE,gBAACI,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAAC,GAAD,CACE8H,SAAUhE,EAAKgE,SACf1E,KAAMU,EAAKV,KACX9F,KAAM,KAER,eAACwW,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,SAChBlhB,WAAY,GACZC,YAAa,GACbqB,UAAW,GAPf,SAUE,eAACmT,GAAA,EAAD,CAAYW,MAAO,CAAExL,SAArB,SACGtE,EAAKV,KAAOU,EAAKV,KAAOU,EAAKgE,gBAIpC,eAACgM,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZwf,eAAgB,SAChBpK,OAAQ,WAEVzB,QAAO,wBAAE,uBAAA9B,EAAA,6DACP4E,IADO,SAED/T,EAAOyP,aAFN,OAGPuE,EAAQC,KAAK,KAHN,2CATX,SAeE,eAACzC,GAAD,CAAQ9W,KAAM,GAAI8K,MAAO,OAAQ9B,KAAM,oBC7DtC,SAASypB,GAAT,GA2BT,IA1BJ1G,EA0BG,EA1BHA,MACAjmB,EAyBG,EAzBHA,KACA4sB,EAwBG,EAxBHA,QACA3sB,EAuBG,EAvBHA,MACA4sB,EAsBG,EAtBHA,eACAC,EAqBG,EArBHA,eACAC,EAoBG,EApBHA,YACAC,EAmBG,EAnBHA,SACAjf,EAkBG,EAlBHA,SACAkf,EAiBG,EAjBHA,QACAhU,EAgBG,EAhBHA,MAgBG,IAfH/b,aAeG,MAfK,IAeL,MAdHiI,aAcG,aAbH+nB,eAaG,aAZHC,cAYG,SAXHlE,EAWG,EAXHA,GAEAmE,GASG,EAVHC,WAUG,EATHD,aAEA1f,GAOG,EARH4f,aAQG,EAPH5f,SACAge,EAMG,EANHA,SACA6B,EAKG,EALHA,aACAC,EAIG,EAJHA,SACApzB,EAGG,EAHHA,OACAgU,EAEG,EAFHA,MAGA,OACE,gBAACsC,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTC,cAAe,MACfC,WAAY,SACZ1C,OAAQA,QAAkBkW,GAL9B,WASI4c,GACA,eAACxc,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTM,MAAO,IACPJ,WAAY,SACZe,OAAQ,GACRvC,QAAS,IANb,SASE,eAACuU,GAAA,EAAD,UAAaoJ,MAGjB,eAACwU,GAAA,EAAD,CACEL,YAAaA,EACbC,YAAU,EACVT,QAASA,EACTc,eAAgB,SAACC,GAAD,OACR,OAANA,QAAM,IAANA,OAAA,EAAAA,EAASjC,IACLiC,EAAOjC,GACPtd,EAAK,OACLuf,QADK,IACLA,OADK,EACLA,EAAQnqB,QACF,OAANmqB,QAAM,IAANA,OAAA,EAAAA,EAAQ3tB,MACR2tB,EAAO3tB,KACP,IAEN4tB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAOtU,MAAQwU,EAAOxU,KAC7DyU,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CACEvf,MAAOA,EACPkD,KAAMqc,EACNjC,SAAUA,KAGdzrB,MAAOA,EACPutB,SAAUA,EACV9M,SAAU,SAACrhB,EAAG0uB,GACZlB,EAAekB,GACfjB,GAAe,GACXS,GACFA,EAAa,OAGjB/c,MAAO,CAAEwd,kBAAmB/E,QAAU3Y,GACtC5C,QAASA,EAAU,CAAEugB,MAAOvgB,EAAQtP,gBAAckS,EAClD4d,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEprB,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOid,EAAUjU,OAAQ3I,EACzBrV,QAAQ,WACR2S,MAAOmf,EACPvc,MAAO,CAAEtT,SACTkxB,gBAAiB,CACf5d,MAAO,CAAE7U,SAAU,KAErBuU,SAAU,SAAC1I,GACTwlB,EAASqB,QAAU7mB,EACnBuG,EAASvG,UAKhBrC,GACC,eAACsoB,GAAA,EAAD,CACEJ,YAAU,EACVT,QAASA,EACTQ,YAAaA,EACbM,eAAgB,SAACC,GAAD,OAAiBA,EAAOxoB,OACxCyoB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAOtU,MAAQwU,EAAOxU,KAC7DyU,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAYxoB,OAAK,EAACmM,KAAMqc,KAE1B1tB,MAAOA,EACPygB,SAAU,SAACrhB,EAAG0uB,GACZlB,EAAekB,GACfjB,GAAe,IAEjBtc,MAAO,CAAEwd,kBAAmB,IAC5BE,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEprB,GAAG,QACH/C,KAAK,QACL/E,QAAQ,WACRgV,MAAOid,EAAUjH,EAAMqI,iBAAche,EACrC1C,MAAOmf,EACPvc,MAAO,CAAEtT,MAAO,KAChBkxB,gBAAiB,CACf5d,MAAO,CAAE7U,SAAUyS,EAAQ,GAAK,YAMxC+e,GACA,eAACnF,GAAA,EAAD,CACEuG,oBAAkB,EAClB9d,QAAS,WACHwc,GAASA,KAHjB,SAME,eAAC,KAAD,S,wBC3IK,SAASuB,GAAT,GAMX,IALFC,EAKC,EALDA,SACAxsB,EAIC,EAJDA,MACAysB,EAGC,EAHDA,kBACAC,EAEC,EAFDA,KACAvgB,EACC,EADDA,MAEMwgB,EAAUxgB,EAAQ,sEAAiB,kBACzC,OACE,eAACsC,GAAA,EAAD,UACG+d,EAAS5b,KAAI,SAACzQ,GACb,IAC8B,EAA9B,OAAIA,EAAOspB,WAAaiD,EAEpB,gBAACje,GAAA,EAAD,WACE,eAACme,GAAA,EAAD,CACEC,QACE,eAACvO,GAAA,EAAD,CACEE,SAAc,OAALxe,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,eAA0BrpB,SAAS,EAC5Cqe,SAAU,kBACRgO,EAAkB,CAChBtsB,OAAQA,EAAOspB,SACfnpB,OAAQ,KACRM,KAAM,WAGV7C,KAAMoC,EAAOspB,SAASrpB,MACtB2C,MAAM,YAGViL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQuV,MAAO,CAAE2Q,WAAY,QAAjD,SACGyN,MAIP,eAACle,GAAA,EAAD,UAzBU,CAAC,MAAO,MAAO,MAAO,OA0BrBmC,KAAI,SAACkc,GAAa,IAAD,gDACxB,OACE,+BACE,gBAACC,GAAA,EAAD,CAAW9R,KAAG,EAAd,UACE,eAACxM,GAAA,EAAD,CAAKF,MAAO,CAAEye,SAAU,IAAKvyB,UAAW,IAAxC,SACE,eAACmT,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,QAFvB,SAIG/S,EACG7K,GAAawrB,GAAIvrB,OACjBD,GAAawrB,GAAI/uB,SAGzB,eAAC6uB,GAAA,EAAD,CACEC,QACE,eAACvO,GAAA,EAAD,CACEE,SACO,OAALxe,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,mBAA2BqD,UAA3B,eAAgC1sB,SAAS,EAE3Cqe,SAAU,kBACRgO,EAAkB,CAChBtsB,OAAQA,EAAOspB,SACfnpB,OAAQwsB,EACRlsB,KAAM,WAGV3I,KAAK,QACLszB,SAAQ,OAAEvrB,QAAF,IAAEA,GAAF,UAAEA,EAAQG,EAAOspB,iBAAjB,aAAE,EAA0BrpB,MACpC6sB,cAAa,OAAEjtB,QAAF,IAAEA,GAAF,UAAEA,EAAQG,EAAOspB,iBAAjB,aAAE,EAA0BrpB,MACzCrC,KAAI,UAAK+uB,EAAL,SACJ/pB,MAAM,YAGViL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQ+J,MAAM,gBAAlC,SACGoJ,EAAQ,2BAAS,YAIxB,eAACygB,GAAA,EAAD,CACEC,QACE,eAACvO,GAAA,EAAD,CACEE,SACO,OAALxe,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,mBAA2BqD,UAA3B,eAAgChH,QAAQ,EAE1CrH,SAAU,kBACRgO,EAAkB,CAChBtsB,OAAQA,EAAOspB,SACfnpB,OAAQwsB,EACRlsB,KAAM,UAGV3I,KAAK,QACLszB,UACO,OAALvrB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,eAA0BrpB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAOspB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgC1sB,OAElC6sB,eACO,OAALjtB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,eAA0BrpB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAOspB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgC1sB,OAElCrC,KAAI,UAAK+uB,EAAL,QACJ/pB,MAAM,YAGViL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQ+J,MAAM,gBAAlC,SACGoJ,EAAQ,2BAAS,aAIxB,eAACygB,GAAA,EAAD,CACEC,QACE,eAACvO,GAAA,EAAD,CACEE,SACO,OAALxe,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,mBAA2BqD,UAA3B,eAAgCnM,QAAQ,EAE1ClC,SAAU,kBACRgO,EAAkB,CAChBtsB,OAAQA,EAAOspB,SACfnpB,OAAQwsB,EACRlsB,KAAM,UAGV3I,KAAK,QACLszB,UACO,OAALvrB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,eAA0BrpB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAOspB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgC1sB,SADhC,OAEAJ,QAFA,IAEAA,GAFA,UAEAA,EAAQG,EAAOspB,iBAFf,iBAEA,EAA2BqD,UAF3B,aAEA,EAAgChH,MAElCmH,eACO,OAALjtB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAOspB,iBAAf,eAA0BrpB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAOspB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgC1sB,SADhC,OAEAJ,QAFA,IAEAA,GAFA,UAEAA,EAAQG,EAAOspB,iBAFf,iBAEA,EAA2BqD,UAF3B,aAEA,EAAgChH,MAElC/nB,KAAI,UAAK+uB,EAAL,QACJ/pB,MAAM,YAGViL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQ+J,MAAM,gBAAlC,SACGoJ,EAAQ,iCAAU,gBApGnB2gB,UAzBR3sB,EAAOspB,UAyIZ,wBAAUtpB,EAAOspB,e,YChFnByD,GAxEM,SAACn1B,GAAD,OACnB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAUgG,KAAK,eAAf,SACE,eAAC,KAAD,UACG,cASK,IAEAovB,EACAC,EAXFC,EAQC,EARDA,KAAMvJ,EAQL,EARKA,SAAUwJ,EAQf,EAReA,UAAWC,EAQ1B,EAR0BA,cAAeC,EAQzC,EARyCA,WAE1CC,EAMC,EANDA,aACAC,EAKC,EALDA,gBACAC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,kBACAC,EAEC,EAFDA,gBAGIC,EAAQR,EAAUzb,OAAS,EAGjC,GAAIic,EAEFX,EAAYG,EADZF,EAAQ,OAEH,CAAC,IAAD,eACKG,EADL,GACJH,EADI,KAEL,IAAMW,EAAYV,EAAKjb,QACrB,SAAC6I,GAAD,OAAc6I,EAAS7I,KAASmS,KAChC,GACFD,EAAS,6BAAQY,GAAcP,EAAWJ,IAG5C,IAAMY,EAASF,EAAQ,CAAC,GAAKP,EAmBvB3d,EAAO2d,EAAc1b,OAAS,GAAKic,EACzC,OACE,+BACGne,KAAMse,aAAal2B,EAAMmxB,SAAzB,6BACInxB,GADJ,IAEC6X,OACAke,QACA7S,IAAKkS,EACLlE,QAjBgB,WAChB6E,EACFJ,EAAgB,CAAEM,YAElBP,EAAa,CAAEO,WACfL,EAAkB,CAAEK,aAalBE,UAAWn2B,EAAMm2B,UACjBC,WAAYp2B,EAAMo2B,WAClBC,aA5Be,WACfN,EACFD,EAAgB,CAAEG,YAElBP,EAAa,CAAEO,WACfJ,EAAkB,CAAEI,uBA8B9B,gBAAC,KAAD,CAAUjwB,KAAK,OAAf,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAqBA,KAAK,wB,qBCtCjBswB,GA/BK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUvrB,EAAiB,EAAjBA,MAAiB,EAC5B2I,oBAAS3I,GADmB,oBACzC6W,EADyC,KACrC2U,EADqC,KAUhD,OACE,eAAC9f,GAAA,EAAD,CACEF,MAAO,CACLsb,YAAa,GACbxZ,WAAY,EACZ2V,aAAc,GACdnrB,WAAY,SACZwf,eAAgB,SAChBzf,cAAe,UAPnB,SAUE,eAAC,KAAD,CACE4G,OAAQA,GACRuB,MAAO6W,GAAM,QACb3e,MAAO,IACPuzB,cAAY,EACZ/P,SAvBuB,SAAC+K,GAC5B+E,EAAM/E,EAAIiF,KACNH,GACFA,EAAS9E,EAAIiF,WCcbC,GAAgBp0B,cAAW,SAACC,GAAD,aAC/Ba,aAAa,CACX+U,OAAQ,CACNqP,UAAW,QACX,gBAAiB,CACf9lB,SAAU,QAGZqJ,MAAOmM,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,KAEhDgW,OAAQ,CACNoP,UAAW,QACX,gBAAiB,CACf9lB,SAAU,QAGZqJ,MAAOmM,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,KAEhDkB,QAASf,EAAMgB,OAAOD,QACtBqzB,YAAa,CACX1zB,MAAOwG,GACP1G,gBAAiBR,EAAMR,QAAQC,QAAQC,MAEzC20B,gBAAiB,CACfC,SAAU,QAEZC,QAAM,oBACHv0B,EAAMw0B,YAAYC,GAAG,MAAQ,CAC5B/zB,MAAOwG,GACPwtB,WAAY,IAHV,iCAKa10B,EAAMR,QAAQC,QAAQC,MALnC,GAON+V,MAAO,CACLtW,SAAU,QACV2W,WAAY,GACZ6e,cAAe,GACf,UAAW,CACTn0B,gBAAiBR,EAAMR,QAAQC,QAAQm1B,QAG3Cle,OAAQ,CACN5X,QAAS,GACTwwB,YAAa,GACb9uB,gBAAiBR,EAAMR,QAAQC,QAAQC,KACvC,UAAW,CACTc,gBAAiBR,EAAMR,QAAQC,QAAQm1B,QAG3CC,KAAM,CACJz0B,QAAS,QAEXsG,KAAM,CACJtG,QAAS,OACTE,WAAY,SACZwf,eAAgB,WAChBtf,gBAAiB,WAEnBs0B,OAAO,gBACJ90B,EAAMw0B,YAAYC,GAAG,MAAQ,CAC5B/zB,MAAM,eAAD,OAAiBwG,GAAjB,OACLtI,WAAYsI,KAGhB6tB,WAAW,cACTl2B,YAAamB,EAAMG,QAAQ,IAC1BH,EAAMw0B,YAAYC,GAAG,MAAQ,CAC5Br0B,QAAS,SAGba,QAAS,CACP+zB,SAAU,EACVl2B,QAASkB,EAAMG,QAAQ,IAGzB,UAAW,CACT,uBAAwB,CACtBO,MAAO,SAET,6BAA8B,CAC5B,qBAAsB,iCAExB,6BAA8B,CAC5BF,gBAAiB,wBA0HVy0B,OAnHf,SAAmBz3B,GAAkB,IAC3BkV,EAAWlV,EAAXkV,OACFsE,EAAUke,eAERjgB,EAA8DzX,EAA9DyX,SAAUD,EAAoDxX,EAApDwX,YAAa8B,EAAuCtZ,EAAvCsZ,KAAMlF,EAAiCpU,EAAjCoU,MAAO1N,EAA0B1G,EAA1B0G,KAAMK,EAAoB/G,EAApB+G,QAASwS,EAAWvZ,EAAXuZ,OACrD7F,EAAUijB,KACVn0B,EAAQm1B,eANoB,EAOE/f,KAAMjE,UAAS,GAPjB,oBAO3BikB,EAP2B,KAOfjgB,EAPe,KAS5BkgB,EAAqB,WACzBlgB,GAAeigB,IAEXE,OACOxhB,IAAXpB,EAAuB,kBAAMA,IAAS6iB,SAASC,WAAO1hB,EAExD,OACE,uCACE,eAAC2hB,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,eAACC,GAAA,EAAD,CAAQpR,SAAS,QAAQrR,UAAWjC,EAAQ4jB,OAA5C,SACE,gBAACe,GAAA,EAAD,WACE,eAACrK,GAAA,EAAD,CACEhjB,MAAM,UACNstB,aAAW,cACXC,KAAK,QACL9hB,QAASohB,EACTliB,UAAWjC,EAAQ6jB,WALrB,SAOE,eAAC,KAAD,MAEF,eAAC7gB,GAAA,EAAD,CAAKF,MAAO,CAAE9S,KAAM,GAApB,SACE,eAAC8uB,GAAD,CACEC,QAAM,EACNre,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACNK,QAASA,aAOnB,uBAAK4O,UAAW6iB,aAAK9kB,EAAQqjB,QAASuB,aAAW,kBAAjD,UACE,eAACL,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,eAACM,GAAA,EAAD,CACEX,UAAWA,EACX72B,QAAQ,YACR4W,KAAM+f,EACN1G,QAAS2G,EACTnkB,QAAS,CACPjR,MAAOiR,EAAQkjB,aAEjB8B,WAAY,CACVC,aAAa,GATjB,SAYE,eAAC,GAAD,CACErf,KAAMA,EACN7B,SAAUA,EACVD,YAAaA,EACb9D,QAASA,EACTU,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACNiR,cAAeA,EACf4B,OAAQA,EACR/T,OAAQA,GACRgU,QAASA,QAIf,eAACye,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,gBAACM,GAAA,EAAD,CACE/kB,QAAS,CACPjR,MAAOiR,EAAQkjB,aAEjB31B,QAAQ,YACR4W,MAAI,EACJrB,MAAO,CAAE8B,WAAY,IANvB,UAQE,eAACka,GAAD,CACEpe,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACNK,QAASA,EACTwS,OAAQA,EACR/T,OAAQA,GACRgU,QAASA,IAEX,eAAC9C,GAAA,EAAD,CACEF,MAAO,CACL3S,OAAQ,EACRnB,UAAW,GACXM,gBAAiB,UAGrB,eAAC,GAAD,CACEsW,KAAMA,EACN7B,SAAUA,EACVD,YAAaA,EACb9D,QAASA,EACTU,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACN6S,OAAQA,EACR/T,OAAQA,GACRgU,QAASA,gB,8BC1NVqf,GAAa,SAAC,GAA2B,IAAzB5yB,EAAwB,EAAxBA,MAAO+E,EAAiB,EAAjBA,MAClC,OACE,eAAC6K,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,GAAIwlB,WAAY,OAAQnc,SAAvD,SACG/E,KAWM6yB,GAAW,SAAC,GAAqB,IAAnB5vB,EAAkB,EAAlBA,KAAM8B,EAAY,EAAZA,MAC/B,OACE,eAAC0L,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACR0e,aAAc,GACdzf,WAAY,SACZwf,eAAgB,UAPpB,SAUE,eAACtL,GAAD,CAAQhM,MAAOA,EAAO9B,KAAMA,OAqBrB6vB,GAAY,SAAC,GAA2B,IAAzB9Z,EAAwB,EAAxBA,MAAOjU,EAAiB,EAAjBA,MACjC,OACE,eAAC6K,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,GAAIwlB,WAAY,OAAQnc,SAAvD,SACGiU,KChDQ,SAAS+Z,GAAT,GAA4D,IAAzC/Z,EAAwC,EAAxCA,MAAOhZ,EAAiC,EAAjCA,MAAOiD,EAA0B,EAA1BA,KAAM8B,EAAoB,EAApBA,MAAOqiB,EAAa,EAAbA,KAC3D,OACE,eAAC4L,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,KAAxB,SACE,eAAC6S,GAAA,EAAD,CAAKwiB,EAAG,EAAR,SACE,gBAACC,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,UAFjD,UAIE,eAAC,GAAD,CAAUtX,MAAOA,EAAO9B,KAAMA,IAC9B,eAAC,GAAD,CAAW8B,MAAOA,EAAOiU,MAAOA,SAGpC,gBAACka,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,UAFjD,SAIE,eAAC,GAAD,CAAYtX,MAAOA,EAAO/E,MAAOA,MAElConB,GACC,gBAAC,KAAMqF,SAAP,WACE,eAAC2G,GAAA,EAAD,IACA,eAAC3iB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEpV,WAAY,GAAIC,YAAa,IAA1D,SACE,eAACwU,GAAA,EAAD,CACEW,MAAO,CAAE8iB,UAAW,SAAUtuB,MAAO,QACrC/J,QAAQ,UAFV,SAIGosB,mB,qCCKRkM,GAAgB,SAAC,GAAyB,IAAvB5P,EAAsB,EAAtBA,KAAM3jB,EAAgB,EAAhBA,KAWpC,MAAO,CACLsa,MAXYjb,KAAEskB,GACb6P,QAAQxzB,GACR6S,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpB1zB,KAAM0zB,EACNC,MAAOt0B,KAAEu0B,OAAOH,EAAO,OAAO3f,OAC9B0L,MAAOngB,KAAEw0B,MAAMJ,EAAO,cAEvBxzB,QAKD0zB,MAJYhQ,EAAK7P,OAKjB0L,MAJYngB,KAAEw0B,MAAMlQ,EAAM,Y,iCC9CjBmQ,GAAmB,SAAC,GAOrB,IANVvpB,EAMS,EANTA,gBACAmW,EAKS,EALTA,SACAtS,EAIS,EAJTA,MACA6X,EAGS,EAHTA,MACA8N,EAES,EAFTA,MACAC,EACS,EADTA,kBAEMtmB,EAAU1P,KAEhB,OACE,eAAC0S,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,OAH/B,SAME,eAAC6lB,GAAA,EAAD,CAAatkB,UAAWjC,EAAQzP,YAAhC,SACE,gBAACi2B,GAAA,EAAD,CACEnxB,GAAG,cACH9C,MAAOsK,EACPmW,SAAU,SAACzgB,GACTygB,EAASzgB,GACT+zB,EAAkB,IAAIvpB,OAExBxP,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRlC,SAAU,GACVwlB,WAAY,OACZnc,MAAO,QAZX,UAeG+uB,GAASA,EAAMva,SAAS,IACvB,eAAC,KAAD,CACEhJ,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAM,MAFR,SAIGgmB,EAAMrL,MAGVmZ,GAASA,EAAMva,SAAS,IACvB,eAAC,KAAD,CACEhJ,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAM,QAFR,SAIGgmB,EAAMkO,QAGVJ,GAASA,EAAMva,SAAS,IACvB,eAAC,KAAD,CACEhJ,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAM,OAFR,SAIGgmB,EAAMmO,OAGVL,GAASA,EAAMva,SAAS,KACvB,eAAC,KAAD,CACEhJ,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAM,QAFR,SAIGgmB,EAAMvL,QAGVqZ,GAASA,EAAMva,SAAS,MACvB,eAAC,KAAD,CACEhJ,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAM,OAFR,SAIGgmB,EAAMxL,OAIVsZ,GAASA,EAAMva,SAAS,MACvB,eAAC,KAAD,CACEhJ,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAM,SAFR,SAIGmO,EAAQ,2BAAS,wB,gFC/DjB,SAASimB,GAAT,GAWN,IAVPjmB,EAUM,EAVNA,MACA6X,EASM,EATNA,MACAqO,EAQM,EARNA,SACAC,EAOM,EAPNA,OACA/3B,EAMM,EANNA,MACAgO,EAKM,EALNA,YACAD,EAIM,EAJNA,gBACAiqB,EAGM,EAHNA,sBACAR,EAEM,EAFNA,kBACAD,EACM,EADNA,MACM,EAC8BpmB,oBAAS,iBADvC,oBACC8mB,EADD,KACaC,EADb,OAEuB/mB,qBAAS,GAFhC,oBAECkE,EAFD,KAEOC,EAFP,KAIN6iB,sBAAU,WAAO,IAAD,EACsBhS,GAAqB,CACvDlF,KAAMjT,EACNoY,KAAMrY,EACN6D,UAHMvN,EADM,EACNA,MAAOC,EADD,EACCA,IAAKgiB,EADN,EACMA,OAKpBwR,EAASzzB,GACT0zB,EAAOzzB,GACP4zB,EAAc5R,KACb,CAACtY,EAAaD,IAEjB,IAAMqqB,EAAc,WAClB,GAAwB,QAApBrqB,EAA2B,CAC7B,IAAMsqB,EAAW,IAAIpqB,KAAKD,GAC1BqqB,EAAS7R,QAAQ6R,EAASha,UAAY,GACtCmZ,EAAkBa,QACb,GAAwB,UAApBtqB,EAA6B,CACtC,IAAMuqB,EAAY,IAAIrqB,KAAKD,GAC3BsqB,EAAU9R,QAAQ8R,EAAUja,UAAY,GACxCmZ,EAAkBc,QACb,GAAwB,SAApBvqB,EAA4B,CACrC,IAAMwqB,EAAW,IAAItqB,KAAKD,GAC1BuqB,EAAS/R,QAAQ+R,EAASla,UAAY,GACtCmZ,EAAkBe,QACb,GAAwB,UAApBxqB,EAA6B,CACtC,IAAMyqB,EAAY,IAAIvqB,KAAKD,GAC3BwqB,EAAU/Q,SAAS+Q,EAAUra,WAAa,GAC1CqZ,EAAkBgB,QACb,GAAwB,SAApBzqB,EAA4B,CACrC,IAAM0qB,EAAW,IAAIxqB,KAAKD,GAC1ByqB,EAASC,YAAYD,EAASlkB,cAAgB,GAC9CijB,EAAkBiB,KAGhBE,EAAe,WACnB,GAAwB,QAApB5qB,EAA2B,CAC7B,IAAM6qB,EAAY,IAAI3qB,KAAKD,GAC3B4qB,EAAUpS,QAAQoS,EAAUva,UAAY,GACxCmZ,EAAkBoB,QACb,GAAwB,UAApB7qB,EAA6B,CACtC,IAAM8qB,EAAY,IAAI5qB,KAAKD,GAC3B6qB,EAAUrS,QAAQqS,EAAUxa,UAAY,GACxCmZ,EAAkBqB,QACb,GAAwB,SAApB9qB,EAA4B,CACrC,IAAM+qB,EAAW,IAAI7qB,KAAKD,GAC1B8qB,EAAStS,QAAQsS,EAASza,UAAY,GACtCmZ,EAAkBsB,QACb,GAAwB,UAApB/qB,EAA6B,CACtC,IAAMgrB,EAAY,IAAI9qB,KAAKD,GAC3B+qB,EAAUtR,SAASsR,EAAU5a,WAAa,GAC1CqZ,EAAkBuB,QACb,GAAwB,SAApBhrB,EAA4B,CACrC,IAAMirB,EAAW,IAAI/qB,KAAKD,GAC1BgrB,EAASN,YAAYM,EAASzkB,cAAgB,GAC9CijB,EAAkBwB,KAGhBhI,EAAWiI,KAAO,IAAIhrB,MAAQirB,OAAOlrB,EAAa,OAExD,OACE,gBAACkG,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,aAChBjhB,YAAa,GACbD,WAAY,IANhB,UASE,eAAC62B,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,eAAC5hB,GAAA,EAAD,CACEC,MAAO,CACL9T,UAAW,EACXmB,OAAQ,GACRX,MAAO,GACP5B,QAAS,EACTlB,OAAQ,EACRgB,WAAY,EACZ4B,gBAAiBmU,aACf3U,EAAMR,QAAQC,QAAQkX,KACtBqa,EAAW,GAAM,KAGrBtzB,KAAK,QACLszB,SAAUA,EACV/c,QAAS,kBAAMujB,EAAkB,IAAIvpB,OAfvC,SAiBE,eAACoF,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOwoB,EAAW,OAAShxB,EAAMR,QAAQC,QAAQC,MAJrD,SAOGkS,EAAQ,2BAAS,YAKxB,eAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC,GAAD,CACE2N,gBAAiBA,EACjBmW,SAAU8T,EACVR,kBAAmBA,EACnB5lB,MAAOA,EACP6X,MAAOA,EACP8N,MAAOA,MAGX,gBAACrjB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,iBAJpB,UAOE,gBAAC0L,GAAA,EAAD,CACEhjB,MAAM,UACNwL,MAAO,CAAE9T,UAAW,GACpB+T,QAASrC,EAAQwmB,EAAcO,EAHjC,UAKG/mB,GACC,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,WAGhCoJ,GACA,eAAC,KAAD,CAA0BoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,aAG5D,gBAACgjB,GAAA,EAAD,CACEhjB,MAAM,UACNwL,MAAO,CAAE9T,UAAW,EAAGtB,WAAY,GACnCqV,QAASrC,EAAQ+mB,EAAeP,EAHlC,UAKGxmB,GACC,eAAC,KAAD,CAA0BoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,WAExDoJ,GACA,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,aAIpC,eAACuL,GAAA,EAAD,CACEC,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,GACR34B,gBAAiB,OACjBa,OAAQ,IAEV4S,QAAS,kBAAMqB,GAAQ,IAPzB,SASE,eAACjC,GAAA,EAAD,CAAY7K,MAAM,UAAU/J,QAAQ,SAApC,SACGw5B,MAGL,eAAC,KAAD,CACEmB,OAAQxnB,EAAQynB,KAAWC,KAC3BC,MAAOC,KAFT,SAIE,eAACC,GAAA,EAAD,CACEC,QAAM,EACNj7B,QAAQ,SACRk7B,aAAa,WACbC,OAAO,aACPh8B,OAAO,QACP2I,GAAG,qBACH9C,MAAOuK,EACPkW,SAAUsT,EACVniB,KAAMA,EACNqZ,QAAS,kBAAMpZ,GAAQ,IACvBukB,eACEjoB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJkoB,cACEloB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJoC,MAAO,CACLhV,UAAW,MACXwlB,SAAU,WACV8H,KAAM1a,EAAQ,QAAKkC,EACnB4Q,MAAO9S,OAAQkC,EAAY,GAC3B2Q,OAAQ,GACR0U,QAAS,GACTj5B,UAAW,EACXmB,OAAQ,EACRvC,QAAS,EACTlB,OAAQ,EACR8C,MAAO,a,aCpON,SAASq5B,GAAYv8B,GAClC,OACE,yBAAC,KAAYw8B,MAAb,6BACMx8B,GADN,IAGEy8B,YAAaz8B,EAAMoU,MAAQ,qBAAQ,SACnCnT,QAAQ,WACRy4B,IAAK,YCRI,SAASgD,GAAT,GAAqD,IAA/Br1B,EAA8B,EAA9BA,KAAMsnB,EAAwB,EAAxBA,IAAKva,EAAmB,EAAnBA,MAAOwa,EAAY,EAAZA,IACrD,OACE,eAACC,GAAA,EAAD,CACErY,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3B4S,SAAU,WACVC,OAAQ2H,OAAMtY,EAAY,GAC1BsY,IAAKA,EAAM,QAAKtY,EAChBpT,MAAO0rB,EAAM1Z,OAAOynB,WAAa,IAAM,OACvC94B,OAAQ+qB,EAAM,QAAKtY,EACnBxT,WAAY,SACZgvB,YAAa,GACbC,aAAc,IAEhBhD,SAAU1nB,EAZZ,SAcGsnB,I,cCsGQiO,GAzGO,SAAC,GAQX,IAPVxoB,EAOS,EAPTA,MACA6B,EAMS,EANTA,MACAhQ,EAKS,EALTA,MACAygB,EAIS,EAJTA,SAIS,IAHT0V,cAGS,MAHA,aAGA,EAFT3Y,EAES,EAFTA,KACGqH,EACM,qEAET,OACE,gBAAC,KAAD,2BACE8Q,OAAQxnB,EAAQynB,KAAWC,KAC3BC,MAAOC,MACHlR,GAHN,eAKIrH,GACA,eAAC,KAAD,cACEyY,QAAM,EAINW,eAAgBzoB,EAAQ,yFAAqB,eAC7C0oB,eAAgB1oB,EAAQ,yFAAqB,eAC7CnT,QAAQ,SACRm7B,OAAQA,EACRh8B,OAAO,SACP2I,GAAG,qBACHkN,MAAOA,EACPhQ,MAAOA,EACPygB,SAAUA,EACVqW,oBAAqB,CACnB,aAAc,eAEhBvmB,MAAO,CAAEtT,MAAO,KAChBm5B,eACEjoB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,MAIzB26B,cACEloB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,OAIrBmpB,IAGPrH,GACC,eAACuZ,GAAA,EAAD,cACEd,QAAM,EACNj7B,QAAQ,SAGR47B,eAAgBzoB,EAAQ,yFAAqB,eAC7C0oB,eAAgB1oB,EAAQ,yFAAqB,eAC7CrL,GAAG,mBACHkN,MAAOA,EACPjQ,KAAK,YACLm2B,aAAa,WACbC,OAAO,mBACPn2B,MAAOA,EACPygB,SAAUA,EACVlQ,MAAO,CAAEtT,MAAO,KAChBm5B,eACEjoB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,MAIzB26B,cACEloB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,OAIrBmpB,SC7GC,SAASmS,GAAT,GAcN,IAbPlpB,EAaM,EAbNA,SACAE,EAYM,EAZNA,OACAjO,EAWM,EAXNA,KACAiQ,EAUM,EAVNA,MACAiN,EASM,EATNA,IASM,IARN/Y,gBAQM,aAPN6L,iBAOM,SANN9S,EAMM,EANNA,MACAouB,EAKM,EALNA,QAEAlb,GAGM,EAJNhW,OAIM,EAHNgW,WAGM,IAFN8mB,UAEM,MAFD,GAEC,EADH/d,EACG,8HACN,OACE,eAACpJ,GAAA,EAAD,cACEC,UAAWA,EACXI,UAAWA,EACXmb,aAAa,MACbpnB,SAAUA,EACVnE,KAAMA,EAENM,cAAiB,OAAH4c,QAAG,IAAHA,OAAA,EAAAA,EAAMld,KAASsrB,GAAW,GACxCrb,MAAOA,EACPrC,QAAOK,KAAUA,EAAOjO,GACxBkQ,SAAUnC,EACV9S,QAAQ,WACRuV,MAAO,CAAEtT,QAAO+qB,aAAciP,GAC9B98B,OAAO,SACH+e,ICnBQ5c,cAAW,SAACC,GAAD,OAC3Ba,aAAa,CACXi0B,OAAQ,CACNqE,OAAQn5B,EAAMm5B,OAAO5E,OAAS,EAC9B,qBAAsB,OACtB/zB,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQm1B,MAAO,IAErD+F,QAAS,CACPnyB,MAAOxI,EAAMR,QAAQo7B,KAAK,KAC1Bz7B,SAAU,IAEZ07B,aAAc,CACZryB,MAAOxI,EAAMR,QAAQo7B,KAAK,KAC1B,qBAAsB,UACtBxO,KAAM,EACN,UAAW,CACT5rB,gBAAiB,gBAGrBs6B,iBAAkB,CAChBtyB,MAAOxI,EAAMR,QAAQo7B,KAAK,KAC1Bz7B,SAAU,GACV,qBAAsB,UACtBitB,KAAM,EACN,UAAW,CACT5rB,gBAAiB,qB,oFCnBVu6B,GAlBY,SAACv9B,GAAgB,IAClCgL,EAAiBhL,EAAjBgL,MAAOiU,EAAUjf,EAAVif,MACf,OACE,gBAACvI,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVwlB,WAAY,OACZnc,MAAOA,EACP1J,QAAS,IALb,SAQG2d,IAEH,eAACoa,GAAA,EAAD,QCkCSmE,GArCe,SAACx9B,GAAgB,IACrC6Q,EAA8C7Q,EAA9C6Q,KAAM7F,EAAwChL,EAAxCgL,MAAOyyB,EAAiCz9B,EAAjCy9B,QAAS55B,EAAwB7D,EAAxB6D,OAAQuQ,EAAgBpU,EAAhBoU,MAAOspB,EAAS19B,EAAT09B,KACvCze,EAAQ7K,EAAQ,8FAAqB,aAC3C,OACE,gBAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOjU,MAAO0yB,IAClC,eAACC,GAAA,EAAD,CAAqBz6B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAAC+5B,GAAA,EAAD,CACE/5B,OAAQA,EACRzD,OAAQ,CACNwuB,IAAK,GACL1H,MAAO,GACP4H,KAAM1a,EAAQ,GAAK,GACnB6S,OAAQ,IAEV4W,OAAO,QACPhtB,KAAMA,EATR,UAWE,eAACitB,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQjqB,EACRkqB,cAAe,SAACr4B,GAAD,OAAWA,EAAMyd,oBAElC,eAAC,KAAD,CAAS6a,UAAW,SAACt4B,GAAD,MAAW,CAACA,EAAMyd,qBACtC,eAAC8a,GAAA,EAAD,CACED,UAAW,kBAAOnqB,EAAQ,gGAAuB,gBAGnD,eAACqqB,GAAA,EAAD,CAAMp3B,KAAK,WAAWo2B,QAASA,EAASiB,OAAQ1zB,EAAO2zB,KAAM3zB,a,oBCKxD4zB,GArCY,SAAC5+B,GAAgB,IAClC6Q,EAAqD7Q,EAArD6Q,KAAM7F,EAA+ChL,EAA/CgL,MAAOyyB,EAAwCz9B,EAAxCy9B,QAAS55B,EAA+B7D,EAA/B6D,OAAQ65B,EAAuB19B,EAAvB09B,KAAMze,EAAiBjf,EAAjBif,MAAO7K,EAAUpU,EAAVoU,MAC7CyqB,EAAS1nB,aAAKnM,EAAO,IAC3B,OACE,gBAACiuB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOjU,MAAO0yB,IAClC,eAACC,GAAA,EAAD,CAAqBz6B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAACi7B,GAAA,EAAD,CACEj7B,OAAQA,EACRgN,KAAMA,EACNzQ,OAAQ,CACNwuB,IAAK,GACL1H,MAAO,GACP4H,KAAM1a,EAAQ,GAAK,GACnB6S,OAAQ,GAEV4W,OAAO,SATT,UAWE,eAACC,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQjqB,EACRkqB,cAAe,SAACr4B,GAAD,OAAWA,EAAMyd,oBAElC,eAAC,KAAD,CACExL,OAAQ,CAAEymB,KAAM,eAChBJ,UAAW,SAACt4B,GAAD,MAAW,CAACA,EAAMyd,qBAE/B,eAACqb,GAAA,EAAD,CAAKtB,QAASA,EAASkB,KAAME,IAvB/B,aC6COG,GAnDW,SAACh/B,GAAgB,IACjC6Q,EAAqC7Q,EAArC6Q,KAAMuD,EAA+BpU,EAA/BoU,MAAOvQ,EAAwB7D,EAAxB6D,OAAQ65B,EAAgB19B,EAAhB09B,KAAMl7B,EAAUxC,EAAVwC,MAC7BwD,EAAOoO,EAAQ,SAAW,OAE1B6qB,EAAQpuB,EAAKgI,KAAI,SAACqmB,GACtB,IAAMrc,EAAMqc,EAMZ,OALIA,EAAEtuB,QAAUsuB,EAAEtuB,OAAOkJ,OAAS,GAChColB,EAAEtuB,OAAOiI,KAAI,SAACsmB,GACZtc,EAAIsc,EAAGn5B,MAAQm5B,EAAGxF,SAGf9W,KAEH5D,EAAQ7K,EACV,4JACA,2BAEEgrB,EtE4LsB,SAAC58B,GAC7B,MAAO,CACL,CACEuG,GAAI,GACJ/C,KAAM,YACNwD,OAAQ,2BACRwB,MAAOmM,aAAK3U,EAAMR,QAAQC,QAAQm1B,MAAO,KAE3C,CACEruB,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,2BACRwB,MAAOmM,aAAK3U,EAAMR,QAAQG,UAAUi1B,MAAO,KAE7C,CACEruB,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,8CACRwB,MAAOmM,aAAK3U,EAAMR,QAAQG,UAAUi1B,MAAO,KAE7C,CACEruB,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,2BACRwB,MAAOmM,aAAK3U,EAAMR,QAAQG,UAAUi1B,MAAO,KAE7C,CACEruB,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,2BACRwB,MAAOmM,aAAK3U,EAAMR,QAAQG,UAAUi1B,MAAO,MsE1NjCiI,CAAe78B,GAC7B,OACE,gBAACy2B,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOjU,MAAO0yB,IAClC,eAACC,GAAA,EAAD,CAAqBz6B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAACi7B,GAAA,EAAD,CACEj7B,OAAQA,EACRgN,KAAMouB,EACN7+B,OAAQ,CACNwuB,IAAK,GACL1H,MAAO,GACP4H,KAAM1a,EAAQ,GAAK,EACnB6S,OAAQ,GAPZ,UAUE,eAAC6W,GAAA,EAAD,CAAeE,UAAU,EAAOD,gBAAgB,QAChD,eAACE,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACED,UAAU,EACVD,UAAU,EACVG,SAAQjqB,IAEV,eAAC,KAAD,CAAS8D,OAAQ,CAAEymB,KAAM,iBACxBS,EAAMvmB,KAAI,SAACiM,GACV,OACE,eAACia,GAAA,EAAD,CAAiBtB,QAAS3Y,EAAG9e,GAAOs5B,QAAQ,IAAIX,KAAM7Z,EAAG9Z,OAA/C8Z,EAAG/b,gBCkBZw2B,GA5DgB,SAACv/B,GAAgB,IACtC6Q,EAA2D7Q,EAA3D6Q,KAAM2uB,EAAqDx/B,EAArDw/B,SAAUC,EAA2Cz/B,EAA3Cy/B,SAAUhC,EAAiCz9B,EAAjCy9B,QAAS55B,EAAwB7D,EAAxB6D,OAAQuQ,EAAgBpU,EAAhBoU,MAAOspB,EAAS19B,EAAT09B,KACpDze,EAAQ7K,EAAQ,mIAA4B,qBAClD,OACE,gBAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOjU,MAAO0yB,IAClC,eAACC,GAAA,EAAD,CAAqBz6B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAAC+5B,GAAA,EAAD,CACE/5B,OAAQA,EACRzD,OAAQ,CACNwuB,IAAK,GACL1H,MAAO,GACP4H,KAAM1a,EAAQ,GAAK,GACnB6S,OAAQ,IAEV4W,OAAO,QACPhtB,KAAMA,EATR,UAWE,eAACitB,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQjqB,IAEV,eAAC,KAAD,CACEmqB,UAAW,SAACt4B,EAAYD,GAAb,MAA8B,CACvCC,EACS,UAATD,EAAoBoO,EAAQ,2BAAS,MAASpO,MAGlD,eAACw4B,GAAA,EAAD,CACED,UAAW,SAACt4B,GACV,MAAiB,UAAVA,EACHmO,EACE,gEACA,mBACFA,EACA,8FACA,eAIR,eAACqqB,GAAA,EAAD,CACEp3B,KAAK,WACLo2B,QAASA,EACTkB,KAAMc,EACNf,OAAQe,IAEV,eAAChB,GAAA,EAAD,CACEp3B,KAAK,WACLo2B,QAASrpB,EAAQ,2BAAS,YAC1BsqB,OAAQc,EACRb,KAAMa,a,8BCIHE,GAnEM,SAAC,GAAuD,IACvEC,EADkB97B,EAAoD,EAApDA,OAAQgN,EAA4C,EAA5CA,KAAM2uB,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SAAUrrB,EAAkB,EAAlBA,MAAOspB,EAAW,EAAXA,KAEzDkC,EAAY/uB,EAAKwJ,QAAO,SAAC6kB,GAAD,OAAyB,KAAbA,EAAEtuB,UACtCwP,EAAMvP,EAAKiJ,OAMXmlB,EAAQ,CAAC,CAAEh5B,MAJf05B,GADW,OAATC,QAAS,IAATA,OAAA,EAAAA,EAAW9lB,QAAS,EACR8lB,EAAU9lB,OAASsG,EAEnB,IAIdyf,EADoB,GACU,IAAMF,EAChC15B,EAAQ05B,EACV9V,KAAKiW,MAAoB,IAAdH,GAAmBjc,iBAAmB,IACjD,KAEEzE,EAAQ7K,EAAQ,6HAA2B,qBACjD,OACE,gBAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOjU,MAAO0yB,IAClC,eAACC,GAAA,EAAD,CAAqBz6B,MAAM,OAAOW,OAAO,OAAzC,SACE,gBAAC,KAAD,CACEA,OAAQA,EAAS,GACjBzD,OAAQ,CACNwuB,IAAK,GACL1H,MAAO,GACP4H,KAAM,GACN7H,OAAQ,IANZ,UASE,eAAC8Y,GAAA,EAAD,CACElvB,KAAM,CAAC,CAAE5K,MAAO,IAChB+5B,YAAY,MACZC,YAAY,OACZC,WAxBY,GAyBZC,UAAUC,IACVC,mBAAmB,EACnBC,aAAc,EACd3B,KAAMxnB,aAAKsoB,EAAU,IACrBhC,QAAQ,UAEV,eAACsC,GAAA,EAAD,CACElvB,KAAMouB,EACNe,YAAY,MACZC,YAAY,OACZC,WAnCY,GAoCZC,SAAUN,EACVU,aAAc,GACd5B,KAAMa,EACN/B,QAAQ,QACR+C,WAAW,EACXC,eAAgB,EAChBC,kBAAmB,IAXrB,SAaE,eAACC,GAAA,EAAD,CACE3Z,SAAS,SACT/gB,MAAOA,EACPuQ,MAAO,CAAE7U,SAAU,GAAIwlB,WAAY,QACnCwX,KAAMa,eC6BLoB,GA9Ee,SAAC5gC,GAAgB,IAE3C6Q,EAQE7Q,EARF6Q,KACAuD,EAOEpU,EAPFoU,MACApJ,EAMEhL,EANFgL,MACAnH,EAKE7D,EALF6D,OACAg9B,EAIE7gC,EAJF6gC,UACAC,EAGE9gC,EAHF8gC,YACA7hB,EAEEjf,EAFFif,MACAye,EACE19B,EADF09B,KAEIuB,EAAa,GACf4B,IACF,OAAIhwB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMgwB,YACRA,EAAUhoB,KAAI,SAACkoB,GAAc,IAAD,IACpB/6B,EAAOoO,EAAQ2sB,EAAIv3B,OAASu3B,EAAI/6B,KAChCC,EAAK,UAAG4K,EAAKgwB,UAAUxmB,QAAO,SAAC2mB,GAAD,OAAaA,EAAGh7B,OAASA,YAAlD,iBAAG,EAAuD,UAA1D,aAAG,EACVif,OAEJga,EAAMxlB,KAAK,CACTzT,OACAC,aAMJ66B,IACF,OAAIjwB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMiwB,cACRA,EAAYjoB,KAAI,SAACzP,GAAc,IAAD,IACtBpD,EAAOoO,EAAQhL,EAAII,OAASJ,EAAIpD,KAChCC,EAAK,UAAG4K,EAAKiwB,YAAYzmB,QAC7B,SAAC2mB,GAAD,OAAaA,EAAGh7B,OAASA,YADhB,iBAAG,EAEV,UAFO,aAAG,EAENif,OAERga,EAAMxlB,KAAK,CACTzT,OACAC,aAMR,IAAM44B,EAAS1nB,aAAKnM,EAAO,IAE3B,OACE,gBAACiuB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOjU,MAAO0yB,IAClC,eAACC,GAAA,EAAD,CAAqBz6B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAACi7B,GAAA,EAAD,CACEj7B,OAAQA,EACRgN,KAAMouB,EACN7+B,OAAQ,CACNwuB,IAAK,GACL1H,MAAO,GACP4H,KAAM1a,EAAQ,GAAK,GACnB6S,OAAQ,GAPZ,UAUE,eAAC6W,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQjqB,EACRkqB,cAAe,SAACr4B,GAAD,OAAWA,EAAMyd,oBAElC,eAAC,KAAD,CACExL,OAAQ,CAAEymB,KAAM,eAChBJ,UAAW,SAACt4B,GAAD,MAAW,CAACA,EAAMyd,qBAE/B,eAACqb,GAAA,EAAD,CAAKtB,QAAQ,QAAQkB,KAAME,aC/EtB,SAASoC,GAAT,GAON,IANPhiB,EAMM,EANNA,MACAhZ,EAKM,EALNA,MACAiD,EAIM,EAJNA,KAEAg4B,GAEM,EAHNl2B,MAGM,EAFNk2B,YACAC,EACM,EADNA,WAEMC,EAAKjqB,aAAK+pB,EAAY,IACjB/pB,aAAKgqB,EAAY,IAC5B,OACE,eAAClI,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,IAAKzB,WAAYg/B,GAAzC,SACE,eAAC1qB,GAAA,EAAD,CAAKwiB,EAAG,EAAR,SACE,gBAACC,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,UAFjD,UAIE,eAAC,GAAD,CAAUtX,MAAM,UAAU9B,KAAMA,IAChC,eAAC,GAAD,CAAW8B,MAAM,UAAUiU,MAAOA,SAGtC,eAACka,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,UAFjD,SAIE,eAAC,GAAD,CAAYtX,MAAM,UAAU/E,MAAOA,e,cCtBlC,cAAO,IAAD,IAGbmO,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgB66B,aAAaC,GAAgB,CAC9D1sB,UAAW,CAAER,WALI,oBAIZmtB,EAJY,KAIAC,EAJA,OAQKltB,aAAYmtB,GAAkB,CACpDC,eAAgB,CAAC,CAAEC,MAAOL,GAAgB1sB,UAAW,CAAER,aADlDwtB,EARY,uBAWMttB,aAAYutB,GAAkB,CACrDH,eAAgB,CAAC,CAAEC,MAAOL,GAAgB1sB,UAAW,CAAER,aADlD0tB,EAXY,uBAcQxtB,aAAYytB,GAAkB,CACvDL,eAAgB,CAAC,CAAEC,MAAOL,GAAgB1sB,UAAW,CAAER,aADlD4tB,EAdY,qBAkBnBrH,sBAAU,WACR4G,MACC,CAACA,IAIJ,MAAO,CACLT,aAHyB,OAAPU,QAAO,IAAPA,GAAA,UAAAA,EAAS3wB,YAAT,wDAAmCA,OAAQ,GAI7DoxB,kBAHwB,yBAAMT,QAAN,IAAMA,OAAN,EAAMA,EAASU,WAIvCN,gBACAE,iBACAE,qB,+BC7BW,SAASG,GAAWniC,GAAa,IAE5CmxB,EAMEnxB,EANFmxB,SACA1Z,EAKEzX,EALFyX,SACArD,EAIEpU,EAJFoU,MACAguB,EAGEpiC,EAHFoiC,QACA5/B,EAEExC,EAFFwC,MAN2C,EAQzCxC,EADFqiC,eAP2C,MAOjC7/B,EAAMR,QAAQC,QAAQm1B,MAPW,EASvCkL,EAAWC,aAAc,qBAE/B,OACE,gBAAC7rB,GAAA,EAAD,CAAKwiB,EAAGoJ,EAAW,EAAI,EAAGE,GAAIF,EAAW,OAAIhsB,EAA7C,UACE,eAAC2hB,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,gBAACc,GAAA,EAAD,CACEwJ,UAAW,EACXjsB,MAAO,CACLxT,gBAAiBmU,aAAKkrB,EAAS,IAC/BvQ,YAAa,GACbC,aAAc,GACdluB,OAAQ,GACRjB,QAAS,OACTc,KAAM,EACNZ,WAAY,SACZwf,eAAgB,gBAChBogB,qBAAsB,GACtBC,oBAAqB,GACrBC,uBAAwB,EACxBC,wBAAyB,GAd7B,UAiBE,eAAChtB,GAAA,EAAD,CACEW,MAAO,CACLxL,MAAOxI,EAAMR,QAAQC,QAAQC,KAC7BP,SAAU,IAHd,SAMGyS,EAAQqD,EAASzO,QAAUyO,EAASxO,UAEtCm5B,GACC,eAACpU,GAAA,EAAD,CACExX,MAAO,CACLxT,gBAAiBmU,aAAKkrB,EAAS,IAC/B/gC,QAAS,GAEXmV,QAAS2rB,EALX,SAOE,eAAC,KAAD,CACE5rB,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,QAC9BA,MAAM,mBAMhB,eAACiuB,GAAA,EAAD,CACEziB,MAAO,CAGLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQm1B,MAAO,KAGnDwL,uBAAwBN,OAAWhsB,EAAY,GAC/CusB,wBAAyBP,OAAWhsB,EAAY,IAElDmsB,UAAW,EAVb,SAYG7qB,KAAMse,aAAa/E,EAAnB,gBAAkCnxB,SC5EpC,I,GAAM8iC,GAAc,SAACt8B,GAC1B,IAAMylB,EAAQ,CACZ7L,IAAK5Z,EAAKylB,MAAM7L,IAChB2iB,WAAYv8B,EAAKylB,MAAM8W,WACvBC,WAAYx8B,EAAKylB,MAAM+W,WACvBC,YAAaz8B,EAAKylB,MAAMgX,YACxB/Q,aAAc1rB,EAAKylB,MAAMiG,aACzBC,eAAgB3rB,EAAKylB,MAAMkG,eAC3ByP,cAAep7B,EAAKylB,MAAM2V,cAC1BhX,WAAYpkB,EAAKylB,MAAMrB,WACvBM,eAAgB1kB,EAAKylB,MAAMf,eAC3BC,iBAAkB3kB,EAAKylB,MAAMd,iBAC7BN,SAAUrkB,EAAKylB,MAAMpB,SACrBqY,YAAa18B,EAAKylB,MAAMiX,YACxB5X,aAAc9kB,EAAKylB,MAAMX,aACzBC,eAAgB/kB,EAAKylB,MAAMV,eAC3BiB,QAAShmB,EAAKylB,MAAMO,QACpB2W,QAAS38B,EAAKylB,MAAMkX,QACpBC,SAAU58B,EAAKylB,MAAMmX,SACrBC,SAAU78B,EAAKylB,MAAMoX,SACrBC,eAAgB98B,EAAKylB,MAAMqX,eAC3BC,WAAY/8B,EAAKylB,MAAMsX,WACvBC,YAAah9B,EAAKylB,MAAMuX,YACxBC,cAAej9B,EAAKylB,MAAMwX,cAC1Bnb,SAAU9hB,EAAKylB,MAAM3D,SACrBoE,SAAUlmB,EAAKylB,MAAMS,SACrBgX,YAAal9B,EAAKylB,MAAMyX,YACxBhb,aAAcliB,EAAKylB,MAAMvD,aACzBD,eAAgBjiB,EAAKylB,MAAMxD,eAC3Bkb,SAAUn9B,EAAKylB,MAAM0X,SACrBvR,UAAW5rB,EAAKylB,MAAMmG,UACtBC,YAAa7rB,EAAKylB,MAAMoG,YACxBuR,YAAap9B,EAAKylB,MAAM2X,YACxBC,YAAar9B,EAAKylB,MAAM4X,YACxBC,mBAAoBt9B,EAAKylB,MAAM6X,mBAC/BC,SAAUv9B,EAAKylB,MAAM8X,SACrBC,aAAcx9B,EAAKylB,MAAMyX,YACzBO,YAAaz9B,EAAKylB,MAAMgY,YACxBC,aAAc19B,EAAKylB,MAAMiY,aACzB5P,YAAa9tB,EAAKylB,MAAMqI,YACxBjpB,MAAO7E,EAAKylB,MAAM5gB,MAClBohB,SAAUjmB,EAAKylB,MAAMQ,SACrB0X,MAAO39B,EAAKylB,MAAMkY,MAClBC,KAAM59B,EAAKylB,MAAMmY,KACjB54B,MAAOhF,EAAKylB,MAAMzgB,MAClB64B,KAAM79B,EAAKylB,MAAMoY,KACjBC,UAAW99B,EAAKylB,MAAMqY,UACtBC,KAAM/9B,EAAKylB,MAAMsY,KACjBC,OAAQh+B,EAAKylB,MAAMuY,OACnBC,MAAOj+B,EAAKylB,MAAMwY,MAClBz5B,MAAOxE,EAAKylB,MAAMjhB,MAClBhF,KAAMQ,EAAKylB,MAAMjmB,KACjBwD,OAAQhD,EAAKylB,MAAMziB,OACnBk7B,OAAQl+B,EAAKylB,MAAMyY,OACnBh6B,SAAUlE,EAAKylB,MAAMvhB,SACrBC,SAAUnE,EAAKylB,MAAMthB,SACrB4J,MAAO/N,EAAKylB,MAAM1X,MAClBgF,OAAQ/S,EAAKylB,MAAM1S,OACnBorB,OAAQn+B,EAAKylB,MAAM0Y,OACnBC,SAAUp+B,EAAKylB,MAAM2Y,SACrBC,QAASr+B,EAAKylB,MAAM4Y,QACpBC,WAAYt+B,EAAKylB,MAAM6Y,WACvB5W,OAAQ1nB,EAAKylB,MAAMiC,OACnBzI,SAAUjf,EAAKylB,MAAMxG,SACrBD,MAAOhf,EAAKylB,MAAMzG,MAClBP,OAAQze,EAAKylB,MAAMhH,OACnB8f,WAAYv+B,EAAKylB,MAAM8Y,WACvBC,OAAQx+B,EAAKylB,MAAM+Y,OACnBpkB,IAAKpa,EAAKylB,MAAMrL,IAChBuZ,MAAO3zB,EAAKylB,MAAMkO,MAClBC,KAAM5zB,EAAKylB,MAAMmO,KACjB1Z,MAAOla,EAAKylB,MAAMvL,MAClBD,KAAMja,EAAKylB,MAAMxL,KACjB5D,KAAMrW,EAAKylB,MAAMpP,KACjBooB,KAAMz+B,EAAKylB,MAAMgZ,KACjBhd,OAAQzhB,EAAKylB,MAAMhE,OACnBid,QAAS1+B,EAAKylB,MAAMiZ,QACpBC,QAAS3+B,EAAKylB,MAAMkZ,QACpBpoB,KAAMvW,EAAKylB,MAAMlP,KACjBC,KAAMxW,EAAKylB,MAAMjP,KACjBooB,QAAS5+B,EAAKylB,MAAMmZ,QACpBC,OAAQ7+B,EAAKylB,MAAMoZ,OACnBC,MAAO9+B,EAAKylB,MAAMqZ,MAClBC,aAAc/+B,EAAKylB,MAAMsZ,aACzBC,KAAMh/B,EAAKylB,MAAMuZ,KACjBC,MAAOj/B,EAAKylB,MAAMwZ,MAClBC,OAAQl/B,EAAKylB,MAAMyZ,OACnBC,UAAWn/B,EAAKylB,MAAM0Z,UACtB/0B,OAAQpK,EAAKylB,MAAMrb,OACnB/J,MAAOL,EAAKylB,MAAMplB,MAClBC,IAAKN,EAAKylB,MAAMnlB,IAChBolB,GAAI1lB,EAAKylB,MAAMC,GACfrgB,IAAKrF,EAAKylB,MAAMpgB,IAChB+5B,MAAOp/B,EAAKylB,MAAM2Z,MAClBC,UAAWr/B,EAAKylB,MAAM4Z,UACtBpiB,KAAMjd,EAAKylB,MAAMxI,KACjB2I,SAAU5lB,EAAKylB,MAAMG,SACrBpT,GAAIxS,EAAKylB,MAAMjT,GACf8sB,KAAMt/B,EAAKylB,MAAM6Z,KACjBz+B,KAAMb,EAAKylB,MAAM5kB,KACjB0+B,YAAav/B,EAAKylB,MAAM8Z,YACxBv4B,IAAKhH,EAAKylB,MAAMze,IAChBw4B,QAASx/B,EAAKylB,MAAM+Z,QACpBC,YAAaz/B,EAAKylB,MAAMga,YACxBC,WAAY1/B,EAAKylB,MAAMia,WACvBC,YAAa3/B,EAAKylB,MAAMka,YACxBC,YAAa5/B,EAAKylB,MAAMma,YACxBC,SAAU7/B,EAAKylB,MAAMoa,SACrBC,OAAQ9/B,EAAKylB,MAAMqa,OACnBxd,OAAQtiB,EAAKylB,MAAMnD,OACnB/lB,OAAQyD,EAAKylB,MAAMlpB,OACnBkF,MAAOzB,EAAKylB,MAAMhkB,MAClBrB,SAAUJ,EAAKylB,MAAMrlB,SACrB2/B,YAAa//B,EAAKylB,MAAMsa,YACxBC,cAAehgC,EAAKylB,MAAMua,cAC1B/T,OAAQjsB,EAAKylB,MAAMwG,OACnBgU,IAAKjgC,EAAKylB,MAAMwa,IAChBC,OAAQlgC,EAAKylB,MAAMya,OACnBC,QAASngC,EAAKylB,MAAM0a,QACpB/pB,SAAUpW,EAAKylB,MAAMrP,SACrBwL,QAAS5hB,EAAKylB,MAAM7D,QACpBwe,QAASpgC,EAAKylB,MAAM2a,QACpBC,WAAYrgC,EAAKylB,MAAM4a,WACvBC,KAAMtgC,EAAKylB,MAAM6a,KACjBC,KAAMvgC,EAAKylB,MAAM8a,KACjBj6B,SAAUtG,EAAKylB,MAAMnf,SACrBk6B,UAAWxgC,EAAKylB,MAAM+a,UACtBC,UAAWzgC,EAAKylB,MAAMgb,UACtB3nB,UAAW9Y,EAAKylB,MAAM3M,UACtB4nB,YAAa1gC,EAAKylB,MAAMib,YACxBC,SAAU3gC,EAAKylB,MAAMkb,SACrBh6B,KAAM3G,EAAKylB,MAAM9e,KACjBi6B,UAAW5gC,EAAKylB,MAAMmb,UACtBnoB,MAAOzY,EAAKylB,MAAMhN,MAClBooB,SAAU7gC,EAAKylB,MAAMob,SACrBC,aAAc9gC,EAAKylB,MAAMqb,aACzBC,SAAU/gC,EAAKylB,MAAMsb,SACrBC,QAAShhC,EAAKylB,MAAMub,QACpBxP,KAAMxxB,EAAKylB,MAAM+L,KACjB5oB,SAAU5I,EAAKylB,MAAM7c,UAGjBq4B,EAAW,CACfC,UAAWlhC,EAAKihC,SAASC,UACzBC,UAAWnhC,EAAKihC,SAASE,UACzBC,WAAYphC,EAAKihC,SAASG,YAI5B,MAAO,CAAExzB,MADK5N,EAAK4N,MACH6X,QAAOwb,aCxJnBzG,GAAK6G,EAAQ,KACbC,GAAKD,EAAQ,KCWJ,cAAO,IAAD,IAGbzzB,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgB66B,aAAa0G,GAAc,CAC5DnzB,UAAW,CAAER,WALI,oBAIZ4zB,EAJY,KAIAC,EAJA,OAQG3zB,aAAY4zB,GAAgB,CAChDxG,eAAgB,CAAC,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,aADhD8uB,EARY,uBAWI5uB,aAAY6zB,GAAgB,CACjDzG,eAAgB,CAAC,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,aADhDg0B,EAXY,uBAcM9zB,aAAY+zB,GAAgB,CACnD3G,eAAgB,CAAC,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,aADhDk0B,EAdY,qBAkBnB3N,sBAAU,WACRqN,MACC,CAACA,IAKJ,MAAO,CACLnH,WAJuB,OAAPoH,QAAO,IAAPA,GAAA,UAAAA,EAASp3B,YAAT,sDAAiCA,OAAQ,GAKzD03B,gBAJsB,yBAAMN,QAAN,IAAMA,OAAN,EAAMA,EAAS/F,WAKrCgB,cACAkF,eACAE,mBCnCW,cAAO,IAAD,IAGbl0B,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIa66B,aAAamH,GAAa,CACxD5zB,UAAW,CAAER,WALI,oBAIZq0B,EAJY,KAIHC,EAJG,OAQEp0B,aAAYq0B,GAAY,CAC3CjH,eAAgB,CAAC,CAAEC,MAAO6G,GAAa5zB,UAAW,CAAER,aAD/Cw0B,EARY,uBAWGt0B,aAAYu0B,GAAY,CAC5CnH,eAAgB,CAAC,CAAEC,MAAO6G,GAAa5zB,UAAW,CAAER,aAD/C00B,EAXY,uBAcKx0B,aAAYy0B,GAAY,CAC9CrH,eAAgB,CAAC,CAAEC,MAAO6G,GAAa5zB,UAAW,CAAER,aAD/C40B,EAdY,qBAkBnBrO,sBAAU,WACR8N,MACC,CAACA,IAKJ,MAAO,CAAErF,UAHe,OAAPsF,QAAO,IAAPA,GAAA,UAAAA,EAAS73B,YAAT,qDAAgCA,OAAQ,GAGtC+3B,aAAYE,cAAaE,gBAAeC,eAFpC,yBAAMP,QAAN,IAAMA,OAAN,EAAMA,EAASxG,aClBzB,cAAO,IAAD,IAGb9tB,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIe66B,aAAa6H,GAAc,CAC3Dt0B,UAAW,CAAER,WALI,oBAIZ+0B,EAJY,KAIFC,EAJE,OAQG90B,aAAY+0B,GAAgB,CAChD3H,eAAgB,CAAC,CAAEC,MAAOuH,GAAct0B,UAAW,CAAER,aADhDk1B,EARY,uBAWIh1B,aAAYi1B,GAAgB,CACjD7H,eAAgB,CAAC,CAAEC,MAAOuH,GAAct0B,UAAW,CAAER,aADhDo1B,EAXY,uBAcMl1B,aAAYm1B,GAAgB,CACnD/H,eAAgB,CAAC,CAAEC,MAAOuH,GAAct0B,UAAW,CAAER,aADhDs1B,EAdY,qBAkBnB/O,sBAAU,WACRwO,MACC,CAACA,IAIJ,MAAO,CACLQ,WAHwB,OAARP,QAAQ,IAARA,GAAA,UAAAA,EAAUv4B,YAAV,sDAAkCA,OAAQ,GAI1D+4B,gBAHsB,yBAAMR,QAAN,IAAMA,OAAN,EAAMA,EAAUlH,WAItCoH,cACAE,eACAE,mBCjCW,ICPA5jC,aAAf,uJDOe,WAAO,IAAD,MACgBu7B,aAAawI,GAAY,CAC1DC,YAAa,iBAFI,oBACZC,EADY,KACEC,EADF,KAKnBrP,sBAAU,WACRoP,MACC,CAACA,IAEJ,IAAME,EAAW,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAYn5B,YAAf,iBAAG,oBAAH,aAAG,EAAkCA,KAChDq5B,EAAUD,EAActlC,KAAKC,MAAMqlC,GAAe,GAElDE,EAA6B,GAMnC,OALID,EAAQpwB,OAAS,GACnBowB,EAAQrxB,KAAI,SAACqT,GACXie,EAAQje,EAAG7M,KAAO6M,EAAGke,iBAGlB,CAAED,UAASJ,kBEpBL,cAAO,IAAD,MACW1I,aAAagJ,IADxB,oBACZC,EADY,KACHC,EADG,OAGEj2B,aAAYk2B,GAAc,CAC7C9I,eAAgB,CAAC,CAAEC,MAAO0I,OADrBI,EAHY,qBAanB,OANA9P,sBAAU,WACR2P,MACC,CAACA,IAIG,CAAE7V,UAFkB,OAAV8V,QAAU,IAAVA,GAAA,UAAAA,EAAY15B,YAAZ,qDAAmCA,OAAQ,GAEzC45B,eCHN,SAASC,GAAQ1qC,GAAa,IACnCisB,EAAwCjsB,EAAxCisB,MAAO7X,EAAiCpU,EAAjCoU,MAAO1N,EAA0B1G,EAA1B0G,KAAMlE,EAAoBxC,EAApBwC,MAAOiV,EAAazX,EAAbyX,SAE3BqpB,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UAJkC,ECF7B,WAAO,IAAD,IAGbzsB,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAKsB66B,aAAawJ,IALnC,oBAKZC,EALY,KAKIC,EALJ,KAMXjK,EAAgB6J,KAAhB7J,YAERnG,sBAAU,WACRmQ,MACC,CAACA,IAEJ,IAIIE,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EACAC,EAEAC,EApBE/6B,EAAI,OAAGk6B,QAAH,IAAGA,GAAH,UAAGA,EAAWl6B,YAAd,iBAAG,6BAAH,aAAG,EAA0CA,KAsBjDg7B,EAAQz3B,EAAQ,SAAW,OAC3B03B,EAAS13B,EAAQ,mBAAqB,iBACtC23B,EAAS33B,EAAQ,iBAAmB,eACpC43B,EAAS53B,EAAQ,WAAa,WAEpC,GAAIvD,EAAM,CACR,IAAMo7B,EAAStnC,KAAKC,MAAMiM,GAGxB+L,EAOEqvB,EAPFrvB,SACAsvB,EAMED,EANFC,WACAC,EAKEF,EALFE,UACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,gBACAC,EACEN,EADFM,eAGFX,EAAUhvB,EAEV,IAAM4vB,EAAWL,EAAUtzB,KAAI,SAACqmB,GAAY,IAClC7V,EAAwB6V,EAAxB7V,KAAMsQ,EAAkBuF,EAAlBvF,MAAO1U,EAAWia,EAAXja,OACrB,MAAO,CACLjf,KAAMoe,GAAc,IAAI3T,KAAK4Y,GAAOjV,GACpCulB,QACAnU,MAAOP,EACPoE,KAAM,IAAI5Y,KAAK4Y,OAIbojB,EAAW/iB,GAAY,EAAGtV,GAEhC42B,EAAYyB,EAAS5zB,KAAI,SAAC+H,GACxB,IAAM8rB,EAAKF,EAASnyB,QAAO,SAAC8kB,GAAD,OAAaA,EAAGn5B,OAAS4a,KACpD,OAAI8rB,GAAMA,EAAG5yB,OAAS,EACb4yB,EAAG,GAEH,CACL1mC,KAAM4a,EACN+Y,MAAO,EACPnU,MAAO,MAKb,IAAMmnB,EAAetnC,KAAEm0B,QAAQ0S,EAAY,QAGrCU,EAFW9pB,OAAOC,KAAK4pB,GAEF9zB,KAAI,SAAC+H,GAAc,IAAD,IACrChQ,EAASvL,KAAEsnC,EAAQ/rB,IACtB4Y,QAAQwS,GACRnzB,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpB1zB,KAAM0zB,EACNC,MAAOt0B,KAAEw0B,MAAMJ,EAAO,SACtBxU,OAAQ5f,KAAEw0B,MAAMJ,EAAO,cAExBoT,QAAQ,SACR5mC,QAEG6mC,EAAcznC,KAAE0nC,UAAU1nC,KAAE2nC,MAAMp8B,EAAQ,QAAS,SAEnD6S,EAAS,UAAGkpB,EAAQ/rB,UAAX,iBAAG,EAAe,UAAlB,aAAG,EAAmByI,KAC/B7D,EAAQngB,KAAEw0B,MAAM8S,EAAQ/rB,GAAM,UAC9B+Y,EAAQt0B,KAAEw0B,MAAM8S,EAAQ/rB,GAAM,SAE9B5a,EAAOoe,GAAc,IAAI3T,KAAKgT,GAAOrP,GAC3C,OAAO,2BACLpO,OACA4K,UACGk8B,GAHL,IAIEnT,QACAnU,QACA6D,KAAM,IAAI5Y,KAAKmQ,QA4BnB,GAzBAqqB,EAAYwB,EAAS5zB,KAAI,SAAC+H,GACxB,IAAM8rB,EAAKE,EAAUvyB,QAAO,SAAC8kB,GAAD,OAAaA,EAAGn5B,OAAS4a,KACrD,OAAI8rB,GAAMA,EAAG5yB,OAAS,EACb4yB,EAAG,GAEH,CACL1mC,KAAM4a,EACN+Y,MAAO,EACPnU,MAAO,MAKb2lB,EADqBzhB,GAAY,EAAGtV,EAAO,OACdyE,KAAI,SAAC+H,GAChC,IAAM8rB,EAAKE,EAAUvyB,QAAO,SAAC8kB,GAAD,OAAaA,EAAGn5B,OAAS4a,KACrD,OAAI8rB,GAAMA,EAAG5yB,OAAS,EACb4yB,EAAG,GAEH,CACL1mC,KAAM4a,EACN+Y,MAAO,EACPnU,MAAO,MAIT+mB,EAAgB,CAClB,IAAMU,EAAQ5nC,KAAEm0B,QAAQ+S,EAAgBT,GAExCZ,EADkBpoB,OAAOC,KAAKkqB,GACPp0B,KAAI,SAACzP,GAAc,IAAD,EACjCnD,EAAQZ,KAAEw0B,MAAMoT,EAAM7jC,GAAM,UAC5B4B,EACJ81B,GAAeA,EAAYhnB,OACvBgnB,EAAYzmB,QAAO,SAAC/C,GAAD,OAAeA,EAAKu0B,KAAWziC,KAClD,KACN,MAAO,CACLpD,KAAMoD,EACNnD,QACA+E,MAAOA,EAAK,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAQ,UAAX,aAAG,EAAYA,MAAQ,OAGvCqgC,EAAkBhmC,KAAEw0B,MAAMqR,EAAY,SAOxC,GALIoB,IACFhB,EAAmBgB,EAAgBxyB,QAErCsxB,EAAckB,EAEVD,EAAa,CAAC,IAAD,IACTY,EAAQ5nC,KAAEm0B,QAAQ6S,EAAa,SAE/Ba,EADapqB,OAAOC,KAAKkqB,GACDp0B,KAAI,SAAC6H,GAAgB,IAAD,IAC1CysB,EAAU9nC,KAAE4nC,EAAMvsB,IACrB8Y,QAAQsS,GACRjzB,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpB1zB,KAAM0zB,EACNC,MAAOt0B,KAAEw0B,MAAMJ,EAAO,SACtBxU,OAAQ5f,KAAEw0B,MAAMJ,EAAO,cAExBoT,QAAQ,QACR5mC,QAEG46B,EAAYx7B,KAAE4nC,EAAMvsB,IACvB8Y,QAAQuS,GACRlzB,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpB1zB,KAAM0zB,EACNC,MAAOt0B,KAAEw0B,MAAMJ,EAAO,SACtBxU,OAAQ5f,KAAEw0B,MAAMJ,EAAO,UACvBzuB,MAAOyuB,EAAM,GAAGzuB,UAEjB6hC,QAAQ,QACR5mC,QACGwd,EAAS,UAAGwpB,EAAMvsB,UAAT,iBAAG,EAAe,UAAlB,aAAG,EAAmB2I,KAC/B7D,EAAQngB,KAAEw0B,MAAMoT,EAAMvsB,GAAQ,UAC9BiZ,EAAQt0B,KAAEw0B,MAAMoT,EAAMvsB,GAAQ,SAEpC,MAAO,CACL1a,KAFWqe,GAAmBZ,EAAMrP,GAGpC0sB,YAAaqM,EACbtM,YACAlH,QACAnU,QACA6D,KAAM,IAAI5Y,KAAKgT,OAKnB8nB,EADmBxhB,GAAc,EAAG3V,GACXyE,KAAI,SAACtJ,GAC5B,IAAMm9B,EAAKQ,EAAW7yB,QAAO,SAAC8kB,GAAD,OAAaA,EAAGn5B,OAASuJ,KACtD,OAAIm9B,GAAMA,EAAG5yB,OAAS,EACb4yB,EAAG,GAEH,CACL1mC,KAAMuJ,EACNoqB,MAAO,EACPnU,MAAO,MAIb,IAAM4nB,EAAQ/oB,GAAmB,IAAI5T,KAAQ2D,GAE7Cs3B,EAAe,UADfD,EAAU,UAAGF,EAAYlxB,QAAO,SAACgzB,GAAD,OAAaA,EAAGrnC,OAASonC,YAA/C,aAAG,EAAqD,UACnD,aAAG,EAAY5nB,MAEhC,GAAI4mB,EAAc,CAAC,IAAD,EACVa,EAAQ5nC,KAAEm0B,QAAQ4S,EAAc,SAGhCkB,EAFaxqB,OAAOC,KAAKkqB,GAEAp0B,KAAI,SAAC6H,GAAgB,IAAD,IAC3CysB,EAAU9nC,KAAE4nC,EAAMvsB,IACrB8Y,QAAQsS,GACRjzB,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpB1zB,KAAM0zB,EACNC,MAAOt0B,KAAEw0B,MAAMJ,EAAO,SACtBxU,OAAQ5f,KAAEw0B,MAAMJ,EAAO,cAExBoT,QAAQ,QACR5mC,QAEG46B,EAAYx7B,KAAE4nC,EAAMvsB,IACvB8Y,QAAQuS,GACRlzB,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpB1zB,KAAM0zB,EACNC,MAAOt0B,KAAEw0B,MAAMJ,EAAO,SACtBxU,OAAQ5f,KAAEw0B,MAAMJ,EAAO,cAExBoT,QAAQ,QACR5mC,QACG2K,EAASvL,KAAE4nC,EAAMvsB,IACpB8Y,QAAQwS,GACRnzB,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpB1zB,KAAM0zB,EACNC,MAAOt0B,KAAEw0B,MAAMJ,EAAO,SACtBxU,OAAQ5f,KAAEw0B,MAAMJ,EAAO,cAExBoT,QAAQ,SACR5mC,QACGwd,EAAS,UAAGwpB,EAAMvsB,UAAT,iBAAG,EAAe,UAAlB,aAAG,EAAmB2I,KAC/B7D,EAAQngB,KAAEw0B,MAAMoT,EAAMvsB,GAAQ,UAC9BiZ,EAAQt0B,KAAEw0B,MAAMoT,EAAMvsB,GAAQ,SAEpC,MAAO,CACL1a,KAFWqe,GAAmBZ,EAAMrP,GAGpC0sB,YAAaqM,EACbtM,YACAjwB,SACA+oB,QACAnU,QACA6D,KAAM,IAAI5Y,KAAKgT,OAKnB+nB,EADmBzhB,GAAc,EAAG3V,GACXyE,KAAI,SAACtJ,GAC5B,IAAMm9B,EAAKY,EAAYjzB,QAAO,SAAC8kB,GAAD,OAAaA,EAAGn5B,OAASuJ,KACvD,OAAIm9B,GAAMA,EAAG5yB,OAAS,EACb4yB,EAAG,GAEH,CACL1mC,KAAMuJ,EACNoqB,MAAO,EACPnU,MAAO,MAIb,IAAM4nB,EAAQ/oB,GAAmB,IAAI5T,KAAQ2D,GAE7Cu3B,GADW,UAAGH,EAAYnxB,QAAO,SAACgzB,GAAD,OAAaA,EAAGrnC,OAASonC,YAA/C,aAAG,EAAqD,IACpCzT,OAInC,MAAO,CACLqR,YACAC,YACAE,gBACAD,aACAE,cACAC,kBACAC,mBACAC,cACAC,cACAC,aACAC,kBACAC,mBACAC,UACA2B,iBAtRuB,yBAAMxC,QAAN,IAAMA,OAAN,EAAMA,EAAW7I,YDQtCsL,GAbFxC,EAPwC,EAOxCA,UACAC,EARwC,EAQxCA,UACAE,EATwC,EASxCA,cACAC,EAVwC,EAUxCA,YACAC,EAXwC,EAWxCA,gBACAC,EAZwC,EAYxCA,iBACAC,EAbwC,EAaxCA,YACAC,EAdwC,EAcxCA,YACAC,EAfwC,EAexCA,WACAC,EAhBwC,EAgBxCA,gBACAC,EAjBwC,EAiBxCA,iBACAC,EAlBwC,EAkBxCA,QACA2B,EAnBwC,EAmBxCA,iBASIrM,EAAa1+B,EAAMR,QAAQC,QAAQm1B,MACnC+J,EAAa3+B,EAAMR,QAAQG,UAAUD,KACrCw7B,EAAOl7B,EAAMR,QAAQC,QAAQm1B,MAEnC,OACE,eAAC+K,GAAD,CACE1qB,SAAUA,EACVopB,UAAWA,EACXC,YAAaA,EACb1sB,MAAOA,EACP6X,MAAOA,EACPvlB,KAAMA,EACNlE,MAAOA,EACP4/B,QAnBY,WACVmL,GACFA,KASF,SAUE,eAAC72B,GAAA,EAAD,CACEF,MAAO,CACL3S,OAAQqR,OAAOu4B,YAAc,GAC7B3W,SAAU,QAHd,SAME,eAACpgB,GAAA,EAAD,CAAKF,MAAO,CAAEpW,OAAQ,GAAI6tB,aAAc,IAAxC,SACE,gBAACkL,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACGwS,GAAWF,GAAmBC,GAC7B,gBAACxS,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAGxP,GAAI,EAAtB,SACE,eAACqX,GAAD,CACEhiB,MAAO7K,EAAQ,6CAAY,OAC3BnO,MAAO+e,GAAW,OAAC4mB,QAAD,IAACA,OAAD,EAACA,EAAS/uB,MAC5B3T,KAAK,OACL8B,MAAO0yB,EACPwD,WAAYA,EACZC,WAAYA,MAGhB,eAAChI,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAGxP,GAAI,EAAtB,SACE,eAACqX,GAAD,CACEhiB,MAAOgN,EAAMlP,KACb9W,MAAO+e,GAAW,OAAC4mB,QAAD,IAACA,OAAD,EAACA,EAAS7uB,MAC5B7T,KAAK,OACL8B,MAAO0yB,EACPwD,WAAYA,EACZC,WAAYA,MAGhB,eAAChI,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAGxP,GAAI,EAAtB,SACE,eAACoP,GAAD,CACE/Z,MAAO7K,EAAQ,iCAAU,QACzBnO,MAAO+e,GAAYqmB,GACnBniC,KAAK,QACL8B,MAAOk2B,EACP7T,KAAMjZ,EAAQ,yFAAqB,kBAIvC,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAGxP,GAAI,EAAtB,SACE,eAACoP,GAAD,CACE/Z,MAAO7K,EAAQ,oDAAc,aAC7BnO,MAAO+e,GAAY0mB,GACnBxiC,KAAK,QACL8B,MAAOk2B,EACP7T,KAAMjZ,EAAQ,yFAAqB,uBAGvC,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAGxP,GAAI,EAAtB,SACE,eAACoP,GAAD,CACE/Z,MAAO7K,EAAQ,iCAAU,QACzBnO,MAAOqf,GAAkBgmB,GACzBpiC,KAAK,QACL8B,MAAOm2B,EACP9T,KAAMjZ,EAAQ,kFAAmB,yBAGrC,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAGxP,GAAI,EAAtB,SACE,eAACoP,GAAD,CACE/Z,MAAO7K,EAAQ,oDAAc,aAC7BnO,MAAOqf,GAAkBqmB,GACzBziC,KAAK,QACL8B,MAAOm2B,EACP9T,KACEjZ,EAAQ,qGAAuB,mCAO1Cg3B,GACC,eAACjS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE4V,SAAU0B,EACVzB,SAAU0B,EACVtwB,KAAMu6B,EACNvnC,OAAQ,IACR65B,KAAMA,EACNtpB,MAAOA,MAIZ42B,GACC,eAAC7R,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE6T,QAAQ,QACRrpB,MAAOA,EACPvD,KAAMm6B,EACNhgC,MAAOk2B,EACPr9B,OAAQ,IACR65B,KAAMA,MAIXyN,GACC,eAAChS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE6T,QAAQ,QACRj7B,MAAOA,EACP4R,MAAOA,EACPvD,KAAMs6B,EACNtnC,OAAQ,IACR65B,KAAMA,MAIXuN,GACC,eAAC9R,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE6T,QAAQ,QACRrpB,MAAOA,EACPvD,KAAMo6B,EACNjgC,MAAOm2B,EACP3B,SAAU0B,EACVzB,SAAU0B,EACVt9B,OAAQ,IACR65B,KAAMA,MAIX+N,GACC,eAACtS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE/Y,KAAM46B,EACNr3B,MAAOA,EACPpJ,MAAOk2B,EACPjiB,MACE7K,EACI,uJACA,yBAENysB,UAAWA,EAAUxmB,QAAO,SAAC0mB,GAAD,OAA8B,IAAhBA,EAAI2M,WAC9ChQ,KAAMA,EACN75B,OAAQ,QAIb4nC,GACC,eAACtS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE/Y,KAAM46B,EACNr3B,MAAOA,EACPpJ,MAAOk2B,EACPjiB,MACE7K,EACI,iJACA,2BAEN0sB,YAAaA,EAAYzmB,QACvB,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAEpB9pC,OAAQ,IACR65B,KAAMA,MAIX6N,GACC,eAACpS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE/Y,KAAM06B,EACNn3B,MAAOA,EACPpJ,MAAOk2B,EACPxD,KAAMA,EACND,QAAQ,QACRxe,MAAO7K,EAAQ,iHAAyB,eACxCvQ,OAAQ,QAIb2nC,GACC,eAACrS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACE/Y,KAAM26B,EACNp3B,MAAOA,EACPpJ,MAAOm2B,EACP1D,QAAQ,QACRxe,MAAO7K,EAAQ,iHAAyB,qBACxCspB,KAAMA,EACN75B,OAAQ,iB,0EEhO1B,SAAS+pC,GAAe5tC,GACtB,OACE,eAAC,KAAD,CACE6tC,OAAO,0BACPrJ,OAAQ,mCAFV,SAIE,eAACvL,GAAA,EAAD,gBAAWj5B,MAKF,SAAS8tC,GAAY9tC,GAAa,IAE7CmxB,EAoBEnxB,EApBFmxB,SACA/c,EAmBEpU,EAnBFoU,MACA5R,EAkBExC,EAlBFwC,MACAqV,EAiBE7X,EAjBF6X,KACAqZ,EAgBElxB,EAhBFkxB,QACAjS,EAeEjf,EAfFif,MACAxK,EAcEzU,EAdFyU,SACAvR,EAaElD,EAbFkD,MACAW,EAYE7D,EAZF6D,OACAkqC,EAWE/tC,EAXF+tC,KAX4C,EAsB1C/tC,EAVF2W,UAZ4C,MAYvC,GAZuC,IAsB1C3W,EATFk9B,UAb4C,MAavC,GAbuC,IAsB1Cl9B,EARF8D,gBAd4C,MAcjC,KAdiC,IAsB1C9D,EAPFguC,iBAf4C,SAgB5CpI,EAME5lC,EANF4lC,MAhB4C,EAsB1C5lC,EALFiuC,iBAjB4C,MAiBhC75B,EAAQ,qBAAQ,OAjBgB,EAkB5CzC,EAIE3R,EAJF2R,UAlB4C,EAsB1C3R,EAHFkuC,oBAnB4C,SAoB5CC,EAEEnuC,EAFFmuC,OACA9L,EACEriC,EADFqiC,QAEI+L,EAAM/L,EAAUlrB,aAAKkrB,EAAS,IAAO,OAC3C,OACE,gBAACjR,GAAA,EAAD,CACEvZ,KAAMA,EACNqZ,QAASgd,EAAe,kBAAM,MAAOhd,EACrC0c,eAAgBA,GAChBS,mBAAiB,4BACjBC,kBAAgB,yBAChBxqC,SAAUA,EANZ,UAQE,gBAAC4S,GAAA,EAAD,CACE3N,GAAG,yBACHyN,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiBorC,EACjBl2B,OAAQ,OACRrU,OAAQ,GACRjB,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZwf,eAAgB,iBAXpB,UAcE,gBAACzM,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVN,YAAa,GACbD,WAAY,IAJhB,UAOG6d,EAPH,IAOWtN,EAAS,oBAASA,QAAT,IAASA,OAAT,EAASA,EAAWsN,OAAU,MAElD,eAAC+O,GAAA,EAAD,CAAYvX,QAASya,EAArB,SACE,eAAC,KAAD,CACE1a,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAIpC,eAACujC,GAAA,EAAD,CACE/3B,MAAO,CACLtT,MAAOA,QAAgBoT,EACvBzS,OAAQA,QAAkByS,EAC1B9U,UAAW4S,EAAQ,MAAQ,MAC3BkE,WAAY3B,EACZwgB,cAAe+F,GAEjBsR,UAAU,EARZ,SAUG52B,KAAMse,aAAa/E,EAAnB,gBAAkCnxB,MAEpC+tC,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,MAIf,gBAAC8f,GAAA,EAAD,CACEj4B,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiBR,EACb2U,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,KACjC,QACJ2B,OAAQ,GACRf,WAAY,SACZivB,aAAc,EACdD,YAAa,EACbjvB,cAAeuR,EAAQ,cAAgB,OAV3C,UAaG8c,GACC,eAAC3a,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,GAAIxC,YAAa,GAAID,WAAY,IAC9DH,QAAQ,WACRwV,QAASya,EACTlmB,MAAM,UAJR,SAME,eAAC6K,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SACGmT,EAAQ,iCAAU,YAIxBwxB,GACC,eAACrvB,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,GAAIxC,YAAa,GAAID,WAAY,IAC9DH,QAAQ,YACRwV,QAASmvB,EACT56B,MAAM,UAJR,SAME,eAAC6K,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SACGmT,EAAQ,iCAAU,aAIvB45B,GACA,gBAACz3B,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,GAAIxC,YAAa,GAAID,WAAY,IAC9DH,QAAQ,YACRwV,QAAShC,EACTzJ,MAAM,UACNwoB,SAAU2a,EALZ,UAOE,eAACt4B,GAAA,EAAD,CACEW,MAAO,CAAEpV,WAAY,EAAGC,YAAa,GACrCJ,QAAQ,YAFV,SAIGgtC,IAEFE,GAAU,eAAC5b,GAAA,EAAD,CAAkBvnB,MAAM,UAAU9K,KAAM,KAClD0lC,GACC,eAAC/vB,GAAA,EAAD,CACEW,MAAO,CACLpV,WAAY,EACZC,YAAa,EACbM,SAAU,GACVqJ,MAAO,QAET/J,QAAQ,YAPV,SASGmT,EAAK,wDCzKf,IAAMs6B,GAAkB,SAAC,GAOpB,IANV9b,EAMS,EANTA,QACA3sB,EAKS,EALTA,MACAygB,EAIS,EAJTA,SACAtS,EAGS,EAHTA,MAGS,IAFTlR,aAES,MAFD,IAEC,MADTswB,gBACS,SACT,OACE,eAACyG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEnxB,GAAG,cACH9C,MAAOA,EACPutB,SAAUA,EACV9M,SAAUA,EACVzlB,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRX,MAAOA,EACPo2B,UAAW,WACXnS,WAAY,OACZnc,MAAO,QAXX,SAcG4nB,EAAQ/Z,KAAI,SAACvB,GACZ,OACE,eAAC,KAAD,CAEEd,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAOqR,EAAKrR,MAHd,SAKGmO,EAAQkD,EAAK9N,OAAS8N,EAAKtR,MAJvBsR,EAAKvO,YC0KT4lC,GApLQ,SAAC,GAUZ,IATV92B,EASS,EATTA,KACAqZ,EAQS,EARTA,QACAhO,EAOS,EAPTA,IACA6S,EAMS,EANTA,MACA6Y,EAKS,EALTA,YACAzY,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACA9uB,EACS,EADTA,MACS,EACmBmR,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEqBl7B,oBAAS,GAF9B,oBAEFg6B,EAFE,KAEOmB,EAFP,OAGen7B,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAHtD,oBAGFy3B,EAHE,KAGIze,EAHJ,OAIyCxb,aAAQ7J,EAAIgB,gBAAtD8I,EAJC,EAIDA,SAAUC,EAJT,EAISA,aAAcC,EAJvB,EAIuBA,OAAQ86B,EAJ/B,EAI+BA,MAJ/B,EAQU76B,sBAAWtB,IARrB,IAMPyB,UAAa4X,EANN,EAMMA,MAAO7X,EANb,EAMaA,MACX1N,EAPF,EAOPhC,MAASgC,KAPF,EAUiBiN,oBAAc,WAV/B,oBAUF3I,EAVE,KAUKurB,EAVL,KAYToE,sBAAU,WACJzX,GAAOA,EAAI7D,MACbkX,EAASrT,EAAIlY,OACb8jC,EAAW5rB,EAAIyqB,YAEhB,CAACzqB,IAEJ,IAAMzO,EAAQ,yCAAG,WAAO5D,GAAP,sBAAA8D,EAAA,sDACfk6B,GAAU,GACJ7oC,EAAO6K,EAAK7K,KAAKua,OACjB/W,EAASqH,EAAKrH,OAAO+W,OACrB8M,EAAOxc,EAAKwc,KACZzY,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCtQ,OACAwD,SACAmkC,UACAtgB,OACAriB,QACA5C,OAAQ1B,EAAK0B,OACb4mC,OAAQtoC,EAAK2Y,KAIf4vB,EAFelZ,EAAQI,EAAYC,EAChBL,EAAQ,mBAAqB,mBACtBnhB,GAjBX,2CAAH,sDAoBRq6B,EAAK,yCAAG,WAAOC,EAAaC,EAAoBv6B,GAAxC,kBAAAD,EAAA,+EAEQu6B,EAAO,CAAEt6B,cAFjB,cAEJuK,EAFI,OAGJiwB,EAAQpf,GAAc7Q,EAAKgwB,GAC7BP,GAAeQ,GAAOR,EAAYQ,GACtCP,GAAU,GALA,SAMJrf,GAAaF,EAASlb,GANlB,OAOVi7B,IAPU,kDASVC,EAAQ,EAAD,IATG,0DAAH,0DAaLA,EAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,8CAINsb,GAAWJ,EAASlb,GAJd,OAKZ26B,IACAxY,EAAS,WACT5K,QAAQC,IAAIhY,GAPA,4CAAH,sDAWPy7B,EAAc,WAClBne,IACA6d,IACAxY,EAAS,WACTsY,GAAU,IAMN5vB,EAAQ7K,EACV2hB,EACE,oDACA,yFACFA,EACA,iBACA,kBACJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASA,EACTjS,MAAOA,EACPxK,SAhBmB,WACrBT,EAAaS,EAAbT,IAgBExR,MAAOA,EACPurC,KAAMA,EACNI,OAAQA,EARV,SAUE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACEjnB,WAAS,EACT7L,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMyY,OACb3wB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTkb,QAASA,EACT4L,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAASjR,GACT1b,MAAO0nC,EACPjnB,SAAU,SAACpR,GAAD,OAAYw5B,EAAWpjB,OAAOpW,EAAEk6B,OAAOvpC,SACjDmO,MAAOA,SAKb,eAAC6oB,GAAD,CACEj3B,KAAK,OACLiQ,MAAOgW,EAAM8Z,YACbhyB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTq5B,WAAS,EACTC,QAAS,EACTpa,KAAM,IAER,gBAAC6D,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAACrjB,GAAA,EAAD,CACEyd,UAAQ,EACRxtB,KAAK,QACLC,OAAU,OAAHid,QAAG,IAAHA,OAAA,EAAAA,EAAKlY,OAAQkY,EAAIlY,MAAQA,EAChC/J,QAAQ,WACRuV,MAAO,CACLxT,gBAAiBgI,EACjB9H,MAAO,KAETysC,WAAY,CACVn5B,MAAO,CAAE+L,aAAc,EAAGvX,MAAO,SAEnC5K,OAAO,YAGX,eAAC+4B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CAAa7C,SAAUA,EAAUvrB,MAAOA,YAI9C,eAACmuB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCzLR,SAASwW,GAAT,GAAyD,IAAlCx7B,EAAiC,EAAjCA,MAAOwd,EAA0B,EAA1BA,QAASie,EAAiB,EAAjBA,cACpD,OACE,gBAAC5V,GAAA,EAAD,CAAaxkB,UAAU,WAAvB,UACE,eAACI,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQ8G,aAAc,IAF7C,SAIG7Z,EAAQ,0DAAe,YAG1B,eAAC4gB,GAAA,EAAD,UACG9kB,GAAS2I,KAAI,SAAC+H,GACb,OACE,eAACiU,GAAA,EAAD,CACEre,MAAO,CAAEpW,OAAQ,EAAGkB,QAAS,EAAG61B,cAAe,GAE/CrC,QACE,eAACvO,GAAA,EAAD,CACEE,QAASmL,EAAQhR,EAAI3Q,OACrByW,SAAUmpB,EACV7kC,MAAM,UACNhF,KAAM4a,EAAI3Q,MACVuG,MAAO,CAAEpW,OAAQ,EAAGkB,QAAS,EAAG61B,cAAe,KAGnDlhB,MAAO7B,EAAQwM,EAAIpX,OAASoX,EAAI5a,MAV3B4a,EAAI7X,YCdR,SAAS+mC,GAAT,GAuBN,IAtBP9pC,EAsBM,EAtBNA,KACA4sB,EAqBM,EArBNA,QACA3sB,EAoBM,EApBNA,MACA4sB,EAmBM,EAnBNA,eACAC,EAkBM,EAlBNA,eACAC,EAiBM,EAjBNA,YACAC,EAgBM,EAhBNA,SACAjf,EAeM,EAfNA,SACAkf,EAcM,EAdNA,QACAhU,EAaM,EAbNA,MACAgQ,EAYM,EAZNA,GACAmE,EAWM,EAXNA,YACA1f,EAUM,EAVNA,QACAge,EASM,EATNA,SACA6B,EAQM,EARNA,aACAC,EAOM,EAPNA,SACApf,EAMM,EANNA,MACA27B,EAKM,EALNA,cACA7S,EAIM,EAJNA,GACAtc,EAGM,EAHNA,IACA1d,EAEM,EAFNA,MACAyuB,EACM,EADNA,UAEA,OACE,gBAACwH,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAInG,EAAU,GAAK,GAA9B,SACE,eAACQ,GAAA,EAAD,CACEL,YAAaA,EACbC,YAAU,EACVjd,WAAS,EACTwc,QAASA,EACTc,eAAgB,SAACC,GACf,IAAIqc,EAEFA,EADEte,EACGtd,EAAK,OAAGuf,QAAH,IAAGA,OAAH,EAAGA,EAAM,UAAMjC,EAAN,OAAT,OAA+BiC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAASjC,GACzCiC,EAAO1U,QAAU0U,EAAO3tB,KAC/B,OAAG2tB,QAAH,IAAGA,OAAH,EAAGA,EAAQ1U,MAER7K,EAAK,OAAGuf,QAAH,IAAGA,OAAH,EAAGA,EAAQnqB,OAAX,OAAoBmqB,QAApB,IAAoBA,OAApB,EAAoBA,EAAQ3tB,KAExC,IAAMmF,GAAc,OAANwoB,QAAM,IAANA,OAAA,EAAAA,EAAQxoB,OAAR,OAAgBwoB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQxoB,MAAQ,GAC9C,OAAIA,GAASwmB,EACL,GAAN,OAAUqe,EAAV,cAAkB7kC,GAEX6kC,GAAU,IAGrBpc,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAOtU,MAAQwU,EAAOxU,KAC7DyU,aAAc,SAACH,GACb,MAAa,SAAT3tB,EAEA,eAAC,GAAD,CAAgBoO,MAAOA,EAAOkD,KAAMqc,IAIpC,eAAC,GAAD,CACE/S,IAAKA,EACLxM,MAAOA,EACPkD,KAAMqc,EACNjC,SAAUA,EACVC,UAAWA,KAKnB1rB,MAAOA,EACPutB,SAAUA,EACV9M,SAAU,SAACrhB,EAAG0uB,GACZlB,EAAekB,GACXjB,GACFA,GAAe,GAEbS,GACFA,EAAa,MAEXwc,GACFA,EAAa,OAAChc,QAAD,IAACA,OAAD,EAACA,EAAUvoB,QAG5BgL,MAAO,CACLwd,kBAAmB/E,QAAU3Y,EAC7BpT,MAAOA,QAAgBoT,EACvB9U,UAAW4S,EAAQ,MAAQ,OAE7BV,QAASA,EAAU,CAAEugB,MAAOvgB,EAAQtP,gBAAckS,EAClD4d,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEprB,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOgJ,EACPhe,QAAQ,WACR2S,MAAOmf,EACPvc,MAAO,CAAEyX,aAAciP,GACvB9mB,WAAS,EACTF,SAAU,SAAC1I,GACLwlB,IACFA,EAASqB,QAAU7mB,EACfuG,GACFA,EAASvG,aAQtBylB,GACC,eAACkG,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAACpL,GAAA,EAAD,CACEuG,oBAAkB,EAClB9d,QAAS,WACPwc,KAEFzc,MAAO,CAAEtT,MAAO,GAAIW,OAAQ,GAAInB,UAAW,IAL7C,SAOE,eAAC,KAAD,CAAS8T,MAAO,CAAExL,MAAO,iBCtGrC,IAsQeilC,GAtQO,SAAC,GAUX,IATVp4B,EASS,EATTA,KACAqZ,EAQS,EARTA,QACAhO,EAOS,EAPTA,IACA6S,EAMS,EANTA,MACA6Y,EAKS,EALTA,YACAzY,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACA9uB,EACS,EADTA,MACS,EACmBmR,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAG6B3b,oBAAc,MAH3C,oBAGFjD,EAHE,KAGWw/B,EAHX,OAIuBv8B,qBAAc,GAJrC,oBAIFw8B,EAJE,KAIQC,EAJR,OAKiBz8B,oBAAc,WAL/B,oBAKF3I,EALE,KAKKurB,EALL,OAMqB3e,KAAMjE,SAASvE,IANpC,oBAMFwiB,EANE,KAMOye,EANP,OAOqB18B,oBAAS,GAP9B,oBAOF+5B,EAPE,KAOO4C,EAPP,KAaHC,EAAe34B,KAAM44B,SAblB,EAeyC18B,aAAQ7J,EAAI0B,cAAtDoI,EAfC,EAeDA,SAAUC,EAfT,EAeSA,aAAcC,EAfvB,EAeuBA,OAAQ86B,EAf/B,EAe+BA,MAf/B,EAmBU76B,sBAAWtB,IAnBrB,IAiBPyB,UAAa4X,EAjBN,EAiBMA,MAAO7X,EAjBb,EAiBaA,MACX1N,EAlBF,EAkBPhC,MAASgC,KAEHo6B,EAAgB6J,KAAhB7J,YAERnG,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAMA,EAAM6D,EAAI+H,aACVwlB,EAAS3P,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQA,KAAK,GAC7D6D,EAAI0O,SACNye,EAAW1rC,KAAKC,MAAMse,EAAI0O,UAE5Bse,EAAeO,GACfla,EAASrT,EAAIlY,OACbslC,EAAWptB,EAAIwqB,YAEhB,CAACxqB,IAEJ,IAAMzO,EAAQ,yCAAG,WAAO5D,GAAP,4BAAA8D,EAAA,sDACfk6B,GAAU,GACJ7oC,EAAO6K,EAAK7K,KAAKua,OACjB/W,EAASqH,EAAKrH,OAAO+W,OACrBpV,EAAQ0F,EAAK1F,MACbE,EAAQwF,EAAKxF,MACb07B,EAAOl2B,EAAKk2B,KACZnc,EAAala,EACf,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEjB1B,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCtQ,OACAwD,SACAkkC,UACAriC,QACAL,QACA+7B,OACAnV,QAASjtB,KAAKyB,UAAUwrB,GACxBzmB,QACAyf,aACAxiB,OAAQ1B,EAAK0B,OACb4mC,OAAQtoC,EAAK2Y,KAKf4vB,EAFelZ,EAAQI,EAAYC,EAChBL,EAAQ,iBAAmB,iBACpBnhB,GArCX,4CAAH,sDAwCRq6B,EAAK,yCAAG,WAAOC,EAAaC,EAAoBv6B,GAAxC,kBAAAD,EAAA,+EAEQu6B,EAAO,CAAEt6B,cAFjB,cAEJuK,EAFI,OAGJiwB,EAAQpf,GAAc7Q,EAAKgwB,GAC7BP,GAAeQ,GAAOR,EAAYQ,EAAO,YAC7CP,GAAU,GALA,SAMJrf,GAAaF,EAASlb,GANlB,OAOVs8B,KAPU,kDASVpB,EAAQ,EAAD,IATG,0DAAH,0DAaLA,EAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZu8B,KACAhlB,QAAQC,IAAIhY,GANA,2CAAH,sDAUP+8B,GAAW,WACf5B,IACAmB,EAAe,MACf3Z,EAAS,WACT8Z,EAAWjhC,IACXy/B,GAAU,IAEN6B,GAAa,WACjBxf,IACAyf,MAOI1xB,GAAQ7K,EACV2hB,EACE,0DACA,+FACFA,EACA,eACA,gBAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASwf,GACTzxB,MAAOA,GACPxK,SAlBmB,WACrBT,EAAaS,EAAbT,IAkBExR,MAAOA,EACPurC,KAAMA,EACN7Q,GAAI,GACJiR,OAAQA,EATV,SAWE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACR6L,WAAS,EACThQ,KAAK,SACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACThW,OAAQ,GACR88B,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMyY,OACb3wB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTkb,QAASA,EACTlxB,OAAQ,GACR88B,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAASjR,GACT1b,MAAOynC,EACPhnB,SAAU,SAACpR,GAAD,OAAYg7B,EAAW5kB,OAAOpW,EAAEk6B,OAAOvpC,SACjDmO,MAAOA,EACPlR,MAAO,WAKb,eAAC+5B,GAAD,CACEj3B,KAAK,QACLiQ,MAAOgW,EAAMqI,YACbvgB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACThW,OAAQ,GACR88B,GAAI,KAEN,eAACD,GAAD,CACEj3B,KAAK,QACLiQ,MAAOgW,EAAM5gB,MACb0I,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACThW,OAAQ,GACR88B,GAAI,KAEN,eAAC4S,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,EAAMrB,WACbqB,MAAOA,EACP2G,QAASkO,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIukC,UAAYD,KAC1DznC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBsd,EAChBrd,YAAaod,EACbnd,SAAUud,EACVx8B,SAAUA,EAEVK,MAAOA,EACPgC,WAAS,EACT8mB,GAAI,KAEN,eAACD,GAAD,CACEj3B,KAAK,OACLiQ,MAAOgW,EAAM8a,KACbhzB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTq5B,WAAS,EACTC,QAAS,EACTpa,KAAM,IAER,gBAAC6D,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAACwW,GAAD,CACEx7B,MAAOA,EACPwd,QAASA,EACTie,cA5NQ,SAAC3iC,GACrBmjC,EAAW,6BAAKze,GAAN,mBAAgB1kB,EAAMsiC,OAAOxpC,KAAOkH,EAAMsiC,OAAO/oB,gBA8NnD,gBAAC0S,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAACrjB,GAAA,EAAD,CACEyd,UAAQ,EACRxtB,KAAK,QACLC,OAAU,OAAHid,QAAG,IAAHA,OAAA,EAAAA,EAAKlY,OAAQkY,EAAIlY,MAAQA,EAChC/J,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,IAAKF,gBAAiBgI,GACtC2kC,WAAY,CAAEn5B,MAAO,CAAE+L,aAAc,EAAGvX,MAAO,SAC/C5K,OAAO,UAET,eAAC,GAAD,CAAam2B,SAAUA,EAAUvrB,MAAOA,aAI9C,eAACmuB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UChGRwX,GAxKO,SAAC,GAUX,IATV/4B,EASS,EATTA,KACAqZ,EAQS,EARTA,QACAhO,EAOS,EAPTA,IACA6S,EAMS,EANTA,MACA6Y,EAKS,EALTA,YACAzY,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACA9uB,EACS,EADTA,MACS,EACmBmR,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAGyCxb,aAAQ7J,EAAIqB,cAAtDyI,EAHC,EAGDA,SAAUC,EAHT,EAGSA,aAAcC,EAHvB,EAGuBA,OAAQ86B,EAH/B,EAG+BA,MAH/B,EAOU76B,sBAAWtB,IAPrB,IAKPyB,UAAa4X,EALN,EAKMA,MAAO7X,EALb,EAKaA,MACX1N,EANF,EAMPhC,MAASgC,KAGL+N,EAAQ,yCAAG,WAAO5D,GAAP,4BAAA8D,EAAA,sDACfk6B,GAAU,GACJ7oC,EAAO6K,EAAK7K,KAAKua,OACjB/W,EAASqH,EAAKrH,OAAO+W,OACnBpV,EAAkC0F,EAAlC1F,MAAOE,EAA2BwF,EAA3BxF,MAAOonB,EAAoB5hB,EAApB4hB,OAAQmU,EAAY/1B,EAAZ+1B,QACxBhyB,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCtQ,OACAwD,SACA2B,QACAE,QACAonB,SACAmU,UACAx+B,OAAQ1B,EAAK0B,OACb4mC,OAAQtoC,EAAK2Y,KAIf4vB,EAFelZ,EAAQI,EAAYC,EAChBL,EAAQ,iBAAmB,iBACpBnhB,GAlBX,2CAAH,sDAqBRq6B,EAAK,yCAAG,WAAOC,EAAaC,EAAoBv6B,GAAxC,kBAAAD,EAAA,+EAEQu6B,EAAO,CAAEt6B,cAFjB,cAEJuK,EAFI,OAGJiwB,EAAQpf,GAAc7Q,EAAKgwB,GAC7BP,GAAeQ,GAAOR,EAAYQ,EAAO,YAC7CL,IACAF,GAAU,GANA,UAOJrf,GAAaF,EAASlb,GAPlB,QAQV8c,IARU,kDAUVoe,EAAQ,EAAD,IAVG,0DAAH,0DAcLA,EAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZ26B,IACApjB,QAAQC,IAAIhY,GANA,2CAAH,sDAcPqL,EAAQ7K,EACV2hB,EACE,0DACA,+FACFA,EACA,eACA,gBAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASA,EACTjS,MAAOA,EACPxK,SAlBmB,WACrBT,EAAaS,EAAbT,IAkBExR,MAAOA,EACPurC,KAAMA,EACNI,OAAQA,EARV,SAWE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACEjnB,WAAS,EACT7L,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMyY,OACb3wB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,QACLiQ,MAAOgW,EAAMqI,YACbvgB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACLoO,QAASA,EACTlb,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACEj3B,KAAK,SACLiQ,MAAOgW,EAAMwG,OACb1e,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACLoO,QAASA,EACTlb,WAAS,SAKf,eAAC6mB,GAAD,CACEj3B,KAAK,QACLiQ,MAAOgW,EAAM5gB,MACb0I,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,IAEX,eAAC6mB,GAAD,CACEj3B,KAAK,UACLiQ,MAAOgW,EAAM4a,WACb9yB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTq5B,WAAS,EACTC,QAAS,EACTpa,KAAM,OAGV,eAAC6D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,U,oBCmIRyX,GAnSM,SAAC,GAUV,IATVh5B,EASS,EATTA,KACAqZ,EAQS,EARTA,QACAhO,EAOS,EAPTA,IACA6S,EAMS,EANTA,MACA6Y,EAKS,EALTA,YACAzY,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACA9uB,EACS,EADTA,MACS,EACmBmR,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAI6B3b,oBAAc,MAJ3C,oBAIFjD,EAJE,KAIWw/B,EAJX,OAK6Bv8B,qBAAc,GAL3C,oBAKFm9B,EALE,KAKWC,EALX,KAMHC,EAAiBp5B,KAAM44B,SANpB,EAQyB78B,oBAAc,MARvC,oBAQFhD,EARE,KAQS2iB,EART,OASyB3f,qBAAc,GATvC,oBASFs9B,EATE,KASSC,EATT,KAUHX,EAAe34B,KAAM44B,SAVlB,EAYqB78B,oBAAc,MAZnC,oBAYF+5B,EAZE,KAYO4C,EAZP,OAayB38B,oBAAc,IAbvC,oBAaFw9B,EAbE,KAaSC,EAbT,OAeyCt9B,aAAQ7J,EAAIwB,aAAtDsI,EAfC,EAeDA,SAAUC,EAfT,EAeSA,aAAcC,EAfvB,EAeuBA,OAAQ86B,EAf/B,EAe+BA,MAf/B,EAmBU76B,sBAAWtB,IAnBrB,IAiBPyB,UAAa4X,EAjBN,EAiBMA,MAAO7X,EAjBb,EAiBaA,MACX1N,GAlBF,EAkBPhC,MAASgC,KAGHo6B,GAAgB6J,KAAhB7J,YACAD,GAAc+J,KAAd/J,UAERlG,sBAAU,WACR,GAAIkG,IAAaA,GAAU/mB,OAAS,EAAG,CACrC,IAAMu3B,EAAWxQ,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI2M,UAAYA,KAChE0D,EAAaC,MAEd,CAAC3D,EAAS7M,KAEblG,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAMiyB,EAAQpuB,EAAI+H,aACZsmB,EAAQruB,EAAImI,WAGlB,GAFAilB,EAAW,MAEPgB,EAAO,CACT,IAAMb,EAAS3P,GAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,EAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,EAAake,OAGhB,CAACtuB,IAEJ,IAAMytB,GAAW,WACf5B,IACAmB,EAAe,MACfa,GAAe,GACfzd,EAAa,MACb4d,GAAa,GACbZ,EAAW,MACXc,EAAa,KAGT38B,GAAQ,yCAAG,WAAO5D,GAAP,8BAAA8D,EAAA,sDACfk6B,GAAU,GACJ7oC,EAAO6K,EAAK7K,KAAKua,OACjB/W,EAASqH,EAAKrH,OAAO+W,OACnB/U,EAAsBqF,EAAtBrF,MAAOs7B,EAAej2B,EAAfi2B,KAAMzZ,EAASxc,EAATwc,KACfzC,EAAala,EACf,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEjBuU,EAAWla,EACb,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,OAE3B,CACEqgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,GAEf1B,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCpD,SAAU,EACVlN,OACAwD,SACAgC,QACAs7B,OACAzZ,OACAzC,aACAC,WACAziB,OAAQ1B,GAAK0B,OACb4mC,OAAQtoC,GAAK2Y,KAIf4vB,GAFelZ,EAAQI,EAAYC,EAChBL,EAAQ,aAAe,aAChBnhB,GA9CX,4CAAH,sDAiDRq6B,GAAK,yCAAG,WAAOC,EAAaC,EAAoBv6B,GAAxC,kBAAAD,EAAA,+EAEQu6B,EAAO,CAAEt6B,cAFjB,cAEJuK,EAFI,OAGJiwB,EAAQpf,GAAc7Q,EAAKgwB,GAC7BP,GAAeQ,GAAOR,EAAYQ,EAAO,QAC7CP,GAAU,GALA,SAMJrf,GAAaF,EAASlb,GANlB,OAOVs8B,KAPU,kDASVpB,GAAQ,EAAD,IATG,0DAAH,0DAaLA,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZu8B,KACAhlB,QAAQC,IAAIhY,GANA,2CAAH,sDAUP88B,GAAa,WACjBC,KACAzf,KAMIjS,GAAQ7K,EACV2hB,EACE,0DACA,0DACFA,EACA,cACA,eACJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASwf,GACTzxB,MAAOA,GACPxK,SAhBmB,WACrBT,EAAaS,GAAbT,IAgBExR,MAAOA,EACPurC,KAAMA,EACNI,OAAQA,EARV,SAUE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACR6L,WAAS,EACThQ,KAAK,SACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMyY,OACb3wB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACLoO,QAASA,EACTlb,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,QACLiQ,MAAOgW,EAAMzgB,MACbuI,SAAUA,EACVE,OAAQA,EACR5M,KAAK,SACL6b,IAAKA,EACL9M,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACEj3B,KAAK,OACLiQ,MAAOgW,EAAM6a,KACb/yB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACLoO,QAASA,EACTlb,WAAS,EACT8mB,GAAI,SAKV,eAAC4S,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,EAAMrB,WACbqB,MAAOA,EACP2G,QAASkO,GAAYzmB,QAAO,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAC9C1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBie,EAChBhe,YAAa+d,EACb9d,SAAUge,EACVj9B,SAAUA,EACVK,MAAOA,EACP8oB,GAAI,KAEN,gBAACuU,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAOynC,EACPhnB,SAAU,SAACpR,GACTg7B,EAAW5kB,OAAOpW,EAAEk6B,OAAOvpC,QAC3BqtB,EAAa,OAPjB,UAUE,eAACuB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,mDAAa,cAG9B,eAACygB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,6CAAY,iBAG/B,eAAC07B,GAAD,CACE9pC,KAAK,WACLiZ,MAAmB,IAAZyuB,EAAgBzhB,EAAM3M,UAAY2M,EAAMpB,SAC/C2I,UAAWka,EACXzhB,MAAOA,EACP2G,QAASue,EACTlrC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbje,SAAUud,EACVx8B,SAAUA,EACVK,MAAOA,EACP8oB,GAAI,KAEN,eAACD,GAAD,CACEj3B,KAAK,OACLiQ,MAAOgW,EAAM8Z,YACbhyB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTq5B,WAAS,EACTC,QAAS,EACTpa,KAAM,OAGV,eAAC6D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,U,UC7SjBuY,GAAc,iBAAO,CACzBC,OAAQ,CACN1uC,MAAO,iBAQI2uC,GAJI,SAAC7xC,GAClB,OAAO,eAAC8xC,GAAA,EAAD,6BAAY9xC,GAAZ,IAAmBwW,MAAOm7B,GAAOC,OAAQG,UAAU,mBCS7C,SAASC,GAAT,GASN,IARPpf,EAQM,EARNA,QACAqf,EAOM,EAPNA,QACAhmB,EAMM,EANNA,MACA4U,EAKM,EALNA,UACAC,EAIM,EAJNA,YACAptB,EAGM,EAHNA,QACAhN,EAEM,EAFNA,KACA0N,EACM,EADNA,MACM,EAC4BT,qBAAc,GAD1C,oBACCu+B,EADD,KACYC,EADZ,OAG4Bx+B,oBAAc,MAH1C,oBAGCy+B,EAHD,KAGYC,EAHZ,OAIwB1+B,oBAAS,GAJjC,oBAIC2+B,EAJD,KAIUC,EAJV,OAK4B5+B,oBAAS,GALrC,oBAKC6+B,EALD,KAKYC,EALZ,OAO4B9+B,oBAAc,MAP1C,oBAOChD,EAPD,KAOY2iB,EAPZ,OAQ4B3f,qBAAc,GAR1C,oBAQCs9B,EARD,KAQYC,EARZ,KASAX,EAAe34B,KAAM44B,SATrB,EAWgC78B,oBAAc,MAX9C,oBAWCjD,EAXD,KAWcw/B,EAXd,OAY0Bv8B,qBAAc,GAZxC,oBAYCw8B,EAZD,KAYWC,EAZX,KAaAY,EAAiBp5B,KAAM44B,SAbvB,EAewB78B,oBAAc,MAftC,oBAeC+5B,EAfD,KAeU4C,EAfV,OAgB4B38B,oBAAc,IAhB1C,oBAgBCw9B,EAhBD,KAgBYC,EAhBZ,OAkBqCt9B,aAAQ7J,EAAI6B,iBAA/CiI,EAlBF,EAkBEA,SAAUC,GAlBZ,EAkBYA,aAAcC,GAlB1B,EAkB0BA,OAE1By+B,GAAe96B,KAAM44B,SAE3B7V,sBAAU,WACR,GAAIyX,EAAW,CACb,GAAIA,EAAU/mB,WAAY,CACxB,IAAMsnB,EAAU9R,EAAUxmB,QACxB,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQ+yB,EAAU/mB,cACpC,GACFiI,EAAaqf,GAEf,GAAIP,EAAUnnB,aAAc,CAC1B,IAAM2nB,EAAU9R,EAAYzmB,QAC1B,SAACw4B,GAAD,OAAaA,EAAGxzB,MAAQ+yB,EAAUnnB,gBAClC,GACFilB,EAAe0C,OAGlB,CAAC/R,EAAWC,EAAasR,IAE5BzX,sBAAU,WACR,GAAIkG,GAAaA,EAAU/mB,OAAS,EAAG,CACrC,IAAMu3B,EAAWxQ,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI2M,UAAYA,KAChE0D,EAAaC,MAEd,CAAC3D,EAAS7M,IAgDb,OACE,eAACnqB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNhB,UAAW,GACXurB,aAAc,GACd1L,aAAc,GANlB,SASE,gBAAC7L,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZwf,eAAgB,iBALpB,UAQE,eAACmR,GAAA,EAAD,CAEEqf,gBAAiBjB,GACjBxe,YAAU,EACVnzB,KAAK,QACL0yB,QAASA,EACTc,eAAgB,SAACC,GAAD,OACdvf,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,MAEjC4tB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAOtU,MAAQwU,EAAOxU,KAC7DyU,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAgBvf,MAAOA,EAAOkD,KAAMqc,KAEtC1tB,MAAOmsC,EACP1rB,SAAU,SAACrhB,EAAG0uB,GACZse,EAAate,GACb0e,GAAqB,OAAR1e,QAAQ,IAARA,OAAA,EAAAA,EAAUvoB,QAAS,GAC5BuoB,GACFoe,GAAa,IAGjBz+B,QAAS,CAAEugB,MAAOvgB,EAAQtP,WAC1B8vB,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEprB,GAAG,UACH/C,KAAK,UACLiQ,MAAK,UAAKgW,EAAMO,QAAX,YAAsBP,EAAMkX,SACjCvvB,MAAOs+B,EACPjxC,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChBgT,SAAU,SAAC1I,GACTklC,GAAQre,QAAU7mB,GAEpB4mB,gBAAiB,CACf5d,MAAO,CAAE7U,SAAUyS,EAAQ,GAAK,WAMxC,gBAACsC,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,CAAKF,MAAO,CAAEnV,YAAa,GAAIqB,WAAY,IAA3C,SACE,gBAAC+uC,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAOynC,EACPhnB,SAAU,SAACpR,GACTg7B,EAAW5kB,OAAOpW,EAAEk6B,OAAOvpC,QAC3BqtB,EAAa,OAPjB,UAUE,eAACuB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QACE,eAAC4c,GAAA,EAAD,CAAOl7B,MAAO,CAAElV,QAAS,EAAGlB,OAAQ,GAAK4K,MAAM,YAEjDiL,MAAO7B,EAAQ,mDAAa,cAG9B,eAACygB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QACE,eAAC4c,GAAA,EAAD,CAAOl7B,MAAO,CAAElV,QAAS,EAAGlB,OAAQ,GAAK4K,MAAM,YAEjDiL,MAAO7B,EAAQ,6CAAY,mBAIjC,eAACue,GAAD,CACE3sB,KAAK,WAELimB,MAAOA,EACPuH,UAAWka,EACX9a,QAASue,EACTlrC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbje,SAAUud,EACVx8B,SAAUA,EACV7Q,MAAO,IACP+rB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNzf,QAASA,EACTU,MAAOA,OAGX,eAACue,GAAD,CACE3sB,KAAK,aACLiZ,MAAOgN,EAAMrB,WACbqB,MAAOA,EACP2G,QAASkO,EAAYzmB,QAAO,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAC9C1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBsd,EAChBrd,YAAaod,EACbnd,SAAUge,EACVj9B,SAAUA,EACV7Q,MAAO,IACP+rB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNzf,QAASA,EACTU,MAAOA,IAET,eAAC2B,GAAA,EAAD,CACE/P,KAAK,MACL0gB,SAAU,SAACpR,GAAD,OAAYi9B,EAAW7mB,OAAOpW,EAAEk6B,OAAOvpC,SACjDA,MAAOqsC,EACPr8B,MAAOgW,EAAMpgB,IACb5K,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLuM,QAAOK,GAAOpI,IACd2K,MAAO,CAAEtT,MAAO,IAChB9C,OAAO,QACP2yC,QAAS,SAACz9B,GAAD,OAAOA,EAAEk6B,OAAOwD,UACzBC,WAAY,CACVz8B,MAAO,CAAEiR,UAAW,QAAS9lB,SAAU,GAAIkC,OAAQ,OAGvD,eAACkS,GAAA,EAAD,CACE/P,KAAK,QACL0gB,SAAU,SAACpR,GAAD,OAAYm9B,EAAa/mB,OAAOpW,EAAEk6B,OAAOvpC,SACnDA,MAAOusC,EACPv8B,MAAOgW,EAAMzgB,MACboI,QAAOK,GAAOzI,MACdvK,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLmP,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACP2yC,QAAS,SAACz9B,GAAD,OAAOA,EAAEk6B,OAAOwD,UACzBC,WAAY,CACVz8B,MAAO,CAAEiR,UAAW,QAAS9lB,SAAU,GAAIkC,OAAQ,OAGvD,eAACiqB,GAAA,EAAD,CACEtX,MAAO,CAAEpV,WAAY,IACrB4J,MAAM,UACN9K,KAAK,QACLuW,QAASzC,IAxMI,WACnB,IAAKo+B,EAGH,OAFAD,GAAa,QACbO,GAAQre,QAAQ6e,QAGlB,IAAMroB,EAAWla,EACb,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,YAE3BsL,EACEsU,EAAala,EACf,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,YAE/BsL,EACE68B,EAAQ,uDACTf,GACAvnB,GACAD,GAHS,IAIZ0nB,UACAE,YACAY,UAAWd,EAAUE,EACrBa,cAAef,EAAUF,EAAUhO,KACnCh8B,OAAQ1B,EAAK0B,OACb4mC,OAAQtoC,EAAK2Y,MAEf4yB,EAAQkB,GAxCRV,EAAa,GACbF,EAAW,GACXF,EAAa,MACb/e,EAAa,MACb4c,EAAe,MAsCfwC,GAAQre,QAAQ6e,WAsKVj0B,MAAM,iBALR,SAOE,eAAC,KAAD,W,0CCtPJyO,GAAoB,CACxBC,IA/BgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,sBAAKpX,MAAO,CAAEiR,UAAW,UAAzB,SACE,eAAC/Q,GAAA,EAAD,CAAKmX,EAAG,EAAR,SACE,eAACC,GAAA,EAAD,CAAK9iB,MAAM,UAAUyL,QAASmX,EAAW3O,MAAM,iBAA/C,SACE,eAAC,KAAD,WA4BN8O,KAtBiB,SAAC,GAAD,IAAGH,EAAH,EAAGA,UAAH,OACjB,eAACI,GAAA,EAAD,CACEvX,QAASmX,EACTpX,MAAO,CAAE3S,OAAQ,GAAIX,MAAO,IAC5B+b,MAAM,WAHR,SAKE,eAAC,KAAD,CAAUzI,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,aAiB1CkjB,OAbmB,SAAC,GAAD,IAAGN,EAAH,EAAGA,UAAH,OACnB,eAACI,GAAA,EAAD,CACEvX,QAASmX,EACTpX,MAAO,CAAE3S,OAAQ,GAAIX,MAAO,IAC5B+b,MAAM,aAHR,SAKE,eAAC,KAAD,CAAYzI,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,cAUjCsoC,GAAe,SAAC,GAAuB,IAArBvqC,EAAoB,EAApBA,GAAI6kB,EAAgB,EAAhBA,UAC3BS,EAAgBX,GAAkB3kB,GACxC,OAAO,eAACslB,EAAD,CAAeT,UAAWA,K,qBCyRpB2lB,GA1SG,SAAC,GASP,IARV17B,EAQS,EARTA,KACAqZ,EAOS,EAPTA,QACAhO,EAMS,EANTA,IAEAkT,GAIS,EALTL,MAKS,EAJTK,YACAhiB,EAGS,EAHTA,MACA6X,EAES,EAFTA,MACAvlB,EACS,EADTA,KAEMgN,EAAUrP,KADP,EAEyBsP,qBAAc,GAFvC,oBAEFu+B,EAFE,KAESC,EAFT,OAIyBx+B,oBAAc,MAJvC,oBAIFy+B,EAJE,KAISC,EAJT,OAKqB1+B,oBAAS,GAL9B,oBAKF2+B,EALE,KAKOC,EALP,OAMyB5+B,oBAAS,GANlC,oBAMF6+B,EANE,KAMSC,EANT,OAQyB9+B,oBAAc,MARvC,oBAQFhD,EARE,KAQS2iB,EART,OASyB3f,qBAAc,GATvC,oBASFs9B,EATE,KASSC,EATT,KAUHX,EAAe34B,KAAM44B,SAVlB,EAYqB78B,oBAAc,MAZnC,oBAYF+5B,EAZE,KAYO4C,EAZP,OAayB38B,oBAAc,IAbvC,oBAaFw9B,EAbE,KAaSC,EAbT,OAe6Bz9B,oBAAc,MAf3C,oBAeFjD,EAfE,KAeWw/B,EAfX,OAgBuBv8B,qBAAc,GAhBrC,oBAgBFw8B,EAhBE,KAgBQC,EAhBR,KAiBHY,EAAiBp5B,KAAM44B,SAjBpB,EAmBkC18B,aAAQ7J,EAAI6B,iBAA/CiI,EAnBC,EAmBDA,SAAUC,GAnBT,EAmBSA,aAAcC,GAnBvB,EAmBuBA,OAExB6sB,GAAgB6J,KAAhB7J,YACAsC,GAAaoQ,KAAbpQ,SACAvC,GAAc+J,KAAd/J,UAEF6R,GAAe96B,KAAM44B,SAE3B7V,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClBozB,EAAavvB,EAAIsvB,WACjBD,EAAWrvB,EAAIovB,SACf,IAAMmB,EAASvwB,EAAI7D,IACbiyB,EAAQpuB,EAAI+H,aACZsmB,EAAQruB,EAAImI,WAClB,GAAIimB,EAAO,CACT,IAAMb,EAAS3P,GAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,EAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,EAAake,GAEf,GAAIiC,EAAQ,CACV,IAAMC,EAAOtQ,GAAS/oB,QAAO,SAACs5B,GAAD,OAAaA,EAAGt0B,MAAQo0B,KAAQ,GAC7DpB,EAAaqB,OAGhB,CAAC77B,IACJ8iB,sBAAU,WACR,GAAIkG,IAAaA,GAAU/mB,OAAS,EAAG,CACrC,IAAMu3B,EAAWxQ,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI2M,UAAYA,KAChE0D,EAAaC,MAEd,CAAC3D,EAAS7M,KACb,IAqDM+S,GAAc,WAClB1iB,IArDAuhB,EAAa,GACbF,EAAW,GACXF,EAAa,MACb/e,EAAa,OAsDf,OACE,eAACrC,GAAD,CACEpZ,KAAMA,EACNqZ,QAAS0iB,GACT9vC,SAAU,KACV4P,QAASA,EAJX,SAME,eAACgD,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNtD,OAAQ,GACRoB,UAAW4S,EAAQ,MAAQ,OAL/B,SAQE,gBAACsC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EAENZ,WAAY,SACZwf,eAAgB,iBANpB,UASE,eAACmR,GAAA,EAAD,CAEEJ,YAAU,EACVnzB,KAAK,QACL0yB,QAASwQ,GACT1P,eAAgB,SAACC,GAAD,OACdvf,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,MAEjC4tB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAOtU,MAAQwU,EAAOxU,KAC7DyU,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAgBrc,KAAMqc,KAExBH,UAAU,EACVvtB,MAAOmsC,EACP1rB,SAAU,SAACrhB,EAAG0uB,GACZse,EAAate,GAETA,GACFoe,GAAa,IAGjBz+B,QAAS,CAAEugB,MAAOvgB,EAAQtP,WAC1B8vB,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEprB,GAAG,UACH/C,KAAK,UACLiQ,MAAOgW,EAAMO,QACb5Y,MAAOs+B,EACPjxC,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChBgT,SAAU,SAAC1I,GACTklC,GAAQre,QAAU7mB,GAEpB4mB,gBAAiB,CACf5d,MAAO,CAAE7U,SAAU,WAM3B,eAACgxB,GAAD,CACE3sB,KAAK,aACLiZ,MAAOgN,EAAMrB,WACbqB,MAAOA,EACP2G,QAASkO,GACT76B,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBsd,EAChBrd,YAAaod,EACbnd,SAAUge,EACVj9B,SAAUA,EACV7Q,MAAO,IACP+rB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNzf,QAASA,EACTU,MAAOA,IAGT,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEwQ,SAAU,WAAYtkB,WAAY,GAAIwkB,MAAO,KAA3D,SACE,gBAACuqB,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAOynC,EACPhnB,SAAU,SAACpR,GACTg7B,EAAW5kB,OAAOpW,EAAEk6B,OAAOvpC,QAC3BqtB,EAAa,OAPjB,UAUE,eAACuB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QACE,eAAC4c,GAAA,EAAD,CAAOl7B,MAAO,CAAElV,QAAS,EAAGlB,OAAQ,GAAK4K,MAAM,YAEjDiL,MAAO7B,EAAQ,mDAAa,cAG9B,eAACygB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QACE,eAAC4c,GAAA,EAAD,CAAOl7B,MAAO,CAAElV,QAAS,EAAGlB,OAAQ,GAAK4K,MAAM,YAEjDiL,MAAO7B,EAAQ,6CAAY,mBAIjC,eAACue,GAAD,CACE3sB,KAAK,WACLiZ,MAAOgN,EAAMpB,SACboB,MAAOA,EACP2G,QAASue,EACTlrC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbje,SAAUud,EACVx8B,SAAUA,EACV7Q,MAAO,IACP+rB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNzf,QAASA,EACTU,MAAOA,IAET,eAAC2B,GAAA,EAAD,CACE/P,KAAK,MACL0gB,SAAU,SAACpR,GAAD,OAAYi9B,EAAW7mB,OAAOpW,EAAEk6B,OAAOvpC,SACjDA,MAAOqsC,EACPr8B,MAAOgW,EAAMpgB,IACb5K,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLuM,QAAOK,GAAOpI,IACd2K,MAAO,CAAEtT,MAAO,IAChB9C,OAAO,QACP2yC,QAAS,SAACz9B,GAAD,OAAOA,EAAEk6B,OAAOwD,UACzBC,WAAY,CACVz8B,MAAO,CAAEiR,UAAW,QAAS9lB,SAAU,GAAIkC,OAAQ,OAGvD,eAACkS,GAAA,EAAD,CACE/P,KAAK,QACL0gB,SAAU,SAACpR,GAAD,OAAYm9B,EAAa/mB,OAAOpW,EAAEk6B,OAAOvpC,SACnDA,MAAOusC,EACPv8B,MAAOgW,EAAMzgB,MACboI,QAAOK,GAAOzI,MACdvK,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLmP,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACP2yC,QAAS,SAACz9B,GAAD,OAAOA,EAAEk6B,OAAOwD,UACzBC,WAAY,CACVz8B,MAAO,CAAEiR,UAAW,QAAS9lB,SAAU,GAAIkC,OAAQ,OAGvD,eAACiqB,GAAA,EAAD,CACEtX,MAAO,CAAEpV,WAAY,IACrB4J,MAAM,UACN9K,KAAK,QACLuW,QAASzC,IAzNG,WACpB,IAAKo+B,EAGH,OAFAD,GAAa,QACbO,GAAQre,QAAQ6e,QAGlB,IAAMroB,EAAWla,EACb,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,OAE3B,CACEqgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,GAEfsU,EAAala,EACf,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEjB68B,EAAQ,uDACTf,GACAvnB,GACAD,GAHS,IAIZ0nB,UACAE,YACAY,UAAWd,EAAUE,EACrBa,cAAef,EAAUF,EAAUhO,KACnCh8B,OAAQ1B,EAAK0B,OACb4mC,OAAQtoC,EAAK2Y,MAEf+W,EAAW+c,GACXS,QA8KQ30B,MAAM,iBALR,SAOE,eAAC,KAAD,cCjTC8M,GAAW,SAAC7I,GAAD,OAAcA,EAAI2wB,OAEpCC,GAAoB,SAAC,GAAD,IAAG7tC,EAAH,EAAGA,MAAH,OACxB,eAACyQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZwf,eAAgB,YALpB,SAQE,eAACzM,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SACGgF,EAAQA,EAAMyd,eAAe,SAAW,QAKzCqwB,GAAuB,SAAC/zC,GAAD,OAC3B,eAAC,KAAD,cAAkBg0C,mBAAoBF,IAAuB9zC,KAEzDi0C,GAAqB,SAACj0C,GAAD,OACzB,eAAC,KAAD,cACEg0C,mBAAoB,gBAAG/tC,EAAH,EAAGA,MAAH,OAClB,eAAC4P,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiCyqB,OAAOzlB,GAAS,MAE/CjG,KAgBKk0C,GAAiBC,cAZf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,SASP,CAAE8D,KAAM,kBAA3BmuC,EAJH,SAAC,GAAD,IAAGzgC,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAMC,MAAP,6BAAiBD,GAAjB,IAA4B1+B,UAAWjC,EAAQ0gC,mBAOlC,SAASG,GAAT,GAQN,IAPPjf,EAOM,EAPNA,KACApvB,EAMM,EANNA,WACAsuC,EAKM,EALNA,SACApgC,EAIM,EAJNA,MACA6X,EAGM,EAHNA,MACAvlB,EAEM,EAFNA,KAEM,IADN7C,cACM,MADG,IACH,IACY8P,oBAAS,CACzB,CAAE3N,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9B,CAAElmB,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMO,SAChD,CAAExmB,KAAMoO,EAAQ,iBAAmB,eAAgB6K,MAAOgN,EAAMpB,UAChE,CAAE7kB,KAAM,UAAWiZ,MAAOgN,EAAMpgB,KAChC,CAAE7F,KAAM,YAAaiZ,MAAOgN,EAAMzgB,OAClC,CAAExF,KAAM,YAAaiZ,MAAOgN,EAAMzG,SAN7BivB,EADD,uBAU+B9gC,oBAAS,CAC5C,CAAE5C,WAAY,QAAS7N,MAAO,MAAO0T,MAAO,QAC5C,CAAE7F,WAAY,OAAQ7N,MAAO,QAC7B,CAAE6N,WAAY,UAAW7N,MAAO,MAAO0T,MAAO,SAC9C,CAAE7F,WAAY,YAAa7N,MAAO,MAAO0T,MAAO,SAChD,CAAE7F,WAAY,YAAa7N,MAAO,MAAO0T,MAAO,WAL3C89B,EAVD,qBAkBAC,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBopB,EAAQppB,EAAQ,GACtBvkB,EAAW2tC,IAHO,2CAAH,sDAenB,OACE,eAAC5a,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW/wC,EACXizB,SAAU,OACV12B,OAAQ,GACRy0C,UAAWhxC,GALf,SAQGyxB,GACC,gBAAC,KAAD,CAAMA,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,CACEI,oBAtBU,WAClB,OAAO,eAACr+B,GAAA,EAAD,CAAK9T,QAAQ,UAsBZoyC,iBAAkBN,EAClBO,eAAgBf,KAElB,eAAC,GAAD,CAAsBgB,IAAK,CAAC,YAAa,UAAW,eACpD,eAAC,GAAD,CAAoBA,IAAK,CAAC,WAC1B,eAAC,KAAD,IACA,eAAC,KAAD,CACEC,mBAAiB,EACjBC,iBAAe,EACfC,iBAAkB/B,KAEpB,eAAC,GAAD,CAAcnd,UA9BJ,aA8B0BC,WAAYoe,EAAhD,SACE,eAAC,GAAD,CAAW9tC,KAAMA,EAAM0N,MAAOA,EAAO6X,MAAOA,MAE9C,eAAC,KAAD,CACEjmB,KAAK,eACLsvC,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aAWX,MAVY,CACV,CACE7b,IAAK,cACLryB,KAAMmuC,KAAgBC,YACtBvyC,MAAO,KAJC,oBAMPqyC,EAAal7B,QACd,SAACq7B,GAAD,OAAYA,EAAEruC,OAASmuC,KAAgBC,yBCvIlD,I,GAAME,GAAa,SAAC,GAAyC,EAAvCr1B,MAAwC,IAAjC2E,EAAgC,EAAhCA,OAAQO,EAAwB,EAAxBA,MAAOyG,EAAiB,EAAjBA,MACjD,OACE,gBAACvV,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAe,SACfC,WAAY,WACZwf,eAAgB,SAChBze,OAAQ,IAPZ,UAUE,gBAACgS,GAAA,EAAD,CAAYW,MAAO,GAAnB,UACGyV,EAAMzG,MADT,MACmBR,GAAYQ,MAM/B,gBAAC3P,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGsqB,EAAM8Y,WADT,MACwB/f,GAAYC,UC+E3B2wB,GAjGO,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,UAAW/pB,EAAY,EAAZA,MAc3D,OACE,eAACvV,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACX6f,aAAc,GACd0L,aAAc,IANlB,SASE,gBAACkL,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACqY,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLC,MAAO8vC,EAAS,OAAS,SACzBrvB,SA1BW,SAACpR,GAEN,SADIA,EAAEk6B,OAAZvpC,OAEN+vC,GAAU,GACVF,EAAS,UAETE,GAAU,GACVF,EAAS,MAeL,UAME,eAACp/B,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,MAAOvB,QAAS,GAA5D,SACE,eAACuzB,GAAA,EAAD,CACE5uB,MAAM,OACNuQ,MAAO,CACLye,SAAU,IACVjyB,gBAAiB+yC,EAAS,UAAY,UACtC/hB,kBAAmB,EACnBzR,aAAc,IAEhBuS,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAOgW,EAAMgZ,SAGjB,eAACvuB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,MAAOvB,QAAS,GAA5D,SACE,eAACuzB,GAAA,EAAD,CACE5uB,MAAM,SACNuQ,MAAO,CACLye,SAAU,IACVjyB,gBAAkB+yC,EAAqB,UAAZ,UAC3B/hB,kBAAmB,EACnBzR,aAAc,IAEhBuS,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAOgW,EAAMhE,gBAKrB,eAACkR,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACG2c,GACC,gBAACtE,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAO4vC,EACPnvB,SAlEK,SAACpR,GAChBwgC,EAASxgC,EAAEk6B,OAAOvpC,QA4DV,UAOE,eAACyQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOH,UAAW,GAF5C,SAIE,eAACmyB,GAAA,EAAD,CACE5uB,MAAM,OACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,cACtBiL,MAAOgW,EAAMpP,SAGjB,eAACnG,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOH,UAAW,GAF5C,SAIE,eAACmyB,GAAA,EAAD,CACE5uB,MAAM,OACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,cACtBiL,MAAOgW,EAAMlP,oBCzEhBk5B,GAhBO,WACpB,OACE,eAACv/B,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,YAEZpkB,QAAQ,OACRc,KAAK,IACL4e,eAAe,SACfxf,WAAW,SAPb,SASE,eAACyvB,GAAA,EAAD,O,8CCVA2jB,GAAkB,CAAEv0C,SAAU,GAAIwlB,WAAY,QAE9CgvB,GAAgB,CAAEx0C,SAAU,IAErBy0C,GAAb,+MACEC,kBAAoB,WAClB,OACE,gBAACld,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVwlB,WAAY,OACZmvB,YAAa,EACb9zB,YAAa,OACbxf,gBAAiB,OACjBa,OAAQ,GACRjB,QAAS,OACTE,WAAY,SACZwf,eAAgB,UAZpB,kBAkBF,eAAC6W,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVwlB,WAAY,OACZovB,eAAgB,EAChBC,eAAgB,OAChBC,kBAAmB,EACnBC,kBAAmB,OACnB1zC,gBAAiB,OACjBa,OAAQ,GACRjB,QAAS,OACTE,WAAY,SACZwf,eAAgB,UAdpB,gCAoBF,eAAC6W,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVwlB,WAAY,OACZmvB,YAAa,EACb9zB,YAAa,OACbxf,gBAAiB,OACjBJ,QAAS,OACTE,WAAY,SACZwf,eAAgB,SAChBze,OAAQ,IAZZ,qBAkBF,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVwlB,WAAY,OACZovB,eAAgB,EAChBC,eAAgB,OAChBC,kBAAmB,EACnBC,kBAAmB,OACnB1zC,gBAAiB,OACjBJ,QAAS,OACTE,WAAY,SACZwf,eAAgB,SAChBze,OAAQ,IAdZ,mBAoBF,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVwlB,WAAY,OACZmvB,YAAa,EACb9zB,YAAa,OACbxf,gBAAiB,OACjBJ,QAAS,OACTE,WAAY,SACZwf,eAAgB,SAChBze,OAAQ,IAZZ,yBArFV,EA0GE8yC,iBAAmB,WAAO,IAAD,EACvB,OACE,gBAACxd,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,sBAAK5iB,MAAO,CAAE3S,OAAQ,QAExB,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVwlB,WAAY,OACZmvB,YAAa,EACb9zB,YAAa,OACbxf,gBAAiB,OACjBJ,QAAS,OACTE,WAAY,SACZwf,eAAgB,UAVpB,2BAgBF,eAAC6W,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVwlB,WAAY,OACZovB,eAAgB,EAChBC,eAAgB,OAChBC,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClB7zC,gBAAiB,OACjBJ,QAAS,OACTE,WAAY,SACZwf,eAAgB,YAdpB,SAiBG0C,GAAW,UAAC,EAAKhlB,MAAM82C,iBAAZ,aAAC,EAAsBtxB,eApJ/C,EA2JEuxB,WAAa,SAACz/B,GACZ,IAAI0/B,EAAU1/B,EAAKtR,KAAKkc,UAAU,EAAG,IACrC,OACE,gBAACiX,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVs1C,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClBj0C,QAAS,OACTE,WAAY,SACZwf,eAAgB,SAChBze,OAAQ,IAdZ,SAiBGyT,EAAKu8B,MAAQ,MAGlB,eAAC1a,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,uBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACV80C,kBAAmB,EACnBC,kBAAmB,OACnB9zC,QAAS,OACTE,WAAY,SACZwf,eAAgB,aAChBze,OAAQ,IAVZ,UAaE,+BAAMmzC,IACL1/B,EAAK6/B,IAAM,wCAAU7/B,EAAK6/B,WAG/B,eAAChe,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVs1C,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClBj0C,QAAS,OACTE,WAAY,SACZwf,eAAgB,WAChBze,OAAQ,IAdZ,SAiBGmhB,GAAY1N,EAAKk7B,eAGtB,eAACrZ,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACV80C,kBAAmB,EACnBC,kBAAmB,OACnB9zC,QAAS,OACTE,WAAY,SACZwf,eAAgB,SAChBze,OAAQ,IAVZ,SAaGyT,EAAKg7B,YAGV,eAACnZ,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLsb,YAAa,EACbC,aAAc,EACdpwB,SAAU,GACVwlB,WAAY,OACZsvB,kBAAmB,EACnBC,kBAAmB,OACnBO,gBAAiB,EACjBC,gBAAiB,OACjBN,iBAAkB,EAClBC,iBAAkB,OAClBj0C,QAAS,OACTE,WAAY,SACZwf,eAAgB,WAChBze,OAAQ,IAfZ,SAkBGmhB,GAAY1N,EAAK87B,mBA/P9B,EAsQEgE,gBAAkB,WAChB,OACE,gBAACje,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACVs1C,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClBpvB,UAAW,SACX5jB,OAAQ,QAId,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACV80C,kBAAmB,EACnBC,kBAAmB,OACnB7yC,OAAQ,QAId,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACVs1C,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClBpvB,UAAW,QACX5jB,OAAQ,QAId,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACV80C,kBAAmB,EACnBC,kBAAmB,OACnBjvB,UAAW,SACX5jB,OAAQ,QAId,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACVwlB,WAAY,OACZsvB,kBAAmB,EACnBC,kBAAmB,OACnBO,gBAAiB,EACjBC,gBAAiB,OACjBN,iBAAkB,EAClBC,iBAAkB,OAClBpvB,UAAW,QACX5jB,OAAQ,YA7UtB,EAqVEwzC,iBAAmB,WAAO,IAAD,MACjBC,EAAG,UAAG,EAAKt3C,MAAM82C,iBAAd,iBAAG,EAAsBx2B,aAAzB,aAAG,EAA6BxG,OACnCy9B,EAAOC,MAAM1R,KAAK0R,MAAM,GAAKF,GAAK3Y,KAAK,KACvC8Y,EAAQ,iCAAO,EAAKz3C,MAAM82C,iBAAlB,aAAO,EAAsBx2B,OAA7B,aAAuCi3B,IACrD,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAU5+B,KAAI,SAACvB,GACpB,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM+H,KACD,EAAK03B,WAAWz/B,GAEhB,EAAK8/B,sBA7VpB,6CAkWE,WACE,IpEiDgC3zB,EoEjD1Bi0B,EAAUC,KAAK33C,MAAM82C,UACnBc,EAAYD,KAAK33C,MAAjB43C,QAER,OACE,gBAAClhC,GAAA,EAAD,CAAKF,MAAO,CAAE9U,WAAY,WAAamsB,EAAG,EAA1C,UACE,gBAACsL,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,GACTi1C,eAAgB,EAChBE,kBAAmB,EACnBQ,gBAAiB,EACjBT,eAAgB,OAChBE,kBAAmB,OACnBQ,gBAAiB,OACjBt0C,QAAS,OACTE,WAAY,SACZwf,eAAgB,aAChBqgB,oBAAqB,GACrB9+B,OAAQ,IAbZ,SAgBE,sBACEg0C,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAASE,KACdC,IAAG,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAS5xC,KACdnC,OAAQ,IACR2S,MAAO,CACLwhC,UAAW,UACXz1B,aAAc,GACd7f,UAAW,SAKnB,eAACy2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBACE5iB,MAAO,CACLlV,QAAS,GACT0B,gBAAiB,OACjB0/B,qBAAsB,GACtB6T,eAAgB,EAChBE,kBAAmB,EACnBG,iBAAkB,EAClBF,kBAAmB,OACnBF,eAAgB,OAChBK,iBAAkB,OAClBhzC,OAAQ,IAXZ,SAcE,gBAACs1B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,gBAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,sBAAK5iB,MAAO0/B,GAAZ,qBACA,sBAAK1/B,MAAO2/B,GAAZ,SAAuByB,EAAQK,OAC/B,sBAAKzhC,MAAO2/B,GAAZ,gBAAuByB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAASvsC,QAChC,sBAAKmL,MAAO2/B,GAAZ,gBAAuByB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAASjR,aAElC,gBAACxN,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,sBAAK5iB,MAAO0/B,GAAZ,qBACA,sBAAK1/B,MAAO2/B,GAAZ,gBAAuByB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAShR,oBAMxC,eAACzN,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,sBAAK5iB,MAAO,CAAE3S,OAAQ,QAGxB,gBAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,sBAAK5iB,MAAO,CAAE2Q,WAAY,OAAQ8G,aAAc,GAAItsB,SAAU,IAA9D,iBAGA,sBACE6U,MAAO,CACL7U,SAAU,GACVwlB,WAAY,OACZ+wB,cAAe,aAJnB,SAOGR,EAAQhvB,eAEX,iCACE,uBAAMlS,MAAO,CAAE2Q,WAAY,QAA3B,qBACCuwB,EAAQ1sB,oBAGb,gBAACmO,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,sBAAK5iB,MAAO,CAAE7U,SAAU,GAAIw2C,cAAe,GAA3C,qBACA,gBAAChf,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBAAK5iB,MAAO,CAAE2Q,WAAY,QAA1B,2BAEF,eAACgS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,+BAAMse,EAAQU,cAEhB,eAACjf,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,sBAAK5iB,MAAO,CAAE2Q,WAAY,QAA1B,qBAEF,eAACgS,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gCpEpDoB3V,EoEoDK,OAACi0B,QAAD,IAACA,OAAD,EAACA,EAASj0B,KpElD/C,+BACG,IAAIhT,KAAKgT,GAAMC,eAAe,QAAS,CACtC9C,IAAK,UACLF,MAAO,UACPD,KAAM,mBoEgDA,eAAC0Y,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UAGnB,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,sBAAK5iB,MAAO,CAAE3S,OAAQ,QAEvB8zC,KAAKtB,oBACLsB,KAAKN,mBACLM,KAAKhB,sBAER,gBAACjgC,GAAA,EAAD,CAAKF,MAAO,CAAEwQ,SAAU,WAAYC,OAAQ,GAAIC,MAAO,KAAvD,UACE,sBAAK1Q,MAAO,CAAE2Q,WAAY,QAA1B,kBACA,sDAEF,eAACzQ,GAAA,EAAD,CAAKF,MAAO,CAAEwQ,SAAU,WAAYC,OAAQ,GAAI6H,KAAM,IAAtD,SACE,sBAAKtY,MAAO,CAAE2Q,WAAY,OAAQnc,MAAO,OAAQrJ,SAAU,IAA3D,mDAzdV,GAAoCiW,KAAMygC,eCP3BvyC,gBAAf,+oCCMe,cAAO,IAAD,MACQu7B,aAAaiX,GAAU,CAChDxO,YAAa,sBAFI,oBACZyO,EADY,KACHC,EADG,KAkBnB,OAbA7d,sBAAU,WACR4d,MACC,CAACA,IAWG,CAAElxB,QATgB,OAAPmxB,QAAO,IAAPA,GAAA,UAAAA,EAAS3nC,YAAT,kDAA6BA,OAAQ,IAC/BgI,KAAI,SAAC4/B,GAC3B,OAAO,6BACFA,GADL,IAEEzyC,KAAMyyC,EAAGx5B,MACTzV,OAAQivC,EAAGx5B,aCfF,cAAO,IAAD,IAWf24B,EAXe,EACcvW,aAAaqX,IAD3B,oBACZC,EADY,KACHC,EADG,OAGGtkC,aAAYukC,GAAe,CAC/CnX,eAAgB,CAAC,CAAEC,MAAO+W,OADrBI,EAHY,qBAOnBne,sBAAU,WACRge,MACC,CAACA,IAGJ,IAAMI,GAAgB,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAU/nC,YAAV,oDAAgCA,OAAQ,KAClDkoC,IACFnB,EAAUjzC,KAAKC,MAAMm0C,IAIvB,MAAO,CAAEnB,UAASkB,cAAaE,eAFR,yBAAMJ,QAAN,IAAMA,OAAN,EAAMA,EAAU1W,aCQ5B+W,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cAisBSqF,GA5rBM,SAAC,GAcV,IAbVrhC,EAaS,EAbTA,KACAqZ,EAYS,EAZTA,QACAhO,EAWS,EAXTA,IACA6S,EAUS,EAVTA,MACAI,EASS,EATTA,UACAC,EAQS,EARTA,WACAyK,EAOS,EAPTA,UACAC,EAMS,EANTA,YACAqY,EAKS,EALTA,iBACA32C,EAIS,EAJTA,MACA2K,EAGS,EAHTA,KACAlH,EAES,EAFTA,MACAD,EACS,EADTA,KAEM0N,EAAUvP,KADP,EAEqBwP,qBAAS,GAF9B,oBAEFylC,EAFE,KAEOC,EAFP,KAGDhyB,EAAUiyB,KAAVjyB,MAHC,EAIe1T,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAJtD,oBAIFy3B,EAJE,KAIIze,EAJJ,OAK+B1X,KAAMjE,SAAS,IAAIlD,MALlD,oBAKF8oC,EALE,KAKYC,EALZ,OAMiB7lC,oBAAc,IAN/B,oBAMF8lC,EANE,KAMKC,EANL,OAQyB/lC,oBAAc,IARvC,oBAQFgmC,EARE,KAQSC,EART,OASuBjmC,oBAAc,IATrC,oBASFiJ,EATE,KASQi9B,EATR,OAUiBlmC,oBAAc,IAV/B,oBAUFkiC,EAVE,KAUKC,EAVL,OAYuBniC,oBAAS,GAZhC,oBAYF8R,EAZE,KAYQq0B,EAZR,OAamBnmC,oBAAc,IAbjC,oBAaFomC,EAbE,KAaMC,EAbN,KAeDpC,EAAYqC,KAAZrC,QAfC,EAiB6BjkC,oBAC3B,iBAAT3N,EAA0BC,EAAQ,MAlB3B,qBAiBFyK,GAjBE,MAiBWw/B,GAjBX,SAoB6Bv8B,qBAAc,GApB3C,sBAoBFm9B,GApBE,MAoBWC,GApBX,MAqBHC,GAAiBp5B,KAAM44B,SArBpB,GAuByB78B,oBACvB,eAAT3N,EAAwBC,EAAQ,MAxBzB,sBAuBF0K,GAvBE,MAuBS2iB,GAvBT,SA0ByB3f,qBAAc,GA1BvC,sBA0BFs9B,GA1BE,MA0BSC,GA1BT,MA2BHX,GAAe34B,KAAM44B,SA3BlB,GA6ByB78B,oBACvB,eAAT3N,EAAwBC,EAAQ,MA9BzB,sBA6BFuL,GA7BE,MA6BS0oC,GA7BT,SAgCyBvmC,oBACvB,WAAT3N,EAAoBC,EAAQ,MAjCrB,sBAgCF0L,GAhCE,MAgCSwoC,GAhCT,SAoCuBxmC,qBAAS,GApChC,sBAoCFymC,GApCE,MAoCQC,GApCR,SAqCqB1mC,oBAAS,IArC9B,sBAqCF2d,GArCE,MAqCOgpB,GArCP,SAuCmB3mC,qBAAS,GAvC5B,sBAuCFoiC,GAvCE,MAuCMC,GAvCN,SAyC0B3U,aAAakZ,GAAmB,CACjEzQ,YAAa,sBA1CN,sBAyCF0Q,GAzCE,MAyCQC,GAzCR,SA6CyBC,KAA1BvQ,GA7CC,GA6CDA,QAASJ,GA7CR,GA6CQA,aA7CR,GA8CwC4Q,KAAzChR,GA9CC,GA8CDA,UAAWL,GA9CV,GA8CUA,YAAaE,GA9CvB,GA8CuBA,aAEhC7O,sBAAU,WACR,GAAI5E,GACEpkB,GAAW,CACb,IAAa,OAATA,SAAS,IAATA,QAAA,EAAAA,GAAWsZ,eAAyB,iBAATjlB,EAAyB,CAAC,IAAD,EAChD40C,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAWsZ,wBAD7B,aAAG,EAET,GACJilB,GAAe0K,GAEjB,IAAa,OAATjpC,SAAS,IAATA,QAAA,EAAAA,GAAW0Z,aAAuB,eAATrlB,EAAuB,CAAC,IAAD,EAC5C40C,EAAI,UAAG/Z,EAAUxmB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAW0Z,sBAD7B,aAAG,EAET,GACJiI,GAAasnB,OAIlB,CAACjpC,KAEJgpB,sBAAU,WACR,GAAI5E,GACEplB,KACW,OAATA,SAAS,IAATA,QAAA,EAAAA,GAAWsa,eAAyB,iBAATjlB,EAAyB,CAAC,IAAD,EAChD40C,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,SAAZ,IAAYA,QAAZ,EAAYA,GAAWsa,wBAD7B,aAAG,EAET,GACJilB,GAAe0K,MAIpB,CAACjqC,KAEJgqB,sBAAU,WAAO,IAAD,IACRra,GAAiB,OAATm6B,SAAS,IAATA,IAAA,UAAAA,GAAW5pC,YAAX,2DAAwCA,OAAQ,GAC9D,GAAIyP,GAASA,EAAMxG,OAAS,EAAG,CAC7B,IAAM+gC,EAAMv6B,EAAMzH,KAAI,SAACg6B,GAAD,OAAaA,EAAGiI,UAChCC,EAAW5B,EAAiB9+B,QAAO,SAAC2gC,GAAD,OACvCH,EAAIr7B,SAASw7B,EAAI37B,QAGb47B,EAAiB36B,EAAMzH,KAAI,SAACvB,EAAWu8B,GAAgB,IAEzDqH,EAWE5jC,EAXF4jC,WACAhpB,EAUE5a,EAVF4a,aACAC,EASE7a,EATF6a,eACAlH,EAQE3T,EARF2T,aACAC,EAOE5T,EAPF4T,eACAC,EAME7T,EANF6T,iBACAC,EAKE9T,EALF8T,gBACAC,EAIE/T,EAJF+T,WACAC,EAGEhU,EAHFgU,aACAC,EAEEjU,EAFFiU,eACAC,EACElU,EADFkU,cAEIkoB,EAAOqH,EAAS1gC,QAAO,SAACs5B,GAAD,OAAaA,EAAGt0B,MAAQ/H,EAAKwjC,UAAQ,GAClE,OAAO,6BACFpH,GADL,IAEEwH,aACAhpB,eACAC,iBACAlH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAqoB,QACArB,UAAWl7B,EAAK6jC,UAChB7I,QAASh7B,EAAKzL,IACdunC,UAAW97B,EAAKkO,WAGpBy1B,EAAenqC,MAAK,SAAC6D,EAAQymC,GAAT,OAClBzmC,EAAE0mC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO1mC,EAAE0mC,MAAQ,EAAI,KAE/CzB,EAAaqB,GACb5B,GAAW,MAEZ,CAACoB,KAhIK,OAkIuB3mC,aAAQ,IAAhCE,GAlIC,GAkIDA,aAAc+6B,GAlIb,GAkIaA,MAlIb,GAsIU76B,sBAAWtB,IAtIrB,MAoIPyB,UAAa4X,GApIN,GAoIMA,MAAO7X,GApIb,GAoIaA,MACX1N,GArIF,GAqIPhC,MAASgC,KAmDL40C,GAAmB,SAACjyB,GACxBmwB,EAAgBnwB,IAGlBsR,sBAAU,WAIR,GAHI5E,GAASoU,IACXuP,GAAgB,OAAPvP,SAAO,IAAPA,QAAA,EAAAA,GAASn+B,cAAe0f,OAAM,OAACye,SAAD,IAACA,QAAD,EAACA,GAASn+B,cAAgB,EAAI,GAEnE+pB,GACW,WAAT/vB,EAAmB,CACrB,UAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOglB,aAAc,CAAC,IAAD,EACjB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOglB,wBADzB,aAAG,EAET,GACJilB,GAAe0K,GAEjB,UAAI30C,QAAJ,IAAIA,OAAJ,EAAIA,EAAOolB,WAAY,CAAC,IAAD,EACfuvB,EAAI,UAAG/Z,EAAUxmB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOolB,sBADzB,aAAG,EAET,GACJiI,GAAasnB,GAEf,UAAI30C,QAAJ,IAAIA,OAAJ,EAAIA,EAAOsiB,WAAY,CAAC,IAAD,EACfqyB,EAAI,UAAGjR,GAAUtvB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOsiB,sBADzB,aAAG,EAET,GACJ2xB,GAAaU,OAIlB,CAAC/iC,IAEJ8iB,sBAAU,WACR4gB,OACC,CAAC5B,EAAWl0B,EAAUowB,EAAOE,KAEhCpb,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClBg6B,GAAW,GACX,IAAMzkC,EAAY,CAAE4mC,KAAMt4B,EAAI7D,KAC9Bm7B,GAAS,CACP5lC,cAEF,IAAMyK,EAAM6D,EAAIqF,WACVkzB,EAAO9R,GAAUtvB,QAAO,SAACw4B,GAAD,OAAaA,EAAGxzB,MAAQA,KAAK,GAErDiyB,EAAQpuB,EAAI+H,aACZsmB,EAAQruB,EAAImI,WAClB,GAAIimB,EAAO,CACT,IAAMb,EAAS3P,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,GAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,GAAake,GAGf,IAAKrkC,GAAQ+V,EAAI+J,OAAQ,CACvB,IAAM3F,EAAMD,EAAMhN,QAAO,SAACqhC,GAAD,OAAaA,EAAG3yC,KAAOma,EAAI+J,UAAQ,GAC5DktB,GAAa7yB,GAEf4yB,GAAauB,GACbzF,GAAU9yB,EAAI6yB,QACd+D,EAAY52B,EAAIuC,UAChBi0B,EAASx2B,EAAIoJ,OACbgvB,GAAiBp4B,EAAIO,MACrBqyB,EAAS5yB,EAAIy4B,YAAcz4B,EAAIy4B,YAAc,OAE9C,CAACz4B,IAEJ,IAAMq4B,GAAkB,WACtB,IACMK,EADWjC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMzI,aAChC0I,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAEvDqnC,EADarC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMxI,iBAC5ByI,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAC7DsQ,EAAS22B,EAAMn2B,EAUrBu0B,EARa,CACXiC,SAAUh3B,EACVi3B,aAAcF,EACdG,WAAYH,EACZx2B,MAAOo2B,EACP32B,SACA+f,OAPa4W,EAAMn2B,EAAWu2B,IA+BhCnC,EArBa,CACX,CACEuC,SAAUz/B,GACV6L,UAAW7L,GACXsI,OAAQ22B,EACRv0C,KAAM0E,GAAeC,cAEvB,CACEowC,SAAUz/B,GACV6L,UAAW7L,GACXsI,OAAQQ,EACRpe,KAAM0E,GAAeM,kBAEvB,CACE+vC,SACY,SAAVvG,EAAmBl5B,GAA2BA,GAChD6L,UAAW7L,GACXsI,OAAQ8wB,GAAS6F,EAAMn2B,EAAW,EAClCpe,KAAM0E,GAAeK,oBAMrBqI,GAAQ,yCAAG,2CAAAE,EAAA,2DACoB4U,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8vB,EAAe/vB,GAAe+vB,EAAe9vB,GAFlC,gCAGPqG,GACJR,EACAlb,GAAQ,+FAAsB,yBALnB,6CASXqR,EAAW,GATA,gCAUPqK,GACJR,EACAlb,GAAQ,sIAA+B,2BAZ5B,6CAgBXqR,GAAQ,OAAGs0B,QAAH,IAAGA,OAAH,EAAGA,EAAQv0B,QAhBR,kCAiBPsK,GACJR,EACAlb,GACI,6NACA,sCArBO,6CAyBV5C,GAzBU,kCA0BPse,GACJR,EACAlb,GAAQ,oIAA6B,uBA5B1B,+CAiCX2hB,GAASrK,OAAO+tB,IAAU/tB,OAAOye,GAAQn+B,eAjC9B,kCAkCP8jB,GACJR,EACAlb,GAAK,6KACmC+1B,GAAQn+B,cAD3C,uCAE+Bm+B,GAAQn+B,eAtCjC,6CA2CV2tC,GAAkC,IAArBA,EAAU7/B,OA3Cb,kCA4CPgW,GACJR,EACAlb,GAAK,uTA9CM,0CAoDP6Q,EAAsC80B,EAAtC90B,OAAQk3B,EAA8BpC,EAA9BoC,WAAYnX,EAAkB+U,EAAlB/U,OAAQxf,EAAUu0B,EAAVv0B,MAC9B5Q,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCgW,MAAOmtB,EAAQA,EAAM4C,gBAAa/lC,EAClCmN,KAAM81B,EACNjxB,SAAU,CACRC,WAAY/W,GAAU6N,IACtBqJ,aAAclX,GAAUxL,KACxByiB,eAAgBjX,GAAUhI,OAC1BwhB,cAAexZ,GAAUrG,OAE3Byf,WAAYla,GACR,CACEua,aAAcva,GAAY2O,IAC1B6L,eAAgBxa,GAAY1K,KAC5BmlB,iBAAkBza,GAAYlH,OAC9B4hB,gBAAiB1a,GAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEvBuU,SAAUla,GACN,CACE0a,WAAY1a,GAAU0O,IACtBiM,aAAc3a,GAAU3K,KACxBulB,eAAgB5a,GAAUnH,OAC1BgiB,cAAe7a,GAAU3F,MACzBygB,cAAe9a,GAAUxF,OAE3B,CACEkgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,EACfmV,mBAAenV,GAErBgK,MAAO3b,KAAKyB,UAAUuzC,GACtBwC,aACA32B,QACAC,WACAR,SACA+f,SACAsX,OAAQvG,GACRA,UACAwG,WAAYxG,GAAS9wB,EAAS,EAC9BrI,WACA++B,YAAa9F,EACb5oB,OAAQtb,GAAYA,GAAU5I,QAAKuN,EACnC04B,OAAQtoC,GAAK2Y,KAIf4vB,GAFelZ,EAAQI,EAAYC,EAErBxhB,GA3GC,4CAAH,qDA8GRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACLsO,GAAOA,EAAI7D,MACJ,OAATo7B,SAAS,IAATA,OAAWvY,WAGb6H,GAAa,IACbsF,KACA,MAAOz7B,GACP07B,GAAQ17B,GACR+X,QAAQC,IAAIhY,GAXF,2CAAH,wDAeL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,IAFlB,6CAINsb,GAAWJ,EAASlb,IAJd,OAKZuX,QAAQC,IAAIhY,GALA,2CAAH,sDAaPy7B,GAAc,WA/RlBN,KACA6K,EAAa,IACbE,EAAY,GACZE,EAAU,IACVE,GAAa,MACbR,EAAS,IACTG,EAAY,IACZ/D,EAAS,IACTqE,GAAa,MACbnE,IAAU,GACVwD,EAAgB,IAAI/oC,MACpBy/B,GAAe,MACf5c,GAAa,MAqRbpC,KAQIsrB,GAAoBhM,oBACpBiM,GAAmBC,2BAAgB,CACvCj5C,QAAS,kBAAM+4C,GAAanoB,SAC5BsoB,cAAc,YAAD,cAAcz5B,QAAd,IAAcA,OAAd,EAAcA,EAAKk1B,WAChCwE,kBAAkB,IAEd9F,GAAY,CAChBsB,UAAS,OAAEl1B,QAAF,IAAEA,OAAF,EAAEA,EAAKk1B,UAChB30B,KAAM81B,EACN7wB,aAAY,OAAElX,SAAF,IAAEA,QAAF,EAAEA,GAAWxL,KACzBglB,cAAa,OAAExZ,SAAF,IAAEA,QAAF,EAAEA,GAAWrG,MAC1Bqa,MAAOu0B,EAAOv0B,MACdP,OAAQ80B,EAAO90B,OACf3E,MAAOq5B,GAEHtwB,IAAU,OAAHnG,QAAG,IAAHA,OAAA,EAAAA,EAAKrD,WAAY,IAAIpP,KAAJ,OAASyS,QAAT,IAASA,OAAT,EAASA,EAAKrD,WAAa,IAAIpP,KACvDmQ,GAAG,OAAGhR,SAAH,IAAGA,QAAH,EAAGA,GAAcyZ,GAAKH,UACzBjK,GAAQ7K,GACV2hB,EACE,sEACA,sEACFA,EACA,cACA,eACJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASme,GACTpwB,MAAOA,GACPxK,SAnCmB,WACrBgoC,KACAzoC,GAAaS,GAAbT,IAkCExR,MAAOA,EACPurC,KAAMA,EACNnI,MAAO6W,GACP34C,SAAS,KACT6S,GAAI,EACJumB,GAAI,GACJmF,QAAS54B,KAAO2c,MAAM,KAZxB,SAcE,gBAAC+S,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMxI,KACbxd,MAAOszC,EACP7yB,SAAU40B,OAGd,eAACniB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEnN,MAAOA,GACP4pB,MAAOA,EACPE,OAAQA,GACRC,UAAWA,GACXF,SAAUA,MAGd,eAAC3c,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,GACT1jC,MAAOuL,GACPqhB,eAAgBqnB,GAChB9lC,MAAOA,GACPgC,WAAS,EACT6c,QArXW,WACnBonB,IAAY,IAqXJ1oB,WAAS,EACT6B,SAAmB,eAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,OACLiZ,MAAOgN,GAAM9e,KACb8e,MAAOA,GACP2G,QAASvL,EACTphB,MAAO0L,GACPkhB,eAAgBsnB,GAChB/lC,MAAOA,GACPgC,WAAS,EACTod,SAAmB,WAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAeuR,GAAQ,cAAgB,MACvCtR,WAAY,SACZwf,eAAgB,WAChBlhB,WAAYgT,QAAQkC,EAAY,GAChCjV,YAAa+S,GAAQ,QAAKkC,GAR9B,UAWGyf,GACC,eAAClgB,GAAA,EAAD,CAAYW,MAAO,CAAExL,MAAO,QAA5B,SAAuCihB,GAAMC,KAE/C,eAACnW,GAAA,EAAD,CACE/P,KAAK,QACLwtB,UAAWuC,EACX9vB,MAAOwzC,EACP/yB,SAAU,SAACpR,GAAD,OAAYokC,EAAShuB,OAAOpW,EAAEk6B,OAAOvpC,SAC/ChF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO6yB,EAAQ,GAAK,IAAK30B,WAAY,IAC9ChB,OAAO,QAEP6yC,WAAY,CACVz8B,MAAO,CACLiR,UAAW,SACX9lB,SAAU,GACVkC,OAAQ,YAMlB,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,GACPkiB,eAAgBS,GAChBR,eAAgBoe,GAChBne,YAAake,GACbje,SAAUud,GACVpd,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAKA,GACL4S,SAAmB,eAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,EAAYzmB,QAAO,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAC9C1nC,MAAOyK,GACPmiB,eAAgBqd,GAChBpd,eAAgBie,GAChBhe,YAAa+d,GACb9d,SAAUge,GACV7d,QAAM,EACN/e,MAAOA,GACPlR,MAAO,IACPswB,SAAmB,iBAATxtB,MAId,gBAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXurB,aAAc,GACd1L,aAAc,IANlB,UASE,eAAC7L,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEsb,YAAa,GAAIC,aAAc,IAA5D,SACE,eAACigB,GAAD,CACEpf,QAASumB,EACTlH,QAlcQ,SAAC36B,GACrB,IAAMwlC,EAAQ,uBAAOnD,GAAP,8BAAuBriC,GAAvB,IAA6B03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,EAAamD,IAgcD9wB,MAAOA,GACP4U,UAAWA,EACXC,YAAaA,EACbptB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTglC,GACA,eAAC1iC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,SACE,eAACsmB,GAAD,CACEjf,KAAMqkB,EACNnF,SA1cO,SAACl9B,GACtB,IAAMwlC,EAAWnD,EAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,EAAamD,IAkcC72C,WA/bW,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,GACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,EAAamD,IA4bC3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,OAIX0yC,GAAW,eAAC,GAAD,OAEd,gBAAC1iC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,gBAChBjhB,YAAa,GACbD,WAAY,IANhB,UASE,eAAC2U,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAOgW,GAAMxG,SACbxf,MAAOwf,EAAS42B,WAChB31B,SAAU,SAACpR,GAAD,OAAYwkC,EAAYpuB,OAAOpW,EAAEk6B,OAAOvpC,SAClDhF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPiH,KAAK,SACL0rC,QAAS,SAACz9B,GAAD,OAAOA,EAAEk6B,OAAOwD,YAG3B,eAAC,GAAD,CACE/tB,OAAM,OAAE80B,QAAF,IAAEA,OAAF,EAAEA,EAAQ90B,OAChBO,MAAK,OAAEu0B,QAAF,IAAEA,OAAF,EAAEA,EAAQv0B,MACfC,SAAUA,EACVwG,MAAOA,QAGX,eAAC,GAAD,CACEqF,QAASA,GACTzZ,KAAMuiC,GACNlpB,QA7gBc,WACtBmpB,IAAY,GACZC,GAAW,KA4gBHvkB,OAAO,EACP6Y,YA9Oe,SAACsO,GACxBhD,GAAagD,IA8OLh6B,IAAK,KACLiT,UAAWmT,GACXlT,WAAYoT,KAEd,eAAC9yB,GAAA,EAAD,UACE,sBAAKF,MAAO,CAAE5T,QAAS,QAAvB,SACE,eAAC,GAAD,CACEg1C,QAASA,EACTd,UAAWA,GACXtpC,IAAKgvC,kBChsBRW,GAAa,SAACC,EAAkBxgC,EAAeygC,GAG1D,OAV0B,SAACC,EAAcD,GACzC,IAAM/F,EAAM+F,EAAMhzC,IAAM,EAAIgzC,EAAMjzC,IAGlC,OAFYotC,MAAM1R,KAAK0R,MAAMF,IAAM,SAACjyC,EAAGqS,GAAJ,OAAUA,EAAI2lC,EAAMjzC,OACtCmzC,MAAK,SAACjmC,GAAD,OAAgBgmC,EAAM99B,SAASlI,MAMrCkmC,CAlBgB,SAACJ,EAAkBxgC,GAAmB,IAC9D3B,EAAemiC,EAAfniC,WAKR,OAJyB2B,EAASvC,QAChC,SAACrS,GAAD,OAAciT,IAAejT,EAAIiT,cAEJpC,KAAI,SAAC4kC,GAAD,OAAaA,EAAG3gC,QAYrC4gC,CAAmBN,EAAaxgC,GACVygC,ICiBhCM,IArBwBp7C,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETe,YAAa,CACX7D,OAAQoC,EAAMG,QAAQ,IAGxBi7C,QAAS,CACPl7C,UAAWF,EAAMG,QAAQ,SAKTsH,OAAaC,MAAM,CACvClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,UAEJ4zC,GAAoB5zC,OAAaC,MAAM,CAC3ClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,SAEG6zC,GAAkB,CAAEvzC,SAAUC,aAAYmzC,KAC1CI,GAAsB,CAAExzC,SAAUC,aAAYqzC,KAyP5CG,GAvPM,SAAC,GASV,IARVnmC,EAQS,EARTA,KACAqZ,EAOS,EAPTA,QACAhO,EAMS,EANTA,IACA6S,EAKS,EALTA,MACAI,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA5zB,EAES,EAFTA,MACAoa,EACS,EADTA,SACS,EACmBjJ,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAG6B3b,oBAAc,MAH3C,oBAGFypC,EAHE,KAGWa,EAHX,OAI6BtqC,qBAAc,GAJ3C,oBAIFuqC,EAJE,KAIWC,EAJX,KAKHC,EAAiBxmC,KAAM44B,SALpB,EAO6B78B,oBAAc,MAP3C,oBAOF0qC,EAPE,KAOWC,EAPX,OASqC3qC,oBAAS,IAT9C,oBASF4qC,EATE,KASeC,EATf,OAUiB7qC,oBAAc,IAV/B,oBAUF0pC,EAVE,KAUKoB,EAVL,OAWe9qC,oBAAS,GAXxB,oBAWFmJ,EAXE,KAWI4hC,EAXJ,OAayC5qC,aAChDiiB,EAAQ+nB,GAAkBC,IADpBhqC,EAbC,EAaDA,SAAUC,EAbT,EAaSA,aAAcC,EAbvB,EAauBA,OAAQ86B,EAb/B,EAa+BA,MAb/B,EAmBU76B,sBAAWtB,IAD5ByB,UAAa4X,EAlBN,EAkBMA,MAAO7X,EAlBb,EAkBaA,MAGdqgB,EAAakqB,KAAblqB,SAERkG,sBAAU,WACR2jB,EAAe7pB,EAAS,MACvB,CAAC5c,IAEJ8iB,sBAAU,WACR,GAAIyiB,EAAa,CACf,IAAMwB,ED3FuB,SAAC52C,GAClC,IAAMiT,EAAajT,EAAIiT,WACvB,GAAIA,EACF,OAAON,GAAaM,GCwFN4jC,CAAoBzB,GAEhC,GADAqB,EAASG,GACL7oB,EAAO,CACT,IAAM+oB,EAAU3B,GAAWC,EAAaxgC,EAAUgiC,GAClDF,EAAQI,SAGVJ,EAAQ,KAET,CAACtB,IAEJziB,sBAAU,WACR,GAAIzX,GAAOA,EAAIjI,WAAY,CAAC,IAClBA,EAAeiI,EAAfjI,WACFC,EAASkB,GAAoB/B,QACjC,SAAC0kC,GAAD,OAAcA,EAAI9jC,aAAeA,KACjC,GACI7S,EAASqsB,EAASpa,QACtB,SAAC2kC,GAAD,OAAcA,EAAIttB,WAAaxO,EAAI9a,UACnC,GACF61C,EAAe/iC,GACfojC,EAAel2C,GACfs2C,EAAQx7B,EAAIpG,SAEb,CAACoG,IAEJyX,sBAAU,WAEN6jB,EADEH,EACiBjiC,GAEA,MAEpB,CAACiiC,IAEJ,IAAM5pC,EAAQ,yCAAG,WAAO5D,GAAP,sBAAA8D,EAAA,yDACVyoC,EADU,uBAEbe,GAAe,GACfC,EAAU/pB,QAAQ6e,QAHL,+BAMXp2B,EAAOugC,EAAMhzC,KAAOyS,EAAOugC,EAAMjzC,KANtB,gCAOPulB,GACJL,EACAlb,EAAQ,wHAA2B,oBATxB,wCAafy6B,GAAU,GACJ7oC,EAAO6K,EAAK7K,KAAKua,OACjB/W,EAASqH,EAAKrH,OAAO+W,OACrBnY,EAASi2C,EAAY3sB,SACrB9c,EAjBS,cAkBbyK,IAAK6D,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EACzBlO,SACA0U,OACA9W,OACAwD,SACAy1C,SAAS/7B,EAAI7D,UAAM/I,GAChB8mC,GAGLnO,EADelZ,EAAQI,EAAYC,EACrBxhB,GA3BC,4CAAH,sDA8BRq6B,EAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,+EAEJu6B,EAAO,CAAEt6B,cAFL,OAGVi6B,GAAU,GACVqQ,KAJU,gDAMV5P,EAAQ,EAAD,IANG,yDAAH,wDAULA,EAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZuX,QAAQC,IAAIhY,GALA,2CAAH,sDAkBPsrC,GAAY,WARhBjB,EAAe,MACfE,GAAe,GACfG,EAAe,MACfG,EAAS,IACTC,EAAQ,GACR3P,IAKA7d,KAMIjS,GAAQ7K,EACV2hB,EACE,0DACA,+FACFA,EACA,cACA,eAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASguB,GACTjgC,MAAOA,GACPxK,SAjBmB,WACrBT,EAAaS,EAAbT,IAiBExR,MAAOA,EACPurC,KAAMA,EACNI,OAAQA,EARV,SAUE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAAC0W,GAAD,CACE9pC,KAAK,SACLktB,SAAO,EACPjU,MAAO7K,EAAQ,kFAAmB,eAClCsd,SAAS,SACTkB,QAAS2rB,EACTt4C,MAAOm3C,EACPvqB,eAAgBorB,EAChBnrB,eAAgBqrB,EAChBprB,YAAamrB,EACblrB,SAAUorB,EACVrqC,SAAUA,EACVyf,YAAUtQ,IAAOA,EAAIjI,YACrB7G,MAAOA,EACPgC,WAAS,IAEVinC,IAAK,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOjzC,MAAO2rB,GACtB,gBAAClgB,GAAA,EAAD,WACGwnC,EAAMjzC,IADT,MACiBizC,EAAMhzC,OAGzB,eAAC4yB,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLiQ,MAAO7B,EAAQ,0DAAe,OAC9BnO,MAAO6W,EACP4J,SAAU,SAACpR,GAAD,OAAYopC,EAAQppC,EAAEk6B,OAAOvpC,QACvCid,IAAKA,EACLsQ,YAAUtQ,IAAOA,EAAIjI,YACrB5T,KAAK,SACL+O,WAAS,IAEVhC,GACC,gBAAC,KAAMse,SAAP,WACE,eAACuK,GAAD,CACE9yB,UAAQ,EACR6L,WAAS,EACThQ,KAAK,SACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,IAEX,eAAC6mB,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMyY,OACb3wB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EAEL9M,WAAS,QAIbhC,GACA,gBAAC,KAAMse,SAAP,WACE,eAACuK,GAAD,CACEjnB,WAAS,EACT7L,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EAEL9M,WAAS,IAEX,eAAC6mB,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,EAAMziB,OACbuK,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,UAKjB,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,U,yGChSV+lB,GAAmB,SAACvuC,GAA4C,IAA/B5F,EAA8B,uDAAtB,OAAQ9K,EAAc,uDAAP,GACnE,OAAQ0Q,GACN,KAAK,EACH,OACE,eAAC,KAAD,CACE4F,MAAO,CAAE7U,SAAUzB,EAAM8K,WAG/B,KAAK,EAEH,OACE,eAAC,KAAD,CACEwL,MAAO,CAAE7U,SAAUzB,EAAM8K,WAG/B,KAAK,EACH,OACE,eAAC,KAAD,CACEwL,MAAO,CAAE7U,SAAUzB,EAAM8K,WAG/B,KAAK,EACH,OACE,eAAC,KAAD,CACEwL,MAAO,CAAE7U,SAAUzB,EAAM8K,WAG/B,KAAK,GACH,OACE,eAAC,KAAD,CACEwL,MAAO,CAAE7U,SAAUzB,EAAM8K,WAI/B,QACE,OAAO,2BChCAo0C,GAAe,SAAC,GAMjB,IALVxuC,EAKS,EALTA,OACAyuC,EAIS,EAJTA,UACAC,EAGS,EAHTA,iBACArgC,EAES,EAFTA,MACA7K,EACS,EADTA,MAEA,OACE,gBAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAACq3B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEqlB,QAAQ,2BACRx2C,GAAG,qBACH9C,MAAO2K,EACP8V,SAAU,SAACpR,GACT,IAAMrP,EAAQylB,OAAOpW,EAAEk6B,OAAOvpC,OAC9Bo5C,EAAUp5C,GACVq5C,EAAiBr5C,EAAO,WAE1BhF,QAAQ,WACRuV,MAAO,CAAEo+B,UAAW,GAAI3f,SAAU,KAVpC,SAYG/lB,GAAY2J,KAAI,SAACiM,GAChB,OACE,eAAC,KAAD,CAAsB7e,MAAO6e,EAAG/b,GAAIy2C,SAAU16B,EAAG/b,KAAO6H,EAAxD,SACGwD,EAAQ0Q,EAAGtb,OAASsb,EAAG9e,MADX8e,EAAG/b,WAO1B,gBAAC2N,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTqyB,SAAU,GACVnyB,WAAY,SACZe,OAAQ,GACRvC,QAAS,GACToB,UAAW,GAPf,UAUE,eAACmT,GAAA,EAAD,UAAaoJ,IACZkgC,GAAiBvuC,EAAQ,OAAQ,WCnD7B6uC,GAAc,SAAC,GAOhB,IANV7sB,EAMS,EANTA,QACA3sB,EAKS,EALTA,MACAygB,EAIS,EAJTA,SACAtS,EAGS,EAHTA,MAGS,IAFTlR,aAES,MAFD,IAEC,MADTswB,gBACS,SACT,OACE,eAACyG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEnxB,GAAG,cACH9C,MAAOA,EACPutB,SAAUA,EACV9M,SAAUA,EACVzlB,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRX,MAAOA,EACPo2B,UAAW,WACX33B,SAAU,GACVwlB,WAAY,OACZnc,MAAO,QAZX,SAeG4nB,EAAQ/Z,KAAI,SAACvB,GACZ,OACE,eAAC,KAAD,CAEEd,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAOqR,EAAKrR,MAHd,SAKGmO,EAAQkD,EAAK9N,OAAS8N,EAAKtR,MAJvBsR,EAAKvO,Y,SC7BX22C,GAAc,CACzB,CACE32C,GAAI,EACJ/C,KAAM,QACNwD,OAAQ,2BACRvD,MAAO05C,KAAMC,OAEf,CACE72C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACRvD,MAAO05C,KAAME,QAEf,CACE92C,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,2BACRvD,MAAO05C,KAAMG,SAEf,CACE/2C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,2BACRvD,MAAO05C,KAAMI,SAGJC,GAAmB,CAC9B,CACEj3C,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,iCACRvD,MAAO05C,KAAMM,IAEf,CACEl3C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,iCACRvD,MAAO05C,KAAMO,IAEf,CACEn3C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,6CACRvD,MAAO05C,KAAMQ,IAEf,CACEp3C,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,mDACRvD,MAAO05C,KAAMS,IAEf,CACEr3C,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,mDACRvD,MAAO05C,KAAMU,IAEf,CACEt3C,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,uCACRvD,MAAO05C,KAAMW,IAEf,CACEv3C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACRvD,MAAO05C,KAAMY,KAIJC,GAAgB,CAC3B,CACEz3C,GAAI,EACJ/C,KAAM,MACNwD,OAAQ,qCACRvD,MAAO,GAET,CACE8C,GAAI,EACJ/C,KAAM,QACNwD,OAAQ,4EACRvD,MAAO,GAET,CACE8C,GAAI,EACJ/C,KAAM,eACNwD,OAAQ,iCACRvD,MAAO,IAGEw6C,GAAsB,CACjC,CACE13C,GAAI,EACJ/C,KAAM,0BACNwD,OAAQ,0DACRvD,MAAO,UAET,CACE8C,GAAI,EACJ/C,KAAM,wBACNwD,OAAQ,yFACRvD,MAAO,QAET,CACE8C,GAAI,EACJ/C,KAAM,0BACNwD,OAAQ,yFACRvD,MAAO,WAGEy6C,GAAkB,CAC7B,CACE33C,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,iCACRvD,MAAO,UAET,CACE8C,GAAI,EACJ/C,KAAM,QACNwD,OAAQ,2BACRvD,MAAO,QAET,CACE8C,GAAI,EACJ/C,KAAM,OACNwD,OAAQ,qBACRvD,MAAO,QAgBE06C,GAAe,CAC1B,CACE53C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,6CACRxD,KAAM,SAER,CACE+C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,mDACRxD,KAAM,gBAER,CACE+C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,yDACRxD,KAAM,YAER,CACE+C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,yDACRxD,KAAM,YAER,CACE+C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,mDACRxD,KAAM,aAwDG46C,GAAmB,CAC9B,CACE73C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,mDACRxD,KAAM,gBAER,CACE+C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,yDACRxD,KAAM,YAER,CACE+C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,yDACRxD,KAAM,YAER,CACE+C,GAAI,EACJ9C,MAAO,EACPuD,OAAQ,mDACRxD,KAAM,aC5BK66C,GAjNK,SAAC,GAST,IARVhpC,EAQS,EARTA,KACAqZ,EAOS,EAPTA,QACAhO,EAMS,EANTA,IACA6S,EAKS,EALTA,MACAI,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA5zB,EAES,EAFTA,MACA0K,EACS,EADTA,MACS,EACmByG,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAAS,GAFxB,oBAEFtM,EAFE,KAEIy5C,EAFJ,OAGuBntC,oBAAS,UAHhC,oBAGFqN,EAHE,KAGQ+/B,EAHR,OAI2BptC,oBAAS,UAJpC,oBAIFsN,EAJE,KAIU+/B,EAJV,OAKartC,oBAAS,IALtB,oBAKF9H,EALE,KAKGo1C,EALH,OAMettC,oBAAS,IANxB,oBAMFqkB,EANE,KAMIkpB,EANJ,OAOsBvtC,oBAAS,IAP/B,oBAOFizB,EAPE,KAOOua,EAPP,OAQuBxtC,oBAAS,MARhC,oBAQFuN,EARE,KAQQkgC,EARR,OAaUltC,sBAAWtB,IAbrB,IAWPyB,UAAa4X,EAXN,EAWMA,MAAO7X,EAXb,EAWaA,MACX1N,EAZF,EAYPhC,MAASgC,KAGXi0B,sBAAU,WACJzX,IACFg+B,EAAQh+B,EAAI8U,MACZ8oB,EAAQ59B,EAAI7b,MACZ85C,EAAYj+B,EAAI0jB,SAChBka,EAAQ59B,EAAI7b,MACZ05C,EAAY79B,EAAIlC,UAChBigC,EAAO/9B,EAAIrX,KACXm1C,EAAc99B,EAAIjC,YAClBmgC,EAAYl+B,EAAIhC,aAEjB,CAACrJ,IAEJ8iB,sBAAU,WAAO,IACP9a,EAAuB3S,EAAvB2S,UAAW1O,EAAYjE,EAAZiE,QACb+P,EAAWC,GAAY,CAC3BtB,YACA1O,UACA6P,WACAC,aACApV,QAEFu1C,EAAYlgC,KACX,CAACF,EAAUC,EAAYpV,IAE1B,IAAM4I,EAAQ,yCAAG,6BAAAE,EAAA,sDACfk6B,GAAU,GAEJj6B,EAAiB,CACrBxM,OAAQ1B,EAAK0B,OACbf,OACA8D,MAAgB,IAAT9D,EAAau/B,OAAUtwB,EAC9BjL,MAAgB,IAAThE,EAAau/B,OAAUtwB,EAC9B04B,OAAiB,IAAT3nC,EAAaX,EAAK2Y,SAAM/I,EAChC4K,WACA8W,OACAhX,WACAC,aACApV,MACA+6B,WAGF7Q,EAAQI,EAAUvhB,GAAawhB,EAAWxhB,GAC1Cm6B,IACAF,GAAU,GACV3d,IApBe,2CAAH,qDA2BR6d,EAAQ,WACZ+R,EAAQ,GACRC,EAAY,UACZC,EAAc,UACdC,EAAO,IACPC,EAAQ,IACRC,EAAY,IACZC,EAAY,OAQRniC,EAAQ7K,EACV2hB,EACE,gEACA,gEACFA,EACA,aACA,cACEsrB,EACK,IAATh6C,EAAa4kB,EAAMwG,OAAkB,IAATprB,EAAa4kB,EAAM5gB,MAAQ4gB,EAAMqb,aAE/D,OACE,eAACwG,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAnBiB,WACnB6d,IACA7d,KAkBEjS,MAAOA,EACPxK,SAnCmB,WACrBA,KAmCEjS,MAAOA,EACPurC,KAAM,GACNI,OAAQA,EARV,SAUE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLypC,WAAS,EACTna,KAAM,EACNrf,MAAOgW,EAAM+L,KACb/xB,MAAO+xB,EACPtR,SAAU,SAACpR,GAAD,OAAY4rC,EAAQ5rC,EAAEk6B,OAAOvpC,QACvCid,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAAS4tB,GACTv6C,MAAOoB,EACPqf,SAAU,SAACpR,GAAD,OAAYwrC,EAAQxrC,EAAEk6B,OAAOvpC,QACvCmO,MAAOA,EACPlR,MAAO,QAGX,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACY,IAAT/xB,GACC,eAAC41B,GAAD,CACEj3B,KAAK,UACLiQ,MAAOorC,EACPp7C,MAAO2gC,EACPlgB,SAAU,SAACpR,GAAD,OAAY6rC,EAAY7rC,EAAEk6B,OAAOvpC,QAC3CmQ,WAAS,EACT8mB,GAAI,MAIV,gBAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAAS6tB,GACTx6C,MAAOgb,EACPyF,SAAU,SAACpR,GAAD,OAAY0rC,EAAc1rC,EAAEk6B,OAAOvpC,QAC7CmO,MAAOA,EACPlR,MAAO,QAGX,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,MACLiQ,MAAOgW,EAAMpgB,IACb5F,MAAO4F,EACP6a,SAAU,SAACpR,GAAD,OAAY2rC,EAAOv1B,OAAOpW,EAAEk6B,OAAOvpC,SAC7CoB,KAAK,SACLnE,MAAO,QAGX,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAAS8tB,GACTz6C,MAAO+a,EACP0F,SAAU,SAACpR,GAAD,OAAYyrC,EAAYzrC,EAAEk6B,OAAOvpC,QAC3CmO,MAAOA,EACPlR,MAAO,WAIb,eAACi2B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,SACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNlC,UAAW,MACXG,SAAU,GACVmB,WAAY,SACZwf,eAAgB,UAPpB,SAUG0B,GAAqB9C,EAAU9M,iBAQ5C,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCvLV6f,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cAKOyN,GAAc,SAACthD,GAAgB,IAExCuhD,EAOEvhD,EAPFuhD,cACAC,EAMExhD,EANFwhD,gBACA1gB,EAKE9gC,EALF8gC,YACAzZ,EAIErnB,EAJFqnB,MACAwZ,EAGE7gC,EAHF6gC,UACAr+B,EAEExC,EAFFwC,MACA22C,EACEn5C,EADFm5C,iBAGIj2B,E9E+G6B,SAACA,GAkBhCA,EAhBF+H,aAgBE/H,EAfFgI,eAeEhI,EAdFiI,iBAcEjI,EAbFkI,gBALgD,IAMhDC,EAYEnI,EAZFmI,WAIAyvB,GAQE53B,EAXFoI,aAWEpI,EAVFqI,eAUErI,EATFsI,cASEtI,EARF43B,QAGAvyB,GAKErF,EAPFu+B,SAOEv+B,EANFw+B,WAMEx+B,EALFqF,YAIGuC,GACD5H,EAJFwF,aAIExF,EAHFuF,eAGEvF,EAFF8H,cAhB+C,aAkB7C9H,EAlB6C,oOAoB3Cy+B,EAAM,gBAAQ72B,GAwCpB,OAtCA62B,EAAO/2B,WAAa1H,EAAI0H,WACpB1H,EAAI0H,WACJ,CACEvL,IAAK6D,EAAI+H,aACTjlB,KAAMkd,EAAIgI,eACV1hB,OAAQ0Z,EAAIiI,iBACZngB,MAAOkY,EAAIkI,iBAGbC,IACFs2B,EAAO92B,SAAW3H,EAAI2H,SAClB3H,EAAI2H,SACJ,CACExL,IAAK6D,EAAImI,WACTrlB,KAAMkd,EAAIoI,aACV9hB,OAAQ0Z,EAAIqI,eACZvgB,MAAOkY,EAAIsI,gBAGfsvB,IACF6G,EAAOrqC,KAAO4L,EAAI5L,KACd4L,EAAI5L,KACJ,CACE+H,IAAK6D,EAAI43B,OACT90C,KAAMkd,EAAIu+B,SACVj4C,OAAQ0Z,EAAIw+B,aAGhBn5B,IACFo5B,EAAOr5B,SAAWpF,EAAIoF,SAClBpF,EAAIoF,SACJ,CACEjJ,IAAK6D,EAAIqF,WACTviB,KAAMkd,EAAIwF,aACVlf,OAAQ0Z,EAAIuF,eACZtd,MAAO+X,EAAI8H,gBAGZ22B,E8E3KKC,CAAsBJ,GAE5B9tC,EAAUvP,KAbyB,EAeTwP,qBAAS,GAfA,oBAelCymC,EAfkC,KAexBC,EAfwB,OAiBF1mC,oBAAQ,OAACuP,QAAD,IAACA,OAAD,EAACA,EAAKrD,WAjBZ,oBAiBlCA,EAjBkC,KAiBvBgiC,EAjBuB,OAkBNluC,oBAAQ,OAACuP,QAAD,IAACA,OAAD,EAACA,EAAK/R,SAlBR,oBAkBlCA,EAlBkC,KAkBzB2wC,EAlByB,OAoBbnuC,qBAAY,OAAHuP,QAAG,IAAHA,OAAA,EAAAA,EAAKtS,SAAU,GApBX,oBAoBlCA,EApBkC,KAoB1ByuC,EApB0B,OAsBX1rC,qBAAS,GAtBE,oBAsBlCylC,EAtBkC,KAsBzBC,EAtByB,OAuBb1lC,oBAAc,IAvBD,oBAuBlComC,EAvBkC,KAuB1BC,EAvB0B,OAwBPrmC,oBAAc,IAxBP,oBAwBlCgmC,EAxBkC,KAwBvBC,EAxBuB,OA0BPjmC,oBAAc,MA1BP,oBA0BlChC,EA1BkC,KA0BvBwoC,EA1BuB,OA2BPxmC,oBAAc,MA3BP,oBA2BlChD,EA3BkC,KA2BvB2iB,EA3BuB,OA6BL3f,qBAAS,GA7BJ,oBA6BlCouC,EA7BkC,KA6BtBC,EA7BsB,OA8BHruC,oBAAS,IA9BN,oBA8BlCgM,EA9BkC,KA8BrBsiC,EA9BqB,QA+BTtuC,oBAAS,MA/BA,sBA+BlC6rC,GA/BkC,MA+BxB0C,GA/BwB,SAgCFvuC,oBAAQ,OAACuP,QAAD,IAACA,OAAD,EAACA,EAAKjE,OAhCZ,sBAgClCkjC,GAhCkC,MAgCvBC,GAhCuB,SAkCQzH,KAAzChR,GAlCiC,GAkCjCA,UAAWL,GAlCsB,GAkCtBA,YAAaE,GAlCS,GAkCTA,aAlCS,GAuCtBt1B,sBAAWtB,IAvCW,MAqCvCyB,UAAa4X,GArC0B,GAqC1BA,MAAO7X,GArCmB,GAqCnBA,MACX1N,GAtC8B,GAsCvChC,MAASgC,KAtC8B,GAwCXiN,oBAAS,IAxCE,sBAwClC2d,GAxCkC,MAwCzBgpB,GAxCyB,SA0CNjZ,aAAakZ,GAAmB,CACjEzQ,YAAa,sBA3C0B,sBA0ClC0Q,GA1CkC,MA0CxBC,GA1CwB,SA8CDpZ,aAAaghB,GAAY,CAC/DvY,YAAa,sBA/C0B,sBA8ClCwY,GA9CkC,MA8CrBC,GA9CqB,MAkDzC5nB,sBAAU,WAAO,IAAD,QACRra,GAAiB,OAATm6B,SAAS,IAATA,IAAA,UAAAA,GAAW5pC,YAAX,2DAAwCA,OAAQ,GACxDuQ,GAAqB,OAAXmhC,SAAW,IAAXA,IAAA,UAAAA,GAAa1xC,YAAb,oDAAmCA,OAAQ,GAE3D,GAAIyP,GAASA,EAAMxG,OAAS,EAAG,CAC7B,IAAM+gC,EAAMv6B,EAAMzH,KAAI,SAACg6B,GAAD,OAAaA,EAAGiI,UAChCC,EAAW5B,EAAiB9+B,QAAO,SAAC2gC,GAAD,OACvCH,EAAIr7B,SAASw7B,EAAI37B,QAGb47B,EAAiB36B,EAAMzH,KAAI,SAACvB,EAAWu8B,GAAgB,IAEzDqH,EAWE5jC,EAXF4jC,WACAhpB,EAUE5a,EAVF4a,aACAC,EASE7a,EATF6a,eACAlH,EAQE3T,EARF2T,aACAC,EAOE5T,EAPF4T,eACAC,EAME7T,EANF6T,iBACAC,EAKE9T,EALF8T,gBACAC,EAIE/T,EAJF+T,WACAC,EAGEhU,EAHFgU,aACAC,EAEEjU,EAFFiU,eACAC,EACElU,EADFkU,cAEIkoB,EAAOqH,EAAS1gC,QAAO,SAACs5B,GAAD,OAAaA,EAAGt0B,MAAQ/H,EAAKwjC,UAAQ,GAClE,OAAO,6BACFpH,GADL,IAEEwH,aACAhpB,eACAC,iBACAlH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAqoB,QACArB,UAAWl7B,EAAK6jC,UAChB7I,QAASh7B,EAAKzL,IACdunC,UAAW97B,EAAKkO,WAIpBy1B,EAAenqC,MAAK,SAAC6D,EAAQymC,GAAT,OAClBzmC,EAAE0mC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO1mC,EAAE0mC,MAAQ,EAAI,KAE/CzB,EAAaqB,GAEb,IAAM8B,EAAgB9D,GAAa73B,GACnC6gC,EAAelF,GACf1D,GAAW,MAEZ,CAACoB,GAAW8H,KAEf5nB,sBAAU,WACR4gB,OACC,CAAC5B,IAEJhf,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,MACbg6B,GAAW,GACXmB,GAAS,CAAE5lC,UAAW,CAAE4mC,KAAMt4B,EAAI7D,OAClCijC,GAAY,CAAE1tC,UAAW,CAAE4tC,QAASt/B,EAAIna,MACpCma,EAAI+J,QAAQ,CAAC,IAAD,EACRw1B,EAAG,UAAGp7B,EAAMhN,QAAO,SAACqoC,GAAD,OAAYA,EAAE35C,KAAOma,EAAI+J,iBAAzC,aAAG,EAAgD,GAC5DktB,EAAasI,MAGhB,IAEH,IAwBMlH,GAAkB,WACtB,IACMK,EADWjC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMzI,aAChC0I,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAEvDqnC,EADarC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMxI,iBAC5ByI,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAC7DsQ,EAAS22B,EAUf5B,EARa,CACXiC,SAAUh3B,EACVi3B,aAAcF,EACdG,WAAYH,EACZx2B,MAAOo2B,EACP32B,SACA+f,OAPa4W,EAAMI,IAUrBuF,EAAc,CAAEt8B,WAChBs8B,EAAc,CAAEjhC,MAAO3b,KAAKyB,UAAUuzC,MAWlC2F,GAAmB,SAACpC,EAAgBl3C,GACxCu7C,EAAc,gBAAGv7C,EAAOk3C,KAG1BviB,sBAAU,WACHzX,EAAItS,QACP0uC,GAAiB,EAAG,YAErB,CAACp8B,EAAItS,SAyDR+pB,sBAAU,WACR,IAAKzX,EAAI7D,IAAK,CACZ,UAAI1N,QAAJ,IAAIA,OAAJ,EAAIA,EAAW0Z,WAAY,CAAC,IAAD,EACnBmmB,EAAI,UAAG3Q,EAAUxmB,QACrB,SAACwiC,GAAD,OAAaA,EAAGx9B,OAAH,OAAW1N,QAAX,IAAWA,OAAX,EAAWA,EAAW0Z,sBAD3B,aAAG,EAET,GACJi0B,GAAiB9N,EAAM,YACvBle,EAAake,GAEf,GAAI7/B,IACF,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWsZ,cAAc,CAAC,IAAD,EACrB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,QAAZ,IAAYA,OAAZ,EAAYA,EAAWsZ,wBAD7B,aAAG,EAET,GACJq0B,GAAiB1E,EAAM,kBAI5B,CAACjpC,IAEJgpB,sBAAU,WACR,IAAKzX,EAAI7D,KACH1O,IACF,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWsa,cAAc,CAAC,IAAD,EACrB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,QAAZ,IAAYA,OAAZ,EAAYA,EAAWsa,wBAD7B,aAAG,EAET,GACJq0B,GAAiB1E,EAAM,iBAI5B,CAACjqC,IAEJgqB,sBAAU,WACR4mB,EAAc,CAAEngC,QAASzc,KAAKyB,UAAUuZ,OACvC,CAACA,IAEJ,IAuBM0J,IAAU,OAAHnG,QAAG,IAAHA,OAAA,EAAAA,EAAKrD,WAAY,IAAIpP,KAAJ,OAASyS,QAAT,IAASA,OAAT,EAASA,EAAKrD,WAAa,IAAIpP,KACvDmQ,GAAG,OAAGhR,SAAH,IAAGA,QAAH,EAAGA,GAAcyZ,GAAKH,UAE/B,OACE,uCACE,eAACxS,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,gBACGiiB,QADH,IACGA,OADH,EACGA,EAAKoJ,UAGV,gBAAC6M,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMplB,MACbZ,MAAO4Z,EACP6G,SAAU,SAACwY,GACT2iB,EAAa3iB,GACbogB,GAAiBpgB,EAAG,cAEtB9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMnlB,IACbb,MAAOkL,EACPuV,SAAU,SAACwY,GACT4iB,EAAW5iB,GACXogB,GAAiBpgB,EAAG,YAEtB9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC6D,GAAD,CACEjnB,WAAW,EACXhQ,KAAK,YACLiQ,MAAOgW,GAAMhN,MACbhZ,MAAOk8C,GACPz7B,SAAU,SAACpR,GACT8sC,GAAa9sC,EAAEk6B,OAAOvpC,OACtBq5C,GAAiBhqC,EAAEk6B,OAAOvpC,MAAO,UAEnCid,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,GACT1jC,MAAOid,EAAIoF,SACXuK,eAhLS,SAAC5sB,GACtB,IAAI8tB,EAAW9tB,EACVA,IACH8tB,EAAW,CACTxL,gBAAYjS,EACZoS,kBAAcpS,EACdmS,oBAAgBnS,EAChB0U,mBAAe1U,GAEjBgpC,GAAiBr5C,EAAO,cACxBq5C,GAAiBr5C,EAAO,gBACxBq5C,GAAiBr5C,EAAO,kBACxBq5C,GAAiBr5C,EAAO,kBAE1Bq5C,GAAiBvrB,EAAU,aAmKf3f,MAAOA,GACP6e,QApMO,WACnBonB,GAAY,IAoMAjkC,WAAS,EACTub,WAAS,MAGb,eAACwH,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,OACLiZ,MAAOgN,GAAM9e,KACb8e,MAAOA,GACP2G,QAASvL,EACTphB,MAAO0L,EACPkhB,eA7IK,SAAC5sB,GAClB,IAAI8tB,EAAQ,OAAG9tB,QAAH,IAAGA,OAAH,EAAGA,EAAO8C,GACtBoxC,EAAal0C,GACbq5C,GAAiBvrB,EAAU,WA2If3f,MAAOA,GACPgC,WAAS,MAIb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,EACPkiB,eA3KS,SAAC5sB,GACtB,IAAI8tB,EAAW9tB,EACVA,IACH8tB,EAAW,CACT1I,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,GAEjBgpC,GAAiBr5C,EAAO,cACxBq5C,GAAiBr5C,EAAO,gBACxBq5C,GAAiBr5C,EAAO,kBACxBq5C,GAAiBr5C,EAAO,kBAE1Bq5C,GAAiBvrB,EAAU,YAC3BT,EAAaS,IA6JDZ,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAKA,OAGT,eAACuY,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,EAAYzmB,QAAO,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAC9C1nC,MAAOid,EAAI0H,WACXiI,eAzMW,SAAC5sB,GACxB,IAAI8tB,EAAW9tB,EACVA,IACH8tB,EAAW,CACT9I,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEnBgpC,GAAiBr5C,EAAO,gBACxBq5C,GAAiBr5C,EAAO,kBACxBq5C,GAAiBr5C,EAAO,oBACxBq5C,GAAiBr5C,EAAO,oBAE1Bq5C,GAAiBvrB,EAAU,eA4LfZ,QAAM,EACN/e,MAAOA,GACPgC,WAAS,WAKjB,gBAAC+iB,GAAA,EAAD,CACE7hB,MAAI,EACJ8hB,GAAI,EACJ5iB,MAAO,CACLxT,gBAAiB,OACjBuf,aAAc,EACdjhB,QAAS,GANb,UASE,eAACiV,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLyX,aAAc,EACdtsB,SAAU,GACVszB,SAAU,IAEZxe,QAAS,WACPyrC,GAAY,MACZF,GAAc,IATlB,SAYG5tC,GAAQ,gEAAgB,iBAE3B,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,IAAKizB,SAAU,QAAvC,SACGnX,EAAY9G,KAAI,SAAC8pC,GAChB,OACE,gBAAC5qC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAAS8lB,GAAoB,CAAE7E,IAAKy/B,IACpCxgD,UAAW6hB,GAAqB2+B,EAAIzhC,SAAU9M,MAEhD,eAAC4Z,GAAA,EAAD,CACEvX,QAAS,kBApJE,SAACa,GAC5B,IAAMsrC,EAAUjjC,EAAYtF,QAAO,SAACwoC,GAAD,OAAaA,EAAGhP,QAAUv8B,EAAKu8B,SAC5DkJ,EAAgB9D,GAAa2J,GACnCX,EAAelF,GAiJgB+F,CAAqBH,IACpC1jC,MAAM,aACNzI,MAAO,CAAElV,QAAS,EAAGlB,OAAQ,GAH/B,SAKE,eAAC,KAAD,CACEoW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAGlC,eAACgjB,GAAA,EAAD,CACExX,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyrC,GAAYS,GACZX,GAAc,IAEhB/iC,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,0BAS5C,gBAACmuB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC1iB,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,MAEzB,gBAACgU,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXurB,aAAc,GACd1L,aAAc,IANlB,UASE,eAAC7L,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACovC,GAAD,CACEpf,QAASumB,EACTlH,QAxWQ,SAAC36B,GACrB,IAAMwlC,EAAQ,uBAAOnD,GAAP,8BAAuBriC,GAAvB,IAA6B03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,EAAamD,IAsWD9wB,MAAOA,GACP4U,UAAWA,EACXC,YAAaA,EACbptB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTglC,GACA,eAAC1iC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,SACE,eAACsmB,GAAD,CACEjf,KAAMqkB,EACNnF,SAhXO,SAACl9B,GACtB,IAAMwlC,EAAWnD,EAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,EAAamD,IAwWC72C,WArWW,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,GACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,EAAamD,IAkWC3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,OAIX0yC,GAAW,eAAC,GAAD,OAEd,gBAACvjC,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGsqB,GAAMzG,MADT,MACmBR,GAAY+0B,EAAO90B,WAEtC,eAACvO,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,IAAzB,SACE,eAAC,GAAD,CACEkO,OAAQA,EACRyuC,UAAWA,EACXC,iBAAkBA,GAClBlrC,MAAOA,GACP6K,MAAOgN,GAAMrb,cAKnB,eAAC,GAAD,CACE0gB,QAASA,GACTzZ,KAAMuiC,EACNlpB,QAjWgB,WACtBmpB,GAAY,GACZC,GAAW,KAgWLvkB,OAAO,EACP6Y,YAAa0Q,GACbp8B,IAAK,KACLiT,UAAWmT,GACXlT,WAAYoT,KAEd,eAAC,GAAD,CACE3xB,KAAMkqC,EACN7wB,QAAS,kBAAM8wB,GAAc,IAC7B9+B,IAAKs8B,GACLzpB,OAAOypB,GACPrpB,UAlQgB,SAAC7e,GACvB,IAAMwlC,EAAQ,uBAAOn9B,GAAP,CAAoBrI,IAC5BylC,EAAgB9D,GAAa6D,GACnCmF,EAAelF,IAgQT3mB,WA9PiB,SAAC9e,GACxB,IAAMwlC,EAAWn9B,EAAY9G,KAAI,SAACg6B,GAChC,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnCmF,EAAelF,IAsPTv6C,MAAOA,EACP0K,MAAK,6BAAOgW,GAAP,IAAYrD,YAAW1O,qB,8BC3hBzB8nC,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cAulBSkP,GAllBa,SAAC,GAUjB,IATVlrC,EASS,EATTA,KACAqZ,EAQS,EARTA,QACA8xB,EAOS,EAPTA,QACA5f,EAMS,EANTA,SACA9c,EAKS,EALTA,UAKS,IAJTyP,aAIS,SAHTvzB,EAGS,EAHTA,MACA8d,EAES,EAFTA,MAES,IADT2iC,sBACS,MADQ,kBAAM,MACd,EACHvvC,EAAUvP,KADP,EAEewP,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAG+B1X,KAAMjE,SAAS,IAAIlD,MAHlD,oBAGF8oC,EAHE,KAGYC,EAHZ,OAIiB7lC,oBAAc,IAJ/B,oBAIF8lC,EAJE,KAIKC,EAJL,OAMyB/lC,oBAAc,IANvC,oBAMFgmC,EANE,KAMSC,EANT,OAOuBjmC,oBAAc,IAPrC,oBAOFiJ,EAPE,KAOQi9B,EAPR,OAQiBlmC,oBAAc,QAR/B,oBAQFkiC,EARE,KAQKC,EARL,OAUuBniC,oBAAS,GAVhC,oBAUF8R,EAVE,KAUQq0B,EAVR,OAWmBnmC,oBAAc,IAXjC,oBAWFomC,EAXE,KAWMC,EAXN,OAayBrmC,oBAAc,MAbvC,oBAaFnC,EAbE,KAaS0oC,EAbT,OAe6BvmC,oBAAc,MAf3C,oBAeFjD,EAfE,KAeWw/B,EAfX,OAgB6Bv8B,qBAAc,GAhB3C,qBAgBFm9B,GAhBE,MAgBWC,GAhBX,MAiBHC,GAAiBp5B,KAAM44B,SAjBpB,GAmByB78B,oBAAc,MAnBvC,sBAmBFhD,GAnBE,MAmBS2iB,GAnBT,SAoByB3f,qBAAc,GApBvC,sBAoBFs9B,GApBE,MAoBSC,GApBT,MAqBHX,GAAe34B,KAAM44B,SArBlB,GAuByB78B,oBAAc,MAvBvC,sBAuBFhC,GAvBE,MAuBSwoC,GAvBT,SAyBuBxmC,qBAAS,GAzBhC,sBAyBFymC,GAzBE,MAyBQC,GAzBR,SA0BqB1mC,oBAAS,IA1B9B,sBA0BF2d,GA1BE,MA0BOgpB,GA1BP,SA4BmB3mC,qBAAS,GA5B5B,sBA4BFoiC,GA5BE,MA4BMC,GA5BN,SA6BwC2E,KAAzChR,GA7BC,GA6BDA,UAAWL,GA7BV,GA6BUA,YAAaE,GA7BvB,GA6BuBA,aACxBniB,GAAUiyB,KAAVjyB,MACAwZ,GAAc+J,KAAd/J,UACAC,GAAgB6J,KAAhB7J,YACA8W,GAAYqC,KAAZrC,QAjCC,GAmCuB9jC,aAAQ,IAAhCE,GAnCC,GAmCDA,aAAc+6B,GAnCb,GAmCaA,MAnCb,GAuCU76B,sBAAWtB,IAvCrB,MAqCPyB,UAAa4X,GArCN,GAqCMA,MAAO7X,GArCb,GAqCaA,MACX1N,GAtCF,GAsCPhC,MAASgC,KAGLw8C,GAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOwhB,GACPvuC,UAAW,CACT/N,OAAO,IAAI4J,MAAOoY,SAAS,EAAG,EAAG,EAAG,GACpC/hB,KAAK,IAAI2J,MAAOoY,SAAS,GAAI,GAAI,GAAI,OAGzC,CACE8Y,MAAOkI,IAET,CACElI,MAAOkJ,IAET,CACElJ,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAlEJ,GAuEYhtB,aAAY8uC,GAAeF,IAAzClgB,GAvEE,yBAyEyB0X,KAA1BvQ,GAzEC,GAyEDA,QAASJ,GAzER,GAyEQA,aAwDjBpP,sBAAU,WACJ5E,GAASoU,IACXuP,GAAgB,OAAPvP,SAAO,IAAPA,QAAA,EAAAA,GAASn+B,cAAe0f,OAAM,OAACye,SAAD,IAACA,QAAD,EAACA,GAASn+B,cAAgB,EAAI,KAEtE,CAAC6L,IAEJ8iB,sBAAU,WACR4gB,OACC,CAAC5B,EAAWl0B,EAAUowB,EAAOE,KAEhCpb,sBAAU,WACR,GAAIqoB,GAAWA,EAAQnjC,UAAW,CAChC,IAAMR,EAAM2jC,EAAQz6B,WACdkzB,EAAO9R,GAAUtvB,QAAO,SAACw4B,GAAD,OAAaA,EAAGxzB,MAAQA,KAAK,GAC3D66B,EAAauB,GAEf,IAAMnK,EAAQ0R,EAAQ/3B,aAChBsmB,EAAQyR,EAAQ33B,WACtB,GAAIimB,EAAO,CACT,IAAMb,EAAS3P,GAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,EAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,GAAake,GAEf,GAAIwR,EAAQ/1B,OAAQ,CAClB,IAAMukB,EAAOnqB,GAAMhN,QAAO,SAAC0mB,GAAD,OAAcA,EAAIh4B,KAAOi6C,EAAQ/1B,UAAQ,GACnEktB,GAAa3I,GAEXlxB,GACFs5B,EAAat5B,KAEd,CAAC0iC,EAAS5f,EAAUuG,GAAWrpB,IAElC,IAAMi7B,GAAkB,WACtB,IACMK,EADWjC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMzI,aAChC0I,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAEvDqnC,EADarC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMxI,iBAC5ByI,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAC7DsQ,EAAS22B,EAAMn2B,EAUrBu0B,EARa,CACXiC,SAAUh3B,EACVi3B,aAAcF,EACdG,WAAYH,EACZx2B,MAAOo2B,EACP32B,SACA+f,OAPa4W,EAAMn2B,EAAWu2B,IA+BhCnC,EArBa,CACX,CACEuC,SAAUz/B,GACV6L,UAAW7L,GACXsI,OAAQ22B,EACRv0C,KAAM0E,GAAeC,cAEvB,CACEowC,SAAUz/B,GACV6L,UAAW7L,GACXsI,OAAQQ,EACRpe,KAAM0E,GAAeM,kBAEvB,CACE+vC,SACY,SAAVvG,EAAmBl5B,GAA2BA,GAChD6L,UAAW7L,GACXsI,OAAQ8wB,GAAS6F,EAAMn2B,EAAW,EAClCpe,KAAM0E,GAAeK,oBAMrBqI,GAAQ,yCAAG,qCAAAE,EAAA,2DASX8Q,EAAW,GATA,gCAUPqK,GACJR,EACAlb,GAAQ,sIAA+B,2BAZ5B,6CAgBXqR,GAAQ,OAAGs0B,QAAH,IAAGA,OAAH,EAAGA,EAAQv0B,QAhBR,gCAiBPsK,GACJR,EACAlb,GACI,6NACA,sCArBO,2CAyBV5C,EAzBU,kCA0BPse,GACJR,EACAlb,GAAQ,oIAA6B,uBA5B1B,+CAgCX2hB,GAASrK,OAAO+tB,IAAU/tB,OAAOye,GAAQn+B,eAhC9B,kCAiCP8jB,GACJR,EACAlb,GAAK,uCAC+B+1B,GAAQn+B,cADvC,6KAEmCm+B,GAAQn+B,eArCrC,6CAyCV2tC,GAAkC,IAArBA,EAAU7/B,OAzCb,kCA0CPgW,GACJR,EACAlb,GAAK,6KACmC+1B,GAAQn+B,cAD3C,uCAE+Bm+B,GAAQn+B,eA9CjC,0CAkDPiZ,EAAsC80B,EAAtC90B,OAAQk3B,EAA8BpC,EAA9BoC,WAAYnX,EAAkB+U,EAAlB/U,OAAQxf,EAAUu0B,EAAVv0B,MAE9B5Q,EAAiB,CACrB0X,MAAOmtB,EAAQA,EAAM4C,gBAAa/lC,EAClCmN,KAAM81B,EACNjxB,SAAU,CACRC,WAAY/W,EAAU6N,IACtBqJ,aAAclX,EAAUxL,KACxByiB,eAAgBjX,EAAUhI,OAC1BwhB,cAAexZ,EAAUrG,OAE3Byf,WAAYla,EACR,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEvBuU,SAAUla,GACN,CACE0a,WAAY1a,GAAU0O,IACtBiM,aAAc3a,GAAU3K,KACxBulB,eAAgB5a,GAAUnH,OAC1BgiB,cAAe7a,GAAU3F,MACzBygB,cAAe9a,GAAUxF,OAE3B,CACEkgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,EACfmV,mBAAenV,GAErBgK,MAAO3b,KAAKyB,UAAUuzC,GACtBwC,aACA32B,QACAC,WACAR,SACA+f,SACAsX,OAAQvG,GACRA,UACAwG,WAAYxG,GAAS9wB,EAAS,EAC9BrI,WACA++B,YAAa9F,EACb7G,OAAQtoC,GAAK2Y,IACbmjC,QAASQ,EAAQj6C,GACjBkkB,OAAQtb,GAAYA,GAAU5I,QAAKuN,EACnCwW,QAASk2B,EAAQ12B,OAGnB2iB,GAAMjM,GAAYpuB,GA1GH,4CAAH,qDA6GRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACT0R,EAAU,CAAE1R,UAAW,CAAE7L,GAAIi6C,EAAQj6C,GAAI6H,OAAQ,MACjDm5B,KACAsF,KACA4T,IACA,MAAOrvC,GACP07B,GAAQ17B,GACR+X,QAAQC,IAAIhY,GATF,2CAAH,wDAaL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,IAFlB,6CAINsb,GAAWJ,EAASlb,IAJd,OAKZ26B,KACApjB,QAAQC,IAAIhY,GANA,2CAAH,sDAUPy7B,GAAc,WAzPlBN,KACA6K,EAAa,IACbE,EAAY,GACZE,EAAU,IACVE,EAAa,MACbR,EAAS,IACTG,EAAY,IACZ/D,EAAS,IACTE,IAAU,GACVwD,EAAgB,IAAI/oC,MACpBy/B,EAAe,MACf5c,GAAa,MAgPbpC,KAOIsrB,GAAoBhM,oBACpBiM,GAAmBC,2BAAgB,CACvCj5C,QAAS,kBAAM+4C,GAAanoB,SAC5BsoB,cAAc,YAAD,OAAclD,GAC3BmD,kBAAkB,IAEd9F,GAAY,CAChBsB,UAAWqB,EACXh2B,KAAM81B,EACN7wB,aAAY,OAAElX,QAAF,IAAEA,OAAF,EAAEA,EAAWxL,KACzBglB,cAAa,OAAExZ,QAAF,IAAEA,OAAF,EAAEA,EAAWrG,MAC1Bqa,MAAOu0B,EAAOv0B,MACdP,OAAQ80B,EAAO90B,OACf3E,MAAOq5B,GAGHtwB,IAAc,OAAP25B,QAAO,IAAPA,OAAA,EAAAA,EAASnjC,WAAY,IAAIpP,KAAJ,OAASuyC,QAAT,IAASA,OAAT,EAASA,EAASnjC,WAAa,IAAIpP,KAC/DmQ,GAAG,OAAGhR,SAAH,IAAGA,QAAH,EAAGA,GAAcyZ,GAAKH,UAEzBjK,GAAQ7K,GACV2hB,EACE,sEACA,sEACFA,EACA,cACA,eAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASme,GACTpwB,MAAOA,GACPxK,SArCmB,WACrBT,GAAaS,GAAbT,IAqCExR,MAAOA,EACPurC,KAAMA,EACNnI,MAAO6W,GACP34C,SAAS,KACT6S,GAAI,EACJumB,GAAI,GACJmF,QAAS54B,KAAO2c,MAAM,KAZxB,SAcE,gBAAC+S,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMxI,KACbxd,MAAOszC,EACP7yB,SA5Qe,SAAC2C,GACxBmwB,EAAgBnwB,QA8QZ,eAAC8P,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEnN,MAAOA,GACP4pB,MAAOA,EACPE,OAAQA,GACRC,UAAWA,GACXF,SAAUA,MAGd,eAAC3c,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,GACT1jC,MAAOuL,EACPqhB,eAAgBqnB,EAChB9lC,MAAOA,GACPgC,WAAS,EACT6c,QApVW,WACnBonB,IAAY,IAoVJ1oB,WAAS,MAGb,eAACwH,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,OACLiZ,MAAOgN,GAAM9e,KACb8e,MAAOA,GACP2G,QAASvL,GACTphB,MAAO0L,GACPkhB,eAAgBsnB,GAChB/lC,MAAOA,GACPgC,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAeuR,GAAQ,cAAgB,MACvCtR,WAAY,SACZwf,eAAgB,WAChBlhB,WAAYgT,QAAQkC,EAAY,GAChCjV,YAAa+S,GAAQ,QAAKkC,GAR9B,UAWGyf,GACC,eAAClgB,GAAA,EAAD,CAAYW,MAAO,CAAExL,MAAO,QAA5B,SAAuCihB,GAAMC,KAE/C,eAACnW,GAAA,EAAD,CACE/P,KAAK,QACLwtB,UAAWuC,EACX9vB,MAAOwzC,EACP/yB,SAAU,SAACpR,GAAD,OAAYokC,EAAShuB,OAAOpW,EAAEk6B,OAAOvpC,SAC/ChF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO6yB,EAAQ,GAAK,IAAK30B,WAAY,IAC9ChB,OAAO,QAEP6yC,WAAY,CACVz8B,MAAO,CACLiR,UAAW,SACX9lB,SAAU,GACVkC,OAAQ,YAOlB,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,GAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,GACPkiB,eAAgBS,GAChBR,eAAgBoe,GAChBne,YAAake,GACbje,SAAUud,GACVpd,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAKA,OAGT,eAACuY,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,GAAYzmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGlP,WAC5C1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBie,GAChBhe,YAAa+d,GACb9d,SAAUge,GACV7d,QAAM,EACN/e,MAAOA,GACPlR,MAAO,QAGX,gBAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXurB,aAAc,GACd1L,aAAc,IANlB,UASE,eAAC7L,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACovC,GAAD,CACEpf,QAASwQ,EACT6O,QA3ZQ,SAAC36B,GACrB,IAAMwlC,EAAQ,uBAAOnD,GAAP,8BAAuBriC,GAAvB,IAA6B03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,EAAamD,IAyZD9wB,MAAOA,GACP4U,UAAWA,GACXC,YAAaA,GACbptB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,OAIX,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,SACE,eAACsmB,GAAD,CACEjf,KAAMqkB,EACNnF,SAnaS,SAACl9B,GACtB,IAAMwlC,EAAWnD,EAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,EAAamD,IA2ZD72C,WAxZa,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,GACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,EAAamD,IAqZD3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,UAIZ,gBAACgQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,iBAJpB,UAOE,eAACvM,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAOgW,GAAMxG,SACbxf,MAAOwf,EAAS42B,WAChB31B,SAAU,SAACpR,GAAD,OAAYwkC,EAAYpuB,OAAOpW,EAAEk6B,OAAOvpC,SAClDhF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPiH,KAAK,SACL0rC,QAAS,SAACz9B,GAAD,OAAOA,EAAEk6B,OAAOwD,YAG3B,eAAC,GAAD,CACE/tB,OAAM,OAAE80B,QAAF,IAAEA,OAAF,EAAEA,EAAQ90B,OAChBO,MAAK,OAAEu0B,QAAF,IAAEA,OAAF,EAAEA,EAAQv0B,MACfC,SAAUA,EACVwG,MAAOA,QAGX,eAAC,GAAD,CACEqF,QAASA,GACTzZ,KAAMuiC,GACNlpB,QApec,WACtBmpB,IAAY,GACZC,GAAW,KAmeHvkB,OAAO,EACP6Y,YAlee,SAACsO,GACxBhD,EAAagD,IAkeLh6B,IAAK,KACLiT,UAAWmT,GACXlT,WAAYoT,KAEd,eAAC9yB,GAAA,EAAD,UACE,sBAAKF,MAAO,CAAE5T,QAAS,QAAvB,SACE,eAAC,GAAD,CACEg1C,QAASA,GACTd,UAAWA,GACXtpC,IAAKgvC,kBCrmBR6G,GAAgB,SAAC,GAWlB,IAAD,MAVT7B,EAUS,EAVTA,gBACA8B,EASS,EATTA,WACAxiB,EAQS,EARTA,YACAD,EAOS,EAPTA,UACAuC,EAMS,EANTA,SACA9c,EAKS,EALTA,UACAsxB,EAIS,EAJTA,QACA2L,EAGS,EAHTA,SACA/gD,EAES,EAFTA,MACA6kB,EACS,EADTA,MACS,EACyB1T,oBAAc,IADvC,oBACFgmC,EADE,KACSC,EADT,OAEejmC,qBAAS,GAFxB,oBAEFkE,EAFE,KAEIC,EAFJ,OAGuBnE,qBAAS,GAHhC,oBAGFnL,EAHE,KAGQg7C,EAHR,OAOUtvC,sBAAWtB,IAD5ByB,UAAa4X,EANN,EAMMA,MAAO7X,EANb,EAMaA,MAGhBV,EAAU/P,KAEhBg3B,sBAAU,WACR,IAAM8oB,EAAiBx7C,MAAuBA,KAC9Cu7C,EAAYC,KACX,IAdM,IAiBP5jC,EAkBE2hC,EAlBF3hC,UACA1O,EAiBEqwC,EAjBFrwC,QACAuX,EAgBE84B,EAhBF94B,aACAD,EAeE+4B,EAfF/4B,eACAuC,EAcEw2B,EAdFx2B,cACA1K,EAaEkhC,EAbFlhC,MACA+K,EAYEm2B,EAZFn2B,WACAC,EAWEk2B,EAXFl2B,aACAC,EAUEi2B,EAVFj2B,eACAE,EASE+1B,EATF/1B,cACAR,EAQEu2B,EARFv2B,aACAC,EAOEs2B,EAPFt2B,eACAC,EAMEq2B,EANFr2B,iBACAva,EAKE4wC,EALF5wC,OACAqU,EAIEu8B,EAJFv8B,OACAqH,EAGEk1B,EAHFl1B,MACAW,EAEEu0B,EAFFv0B,OACAhO,EACEuiC,EADFviC,MAGI9R,EAAI,UAAGka,EAAMhN,QAAO,SAACqoC,GAAD,OAAYA,EAAE35C,KAAOkkB,YAArC,aAAG,EAA4C,GArChD,EAuC0BoU,aAAakZ,GAAmB,CACjEzQ,YAAa,sBAxCN,oBAuCF0Q,EAvCE,KAuCQC,EAvCR,KA2CT9f,sBAAU,WACR,GAAI6mB,GAAmBA,EAAgBniC,IAAK,CAC1C,IAAMzK,EAAY,CAAE4mC,KAAMgG,EAAgBniC,KAC1Cm7B,EAAS,CACP5lC,iBAGH,IAEH+lB,sBAAU,WAAO,IAAD,IACRra,GAAiB,OAATm6B,QAAS,IAATA,GAAA,UAAAA,EAAW5pC,YAAX,2DAAwCA,OAAQ,GAC9D,GAAIyP,GAASA,EAAMxG,OAAS,EAAG,CAC7B,IAAM+gC,EAAMv6B,EAAMzH,KAAI,SAACg6B,GAAD,OAAaA,EAAGiI,UAChCC,EAAW3X,EAAS/oB,QAAO,SAAC2gC,GAAD,OAAcH,EAAIr7B,SAASw7B,EAAI37B,QAE1D47B,EAAiB36B,EAAMzH,KAAI,SAACvB,EAAWu8B,GAAgB,IAEzDqH,EAWE5jC,EAXF4jC,WACAhpB,EAUE5a,EAVF4a,aACAC,EASE7a,EATF6a,eACAlH,EAQE3T,EARF2T,aACAC,EAOE5T,EAPF4T,eACAC,EAME7T,EANF6T,iBACAC,EAKE9T,EALF8T,gBACAC,EAIE/T,EAJF+T,WACAC,EAGEhU,EAHFgU,aACAC,EAEEjU,EAFFiU,eACAC,EACElU,EADFkU,cAEIkoB,EAAOqH,EAAS1gC,QAAO,SAACs5B,GAAD,OAAaA,EAAGt0B,MAAQ/H,EAAKwjC,UAAQ,GAClE,OAAO,6BACFpH,GADL,IAEEwH,aACAhpB,eACAC,iBACAlH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAqoB,QACArB,UAAWl7B,EAAK6jC,UAChB7I,QAASh7B,EAAKzL,IACdunC,UAAW97B,EAAKkO,WAIpBy1B,EAAenqC,MAAK,SAAC6D,EAAQymC,GAAT,OAClBzmC,EAAE0mC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO1mC,EAAE0mC,MAAQ,EAAI,KAE/CzB,EAAaqB,MAEd,CAACR,IAEJ,IAWMiJ,EAAW7iB,EACbA,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQgM,KAC3C,GACEG,IAAwB,OAARk4B,QAAQ,IAARA,GAAA,UAAAA,EAAW,UAAX,eAAe14C,QAAS,GAExC24C,GAAc7iB,EAChBA,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQ4L,KAC7C,GACEG,IAA6B,OAAXu4B,SAAW,IAAXA,IAAA,UAAAA,GAAc,UAAd,eAAkB34C,QAAS,GAE7C44C,IAAiB54B,IAAkB1K,GAAqB,KAAX1P,IAAkBpI,EAErE,OACE,gBAACq7C,GAAA,EAAD,CAAMrtC,MAAO,CAAEhV,UAAW4S,EAAQ,MAAQ,OAASuB,UAAWjC,EAAQpQ,KAAtE,UACE,gBAACwgD,GAAA,EAAD,WACGlzC,GACC,gBAAC8F,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACVnjB,OAAQ,GACRkuB,aAAc,EACdD,YAAa,EACbvP,aAAc,EACdzf,WAAY,SACZwf,eAAgB,SAChBwM,KAAM,GACNF,IAAK,IAXT,UAcGuwB,GAAiBvuC,EAAQ,OAAQ,IAClC,eAACiF,GAAA,EAAD,CACEW,MAAO,CACL9T,WAAY,EACZtB,WAAY,GAHhB,SAMGgT,EAAQnF,GAAc2B,GAAUhC,GAAcgC,QAIrD,eAAC8F,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,YAFjD,SAIE,eAACzM,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,SACGqrB,MAGL,gBAAC5V,GAAA,EAAD,CAAKF,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,cAApD,UACE,eAACzM,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,gBACGkM,QADH,IACGA,OADH,EACGA,EAAM8R,QAET,eAACpJ,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,SACGge,OAGL,gBAACvI,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,iBAFjD,UAIE,eAAC5L,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAYkuC,cAAY,EAAC9iD,QAAQ,YAAYwU,UAAU,KAAvD,SACGoK,EAAU6D,eAAetP,EAAQ,QAAU,QA1ExC,CACd6P,QAAS,OACTxD,KAAM,UACNC,MAAO,OACPE,IAAK,gBAyEC,gBAAClK,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEyX,aAAc,GAA3C,UACE,iCACGpC,GAAiBhM,EAAWzL,EAAQ,QAAU,SADjD,KAC6D,OAE7D,qCAAOyX,GAAiB1a,EAASiD,EAAQ,QAAU,kBAGvD,gBAACsC,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYkuC,cAAY,EAAC9iD,QAAQ,KAAKwU,UAAU,KAAhD,SACGrB,EAAQqU,EAAiBC,IAE5B,eAAC7S,GAAA,EAAD,CACEW,MAAO,CAAE9T,WAAY,EAAGtB,WAAY,GACpC2iD,cAAY,EACZ9iD,QAAQ,YACRwU,UAAU,KAJZ,SAMGuV,OAGL,eAACqO,GAAA,EAAD,IACA,gBAAC3iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,iBAFjD,WAIY,OAATq3B,QAAS,IAATA,OAAA,EAAAA,EAAY,KACX,eAAC9jC,GAAA,EAAD,CAAYkuC,cAAY,EAAC9iD,QAAQ,KAAKwU,UAAU,KAAhD,SACGrB,EAAK,OAAGulC,QAAH,IAAGA,OAAH,EAAGA,EAAY,GAAGnwC,OAAlB,OAA2BmwC,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAY,GAAG3zC,OAInDif,GACC,gBAACpP,GAAA,EAAD,CACEW,MAAO,CACLmlB,OAAQ,GACRr6B,QAAS,EACT0B,gBAAiB,UACjBgI,MAAO,QAET+4C,cAAY,EACZ9iD,QAAQ,YACRwU,UAAU,KATZ,UAWGwP,EAXH,YAeJ,gBAACvO,GAAA,EAAD,CACEmX,EAAG,EACHjrB,QAAQ,OACR4T,MAAO,CACL1T,WAAY,UAJhB,UAOE,eAAC4T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACR0e,aAAc,GACdvf,gBAAiBooB,MAGrB,eAACvV,GAAA,EAAD,CACEW,MAAO,CAAE9T,UAAW,EAAGtB,WAAY,GAAIC,YAAa,IACpD0iD,cAAY,EACZ9iD,QAAQ,QACRwU,UAAU,KAJZ,SAMGrB,EAAQ+W,EAAmBD,OAGhC,gBAACxU,GAAA,EAAD,CACEmX,EAAG,EACHjrB,QAAQ,OACR4T,MAAO,CACL1T,WAAY,UAJhB,UAOE,eAAC,GAAD,CAAQkD,KAAMslB,EAAczJ,GAAI2J,GAAetrB,KAAM,KAErD,eAAC2V,GAAA,EAAD,CACEW,MAAO,CAAE9T,UAAW,EAAGtB,WAAY,GAAIC,YAAa,IACpD0iD,cAAY,EACZ9iD,QAAQ,QACRwU,UAAU,KAJZ,SAMGrB,EAAQmX,EAAiBD,OAG9B,eAAC5U,GAAA,EAAD,CAAKF,MAAO,CAAE9T,WAAY,GAAIrB,YAAa,IAA3C,SACE,eAACwU,GAAA,EAAD,CAAYkuC,cAAY,EAAC9iD,QAAQ,YAAjC,SACGwqB,SAIP,eAACu4B,GAAA,EAAD,WACIT,GACA,eAAC7sC,GAAA,EAAD,CACEmX,EAAG,EACHjrB,QAAQ,OACR4T,MAAO,CAAE9S,KAAM,EAAG4e,eAAgB,YAHpC,SAKE,eAAC/L,GAAA,EAAD,CACErW,KAAK,SACL8K,MAAM,UACN/J,QAAQ,WACRwV,QAhLa,WACvBqB,GAAQ,IAgLE0b,SAAUowB,GALZ,SAOG33B,EAAM+W,iBAKf,eAAC,GAAD,CACEnrB,KAAMA,EACNqZ,QAAS,WACPoyB,GAAW,GACXxrC,GAAQ,IAEVkrC,QAASxB,EACTpe,SAAUA,EACV9c,UAAWA,EACXsxB,QAASA,EACTp1C,MAAOA,EACP8d,MAAOq5B,QCtUFsK,GAAqB,SAACjkD,GAAgB,IAAD,IAY5CA,EAAM6Q,KAVRgP,EAF8C,EAE9CA,UACA1O,EAH8C,EAG9CA,QACAuX,EAJ8C,EAI9CA,aACAD,EAL8C,EAK9CA,eACA+a,EAN8C,EAM9CA,YACAC,EAP8C,EAO9CA,cACApY,EAR8C,EAQ9CA,WACAC,EAT8C,EAS9CA,aACAC,EAV8C,EAU9CA,eACA3a,EAX8C,EAW9CA,OAEMiwB,EAAc+J,KAAd/J,UAEF6iB,EAAW7iB,EACbA,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQgM,KAC3C,GAIWjX,GAHO,OAARsvC,QAAQ,IAARA,GAAA,UAAAA,EAAW,UAAX,SAAe14C,MAIVkJ,sBAAWtB,IAD5ByB,UAAaD,OAGf,OACE,eAAC,KAAa6vC,mBAAd,6BAAqCjkD,GAArC,aACE,uBAAK2V,UAAW3V,EAAM83B,UAAtB,UACGlnB,GACC,eAACwR,GAAA,EAAD,CAASnD,MAAOrQ,GAAcgC,GAA9B,SACE,eAAC8F,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,WACVE,MAAO9S,OAAQkC,EAAY,EAC3BwY,KAAM1a,EAAQ,OAAIkC,EAClBsY,IAAK,EACL+M,OAAQ,GACRz4B,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZwf,eAAgB,SAEhBC,aAAc,GAZlB,SAeG48B,GAAiBvuC,EAAQ,UAAW,QAI3C,gBAAC8F,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE0tC,SAAU,QAAvC,UACE,iCAAMr4B,GAAiBhM,GAAvB,OACA,+BAAMgM,GAAiB1a,QAEzB,eAACuF,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,YAAnD,SACGmT,EAAQqU,EAAiBC,MAG9B,eAAChS,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAY5U,QAAQ,UAApB,SACGmT,EAAQqvB,EAAgBD,MAG5BlY,GACC,eAAClJ,GAAA,EAAD,CAASnD,MAAO7K,EAAQmX,EAAiBD,EAAzC,SACE,eAAC5U,GAAA,EAAD,CACE9T,QAAQ,OACRE,WAAW,SACX0T,MAAO,CACLwQ,SAAU,WACV8H,KAAM,EACN7H,OAAQ,GANZ,SASE,eAACpR,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAEpV,WAAY,EAAGC,YAAa,GAFvC,SAIG+S,EAAQmX,EAAiBD,eCpF3B,SAASkG,GAAT,GAAgD,IAA1Bla,EAAyB,EAAzBA,KAAMlD,EAAmB,EAAnBA,MAAOqd,EAAY,EAAZA,IACxCzmB,EAAUsM,EAAVtM,MACR,OACE,gBAAC0L,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZtB,UAAW4S,EAAQ,MAAQ,OAN/B,UASGkD,EAAKtM,QAAUymB,GACd,eAAC/a,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACR0e,aAAc,EACdvf,gBAAiBgI,GAAgB,UAIvC,eAAC6K,GAAA,EAAD,CACEW,MAAO,CACLpV,WAAY4J,EAAQ,QAAKsL,EACzBjV,YAAa2J,EAAQ,QAAKsL,EAC1BmR,UAAWrT,EAAQ,QAAU,QAE/BnT,QAASmT,EAAQ,YAAc,YANjC,SAQGA,EAAQkD,EAAK9N,OAAS8N,EAAKtR,UC5BrB,SAASm+C,GAAT,GASN,IARPvxB,EAQM,EARNA,QACA3sB,EAOM,EAPNA,MACAm+C,EAMM,EANNA,SACAn4B,EAKM,EALNA,MACA7X,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MACAkT,EACM,EADNA,UAEA,OACE,eAACqd,GAAA,EAAD,CACEvzB,KAAK,QACL0yB,QAASA,EACTc,eAAgB,SAACC,GAAD,OAAkBvf,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,MACjE4tB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAO5qB,KAAO8qB,EAAO9qB,IAC5D+qB,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAkBvf,MAAOA,EAAOkD,KAAMqc,KAExC1tB,MAAOA,EACPygB,SAAU,SAACrhB,EAAG0uB,GACZqwB,EAASrwB,IAEXG,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEprB,GAAI/C,EACJoQ,UAAWA,EACXpQ,KAAMA,EACNiQ,MAAOgW,EAAMjmB,GACb/E,QAAQ,WACRuV,MAAO,CACLtT,MAAOA,QAAgBoT,EACvBtT,gBAAiBiD,EAAQ,eAAYqQ,EACrC3U,SAAU,UChCtB,IA0Fe0iD,GA1FU,SAAC,GAOd,IANVp+C,EAMS,EANTA,MACAm+C,EAKS,EALTA,SACAhwC,EAIS,EAJTA,MACAulB,EAGS,EAHTA,MACAn3B,EAES,EAFTA,MACA4/B,EACS,EADTA,QAKA,OACE,eAAC1rB,GAAA,EAAD,CAAKmX,EAAG,EAAR,SACE,gBAACsL,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACqY,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAOA,EACPygB,SAZO,SAACpR,GAChB8uC,EAAS9uC,EAAEk6B,OAAOvpC,QAMZ,UAOE,eAAC4uB,GAAA,EAAD,CACE5uB,MAAM,aACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,uCAAW,aAE5B,eAACygB,GAAA,EAAD,CACE5uB,MAAM,eACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,iCAAU,eAE3B,eAACygB,GAAA,EAAD,CACE5uB,MAAM,SACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,uCAAW,gBAIhC,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACGO,EAAQ,GACP,gBAACjjB,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAACiT,GAAA,EAAD,CACEW,MAAO,CAAE9T,UAAW,GAAItB,WAAY,GAAIC,YAAa,IADvD,SAGG+S,EAAQ,qDAAe,mBAE1B,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL9T,UAAW,GACXtB,WAAY,GACZC,YAAa,GACb8lB,WAAY,QALhB,SAQGwS,SAKT,eAACR,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZwf,eAAgB,YALpB,SAQG8f,GACC,eAACpU,GAAA,EAAD,CACExX,MAAO,CACLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQG,UAAUD,KAAM,IACpDZ,QAAS,GAEXmV,QAAS2rB,EALX,SAOE,eAAC,KAAD,CACE5rB,MAAO,CAAE7U,SAAU,IACnBqJ,MAAM,wBChFT,SAASs5C,GAAT,GAgBN,IAfPzjB,EAeM,EAfNA,UACAC,EAcM,EAdNA,YACApwB,EAaM,EAbNA,YACAw/B,EAYM,EAZNA,eACAv/B,EAWM,EAXNA,UACA2iB,EAUM,EAVNA,aACA1iB,EASM,EATNA,OACAyuC,EAQM,EARNA,UACA/uC,EAOM,EAPNA,iBACAi0C,EAMM,EANNA,oBACAt4B,EAKM,EALNA,MACA7X,EAIM,EAJNA,MACAulB,EAGM,EAHNA,MACAn3B,EAEM,EAFNA,MACA4/B,EACM,EADNA,QAEA,OACE,gBAACjJ,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAASiO,EACT56B,MAAO0K,EACPyzC,SAAU9wB,EACVrH,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,WACLoQ,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAASkO,EACT76B,MAAOyK,EACP0zC,SAAUlU,EACVjkB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,aACLoQ,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACExG,QAAS1jB,GACTjJ,MAAO2K,EACPwzC,SAAU/E,EACVpzB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,SACLoQ,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEnzB,MAAOqK,EACP8zC,SAAUG,EACVnwC,MAAOA,EACPulB,MAAOA,EACPn3B,MAAOA,EACP4/B,QAASA,SCtDnB,SAASwL,GAAe5tC,GACtB,OACE,eAAC,KAAD,CACE6tC,OAAO,0BACPrJ,OAAQ,mCAFV,SAIE,eAACvL,GAAA,EAAD,gBAAWj5B,MAKF,SAASwkD,GAAexkD,GAAa,IAEhDmxB,EAWEnxB,EAXFmxB,SACA/c,EAUEpU,EAVFoU,MACA5R,EASExC,EATFwC,MACAqV,EAQE7X,EARF6X,KACAqZ,EAOElxB,EAPFkxB,QACAjS,EAMEjf,EANFif,MACA/b,EAKElD,EALFkD,MACAW,EAIE7D,EAJF6D,OACAy+B,EAGEtiC,EAHFsiC,SAV+C,EAa7CtiC,EAFF2W,UAX+C,MAW1C,GAX0C,IAa7C3W,EADFk9B,UAZ+C,MAY1C,GAZ0C,EAejD,OACE,gBAAC9L,GAAA,EAAD,CACEvZ,KAAMA,EACNqZ,QAASA,EACT0c,eAAgBA,GAChBS,mBAAiB,4BACjBC,kBAAgB,yBAChBl4B,UAAWksB,EACXx+B,SAAS,KAPX,UASE,gBAAC4S,GAAA,EAAD,CACE3N,GAAG,yBACHyN,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiBR,EACb2U,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,KACjC,OACJgW,OAAQ,OACRrU,OAAQ,GACRjB,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZwf,eAAgB,iBAbpB,UAgBE,eAACzM,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVN,YAAa,GACbD,WAAY,IAJhB,SAOG6d,IAEH,eAAC+O,GAAA,EAAD,CAAYvX,QAASya,EAArB,SACE,eAAC,KAAD,CACE1a,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAIpC,eAACujC,GAAA,EAAD,CACE/3B,MAAO,CACLtT,MAAOA,EACPW,OAAQA,EACRrC,UAAW4S,EAAQ,MAAQ,MAC3BkE,WAAY3B,EACZwgB,cAAe+F,GAEjBsR,UAAU,EARZ,SAUGrd,OC3CT,IA6WeszB,GA7WF,SAACzkD,GAAgB,IAAD,EACG2T,qBAAS,GADZ,oBACpB+wC,EADoB,KACXpB,EADW,OAED3vC,oBAAS,IAAIlD,MAFZ,oBAEpB5J,EAFoB,KAEbyzB,EAFa,OAGL3mB,oBAAS,IAAIlD,MAHR,oBAGpB3J,EAHoB,KAGfyzB,EAHe,OAIkB5mB,oBAAS,IAJ3B,oBAIpBgxC,EAJoB,KAINC,EAJM,OAMHjxC,oBAAS,IANN,oBAMpB2hB,EANoB,KAMduvB,EANc,KAOrBviB,EAAWC,aAAc,qBAPJ,EAmBvBruB,sBAAW/D,IAnBY,IAUzBhJ,MACEqJ,EAXuB,EAWvBA,YACAD,EAZuB,EAYvBA,gBACAD,EAbuB,EAavBA,iBACAI,EAduB,EAcvBA,YACAC,EAfuB,EAevBA,UACAC,EAhBuB,EAgBvBA,OAEFuD,EAlByB,EAkBzBA,SAEMkT,EAAUiyB,KAAVjyB,MAEF67B,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOmjB,GACPlwC,UAAW,CACTqW,aAAcva,EAAcA,EAAY2O,SAAM/I,EAC9C+U,WAAY1a,EAAYA,EAAU0O,SAAM/I,EACxC1F,OAAQA,EAASA,EAAO7H,QAAKuN,EAC7BzP,QACAC,QAGJ,CACE66B,MAAOkJ,IAET,CACElJ,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,IAET,CACEK,MAAO2W,GACP1jC,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,MArDxB,EA2DRhC,aAAYywC,GAAa7B,GAArCx4B,EA3DoB,uBA4DPpW,aAAYuS,GAAaq8B,GAAtC58B,EA5DoB,uBA6DLhS,aAAY0wC,GAAa9B,GAAxCv4B,EA7DoB,uBA+DU0W,aAAayjB,IA/DvB,oBA+DpBG,EA/DoB,KA+DNC,EA/DM,KAkEzBpkB,EASE9gC,EATF8gC,YACAD,EAQE7gC,EARF6gC,UACAl6B,EAOE3G,EAPF2G,SACAyN,EAMEpU,EANFoU,MACA6X,EAKEjsB,EALFisB,MACAmX,EAIEpjC,EAJFojC,SACAwU,EAGE53C,EAHF43C,QACApvC,EAEExI,EAFFwI,SACAhG,EACExC,EADFwC,MAGFm4B,sBAAU,WAAO,IAAD,IACRwqB,GAAoB,OAAPD,QAAO,IAAPA,GAAA,UAAAA,EAASr0C,YAAT,mDAA8BA,OAAQ,GACnDsZ,EACJg7B,EAAWrrC,OAAS,EAChBqrC,EAAWtsC,KAAI,SAACusC,GACd,OAAO,6BACFA,GADL,IAEEvlC,UAAW,IAAIpP,KAAK20C,EAAGvlC,WACvB1O,QAAS,IAAIV,KAAK20C,EAAGj0C,SACrBtK,MAAOu+C,EAAGvlC,UACV/Y,IAAKs+C,EAAGj0C,aAGZ,GAEN0zC,EAAQ16B,KACP,CAAC+6B,IAQJvqB,sBAAU,WACR,IAAM0qB,EAAgB18B,GAAqB,CACzClF,KAAMjT,EACNoY,KAAMrY,IAER+pB,EAAS+qB,EAASx+C,OAClB0zB,EAAO8qB,EAASv+C,KAChB,IAAM8N,EAAY,CAChBqW,aAAcva,EAAcA,EAAY2O,SAAM/I,EAC9C+U,WAAY1a,EAAYA,EAAU0O,SAAM/I,EACxC1F,OAAQA,EAASA,EAAO7H,QAAKuN,EAC7BzP,MAAOw+C,EAASx+C,MAChBC,IAAKu+C,EAASv+C,KAEhBm+C,EAAa,CAAErwC,gBACd,CACDpE,EACAD,EACAG,EACAC,EACAs0C,EACAr0C,IAGF+pB,sBAAU,WACR,IAAMrb,EAAYZ,GACK,eAArBpO,EACIuwB,EACqB,WAArBvwB,EACApB,GACA4xB,EACJxwB,EACA,QAEFs0C,EAAgBtlC,KACf,CAACuhB,EAAWvwB,IAEf,IAyBMg1C,EAA8B,UAApB/0C,EACViqB,EAAwB,SAACllB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAErD+zB,GAAoB,SAACurB,GACzBpxC,EAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAExC5Q,GAAa,yCAAG,kCAAAhgC,EAAA,sDAAS4V,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,QAC7CH,GAAyB,CACvBC,QACAC,UACAC,UACAC,WACApE,YACAqE,cACAvW,UARkB,2CAAH,sDAYb6K,GAAQ7K,EAAQ,4EAAkB,cAExC,OACE,eAACsC,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,OACjBN,UAAW4/B,EAAW,QAAKhsB,EAC3BzS,OAAQqR,OAAOu4B,YAAc,GAC7B3W,SAAU,QALd,SAQE,gBAACpgB,GAAA,EAAD,CAAKF,MAAO,CAAEpW,OAAQ,IAAtB,UACE,gBAAC+4B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAACyQ,GAAD,CACEC,SAAUA,EACVC,OAAQA,EACRnmB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPg4B,sBAAuBA,EACvBR,kBAAmBA,GACnBzpB,gBAAiBA,EACjBC,YAAaA,EACbupB,MAAO,CAAC,EAAG,EAAG,EAAG,QAGrB,eAACZ,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAACqO,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,eAACzhB,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,GAA5B,SACE,eAACq2B,GAAD,CACE3qB,MAAOrE,EAAKxb,OACZpJ,YAAaA,EACbw/B,eA9De,SAACjqC,GAC9BkO,EAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KA8D9B0K,UAAWA,EACX2iB,aA7Da,SAACrtB,GAC5BkO,EAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KA6D5B66B,YAAaA,EAAYzmB,QACvB,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAEpB9M,UAAWA,EAAUxmB,QAAO,SAACjR,GAAD,OAA8B,IAAhBA,EAAIskC,WAC9C98B,OAAQA,EACRyuC,UAhEU,SAACp5C,GACzBkO,EAAS,CAAE9M,KAAM,YAAaC,QAASrB,KAgEzBs+C,oBAtFoB,SAACt+C,GACnCkO,EAAS,CAAE9M,KAAM,sBAAuBC,QAASrB,IAEjD,IAAMqZ,EAAYZ,GACN,eAAVzY,EACI46B,EACU,WAAV56B,EACAiJ,GACA4xB,EACJ76B,EACA,QAEF2+C,EAAgBtlC,IA2EFhP,iBAAkBA,EAClB8D,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACP4/B,QAtIA,YACd,OAAI8iB,QAAJ,IAAIA,OAAJ,EAAIA,EAAShjB,UACXgjB,EAAQhjB,sBA0IN,eAACxrB,GAAA,EAAD,CAAKF,MAAO,CAAEpW,OAAQ,GAAtB,SACE,gBAAC,KAAD,CACEyQ,KAAMykB,EACNzxB,OACEyhD,EACI,OACAhjB,EACAptB,OAAOu4B,YACPv4B,OAAOu4B,YAAc,GAE3B+X,eAAgB,EAChB5pB,OAAQxnB,EAAQ,KAAO,KAVzB,WAYIkxC,GAAW,eAAC,KAAD,CAAcxQ,gBAAiBH,MAC1C2Q,GACA,eAAC,KAAD,CACE7d,SAAU,CACRpT,QAASjgB,EAAQ,+FAAsB,mBACvCqxC,oBAAqBrxC,EACjB,8KACA,kCACJgM,IAAKhM,EAAQ,gEAAgB,mBAC7BsxC,iBAAkBtxC,EACd,yFACA,6BACJuxC,kBAAmBvxC,EACf,6EACA,+BACJoa,aAAcpa,EAAQ,iCAAU,SAChCwxC,aAAcxxC,EAAQ,iCAAU,QAKtC,eAAC,KAAD,CACE7D,gBAAiBA,EACjBs1C,wBAAyBrrB,EACzBhqB,YAAaA,EACbs1C,oBAAqB9rB,KAEvB,eAAC,KAAD,CACE+rB,aAAcp/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9Co/C,aAAcr/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3Co/C,WAAYt/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CACEd,KAAK,QACLkgD,YAAY,SACZC,cAAe,EACfJ,aAAcp/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9Co/C,aAAcr/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3Co/C,WAAYt/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CACEd,KAAK,OACLkgD,YAAY,OACZH,aAAcp/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9Co/C,aAAcr/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3Co/C,WAAYt/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CAAWq/C,cAAe,IAE1B,eAAC,KAAD,CAAcC,4BAA6BnC,KAC3C,eAAC,KAAD,CACEpzC,KAAM8zC,EACNr0C,iBAAkBA,IAEpB,eAAC,KAAD,CACE+1C,iBAAe,EACfC,iBAAgB99C,EAEhBk8C,QAASA,EACT6B,mBAAoB,kBAAMjD,GAAYoB,IACtC8B,iBAAkB,gBAAGhF,EAAH,EAAGA,gBAAH,OAChB,eAAC,GAAD,CACEA,gBAAiBA,EACjB8B,WAAYA,EACZxiB,YAAaA,EACbD,UAAWA,EACXuC,SAAUA,EACV9c,UAAWA,EACXsxB,QAASA,EACTp1C,MAAOA,EACP+gD,SAAUjhB,EACVjb,MAAOA,QAKXi+B,GACA,eAAC,KAAD,CACEmB,iBAAkB,SAACC,GAAD,OAChB,eAAClC,GAAD,2BACEpwC,MAAOA,EACP5R,MAAOA,EACPurC,KAAM,GACNl2B,KAAM6uC,EAAKhC,UAAW,EACtBzlC,MAAOA,GACPxK,SAAUkgC,GACVh+B,GAAI,EACJumB,GAAI,IACAwpB,GATN,IAUEx1B,QAASw1B,EAAKC,OACdrkB,SAAUA,MAGdskB,qBAAsB,SAACC,GAAD,OACpB,eAAC,GAAD,cACE/lB,YAAaA,EACbD,UAAWA,EACXsY,iBAAkB/V,EAClB5gC,MAAOA,EACP6kB,MAAOA,EACPib,SAAUA,GACNukB,KAGRC,uBAAwBr4B,KAG5B,eAAC,KAAD,KACE62B,GAAW,eAAC,KAAD,IACb,eAAC,KAAD,CAAsByB,oBAAkB,eCxYrCC,GARM,SAAChnD,GAAgB,IAC5B6gC,EAAc+J,KAAd/J,UACAC,EAAgB6J,KAAhB7J,YACR,OACE,eAAC,GAAD,6BAAU9gC,GAAV,IAAiB6gC,UAAWA,EAAWC,YAAaA,MC4CzCmmB,GA5CK,SAAC,GAA8B,IAA5BzgD,EAA2B,EAA3BA,KAAM0gD,EAAqB,EAArBA,QAAS9yC,EAAY,EAAZA,MAIpC,OACE,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,KAAxB,SACE,gBAAC6S,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EAAQ,gEAAgB,oBAG3B,gBAACq9B,GAAA,EAAD,CACEnZ,aAAW,QACX9hB,MAAO,CAAE9T,UAAW,IACpBsD,KAAK,QACLC,MAAOO,EACPkgB,SAfS,SAACpR,GAChB4xC,EAAQ5xC,EAAEk6B,OAAOvpC,QASb,UAOE,eAACyQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOorB,aAAc,IAF/C,SAIE,eAAC4G,GAAA,EAAD,CACE5uB,MAAM,KACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAM,cAGV,eAACS,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOorB,aAAc,IAF/C,SAIE,eAAC4G,GAAA,EAAD,CACE5uB,MAAM,KACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAM,wCCyBLkxC,GA5DE,SAAC,GAAoC,IAAlC1gD,EAAiC,EAAjCA,QAAS2gD,EAAwB,EAAxBA,WAAYhzC,EAAY,EAAZA,MA0BvC,OACE,eAAC6kB,GAAA,EAAD,UACE,gBAACviB,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SAA0BmT,EAAQ,uCAAW,WAE7C,eAACq9B,GAAA,EAAD,CACEnZ,aAAW,QACX9hB,MAAO,CAAE9T,UAAW,IACpBsD,KAAK,QACLC,MAAOQ,EACPigB,SAnCS,SAACpR,GAChB8xC,EAAW9xC,EAAEk6B,OAAOvpC,QA6BhB,SAOGlE,GAAS8W,KAAI,SAACwuC,EAAUxT,GACvB,OACE,gBAACn9B,GAAA,EAAD,CAEE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOorB,aAAc,IAH/C,UAKE,eAAC4G,GAAA,EAAD,CACE5uB,MAAO4tC,EAAMwI,WACbvnB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAM,MA3CAqxC,EA6CMD,EAAIrlD,QA3C5B,gBAAC0U,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,UACE,eAAC6T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRb,gBAAiBskD,EAAOrlD,QAAQC,QAGpC,eAACwU,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRb,gBAAiBskD,EAAOnlD,UAAUD,cAsBzB2xC,GApCE,IAACyT,a,iDCaT,SAASC,GAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,OAAQpzC,EAAc,EAAdA,MAAc,EAChCT,qBAAS,GADuB,oBACvDylC,EADuD,KAC9CC,EAD8C,OAEtC1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFD,oBAEvDy3B,EAFuD,KAEjDze,EAFiD,OAIpC3b,oBAAS,QAJ2B,oBAIvD8zC,EAJuD,KAIhDC,EAJgD,OAKzB/zC,oBAAS,MALgB,oBAKvDg0C,EALuD,aCnBjD,WAAO,IAAD,EACFrzC,aAAYszC,IAAtBC,EADY,uBAEDvzC,aAAYwzC,IAE9B,MAAO,CAAED,SAAQE,QAJE,sBD0BSC,IAApBH,EAPsD,EAOtDA,OAAQE,EAP8C,EAO9CA,QA2BVE,EAAY,yCAAG,iCAAAtzC,EAAA,6DACnB0kC,GAAW,GADQ,SAEDwO,EAAO,IAFN,oBAEb1oC,EAFa,kBAGfA,GAHe,UAGfA,EAAKtO,YAHU,iBAGf,EAAW+2C,gBAHI,aAGf,EAAqB9yC,IAHN,gCAIXib,GAAYT,EAAD,kBAJA,+CAMXQ,GAAaR,EAAD,eAND,QAQnB+pB,GAAW,GARQ,4CAAH,qDAUZ6O,EAAa,yCAAG,WAAOC,GAAP,oBAAAxzC,EAAA,6DACpB0kC,GAAW,GADS,SAEF0O,EAAQ,CAAEnzC,UAAW,CAAEwzC,KAAMD,KAF3B,oBAEdhpC,EAFc,kBAGhBA,GAHgB,UAGhBA,EAAKtO,YAHW,iBAGhB,EAAWi3C,iBAHK,aAGhB,EAAsBhzC,IAHN,gCAIZib,GAAYT,EAAD,mBAJC,+CAMZQ,GAAaR,EAAD,gBANA,QAQpB+pB,GAAW,GARS,4CAAH,sDAUnB,OACE,gBAACpgB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,KAAxB,UACE,gBAAC6S,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACGysC,EAAKxe,MACJ,eAACb,GAAD,CAAUE,KAAG,EAAC1H,OAAK,EAAC7f,KAAM0mC,EAAK1mC,KAAMsnB,IAAKof,EAAKpf,MAEjD,gBAACjY,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,aACZwf,eAAgB,iBAJpB,UAOE,eAACzM,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EACG,sJACA,iCAEJozC,GACA,eAACjxC,GAAA,EAAD,CACEE,QAASwxC,EACTj9C,MAAM,UACN/J,QAAQ,YACRuV,MAAO,CAAE3S,OAAQ,IAJnB,SAMGuQ,EAAQ,+FAAsB,kBAKrC,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEwd,kBAAmB,IAAjC,SACE,gBAACyd,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAOwhD,EACP/gC,SAAU,SAACpR,GAAD,OAAYoyC,EAASpyC,EAAEk6B,OAAOvpC,QAL1C,UAOE,eAACyQ,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACgyB,GAAA,EAAD,CACE5uB,MAAM,OACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,uHAA0B,mBAG7C,eAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACgyB,GAAA,EAAD,CACE5uB,MAAM,SACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,6HAA2B,0BAKlD,eAAC6kB,GAAA,EAAD,CAAOwJ,UAAW,EAAGjsB,MAAO,CAAE3S,OAAQ,IAAKizB,SAAU,QAArD,SACE,eAACpgB,GAAA,EAAD,CAAKpV,QAAS,EAAd,SACE,eAAC+mD,GAAA,EAAD,UACGV,GACC,eAACrT,GAAA,EAAD,CAAOhc,aAAW,eAAlB,SACE,eAACgwB,GAAA,EAAD,UACGX,EAAS9uC,KAAI,SAACqK,GAAD,OACZ,gBAACqlC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW/yC,UAAU,KAAKgzC,MAAM,MAAhC,SACGvlC,EAAIld,OAEP,eAACwiD,GAAA,EAAD,CAAW5xC,MAAM,UACjB,eAAC4xC,GAAA,EAAD,CAAW5xC,MAAM,QAAjB,SACE,eAACL,GAAA,EAAD,CACEE,QAAS,kBAAMyxC,EAAchlC,EAAIklC,OACjCnnD,QAAQ,WACR+J,MAAM,UAHR,SAKGoJ,EAAQ,8FAAqB,gBAXrB8O,EAAIld,sBAuBlCozC,GAAW,eAAC,GAAD,CAAShlC,MAAOA,OEzJlC,IAAMs0C,GAAYz+C,OAAaC,MAAM,CACnCrD,MAAOoD,OAAaE,WAAWC,IAAI,GAAGC,IAAI,IAC1CvD,IAAKmD,OAAaE,WAAWC,IAAI,GAAGC,IAAI,IACxCzD,SAAUqD,OAAaE,WAAWC,IAAI,IAAIC,IAAI,OAkGjCs+C,GA/FS,SAAC,GAA6C,IAA3C18B,EAA0C,EAA1CA,MAAOtlB,EAAmC,EAAnCA,SAAUiiD,EAAyB,EAAzBA,YAAax0C,EAAY,EAAZA,MAAY,EACxBN,aAAQ,CACjDvJ,SAAUC,aAAYk+C,IACtBG,cAAe,CACbhiD,MAAOF,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IACpCC,IAAKH,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,KAChCF,SAAUD,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,MALtCmN,EAD2D,EAC3DA,SAAUC,EADiD,EACjDA,aAAcC,EADmC,EACnCA,OAiBhC,OACE,eAACglB,GAAA,EAAD,UACE,gBAACviB,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EAAQ,4EAAkB,kBAE7B,gBAACsC,GAAA,EAAD,CACEF,MAAO,CACL9T,UAAW,IAFf,UAKE,gBAACy2B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAACyH,GAAD,CACElnB,UAAQ,EACRnE,KAAK,QACLiQ,MAAOgW,EAAMplB,MACbkN,SAAUA,EACVE,OAAQA,EACR5M,KAAK,aAGT,eAAC8xB,GAAA,EAAD,CAAM7hB,MAAI,EAACsS,GAAI,IACf,eAACuP,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAACyH,GAAD,CACElnB,UAAQ,EACRnE,KAAK,MACLiQ,MAAOgW,EAAMnlB,IACbiN,SAAUA,EACVE,OAAQA,EACR5M,KAAK,aAGT,eAAC8xB,GAAA,EAAD,CAAM7hB,MAAI,EAACsS,GAAI,IAEf,gBAACuP,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,UACG,IACD,eAACyH,GAAD,CACElnB,UAAQ,EACRnE,KAAK,WACLiQ,MAAOgW,EAAMrlB,SACbmN,SAAUA,EACVE,OAAQA,EACR5M,KAAK,iBAKX,eAACqP,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,aAChBze,OAAQ,IALZ,SASE,eAAC0S,GAAA,EAAD,CACEE,QAASzC,GAlEJ,SAACnD,GAChB+3C,EAAY,CACV/hD,MAAO6kB,OAAO7a,EAAKhK,OACnBC,IAAK4kB,OAAO7a,EAAK/J,KACjBF,SAAU8kB,OAAO7a,EAAKjK,eA+DdoE,MAAM,UACN/J,QAAQ,YACRuV,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZwf,eAAgB,UARpB,SAWE,eAACzM,GAAA,EAAD,UAAaoW,EAAMsY,oB,wCCVpBukB,GAAoB,SAAC,GAQ3B,IAPLC,EAOI,EAPJA,IACAC,EAMI,EANJA,OACAC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAhmD,EAGI,EAHJA,MACAW,EAEI,EAFJA,OACA3D,EACI,EADJA,KACI,EACqCyT,oBAAS,MAD9C,oBACGw1C,EADH,KACeC,EADf,KAGEC,EAAY7Y,kBAAO,MASnB8Y,EAAc,WAClBJ,EAAS,MACTF,EAAO,OAWT,OARAruB,sBAAU,WAENyuB,EADEH,EACYM,IAAIC,gBAAgBP,GAEpB,QAEf,CAACA,IAGF,gBAACvyC,GAAA,EAAD,WACE,wBACElJ,IAAK67C,EACL7yC,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACR4lD,QAAS,EACTziC,SAAU,WACV2U,QAAS,GAEXt0B,KAAK,OACLqf,SAhCc,SAACpR,GAAY,IAAD,IACxBo0C,EAAG,UAAGp0C,EAAEk6B,cAAL,iBAAG,EAAUma,aAAb,aAAG,EAAkB,GAC1BD,GACFR,EAASQ,MA+BRP,GACC,gBAACzyC,GAAA,EAAD,WACE,sBACED,QAAS,kBAAM6yC,KACf9yC,MAAO,CACLwQ,SAAU,WACVtkB,UAAW,GACXtB,WAAY,EACZ8W,OAAQ,WANZ,SASE,eAAC,KAAD,CAAkB1B,MAAO,CAAExL,MAAO,eAEpC,sBACEyL,QAAS,kBAAM4yC,EAAUh1B,QAAQu1B,SACjCpzC,MAAO,CACLsgB,SAAU,SACVvU,aAAc,EACdrK,OAAQ,UACR8/B,UAAW,SAEb90C,MAAOA,EACPW,OAAQA,EACRg0C,IAAKsR,OAIVJ,IAAQI,GACP,gBAACzyC,GAAA,EAAD,WACE,sBACED,QAAS,kBAAM6yC,KACf9yC,MAAO,CACLwQ,SAAU,WACVtkB,UAAW,GACXtB,WAAY,EACZ8W,OAAQ,WANZ,SASE,eAAC,KAAD,CAAkB1B,MAAO,CAAExL,MAAO,eAEpC,sBACEyL,QAAS,kBAAM4yC,EAAUh1B,QAAQu1B,SACjCpzC,MAAO,CACLsgB,SAAU,SACVvU,aAAc,EACdrK,OAAQ,UACR8/B,UAAW,SAEb90C,MAAOA,EACPW,OAAQA,EACRg0C,IAAKkR,QAITI,IAAeJ,GACf,eAACryC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9T,UAAW,EACX6f,aAAc,EACduU,SAAU,SACV5zB,MAAOA,EACPW,OAAQA,EACRqU,OAAQ,UACRlV,gBAAiB,UACjBF,WAAY,SACZwf,eAAgB,UAElB7L,QAAS,kBAAM4yC,EAAUh1B,QAAQu1B,SAbnC,SAeE,eAAC/zC,GAAA,EAAD,CAAYW,MAAO,CAAExL,MAAO,OAAQrJ,SAAU,IAA9C,SACGzB,UAQA2pD,GAAiB,yCAAG,WAAOZ,GAAP,sBAAAt0C,EAAA,+EAECm1C,aAAiBb,EAAOt/C,IAFzB,cAEvBogD,EAFuB,QAGvB7qB,EAAI,IAAI8qB,UACZC,OAAO,OAAQF,GACjB7qB,EAAE+qB,OAAO,gBrI3NgB,YqI4NzB/qB,EAAE+qB,OAAO,arI3Na,cqIqNO,UAQXC,MAChB,0DACA,CACEC,OAAQ,OACRnyB,KAAMkH,IAZmB,eAQvB/f,EARuB,iBAeVA,EAAIirC,OAfM,eAevBA,EAfuB,yBAgBtBA,EAAKrB,KAhBiB,gEAkBtBzyC,GAlBsB,0DAAH,sDC/LxBoyC,GAAYz+C,OAAaC,MAAM,CACnClE,KAAMiE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCb,OAAQS,OAAaE,WACrB8tC,KAAMhuC,OAEHmB,QAPH,0GAOwB,6BACrBjB,aA+RUkgD,GA5RC,SAAC,GAA4C,IAA1Cp+B,EAAyC,EAAzCA,MAAO6sB,EAAkC,EAAlCA,YAAalB,EAAqB,EAArBA,QAASxjC,EAAY,EAAZA,MAAY,EAClCT,yBAAS2C,GADyB,oBACnDwhC,EADmD,KAC7CwS,EAD6C,OAE9B32C,qBAAS,GAFqB,oBAEnD42C,EAFmD,KAE3CC,EAF2C,OAIxB72C,oBAAS,MAJe,oBAInD82C,EAJmD,KAIxCC,EAJwC,OAK5B/2C,oBAAS,MALmB,oBAKnDg3C,EALmD,KAK1CC,EAL0C,OAOf92C,aAAQ,CACjDvJ,SAAUC,aAAYk+C,IACtBG,cAAe,CACb7iD,KAAI,OAAE4xC,QAAF,IAAEA,OAAF,EAAEA,EAAS5xC,KACfwD,OAAM,OAAEouC,QAAF,IAAEA,OAAF,EAAEA,EAASpuC,OACjByuC,KAAI,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAASK,KACf4S,KAAI,OAAEjT,QAAF,IAAEA,OAAF,EAAEA,EAASiT,KACfpkB,IAAG,OAAEmR,QAAF,IAAEA,OAAF,EAAEA,EAASnR,IACdqkB,IAAG,OAAElT,QAAF,IAAEA,OAAF,EAAEA,EAASkT,IACdz/C,MAAK,OAAEusC,QAAF,IAAEA,OAAF,EAAEA,EAASvsC,MAChBs7B,QAAO,OAAEiR,QAAF,IAAEA,OAAF,EAAEA,EAASjR,QAClBC,QAAO,OAAEgR,QAAF,IAAEA,OAAF,EAAEA,EAAShR,WAXd7yB,EAPkD,EAOlDA,SAAUC,EAPwC,EAOxCA,aAAcC,EAP0B,EAO1BA,OAehC0mB,sBAAU,YACR,OAAIid,QAAJ,IAAIA,OAAJ,EAAIA,EAASE,QACXwS,EAAO,OAAC1S,QAAD,IAACA,OAAD,EAACA,EAASE,MACjB8S,EAAU,OAAChT,QAAD,IAACA,OAAD,EAACA,EAASE,SAErB,CAACF,IAEJ,IAAMnjC,EAAQ,yCAAG,WAAO5D,GAAP,oCAAA8D,EAAA,yDACT3O,EAAO6K,EAAK7K,KAAKua,OACjB/W,EAASqH,EAAKrH,OAAO+W,OACnB03B,EAAkDpnC,EAAlDonC,KAAM4S,EAA4Ch6C,EAA5Cg6C,KAAMpkB,EAAsC51B,EAAtC41B,IAAKqkB,EAAiCj6C,EAAjCi6C,IAAKz/C,EAA4BwF,EAA5BxF,MAAOs7B,EAAqB91B,EAArB81B,QAASC,EAAY/1B,EAAZ+1B,SAE1C6jB,EALW,gCAMAZ,GAAkBY,GANlB,OAObvhD,GADAA,EANa,QAODkc,QAAQ,UAAW,YAPlB,cASTxQ,EAAiB,CACrB5O,OACAwD,SACAyuC,OACA4S,OACApkB,MACAqkB,MACAz/C,QACAs7B,UACAC,UACAkR,KAAM5uC,GAAc4uC,GAnBP,UAsBTgB,EAAY,CAAElkC,cAtBL,4CAAH,sDAyBd,OACE,eAACqkB,GAAA,EAAD,UACE,gBAACviB,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EAAQ,4EAAkB,wBAE7B,gBAAC+kB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,gBAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,UACGxV,GACC,gBAAC,KAAMse,SAAP,WACE,eAACrB,GAAD,CACElnB,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,IAEb,eAACl5B,GAAD,CACErb,WAAS,EACT7L,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMyY,OACb3wB,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,QAIfn2C,GACA,gBAAC,KAAMse,SAAP,WACE,eAACrB,GAAD,CACErb,WAAS,EACT7L,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,IAEb,eAACl5B,GAAD,CACElnB,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,EAAMziB,OACbuK,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,OAIjB,eAACl5B,GAAD,CACElnB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMqI,YACbvgB,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,OAGf,gBAACpxB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,UACE,eAACyH,GAAD,CACErrB,KAAK,MACLiQ,MAAOgW,EAAMwa,IACb1yB,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,IAEb,eAACl5B,GAAD,CACErrB,KAAK,MACLiQ,MAAOgW,EAAMwG,OACb1e,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,IAEb,eAACl5B,GAAD,CACErrB,KAAK,OACLiQ,MAAOgW,EAAMya,OACb3yB,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,OAGf,gBAACpxB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,UACE,eAACyH,GAAD,CACErrB,KAAK,QACLiQ,MAAOgW,EAAM5gB,MACb0I,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,IAEb,eAACl5B,GAAD,CACErrB,KAAK,UACLiQ,MAAOgW,EAAM2a,QACb7yB,SAAUA,EACVE,OAAQA,EACRw7B,WAAS,EACTC,QAAS,EACTpa,KAAM,EACN9B,UAAW+2B,OAGf,gBAACpxB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,UACE,eAACyH,GAAD,CACErrB,KAAK,UACLiQ,MAAOgW,EAAM0a,QACb5yB,SAAUA,EACVE,OAAQA,EACRuf,UAAW+2B,KAEZ,EAeD,eAAC7zC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,MAE1B,eAAC,GAAD,CACE86B,IAAK4B,EACL3B,OAAQ4B,EACR3B,MAAOwB,EACPvB,SAAUwB,EACVxnD,MAAO,IACPW,OAAQ,IACR3D,KAAK,eAIX,eAACi5B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,IACvB,eAACuP,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,gBAChBze,OAAQ,GACRnB,UAAW,IANf,UASE,eAAC6T,GAAA,EAAD,CACEE,QAASzC,EAAaS,GACtBzJ,MAAM,UACN/J,QAAQ,YACRuyB,UAAW+2B,EACX/zC,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZwf,eAAgB,UATpB,SAYE,eAACzM,GAAA,EAAD,UAAaoW,EAAMsY,SAErB,eAAC1P,GAAA,EAAD,CACEC,QACE,eAACvO,GAAA,EAAD,CACEE,QAAS8jC,EACT7jC,SAAU,SAACpR,GAAD,OAAYk1C,EAAUl1C,EAAEk6B,OAAO/oB,UACzCzgB,KAAK,WACLgF,MAAM,YAGViL,MAAO7B,EAAQ,4EAAkB,kBAIvC,gBAACsC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL3T,cAAe,MACfrB,UAAW,MACXkC,KAAM,EACNZ,WAAY,SACZwf,eAAgB,iBAPpB,UAUE,gBAAC5L,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOrB,UAAW,OAF5C,UAIE,eAACkV,GAAA,EAAD,CACEF,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAO,OACP5J,WAAY,GACZC,YAAa,IANjB,qBAWA,eAACqV,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAO,QALX,gBAQG4sC,QARH,IAQGA,OARH,EAQGA,EAASmT,WAGd,eAACr0C,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAO,OACP5J,WAAY,GACZC,YAAa,IAPjB,gBAUGu2C,QAVH,IAUGA,OAVH,EAUGA,EAASoT,yBCzSlBC,GAAe,CACnBrkD,SAAU,GACVC,MAAO,IACPC,IAAK,MA+EQokD,GA5EC,SAAC,GAQN,EAPTzzC,SAOU,IANVrD,EAMS,EANTA,MACA6X,EAKS,EALTA,MACAzjB,EAIS,EAJTA,SACAovC,EAGS,EAHTA,QACAkB,EAES,EAFTA,YAES,KADTt2C,MAE2C0R,sBAAWtB,KAA9ClO,EADC,EACDA,MAAOyP,EADN,EACMA,SACP3N,EAAkC9B,EAAlC8B,KAAMC,EAA4B/B,EAA5B+B,QAASC,EAAmBhC,EAAnBgC,KAAMC,EAAajC,EAAbiC,SAEvBiiB,EAAO1gB,GAAaxB,GAQpBkiD,EAAc,SAAC/3C,GACnBsD,EAAS,CAAE9M,KAAM,cAAeC,QAASuJ,KAO3C,OAJKlK,GACHiiD,EAAYqC,IAIZ,eAACv0C,GAAA,EAAD,CACEF,MAAO,CACLlV,QAAS,IAFb,SAKE,gBAAC63B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,SACE,eAAC,GAAD,CAAUpjB,KAAMA,EAAM0gD,QAtBd,SAAC1gD,GACf2N,EAAS,CAAE9M,KAAM,UAAWC,QAASd,KAqBS4N,MAAOA,MAGjD,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,SACGphB,GACC,eAAC,GAAD,CACE7B,SAAUA,EACVslB,MAAOA,EACP28B,YAAaA,EACbx0C,MAAOA,MAKb,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,EACP3N,QAASA,EACT2gD,WArCS,SAAC3gD,GAClB0N,EAAS,CAAE9M,KAAM,aAAcC,QAASb,SAwCnCmiB,GACC,eAACuQ,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,SACE,eAAC29B,GAAD,CAAiBnzC,MAAOA,EAAOozC,QAAQ,MAG3C,eAACruB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,SACE,eAAC,GAAD,CACEguB,QAASA,EACTkB,YAAaA,EACb7sB,MAAOA,EACP7X,MAAOA,YC5EnB,IA0Ge+2C,GA1GO,SAAC,GAAsD,IAApDtzC,EAAmD,EAAnDA,KAAMqZ,EAA6C,EAA7CA,QAAShO,EAAoC,EAApCA,IAAKkoC,EAA+B,EAA/BA,aAAc5oD,EAAiB,EAAjBA,MAAiB,EAClDmR,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IADW,oBACnEy3B,EADmE,KAC7Dze,EAD6D,OAExBxb,aAAQ7J,EAAIwmB,cAAtD1c,EAFkE,EAElEA,SAAUC,EAFwD,EAExDA,aAAcC,EAF0C,EAE1CA,OAAQ86B,EAFkC,EAElCA,MAEzB36B,EACIF,sBAAWtB,IAD5ByB,UAAaD,MAGTK,EAAQ,yCAAG,WAAO5D,GAAP,oCAAA8D,EAAA,yDACThK,EAAWkG,EAAKlG,SAChB4lB,EAAc1f,EAAK0f,YACnBC,EAAe3f,EAAK2f,aAEtBD,IAAgBC,EALL,gCAMPb,GAAcL,EAAS,sBANhB,+CAUT1a,EAAiB,CACrByK,IAAK6D,EAAI7D,IACT1U,WACA4lB,eAba,mBAgBK66B,EAAa,CAAEx2C,cAhBpB,YAiByB,KAA/B,QADDuK,EAhBO,cAiBN,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWw6C,sBAAX,eAA2Bv2C,IAjBlB,kCAkBL0a,GAAaF,EAASlb,GAlBjB,oCAmBgC,KAA/B,OAAH+K,QAAG,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWw6C,sBAAX,eAA2Bv2C,IAnBzB,kCAoBL6a,GAAcL,EAAD,OAAUnQ,QAAV,IAAUA,GAAV,UAAUA,EAAKtO,YAAf,iBAAU,EAAWw6C,sBAArB,aAAU,EAA2Bz3C,OApB7C,0CAuBbm7B,IACA7d,IAxBa,kDA0Bboe,EAAQ,EAAD,IA1BM,0DAAH,sDA8BRA,EAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZ26B,IACApjB,QAAQC,IAAIhY,GANA,2CAAH,sDAcPqL,EAAQ7K,EAAQ,+FAAsB,kBAE5C,OACE,eAAC05B,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASA,EACTjS,MAAOA,EACPxK,SAZmB,WACrBT,EAAaS,EAAbT,IAYExR,MAAOA,EACPurC,KAAMA,EACNjqC,SAAS,KARX,SAUE,gBAACq1B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAAC6D,GAAD,CACEjnB,WAAS,EACT7L,UAAQ,EACR9C,KAAK,WACLrB,KAAK,WACLiQ,MAAO7B,EAAQ,2GAAwB,mBACvCL,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,IAEX,eAAC6mB,GAAD,CACE9yB,UAAQ,EACR9C,KAAK,WACLrB,KAAK,cACLiQ,MAAO7B,EAAQ,2GAAwB,eACvCL,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,IAEX,eAAC6mB,GAAD,CACE9yB,UAAQ,EACR9C,KAAK,WACLrB,KAAK,eACLiQ,MAAO7B,EAAQ,2GAAwB,eACvCL,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,OAIb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCiLRkyB,GAzQG,SAAC,GAWP,IAVVzzC,EAUS,EAVTA,KACAqZ,EASS,EATTA,QACAhO,EAQS,EARTA,IACA6S,EAOS,EAPTA,MACAM,EAMS,EANTA,aACAF,EAKS,EALTA,UACAC,EAIS,EAJTA,WACA5zB,EAGS,EAHTA,MACA4oD,EAES,EAFTA,aACAG,EACS,EADTA,MACS,EACmB53C,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAGiB3b,oBAAS,IAH1B,oBAGF1L,EAHE,KAGKujD,EAHL,OAIe73C,oBAAS,WAJxB,oBAIFghB,EAJE,KAII82B,EAJJ,OAKyB93C,qBAAS,GALlC,oBAKF+3C,EALE,KAKSC,EALT,OAOuBh4C,qBAAS,GAPhC,oBAOFi4C,EAPE,KAOQC,EAPR,OASyC/3C,aAChDiiB,EAAQ9rB,EAAIkmB,gBAAkBlmB,EAAIomB,kBAD5Btc,EATC,EASDA,SAAUC,EATT,EASSA,aAAcC,EATvB,EASuBA,OAAQ86B,EAT/B,EAS+BA,MAT/B,EAeU76B,sBAAWtB,IAfrB,IAaPyB,UAAa4X,EAbN,EAaMA,MAAO7X,EAbb,EAaaA,MACX1N,EAdF,EAcPhC,MAASgC,KAELolD,EAAO3jD,GAAczB,GACnB+tB,EAAakqB,KAAblqB,SAqBRkG,sBAAU,WACR,IAAMoxB,E5IN6B,SAACt3B,EAAeu3B,GACrD,IAAMC,EAAM,GACZ,OAAwB,IAApBx3B,EAAS3a,QACb2a,EAAS5b,KAAI,SAACzQ,GACRA,EAAOspB,WAAas6B,IACtBC,EAAI7jD,EAAOspB,UAAY,GACvBtpB,EAAOZ,QAAQqR,KAAI,SAACqzC,GAClBD,EAAI7jD,EAAOspB,UAAUw6B,GAAO,UALAD,E4IInBE,CAAwB13B,EAAUE,GAC/C62B,EAASO,KACR,CAACl0C,EAAM8c,IAEVgG,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAM0sC,EAAOpnD,KAAKC,MAAMse,EAAIjb,OAC5BwjD,EAAQvoC,EAAI9a,QACZojD,EAASO,GACTJ,EAAazoC,EAAIqoC,UAElB,CAAC1zC,IAEJ,IAEMpD,EAAQ,yCAAG,WAAO5D,GAAP,0BAAA8D,EAAA,0DACW,IAAtBjO,EAAKwB,aADM,oBAEY,IAArBgb,EAAIhb,cAA8C,SAArBgb,EAAIhb,aAFxB,gCAGLynB,GAAcL,EAAS,iCAHlB,wCAOfuf,GAAU,GACVxY,IACM3rB,EAAWqrB,EAAQllB,EAAKnG,SAAWwY,EAAIxY,SACvC1E,EAAO6K,EAAK7K,KAAKua,OACjBpV,EAAQ0F,EAAK1F,MACbR,EAAWkG,EAAKlG,SAChBU,EAAQwF,EAAKxF,MACbuJ,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChC5L,WACA1E,OACAmF,QACAE,QACAV,SAAUorB,EAAQprB,OAAW2L,EAC7BrO,MAAOtD,KAAKyB,UAAU6B,GACtBG,OAAQusB,EACRqa,OAAQtoC,EAAK2Y,KAGf4vB,EADelZ,EAAQI,EAAYC,EACrBxhB,GA1BC,4CAAH,sDA6BRq6B,EAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACTi6B,GAAU,GACV+E,IACA,MAAOhgC,GACP07B,EAAQ17B,GANE,2CAAH,wDAUL07B,EAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZ26B,IACApjB,QAAQC,IAAIhY,GANA,2CAAH,sDAkBPggC,EAAc,WAClB7E,IACAyc,EAAS,IACTC,EAAQ,WACRv6B,KAOIjS,EAAQ7K,EACV2hB,EACE,sEACA,2GACFA,EACA,WACA,YACJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASA,EACTjS,MAAOA,EACPxK,SAjBmB,WACrBT,EAAaS,EAAbT,IAiBExR,MAAOA,EACPurC,KAAMA,EACN7Q,GAAI,GACJiR,OAAQA,EATV,SAWE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAAC/H,GAAD,CACErb,WAAS,EACT7L,UAAQ,EACRnE,KAAK,WACLiQ,MAAOgW,EAAMvhB,SACbqJ,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACLsQ,UAAWuC,IAEZA,GACC,eAAC1E,GAAD,CACElnB,UAAQ,EACRnE,KAAK,WACLiQ,MAAOgW,EAAMthB,SACboJ,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL7b,KAAK,aAGT,eAACgqB,GAAD,CACElnB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,IAEP,eAACmO,GAAD,CACErrB,KAAK,QACLiQ,MAAOgW,EAAMqI,YACbvgB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,IAEP,eAACmO,GAAD,CACErrB,KAAK,QACLiQ,MAAOgW,EAAM5gB,MACb0I,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,IAEP,eAACxM,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAY5U,QAAQ,KAAKuV,MAAO,CAAE9T,UAAW,IAA7C,SACG0R,EAAQ,yDAAc,YAG1BqgB,GAAYxsB,GACX,eAACusB,GAAD,CACEvsB,MAAOA,EACPmM,MAAOA,EACPqgB,SAAUA,EACVE,KAAMA,EACND,kBApLc,SAAC,GAAmC,IAAjCtsB,EAAgC,EAAhCA,OAAQG,EAAwB,EAAxBA,OAAQM,EAAgB,EAAhBA,KAC3C,GAAKT,EAAL,CACA,IAAMgkD,EAAQ,gBAAQnkD,GAElBG,IAAWG,GACkB,IAA3B6jD,EAAShkD,GAAQS,UACZujD,EAAShkD,GAAQS,GAExBujD,EAAShkD,GAAQS,IAAQ,GAGY,IAAnCujD,EAAShkD,GAAQG,GAAQM,UACpBujD,EAAShkD,GAAQG,GAAQM,GAEhCujD,EAAShkD,GAAQG,GAAQM,IAAQ,EAGrC2iD,EAASY,OAsKH,eAAC11C,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZwf,eAAgB,SAChB5f,UAAW,MAGf,gBAACgU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUwf,eAAgB,YAFjD,WAIIyT,GACA,eAACxf,GAAA,EAAD,CACEtV,QAAQ,WACR+J,MAAM,UACNyL,QAAS,kBAAMo1C,GAAY,IAC3Br1C,MAAO,CAAEpV,WAAY,GAAIC,YAAa,IAJxC,SAMG+S,EAAQ,+FAAsB,oBAGlC03C,IAAS5oC,EAAIhb,eAAiB6tB,GAC7B,eAACxf,GAAA,EAAD,CACEvL,MAAO0gD,EAAY,YAAc,UACjCj1C,QA5HM,WAClB,IAAM7B,EAAY,CAChByK,IAAK6D,EAAI7D,IACTksC,OAAQG,GAEVH,EAAM,CAAE32C,eAwHI3T,QAAQ,WAHV,SAKGyqD,EACGt3C,EACE,sEACA,eACFA,EACA,sEACA,qBAKZ,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAAC,GAAD,CACEvhB,KAAM+zC,EACN16B,QAhMY,kBAAM26B,GAAY,IAiM9B3oC,IAAKA,EACLkoC,aAAcA,EACd5oD,MAAOA,UCxPXupB,GAAW,SAAC7I,GAAD,OAAuBA,EAAI7D,KAE7B,SAASgtC,GAAT,GAMN,IALPj4C,EAKM,EALNA,MACA6X,EAIM,EAJNA,MACAzpB,EAGM,EAHNA,MACAiV,EAEM,EAFNA,SACAjP,EACM,EADNA,SACM,EACwBmL,qBAAS,GADjC,oBACCylC,EADD,KACUC,EADV,OAGkB1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAHzD,oBAGCy3B,EAHD,KAGOze,EAHP,OAKY3b,oBAAS,CACzB,CAAE3N,KAAM,SAAUiZ,MAAOgN,EAAMlpB,QAC/B,CAAEiD,KAAM,WAAYiZ,MAAOgN,EAAMvhB,UACjC,CAAE1E,KAAM,OAAQiZ,MAAOgN,EAAMjmB,MAC7B,CAAEA,KAAM,QAASiZ,MAAOgN,EAAMqI,aAC9B,CAAEtuB,KAAM,QAASiZ,MAAOgN,EAAM5gB,OAC9B,CAAErF,KAAM,QAASiZ,MAAOgN,EAAMhkB,OAC9B,CAAEjC,KAAM,QAASiZ,MAAO7K,EAAQ,uCAAW,YAPtCqgC,EALD,uBC5BO,WAAO,IAAD,MACapT,aAAairB,IAD1B,oBACZC,EADY,KACHC,EADG,OAGDl4C,aAAYqwB,GAAQ,CACpCjD,eAAgB,CAAC,CAAEC,MAAO2qB,OADrBG,EAHY,uBAMAn4C,aAAYo4C,GAAY,CACzChrB,eAAgB,CAAC,CAAEC,MAAO2qB,OADrBK,EANY,uBASIr4C,aAAY+2C,GAAgB,CACjD3pB,eAAgB,CAAC,CAAEC,MAAO2qB,OADrBlB,EATY,uBAYH92C,aAAYo3C,GAAW,CACrChqB,eAAgB,CAAC,CAAEC,MAAO2qB,OADrBf,EAZY,uBAeEj3C,aAAYs4C,GAAY,CAC3ClrB,eAAgB,CAAC,CAAEC,MAAO2qB,OADrBO,EAfY,qBA0BnB,OAPAlyB,sBAAU,WACR4xB,MACC,CAACA,IAKG,CACLO,OAJmB,OAAPN,QAAO,IAAPA,GAAA,UAAAA,EAAS37C,YAAT,kDAA6BA,OAAQ,GAKjDk8C,YAJkB,yBAAMP,QAAN,IAAMA,OAAN,EAAMA,EAAStqB,WAKjCuqB,UACAE,WACAE,aACAzB,eACAG,SDkBEyB,GAPFF,EAhBI,EAgBJA,MACAL,EAjBI,EAiBJA,QACAE,EAlBI,EAkBJA,SACAE,EAnBI,EAmBJA,WACAzB,EApBI,EAoBJA,aACAG,EArBI,EAqBJA,MACAwB,EAtBI,EAsBJA,YAGIpY,EAAa,yCAAG,sCAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAKAwT,EAAW,CAAEj4C,UAAW,CAAEyK,SAL1B,WAMgB,KAA3B,QADDF,EALY,cAMX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAW+7C,kBAAX,eAAuB93C,IANT,kCAOV4a,GAAWJ,EAASlb,GAPV,0CAUlBilC,GAAW,GAVO,4CAAH,sDA2Cb3rB,EAAoB,CACxBC,IA9BgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,sBAAKpX,MAAO,CAAEiR,UAAW,UAAzB,SACE,eAAC/Q,GAAA,EAAD,CAAKmX,EAAG,EAAR,SACE,eAACC,GAAA,EAAD,CAAK9iB,MAAM,UAAUyL,QAASmX,EAAW3O,MAAM,iBAA/C,SACE,eAAC,KAAD,WA2BN8O,KArBiB,SAAC,GAAD,IAAGH,EAAH,EAAGA,UAAH,OACjB,eAACI,GAAA,EAAD,CAAYvX,QAASmX,EAAW3O,MAAM,WAAtC,SACE,eAAC,KAAD,OAoBFiP,OAhBmB,SAAC,GAAD,IAAGN,EAAH,EAAGA,UAAH,OACnB,eAACI,GAAA,EAAD,CACEvX,QAAS,WACHvB,OAAOiZ,QAAQ,8CACjBP,KAGJ3O,MAAM,aANR,SAQE,eAAC,KAAD,QAeJ,OACE,eAACkjB,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAAS2qB,EANX,SAQE,gBAAC9zB,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,gBAAC,KAAD,CAAMkhB,KAAMw3B,EAAOrY,QAASA,EAAS1oB,SAAUA,GAA/C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,SACNlB,mBAAoB,SAACh0C,GAAD,OrG5EF,SAAC,GAAgC,IAA9BiG,EAA6B,EAA7BA,MAAOid,EAAsB,EAAtBA,IAAK9O,EAAiB,EAAjBA,MACrC1N,EAAI,6BAAQwc,GAAR,IAAajb,MAAOtD,KAAKC,MAAMqB,KACzC,OAAIiC,GAAaxB,GACR,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,uCAAW,eAE9BjM,GAAczB,GACT,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,0DAAe,iBAGlC9L,GAAc5B,EAAM,QAAU4B,GAAc5B,EAAM,OAC7C,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,oDAAc,kBAEjC5L,GAAS9B,EAAM,QAAU8B,GAAS9B,EAAM,OACnC,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,2BAAS,WAE5B1L,GAAShC,EAAM,QAAUgC,GAAShC,EAAM,OACnC,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,2BAAS,WAGzB,eAACsC,GAAA,EAAD,IqG0DK02C,CAAe,6BAAKptD,GAAN,IAAaoU,cAG/B,eAAC,KAAD,CACE8gC,IAAK,CAAC,UACNlB,mBAAoB1wB,KAEtB,eAAC,KAAD,CACE4xB,IAAK,CAAC,SACNlB,mBAAoBzwB,KAGtB,eAAC,KAAD,CACE6xB,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBApDM,SAAC,GAAuB,IAArBtsC,EAAoB,EAApBA,GAAI6kB,EAAgB,EAAhBA,UACfS,EAAgBX,EAAkB3kB,GACxC,OAAO,eAACslB,EAAD,CAAeT,UAAWA,OAoD3B,eAAC,KAAD,IACA,eAAC,KAAD,CACE0/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CAAcwC,MAAOA,EAAO2zB,UAAWs2B,EAASr2B,WAAYu2B,EAA5D,SACE,eAAC,GAAD,CAAWvB,aAAcA,EAAcG,MAAOA,SAGjDxd,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,SE3JA,SAAS2+B,GAAT,GAMN,IALPn5C,EAKM,EALNA,MACA6X,EAIM,EAJNA,MACAzjB,EAGM,EAHNA,SACAhG,EAEM,EAFNA,MACAiV,EACM,EADNA,SACM,EACwB9D,qBAAS,GADjC,oBACCylC,EADD,KACUC,EADV,OAEkB1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFzD,oBAECy3B,EAFD,KAEOze,EAFP,OAIY3b,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMjmB,MAChD,CAAEA,KAAMoO,EAAQ,OAAS,SAAU6K,MAAOgN,EAAMjmB,MAChD,CAAEA,KAAM,UAAWiZ,MAAOgN,EAAM5kB,MAChC,CAAErB,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,SAAUiZ,MAAOgN,EAAMjhB,OAC/B,CAAEjC,GAAI,GAAIyE,IAAK,SAAUxH,KAAM,SAAUiZ,MAAO,OAN3Cw1B,EAJD,uBAmBF9J,KALF7J,EAdI,EAcJA,YACAc,EAfI,EAeJA,cACAE,EAhBI,EAgBJA,eACAE,EAjBI,EAiBJA,iBACAC,EAlBI,EAkBJA,kBAGI0S,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAIArX,EAAiB,CAAEptB,UAAW,CAAEyK,SAJhC,WAKsB,KAAjC,QADDF,EAJY,cAKX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWkxB,wBAAX,eAA6BjtB,IALf,6BAMZqK,QANY,IAMZA,GANY,UAMZA,EAAKtO,YANO,iBAMZ,EAAWkxB,wBANC,aAMZ,EAA6BnuB,MAAM4L,SAAS,YANhC,kCAORqQ,GAAiBP,EAASlb,GAPlB,iDASRsb,GAAWJ,EAASlb,GATZ,QAYlBilC,GAAW,GAZO,4CAAH,sDAgBnB,OACE,eAAClX,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAASH,EANX,SAQE,gBAAChJ,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAE5B,gBAAC,KAAD,CAAMkhB,KAAMwL,EAAa2T,QAASA,EAAS1oB,SAAUA,GAArD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAGtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,UACNlB,mBAAoB/wB,KAEtB,eAAC,KAAD,CACEiyB,IAAK,CAAC,WACNlB,mBAAoB7wB,KAGrB3a,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAItB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWyL,EACXxL,WAAY0L,EAHd,SAKE,eAAC,GAAD,SAGHiM,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,SChIA,kBAAO,IAAD,IAGbxa,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgB66B,aAAa0G,GAAc,CAC5DnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,EAAG,MALjB,oBAIZxlB,EAJY,KAIAC,EAJA,OAQG3zB,aAAY4zB,GAAgB,CAChDxG,eAAgB,CACd,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,EAAG,KACzD,CAAE7rB,MAAOoG,GAAcnzB,UAAW,CAAER,aAHjC8uB,EARY,uBAcI5uB,aAAY6zB,GAAgB,CACjDzG,eAAgB,CACd,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,EAAG,KACzD,CAAE7rB,MAAOoG,GAAcnzB,UAAW,CAAER,aAHjCg0B,EAdY,uBAoBM9zB,aAAY+zB,GAAgB,CACnD3G,eAAgB,CACd,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,EAAG,KACzD,CAAE7rB,MAAOoG,GAAcnzB,UAAW,CAAER,aAHjCk0B,EApBY,qBA2BnB3N,sBAAU,WACRqN,MACC,CAACA,IAKJ,MAAO,CACLnH,WAJuB,OAAPoH,QAAO,IAAPA,GAAA,UAAAA,EAASp3B,YAAT,sDAAiCA,OAAQ,GAKzD03B,gBAJsB,yBAAMN,QAAN,IAAMA,OAAN,EAAMA,EAAS/F,WAKrCgB,cACAkF,eACAE,mBCnBW,SAASmlB,GAAT,GAMN,IALPr5C,EAKM,EALNA,MACA6X,EAIM,EAJNA,MACAzjB,EAGM,EAHNA,SACAhG,EAEM,EAFNA,MACAiV,EACM,EADNA,SACM,EACwB9D,qBAAS,GADjC,oBACCylC,EADD,KACUC,EADV,OAEkB1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFzD,oBAECy3B,EAFD,KAEOze,EAFP,OAIY3b,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMjmB,MAChD,CAAEA,KAAM,SAAUiZ,MAAOgN,EAAMjhB,OAC/B,CAAEhF,KAAM,UAAWiZ,MAAO7K,EAAQ,uCAAW,WAC7C,CAAEpO,KAAM,QAASiZ,MAAOgN,EAAMqI,aAC9B,CAAEtuB,KAAM,QAASiZ,MAAOgN,EAAM5gB,OAC9B,CACErF,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOgN,EAAMrB,YAEf,CAAE5kB,KAAM,OAAQiZ,MAAOgN,EAAM8a,MAC7B,CAAE/gC,KAAM,UAAWiZ,MAAO7K,EAAQ,0DAAe,aAX5CqgC,EAJD,uBAwBFiZ,KALF7sB,EAnBI,EAmBJA,UACAqC,EApBI,EAoBJA,YACAkF,EArBI,EAqBJA,aACAE,EAtBI,EAsBJA,eACAC,EAvBI,EAuBJA,gBAGIoM,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAKA/Q,EAAe,CAAE1zB,UAAW,CAAEyK,SAL9B,WAMoB,KAA/B,QADDF,EALY,cAMX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWw3B,sBAAX,eAA2BvzB,IANb,6BAOZqK,QAPY,IAOZA,GAPY,UAOZA,EAAKtO,YAPO,iBAOZ,EAAWw3B,sBAPC,aAOZ,EAA2Bz0B,MAAM4L,SAAS,YAP9B,kCAQRqQ,GAAiBP,EAASlb,GARlB,iDAURsb,GAAWJ,EAASlb,GAVZ,QAalBilC,GAAW,GAbO,4CAAH,sDAiBnB,OACE,eAAClX,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAASmG,EANX,SAQE,gBAACtP,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,gBAAC,KAAD,CAAMkhB,KAAMuL,EAAW4T,QAASA,EAAS1oB,SAAUA,GAAnD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,UACNlB,mBAAoB/wB,KAEtB,eAAC,KAAD,CACEiyB,IAAK,CAAC,SACNlB,mBAAoBtxB,KAEtB,eAAC,KAAD,CACEwyB,IAAK,CAAC,WACNlB,mBAAoB,SAACh0C,GAAD,OAClB2iB,GAAiB,6BAAK3iB,GAAN,IAAaoU,cAGjC,eAAC,KAAD,CACE8gC,IAAK,CAAC,WACNlB,mBAAoB7wB,KAErB3a,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAW+M,EACX9M,WAAYgS,EAHd,SAKE,eAAC,GAAD,SAGH2F,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,S,2BC1JA9oB,gBAAf,6/BCAMe,GAAQ,IAAI4J,KAAKA,KAAKk9C,IAAI,KAAM,EAAG,EAAG,GAAI,K,8CCK1CzkD,GAAO,eAAC,KAAD,CAA0BvH,SAAS,UAC1CisD,GAAc,eAAC,KAAD,CAAcjsD,SAAS,UAE5B,SAASksD,GAAT,GASN,IARPj7B,EAQM,EARNA,QACA3sB,EAOM,EAPNA,MACAm+C,EAMM,EANNA,SACAn4B,EAKM,EALNA,MACA7X,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MAEM,IADN4qD,eACM,SACN,OACE,eAACr6B,GAAA,EAAD,CACEvzB,KAAK,QACL6tD,UAAWD,EACXl7B,QAASA,EACTo7B,sBAAoB,EACpBC,iBAAe,EACfv6B,eAAgB,SAACC,GAAD,OAAkBvf,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,MACjE8tB,aAAc,SAACH,EAAD,OAAW6rB,EAAX,EAAWA,SAAX,OACZ,gBAAC9oC,GAAA,EAAD,CACEF,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BxR,QAAS,OACTc,KAAM,EACNZ,WAAY,UALhB,WAQIgrD,GACA,eAACvnC,GAAA,EAAD,CACErd,KAAMA,GACN0kD,YAAaA,GACbp3C,MAAO,CAAEnV,YAAa,GACtBolB,QAAS+4B,IAGZprC,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,SAGpCC,MAAOA,EACPygB,SAAU,SAACrhB,EAAG0uB,GACZqwB,EAASrwB,IAEXG,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEmB,KAAM,EACNoa,QAAS,EACT3mC,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOgW,EAAMjmB,GACb/E,QAAQ,WACRuV,MAAO,CACLtT,MAAOA,GAAgB,IACvB7B,YAAa,EACbD,WAAY,EACZO,SAAU,GACVvB,OAAQ,EACRkB,QAAS,SCtDrB,IA0Je4sD,GA1Ja,SAAC,GAQjB,IAPVr2C,EAOS,EAPTA,KACAqZ,EAMS,EANTA,QACAzc,EAKS,EALTA,SACAjS,EAIS,EAJTA,MACA4R,EAGS,EAHTA,MACA6X,EAES,EAFTA,MACAplB,EACS,EADTA,MACS,EACmB8M,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAASgsC,KAAMC,OAF9B,oBAEFuO,EAFE,KAEIC,EAFJ,OAGuBz6C,oBAAS,IAHhC,oBAGFvE,EAHE,KAGQi/C,EAHR,OAIyB16C,oBAAS,IAJlC,oBAIF26C,EAJE,KAISC,EAJT,OAKqB56C,oBAAS9M,GAAgB,IAAI4J,MALlD,oBAKF+9C,EALE,KAKOC,EALP,OAMiB96C,oBAAS,MAN1B,oBAMF+6C,EANE,KAMKC,EANL,OAOuBh7C,oBAAS,GAPhC,oBAOFwzB,EAPE,KAOQynB,EAPR,OAQiBj7C,oBAAS,GAR1B,oBAQFgmB,EARE,KAQKk1B,EARL,OAUel7C,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAVtD,oBAUFy3B,EAVE,UAyBTpT,sBAAU,WACR,GAAIvrB,GAAYA,EAAS0K,OAAS,EAAG,CACnC,IAAMg1C,EAAM1/C,EAASyJ,KAAI,SAACk2C,GAAD,OAAaA,EAAG9oD,SACzCsoD,EAAaO,MAEd,CAAC1/C,IACJurB,sBAAU,WACJwzB,IAASxO,KAAME,SACjBwO,EAAY,IACZE,EAAa,OAEd,CAACJ,IAEJ,IAeMlvC,EAAQ7K,EAAQ,2GAAwB,yBAExCw/B,EAAc,WAClBwa,EAAQzO,KAAMC,OACd6O,EAAW,IAAIh+C,MACfk+C,EAAS,MACTC,EAAY,GACZC,EAAS,GACTR,EAAY,IACZE,EAAa,IACbr9B,IACA2d,GAAU,IAEZ,OACE,eAACf,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAAS0iB,EACT30B,MAAOA,EACPxK,SAlCW,WACbo6B,GAAU,GACV,IAAM5P,EFxDK,YAOX,IAAD,IANDkvB,YAMC,MANMxO,KAAME,OAMZ,EALDyO,EAKC,EALDA,UAKC,IAJDE,eAIC,MAJS3nD,GAIT,MAHD6nD,aAGC,MATS,KAST,MAFDvnB,gBAEC,MAFU,EAEV,MADDxN,aACC,MADO,EACP,EACKq1B,EAAO,IAAIrP,KAAM,CAAEwO,OAAMhnB,WAAUmnB,YAAWE,UAASE,QAAO/0B,UAKpE,MAAO,CAAEvZ,IAJG4uC,EAAK5uC,MAIH6uC,IAHFD,EAAK3S,WAGE6S,IAFPF,EAAKG,UE6CDC,CAAa,CACzBjB,OACAG,UAAWA,EAAUx0C,OAAS,EAAIw0C,OAAYh4C,EAC9Ck4C,UACAE,QACAvnB,WACAxN,UAEFllB,EAASwqB,GACT4P,GAAU,GACV+E,KAuBEpxC,MAAOA,EACPurC,KAAMA,EACNshB,WAAS,EACTvrD,SAAS,KACTqqC,OAAQA,EAVV,SAYE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,EACP6B,MAAOgW,EAAMplB,MACbZ,MAAOuoD,EACP9nC,SAAU,SAAC2C,GAAD,OAAeolC,EAAWplC,QAGxC,eAAC,GAAD,CACEuJ,QAAS8sB,GACTz5C,MAAOkoD,EACPznC,SAjFW,SAACpR,GACpB84C,EAAQ94C,EAAEk6B,OAAOvpC,QAiFTmO,MAAOA,IAER+5C,IAASxO,KAAME,QACd,eAACgO,GAAD,CACEj7B,QAASotB,GACT/5C,MAAOmJ,EACPg1C,SAAUiK,EACVpiC,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,WACL9C,MAAO,MAGX,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,QACLiQ,MAAOgW,EAAMpgB,IACb5F,MAAO0zB,EACPjT,SA7FU,SAACpR,GACrB,IAAMrP,EAAQylB,OAAOpW,EAAEk6B,OAAOvpC,OAClB4oD,EAAZ5oD,EAAQ,EAAa,EAAcA,IA4FzBoB,KAAK,SACLnE,MAAO,QAIX,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,WACLiQ,MAAOgW,EAAMkb,SACblhC,MAAOkhC,EACPzgB,SA7Ga,SAACpR,GACxB,IAAMrP,EAAQylB,OAAOpW,EAAEk6B,OAAOvpC,OAClB2oD,EAAZ3oD,EAAQ,EAAgB,EAAiBA,IA4G/BoB,KAAK,SACLnE,MAAO,QAGX,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,EACP6B,MAAOgW,EAAMnlB,IACbb,MAAOyoD,EACPhoC,SAAU,SAAC2C,GAAD,OAAeslC,EAAStlC,WAKxC,eAAC8P,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCzHV6f,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cAmvBSyb,GA9uBkB,SAAC,GAiBtB,IAhBVz3C,EAgBS,EAhBTA,KACAqZ,EAeS,EAfTA,QACAhO,EAcS,EAdTA,IACA6S,EAaS,EAbTA,MACAI,EAYS,EAZTA,UACAC,EAWS,EAXTA,WACAyK,EAUS,EAVTA,UACAC,EASS,EATTA,YACA6I,EAQS,EARTA,UACAwP,EAOS,EAPTA,iBACA32C,EAMS,EANTA,MACAo1C,EAKS,EALTA,QACApvC,EAIS,EAJTA,SACA6e,EAGS,EAHTA,MACArhB,EAES,EAFTA,KACAC,EACS,EADTA,MAEMyN,EAAUvP,KADP,EAEqBwP,qBAAS,GAF9B,oBAEFylC,EAFE,KAEOC,EAFP,OAI8B1lC,oBAAS,MAJvC,oBAIFkM,EAJE,KAISgiC,EAJT,OAK0BluC,oBAAS,MALnC,oBAKFxC,EALE,KAKO2wC,EALP,OAO6BnuC,oBAC3B,iBAAT3N,EAA0BC,EAAQ,MAR3B,oBAOFyK,EAPE,KAOWw/B,EAPX,OAU6Bv8B,qBAAc,GAV3C,oBAUFm9B,EAVE,KAUWC,EAVX,KAWHC,EAAiBp5B,KAAM44B,SAXpB,EAayB78B,oBACvB,eAAT3N,EAAwBC,EAAQ,MAdzB,oBAaF0K,EAbE,KAaS2iB,EAbT,OAgByB3f,qBAAc,GAhBvC,oBAgBFs9B,EAhBE,KAgBSC,EAhBT,KAiBHX,EAAe34B,KAAM44B,SAjBlB,EAmByB78B,oBACvB,eAAT3N,EAAwBC,EAAQ,MApBzB,oBAmBFuL,EAnBE,KAmBS0oC,EAnBT,OAsByBvmC,qBAAc,GAtBvC,oBAsBF47C,GAtBE,KAsBSC,GAtBT,KAuBHC,GAAe73C,KAAM44B,SAvBlB,GAyBwB78B,oBAAS,MAzBjC,sBAyBF/C,GAzBE,MAyBMyuC,GAzBN,SA2BmB1rC,oBAAc,IA3BjC,sBA2BFomC,GA3BE,MA2BMC,GA3BN,SA4ByBrmC,oBAAc,IA5BvC,sBA4BFgmC,GA5BE,MA4BSC,GA5BT,SA6BiBjmC,oBAAc,MA7B/B,sBA6BF+L,GA7BE,MA6BKgwC,GA7BL,SA+ByB/7C,qBAAS,GA/BlC,sBA+BFg8C,GA/BE,MA+BSC,GA/BT,SAgC6Bj8C,qBAAS,GAhCtC,sBAgCFk8C,GAhCE,MAgCWC,GAhCX,SAiCyBn8C,oBACvB,WAAT3N,EAAoBC,EAAQ,MAlCrB,sBAiCF0L,GAjCE,MAiCSwoC,GAjCT,SAqCexmC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IArCtD,sBAqCFy3B,GArCE,MAqCIze,GArCJ,SAuC2B3b,qBAAS,GAvCpC,sBAuCFouC,GAvCE,MAuCUC,GAvCV,SAwC6BruC,oBAAS,IAxCtC,sBAwCFgM,GAxCE,MAwCWsiC,GAxCX,SAyCuBtuC,oBAAS,MAzChC,sBAyCF6rC,GAzCE,MAyCQ0C,GAzCR,SA0C8BvuC,oBAAS,MA1CvC,sBA0CFwuC,GA1CE,MA0CSC,GA1CT,SA4C0BtuC,aAAQ,IAAnCC,GA5CC,GA4CDA,SAAUC,GA5CT,GA4CSA,aA5CT,GAgDUE,sBAAWtB,IAhDrB,MA8CPyB,UAAa4X,GA9CN,GA8CMA,MAAO7X,GA9Cb,GA8CaA,MACX1N,GA/CF,GA+CPhC,MAASgC,KA/CF,GAkD0B26B,aAAakZ,GAAmB,CACjEzQ,YAAa,sBAnDN,sBAkDF0Q,GAlDE,MAkDQC,GAlDR,SAsD+BpZ,aAAaghB,GAAY,CAC/DvY,YAAa,sBAvDN,sBAsDFwY,GAtDE,MAsDWC,GAtDX,MA0DT5nB,sBAAU,WACR,GAAI5E,GACEpkB,GAAW,CACb,IAAa,OAATA,SAAS,IAATA,QAAA,EAAAA,GAAWsZ,eAAyB,iBAATjlB,EAAyB,CAAC,IAAD,EAChD40C,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAWsZ,wBAD7B,aAAG,EAET,GACJilB,EAAe0K,GAEjB,IAAa,OAATjpC,SAAS,IAATA,QAAA,EAAAA,GAAW0Z,aAAuB,eAATrlB,EAAuB,CAAC,IAAD,EAC5C40C,EAAI,UAAG/Z,EAAUxmB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAW0Z,sBAD7B,aAAG,EAET,GACJiI,EAAasnB,OAIlB,CAACjpC,KAEJgpB,sBAAU,WACR,GAAI5E,GACEplB,IACW,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWsa,eAAyB,iBAATjlB,EAAyB,CAAC,IAAD,EAChD40C,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,QAAZ,IAAYA,OAAZ,EAAYA,EAAWsa,wBAD7B,aAAG,EAET,GACJilB,EAAe0K,MAIpB,CAACjqC,IAEJgqB,sBAAU,WAAO,IAAD,QACRra,GAAiB,OAATm6B,SAAS,IAATA,IAAA,UAAAA,GAAW5pC,YAAX,2DAAwCA,OAAQ,GACxDuQ,GAAqB,OAAXmhC,SAAW,IAAXA,IAAA,UAAAA,GAAa1xC,YAAb,oDAAmCA,OAAQ,GAE3D,GAAIyP,GAASA,EAAMxG,OAAS,EAAG,CAC7B,IAAM+gC,EAAMv6B,EAAMzH,KAAI,SAACg6B,GAAD,OAAaA,EAAGiI,UAChCC,EAAW5B,EAAiB9+B,QAAO,SAAC2gC,GAAD,OACvCH,EAAIr7B,SAASw7B,EAAI37B,QAGb47B,EAAiB36B,EAAMzH,KAAI,SAACvB,EAAWu8B,GAAgB,IAEzDqH,EAWE5jC,EAXF4jC,WACAhpB,EAUE5a,EAVF4a,aACAC,EASE7a,EATF6a,eACAlH,EAQE3T,EARF2T,aACAC,EAOE5T,EAPF4T,eACAC,EAME7T,EANF6T,iBACAC,EAKE9T,EALF8T,gBACAC,EAIE/T,EAJF+T,WACAC,EAGEhU,EAHFgU,aACAC,EAEEjU,EAFFiU,eACAC,EACElU,EADFkU,cAEIkoB,EAAOqH,EAAS1gC,QAAO,SAACs5B,GAAD,OAAaA,EAAGt0B,MAAQ/H,EAAKwjC,UAAQ,GAClE,OAAO,6BACFpH,GADL,IAEEwH,aACAhpB,eACAC,iBACAlH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAqoB,QACArB,UAAWl7B,EAAK6jC,UAChB7I,QAASh7B,EAAKzL,IACdunC,UAAW97B,EAAKkO,WAIpBy1B,EAAenqC,MAAK,SAAC6D,EAAQymC,GAAT,OAClBzmC,EAAE0mC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO1mC,EAAE0mC,MAAQ,EAAI,KAE/CzB,GAAaqB,GAEb,IAAM8B,EAAgB9D,GAAa73B,GACnC6gC,GAAelF,GACf1D,GAAW,MAEZ,CAACoB,GAAW8H,KAEf5nB,sBAAU,WACR,GAAI5E,EAAO,CAAC,IAAD,EACHlvB,EAAQ,IAAI4J,KACZ3J,EAAM,IAAI2J,KAOhB,GANA5J,EAAMkpD,WAAW,GACjBjpD,EAAI+hB,SAAS/hB,EAAIgZ,WAAa,GAC9BhZ,EAAIipD,WAAW,GACflO,EAAah7C,GACbi7C,EAAWh7C,GACXu4C,GAAS,UAACnwC,GAAYmL,QAAO,SAACyK,GAAD,OAAuB,IAAVA,EAAG/b,aAApC,aAAC,EAA+C,IAC5C,WAAT/C,EAAmB,CACrB,UAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOglB,aAAc,CAAC,IAAD,EACjB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOglB,wBADzB,aAAG,EAET,GACJilB,EAAe0K,GAEjB,UAAI30C,QAAJ,IAAIA,OAAJ,EAAIA,EAAOolB,WAAY,CAAC,IAAD,EACfuvB,EAAI,UAAG/Z,EAAUxmB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOolB,sBADzB,aAAG,EAET,GACJiI,EAAasnB,GAEf,UAAI30C,QAAJ,IAAIA,OAAJ,EAAIA,EAAOsiB,WAAY,CAAC,IAAD,EACfqyB,EAAI,UAAGjR,EAAUtvB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOsiB,sBADzB,aAAG,EAET,GACJ2xB,EAAaU,IAGjB,GAAa,eAAT50C,IACF,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOglB,cAAc,CAAC,IAAD,EACjB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOglB,wBADzB,aAAG,EAET,GACJilB,EAAe0K,OAIpB,CAAC/iC,IAEJ8iB,sBAAU,WACR4gB,OACC,CAAC5B,KAEJhf,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClBg6B,GAAW,GACXmB,GAAS,CAAE5lC,UAAW,CAAE4mC,KAAMt4B,EAAI7D,OAClCijC,GAAY,CAAE1tC,UAAW,CAAE4tC,QAASt/B,EAAIna,MACxCq5C,GAAY,OAACl/B,QAAD,IAACA,OAAD,EAACA,EAAKjE,OAClB,IAAMqyB,EAAQpuB,EAAI+H,aACZsmB,EAAQruB,EAAImI,WACZ2kC,EAAS9sC,EAAIqF,WACb0nC,EAAS/sC,EAAItS,OAMnB,GAJAixC,EAAY,OAAC3+B,QAAD,IAACA,OAAD,EAACA,EAAKrD,WAClBiiC,EAAU,OAAC5+B,QAAD,IAACA,OAAD,EAACA,EAAK/R,SAChBu+C,GAAQ,OAACxsC,QAAD,IAACA,OAAD,EAACA,EAAKgtC,OAEV5e,EAAO,CACT,IAAMb,EAAS3P,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,EAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,EAAake,GAEf,GAAIwe,EAAQ,CACV,IAAMvU,EAAO9R,EAAUtvB,QAAO,SAAC81C,GAAD,OAAaA,EAAG9wC,MAAQ2wC,KAAQ,GAC9D9V,EAAauB,GAEf,GAAIwU,EAAQ,CACV,IAAMG,EAAOlhD,GAAYmL,QAAO,SAACyK,GAAD,OAAaA,EAAG/b,KAAOknD,KAAQ,GAC/D5Q,GAAU+Q,OAGb,CAACltC,IAEJ,IA+CMq4B,GAAkB,WACtB,IACMK,EADWjC,GAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMzI,aAChC0I,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAEvDqnC,EADarC,GAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMxI,iBAC5ByI,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAWnEqlC,GARa,CACXiC,SAHaL,EAIbM,aAAcF,EACdG,WAAYH,EACZx2B,MAAOo2B,EACP32B,OAPa22B,EAQb5W,OAPa4W,EAAMI,KA2BjBvnC,GAAQ,yCAAG,+BAAAE,EAAA,2DACXkL,EAAY1O,GADD,gCAEP2e,GACJR,GACAlb,GAAQ,+FAAsB,yBAJnB,2CAQX,IAAI3D,KAAKoP,GAAWgB,YAAc,IAAIpQ,KAAKU,GAAS0P,UARzC,gCASPiP,GACJR,GACAlb,GAAQ,+FAAsB,yBAXnB,2CAgBVulC,IAAkC,IAArBA,GAAU7/B,OAhBb,kCAiBPgW,GACJR,GACAlb,GAAK,uTAnBM,0CA0BT87C,GAAa,OAALxwC,SAAK,IAALA,QAAA,EAAAA,GAAOuvC,KAAP,OAAavvC,SAAb,IAAaA,QAAb,EAAaA,GAAOuvC,SAAM34C,EAElC1B,EAAiB,CACrB7L,GAAIma,GAAOA,EAAIna,GAAKma,EAAIna,QAAKuN,EAC7B2I,MAAOkjC,GACPtiC,YACA1O,UACA8T,OAAQ80B,GAAO90B,OACfrU,OAAQA,GAASA,GAAO7H,GAAK,EAC7BuX,MAAO3b,KAAKyB,UAAUuzC,IACtBv4B,QAASzc,KAAKyB,UAAUuZ,IACxBuwC,QACAjjC,OAAQtb,GAAYA,GAAU5I,QAAKuN,EACnCgS,SAAU9W,EACN,CACE+W,WAAY/W,EAAU6N,IACtBqJ,aAAclX,EAAUxL,KACxByiB,eAAgBjX,EAAUhI,OAC1BwhB,cAAexZ,EAAUrG,OAE3B,CACEod,gBAAYjS,EACZoS,kBAAcpS,EACdmS,oBAAgBnS,EAChB0U,mBAAe1U,GAGrBsU,WAAYla,EACR,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEvBuU,SAAUla,EACN,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,MACzBygB,cAAe9a,EAAUxF,OAE3B,CACEkgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,EACfmV,mBAAenV,IAKvB24B,GAFelZ,EAAQI,EAAYC,EAErBxhB,GApFC,4CAAH,qDAuFRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACTy6B,KACA,MAAOz7B,GACP07B,GAAQ17B,GACR+X,QAAQC,IAAIhY,GANF,2CAAH,wDAUL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,GAASlb,IAFlB,6CAINsb,GAAWJ,GAASlb,IAJd,OAKZuX,QAAQC,IAAIhY,GALA,2CAAH,sDASPy7B,GAAc,WAxHlBwS,EAAa,MACbC,EAAW,MACX5H,EAAa,MACbhK,EAAe,MACf5c,EAAa,MACb+rB,GAAU,MACVqQ,GAAS,MACT9V,GAAa,IACbI,GAAU,IACViI,GAAe,IACfC,GAAY,MACZE,GAAa,MA+GblxB,KAOI7H,IAAU,OAAHnG,QAAG,IAAHA,OAAA,EAAAA,EAAKrD,WAAY,IAAIpP,KAAJ,OAASyS,QAAT,IAASA,OAAT,EAASA,EAAKrD,WAAa,IAAIpP,KACvDmQ,GAAG,OAAGhR,SAAH,IAAGA,QAAH,EAAGA,GAAcyZ,GAAKH,UAEzBjK,GAAQ7K,GACV2hB,EACE,oDACA,0DACFA,EACA,kBACA,mBACE6tB,GAA8B,KAAf1gC,EAAItS,SAAkBpI,EAE3C,OACE,eAACslC,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASme,GACTpwB,MAAOA,GACPxK,SAtBmB,WACrBT,GAAaS,GAAbT,IAsBExR,MAAOA,EACPurC,KAAMA,GACNp3B,GAAI,GACJ7S,SAAS,KACTu+B,QAAS54B,KAAO+c,KAAK,KACrB0W,GAAI,GAXN,SAaE,uCACE,eAACxmB,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,gBACGiiB,QADH,IACGA,OADH,EACGA,EAAKoJ,UAIV,gBAAC6M,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,SACE,gBAACuP,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMplB,MACbZ,MAAO4Z,EACP6G,SAAU,SAACwY,GAAD,OAAY2iB,EAAa3iB,IACnC9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMnlB,IACbb,MAAOkL,EACPuV,SAAU,SAACwY,GAAD,OAAY4iB,EAAW5iB,IACjC9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC6D,GAAD,CACEjnB,WAAW,EACXhQ,KAAK,YACLiQ,MAAOgW,GAAMhN,MACbhZ,MAAOk8C,GACPz7B,SAAU,SAACpR,GAAD,OAAY8sC,GAAa9sC,EAAEk6B,OAAOvpC,QAC5Cid,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,EACT1jC,MAAOuL,EACPqhB,eAAgBqnB,EAChBpnB,eAAgB08B,GAChBz8B,YAAaw8B,GACbv8B,SAAUy8B,GACV17C,SAAUA,GACVK,MAAOA,GACPgC,WAAS,EACTub,WAAS,EACT6B,SAAmB,eAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,OACLiZ,MAAOgN,GAAM9e,KACb8e,MAAOA,GACP2G,QAASvL,EACTphB,MAAO0L,GACPkhB,eAAgBsnB,GAChBpmC,SAAUA,GACVK,MAAOA,GACPgC,WAAS,EACTod,SAAmB,WAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbje,SAAUud,EACVx8B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAKA,GACL4S,SAAmB,eAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,EAAYzmB,QACnB,SAACwiC,GAAD,OAA4B,IAAfA,EAAGlP,WAElB1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBie,EAChBhe,YAAa+d,EACb9d,SAAUge,EACVj9B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTod,SAAmB,iBAATxtB,WAKlB,gBAACmzB,GAAA,EAAD,CACE7hB,MAAI,EACJ8hB,GAAI,EACJ5iB,MAAO,CACLxT,gBAAiB,OACjBuf,aAAc,GALlB,UAQE,eAAChM,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLyX,aAAc,GACdtsB,SAAU,GACVszB,SAAU,IAEZxe,QAAS,WACPyrC,GAAY,MACZF,IAAc,IATlB,SAYG5tC,GAAQ,gEAAgB,iBAE3B,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,IAAKizB,SAAU,QAAvC,SACGnX,GAAY9G,KAAI,SAAC8pC,GAChB,OACE,gBAAC5qC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAAS8lB,GAAoB,CAAE7E,IAAKy/B,IACpCxgD,UAAW6hB,GAAqB2+B,EAAIzhC,SAAU9M,MAEhD,eAAC4Z,GAAA,EAAD,CACEvX,QAAS,kBAxUJ,SAACa,GAC5B,IAAMsrC,EAAUjjC,GAAYtF,QAAO,SAACwoC,GAAD,OAAaA,EAAGhP,QAAUv8B,EAAKu8B,SAC5DkJ,EAAgB9D,GAAa2J,GACnCX,GAAelF,GAqUsB+F,CAAqBH,IACpC1jC,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAHpB,SAKE,eAAC,KAAD,CACEkV,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAGlC,eAACgjB,GAAA,EAAD,CACExX,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyrC,GAAYS,GACZX,IAAc,IAEhB/iC,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,+BAUhD,gBAACmuB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,IACzB,gBAAC+T,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACX6f,aAAc,IALlB,UAQE,eAAC7L,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACovC,GAAD,CACEpf,QAASumB,EACTlH,QAzZM,SAAC36B,GACrB,IAAMwlC,EAAQ,uBAAOnD,IAAP,8BAAuBriC,GAAvB,IAA6B03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,GAAamD,IAuZC9wB,MAAOA,GACP4U,UAAWA,EACXC,YAAaA,EACbptB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTglC,GACA,eAAC7E,GAAD,CACEjf,KAAMqkB,GACNnF,SAhaO,SAACl9B,GACtB,IAAMwlC,EAAWnD,GAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,GAAamD,IAwZC72C,WArZW,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,IACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,GAAamD,IAkZC3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,KAGT0yC,GAAW,eAAC,GAAD,OAEd,gBAACjgB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACvjB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGsqB,GAAMzG,MADT,MACmBR,GAAY+0B,GAAO90B,aAIxC,eAACkU,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC1iB,GAAA,EAAD,UACE,eAACo5B,GAAD,CACE9pC,KAAK,SACLiZ,MAAOgN,GAAMrb,OACbqb,MAAOA,GACP2G,QAAS1jB,GACTjJ,MAAO2K,GACPiiB,eAAgBwsB,GAChBlsB,QAAM,EACN/e,MAAOA,GACPlR,MAAO,UAIb,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACIrD,GACA,eAACrf,GAAA,EAAD,CACEmX,EAAG,EACHjrB,QAAQ,OACR4T,MAAO,CAAE9S,KAAM,EAAG4e,eAAgB,YAHpC,SAKE,eAAC/L,GAAA,EAAD,CACErW,KAAK,SACL8K,MAAM,UACN/J,QAAQ,WACRwV,QAAS,kBAAMq5C,IAAe,IAC9Bt8B,SAAUowB,GALZ,SAOG33B,GAAM+W,uBAOnB,eAAC7J,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,OAEjB,eAAC,GAAD,CACEvhB,KAAM83C,GACNz+B,QAAS,kBAAM0+B,IAAa,IAC5Bn7C,SAAUi7C,GACVltD,MAAOA,EACP4R,MAAOA,GACP6X,MAAOA,KAET,eAAC,GAAD,CACEpU,KAAMg4C,GACN3+B,QAAS,kBAAM4+B,IAAe,IAC9B9M,QAAS9/B,EACTkgB,SAAU+V,EACV7yB,UAAW8P,EACXwhB,QAASA,EACTp1C,MAAOA,EACP8d,MAAOq5B,KAET,eAAC,GAAD,CACE9hC,KAAMkqC,GACN7wB,QAAS,kBAAM8wB,IAAc,IAC7B9+B,IAAKs8B,GACLzpB,OAAOypB,GACPrpB,UA1dgB,SAAC7e,GACvB,IAAMwlC,EAAQ,uBAAOn9B,IAAP,CAAoBrI,IAC5BylC,EAAgB9D,GAAa6D,GACnCmF,GAAelF,IAwdT3mB,WAtdiB,SAAC9e,GACxB,IAAMwlC,EAAWn9B,GAAY9G,KAAI,SAACg6B,GAChC,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnCmF,GAAelF,IA8cTv6C,MAAOA,EACP0K,MAAK,6BAAOgW,GAAP,IAAYrD,YAAW1O,oBC9uBzB4a,GAAW,SAAC7I,GAAD,OAAcA,EAAI7D,KAEpC40B,GAAqB,SAACj0C,GAAD,OACzB,eAAC,KAAD,cACEg0C,mBAAoB,gBAAG/tC,EAAH,EAAGA,MAAH,OAClB,eAAC4P,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiCyqB,OAAOzlB,GAAS,MAE/CjG,KAgBKk0C,GAAiBC,cAZf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,SASP,CAAE8D,KAAM,kBAA3BmuC,EAJH,SAAC,GAAD,IAAGzgC,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAMC,MAAP,6BAAiBD,GAAjB,IAA4B1+B,UAAWjC,EAAQ0gC,mBAOlC,SAASic,GAAT,GAcN,IAbPj8C,EAaM,EAbNA,MACA6X,EAYM,EAZNA,MACAzjB,EAWM,EAXNA,SACAq4B,EAUM,EAVNA,UACAC,EASM,EATNA,YACA6I,EAQM,EARNA,UACAwP,EAOM,EAPNA,iBACA32C,EAMM,EANNA,MACAuG,EAKM,EALNA,GACA/C,EAIM,EAJNA,KACA+vB,EAGM,EAHNA,MACA6hB,EAEM,EAFNA,QACA3xC,EACM,EADNA,MACM,EACwB0N,qBAAS,GADjC,oBACCylC,EADD,KACUC,EADV,KAEA5nB,EAAMzF,GAAW,CAAE5X,QAAO6X,UAF1B,EAIYtY,oBAAS,CACzB,CAAE5K,GAAI,EAAGyE,IAAK,QAASxH,KAAM,QAASiZ,MAAOgN,EAAMhN,OACnDwS,EAAI5R,UACJ4R,EAAIvE,OACJuE,EAAInF,MACJmF,EAAI7G,WACJ6G,EAAI5G,SACJ4G,EAAI7gB,OACJ6gB,EAAItE,KACJsE,EAAIxM,SATCwvB,EAJD,qBAeEptB,EAAUiyB,KAAVjyB,MAfF,EAgBkB1T,oBAAS,IAhB3B,oBAgBC2hB,EAhBD,KAgBOuvB,EAhBP,KAkBA3B,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAO2uB,GACP17C,UAAU,gBAAI5O,EAAO+C,IAEvB,CACE44B,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAlCP,EAuC+BD,aAAaivB,GAAiB,CACjExmB,YAAa,sBAxCT,oBAuCCgb,EAvCD,KAuCYK,EAvCZ,KA2CNxqB,sBAAU,WACR,IAAM/lB,EAAS,gBAAM5O,EAAO+C,GAC5B+7C,EAAU,CAAElwC,gBACX,CAAC7L,IAEJ4xB,sBAAU,WAAO,IAAD,IACR9pB,EAAI,OAAGs0C,QAAH,IAAGA,GAAH,UAAGA,EAAYt0C,YAAf,iBAAG,yBAAH,aAAG,EAAuCA,KAChDA,GACFwoC,GAAW,GAGbwL,EADeh0C,GAAQ,MAEtB,CAACs0C,IAvDE,MAyDa7wC,aAAYywC,GAAa7B,GAArCx4B,EAzDD,uBA0DcpW,aAAYuS,GAAaq8B,GAAtC58B,EA1DD,uBA2DoBhS,aAAYi8C,GAAiBrN,GAAhDsN,EA3DD,qBA6DA7b,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpB+lC,EAAgB,CAAE57C,UAAW,CAAEyK,SAC/BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAQnB,OACE,gBAAC4Z,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV12B,OAAQ,GACRy0C,UAAW,KALf,UAQGuE,GAAW,eAAC,GAAD,IAEX9jB,GACC,gBAAC,KAAD,CAAMA,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAC/B,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQ,IACR4jC,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,GACpBjY,eAAgBf,KAElB,eAAC,KAAD,CACEgB,IAAK,CAAC,aACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,UACNlB,mBAAoBtvB,KAEtB,eAAC,KAAD,CACEwwB,IAAK,CAAC,UACNlB,mBAAoBnvB,KAEtB,eAAC,KAAD,CACEqwB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,QACNlB,mBAAoB,SAACh0C,GAAD,OAClBqmB,GAAc,6BAAKrmB,GAAN,IAAasmB,kBAG9B,eAAC,GAAD,CAAoB4uB,IAAK,CAAC,WAC1B,eAAC,KAAD,CAAgBiY,qBAAmB,IAElC3kD,IAAautB,GACZ,eAAC,KAAD,CACEqf,iBAAe,EACfD,kBAAmB7f,GAAQA,EAAKxb,OAAS,EACzCuzC,gBAAc,EACdhY,iBAAkBjnB,KAItB,eAAC,GAAD,CAAc+H,UAAWzL,EAAU0L,WAAY9P,EAA/C,SACE,eAAC,GAAD,CACEua,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXwP,iBAAkBA,EAClB32C,MAAOA,EACPo1C,QAASA,EACTpvC,SAAUA,EACV6e,MAAOA,EACPrhB,KAAMA,EACNC,MAAOA,MAIX,eAAC,KAAD,CACED,KAAK,eACLsvC,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aAWX,MAVY,CACV,CACE7b,IAAK,cACLryB,KAAMmuC,KAAgBC,YACtBvyC,MAAO6yB,EAAQ,GAAK,MAJZ,oBAMPwf,EAAal7B,QACd,SAACq7B,GAAD,OAAYA,EAAEruC,OAASmuC,KAAgBC,0B,yBCrOnDvsC,GAAO,eAAC,KAAD,CAA0BvH,SAAS,UAC1CisD,GAAc,eAAC,KAAD,CAAcjsD,SAAS,UAE5B,SAAS8uD,GAAT,GASN,IARP79B,EAQM,EARNA,QACA3sB,EAOM,EAPNA,MACAm+C,EAMM,EANNA,SACAn4B,EAKM,EALNA,MACA7X,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MAEM,IADN4qD,eACM,SACN,OACE,eAACr6B,GAAA,EAAD,CACEvzB,KAAK,QACL6tD,UAAWD,EACXl7B,QAASA,EACTo7B,sBAAoB,EACpBC,iBAAe,EACfyC,UAAW,EACXh9B,eAAgB,SAACC,GAAD,OAAkBvf,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,MACjEwQ,MAAO,CAAElV,QAAS,IAClBwyB,aAAc,SAACH,EAAD,OAAW6rB,EAAX,EAAWA,SAAX,OACZ,gBAAC9oC,GAAA,EAAD,CACEF,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BxR,QAAS,OACTc,KAAM,EACNZ,WAAY,UALhB,WAQIgrD,GACA,eAACvnC,GAAA,EAAD,CACErd,KAAMA,GACN0kD,YAAaA,GACbp3C,MAAO,CAAEnV,YAAa,GACtBolB,QAAS+4B,IAGZprC,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,SAGpCC,MAAOA,EACPygB,SAAU,SAACrhB,EAAG0uB,GACZqwB,EAASrwB,IAEXG,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEmB,KAAM,EACNoa,QAAS,EACT3mC,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOgW,EAAMjmB,GACb/E,QAAQ,WACRuV,MAAO,CACL2Q,WAAY,OACZjkB,MAAOA,GAAgB,IACvB7B,YAAa,EACbD,WAAY,EACZ4B,iBAAsB,OAALiD,QAAK,IAALA,OAAA,EAAAA,EAAO6T,QAAS,EAAI,eAAYxD,EACjD3U,SAAU,GACVvB,OAAQ,EACRkB,QAAS,S,yBCtDN,SAASqvD,GAAT,GAuBN,IAtBPhgD,EAsBM,EAtBNA,UACA2iB,EAqBM,EArBNA,aACA/hB,EAoBM,EApBNA,aACAq/C,EAmBM,EAnBNA,gBACAlgD,EAkBM,EAlBNA,YACAw/B,EAiBM,EAjBNA,eACA1+B,EAgBM,EAhBNA,UACA0oC,EAeM,EAfNA,aACAhnC,EAcM,EAdNA,SACAmU,EAaM,EAbNA,MACA1V,EAYM,EAZNA,UACAwoC,EAWM,EAXNA,aACAtZ,EAUM,EAVNA,UACAC,EASM,EATNA,YACAsC,EAQM,EARNA,SACAuG,EAOM,EAPNA,UACAnkB,EAMM,EANNA,MACAyG,EAKM,EALNA,MACA7X,EAIM,EAJNA,MACAsN,EAGM,EAHNA,cACAmvC,EAEM,EAFNA,MACAC,EACM,EADNA,SACM,EACsCl5C,KAAMjE,SAAS,IADrD,oBACCo9C,EADD,KACiBC,EADjB,OAE4Cp5C,KAAMjE,SAAS,IAF3D,oBAECs9C,EAFD,KAEoBC,EAFpB,OAG0Ct5C,KAAMjE,SAAS,IAHzD,oBAGCw9C,EAHD,KAGmBC,EAHnB,OAIsCx5C,KAAMjE,SAAS,IAJrD,oBAIC09C,EAJD,KAIiBC,EAJjB,OAKsC15C,KAAMjE,SAAS,IALrD,oBAKC49C,EALD,KAKiBC,EALjB,OAMwC55C,KAAMjE,SAAS,IANvD,oBAMC89C,EAND,KAMkBC,EANlB,OAQkB95C,KAAMjE,UAAS,GARjC,oBAQCkE,EARD,KAQOC,EARP,OASsBF,KAAMjE,SAAc,SAT1C,oBASCg+C,EATD,KASSC,GATT,KAWNj3B,sBAAU,YACK,IAAT9iB,IACFm5C,EAAkBrgD,GAClBugD,EAAqB3/C,GACrB6/C,EAAoB1gD,GACpB4gD,EAAkB9/C,GAClBggD,EAAkB7/C,GAClB+/C,EAAmBb,MAEpB,CAACh5C,IAEJ,IASMg6C,GAAc,WAClB/5C,GAAQ,IAgBJg6C,GAAwBl6C,KAAM44B,OAAoB,MACxD54B,KAAM+iB,WAAU,WACd,GAAI9iB,EAAM,CAAC,IACQk6C,EAAuBD,GAAhCz9B,QACmB,OAAvB09B,GACFA,EAAmB7e,WAGtB,CAACr7B,IAEJ,IAfyBm6C,GAwBnB13C,GAAKu2C,GAAgB,GACrBoB,GAAe,uBAChBthD,GADgB,aAEhBY,GAFgB,aAGhBb,GAHgB,aAIhBc,GAJgB,aAKhBG,GALgB,aAMhB2I,IANgB,CAOnBpH,QAAsBoD,IACtB+D,QAAO,SAAC63C,GAAD,OAAYA,KAErB,OACE,gBAACx7C,GAAA,EAAD,CACEF,MAAO,CACL1T,WAAY,SACZwf,eAAgB,SAChBlhB,WAAY,GACZC,YAAa,GACbG,UAAW4S,EAAQ,MAAQ,MAC3B1R,UAAW,EACXmB,OAAQ,IARZ,UAWE,eAAC0S,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRX,MAAO,IACPF,gBACEivD,GAAan4C,OAAS,GAAK5G,EAAW,eAAYoD,GAEtDG,SAvDmBu7C,GAuDM,QAvDc,WAC3Cl6C,GAAQ,GACR85C,GAAUI,MA6CR,SAUE,gBAACt7C,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZwf,eAAgB,iBANpB,UASE,eAACzM,GAAA,EAAD,CAAYW,MAAO,GAAIvV,QAAQ,SAA/B,SACGmT,EAAK,wDACY69C,GAAan4C,OADzB,0BAEYm4C,GAAan4C,OAFzB,OAIR,eAACkU,GAAA,EAAD,CACExX,MAAO,CAAEnV,YAAa,GAAI6B,MAAO,GAAIW,OAAQ,IAC7C4S,QAlFa,WAXrBu6C,EAAkB,IAClBE,EAAqB,IACrBE,EAAoB,IACpBE,EAAkB,IAClBE,EAAkB,IAClBE,EAAmB,IAQnBp+B,EAAa,IACbs9B,EAAgB,IAChB1gB,EAAe,IACfgK,EAAa,IACbC,EAAa,IACb2W,EAAS,KAyEH,SAIE,eAAC,KAAD,WAIN,gBAAC1/B,GAAA,EAAD,CACEvZ,KAAMA,EACNqZ,QAAS2gC,GACTF,OAAQA,EACRrjB,kBAAgB,sBAChBD,mBAAiB,4BALnB,UAOE,eAAC8jB,GAAA,EAAD,CACEppD,GAAG,sBACHyN,MAAO,CAAEhV,UAAW4S,EAAQ,MAAQ,MAAOpR,gBAAiB,QAF9D,SAIGoR,EAAK,wDACY69C,GAAan4C,OADzB,0BAEYm4C,GAAan4C,OAFzB,OAIR,eAACy0B,GAAA,EAAD,CACE/3B,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,IAAKrC,UAAW4S,EAAQ,MAAQ,OAC7Do6B,SAAqB,UAAXmjB,EAFZ,SAIE,eAACj7C,GAAA,EAAD,UACE,gBAACA,GAAA,EAAD,WACGgL,GACC,eAAC+uC,GAAD,CACE79B,QAASlR,EACTzb,MAAOwrD,EACPrN,SAAUsN,EACVzlC,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,OACL9C,MAAO,MAGX,eAACutD,GAAD,CACE79B,QAASiO,EACT56B,MAAO8qD,EACP3M,SAAU4M,EACV/kC,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,WACL9C,MAAO,MAET,eAACutD,GAAD,CACE79B,QAASkO,EACT76B,MAAOkrD,EACP/M,SAAUgN,EACVnlC,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,aACL9C,MAAO,MAERmkB,GAASA,EAAMvN,OAAS,GACvB,eAAC22C,GAAD,CACE79B,QAASvL,EACTphB,MAAOsrD,EACPnN,SAAUoN,EACVvlC,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,OACL9C,MAAO,MAGVqO,GAAgBA,EAAauI,OAAS,GACrC,eAAC22C,GAAD,CACE79B,QAASwQ,EACTn9B,MAAOgrD,EACP7M,SAAU8M,EACVjlC,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,iBACL9C,MAAO,MAGX,eAACutD,GAAD,CACE79B,QAAS+W,EACT1jC,MAAOorD,EACPjN,SAAUkN,EACVrlC,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,WACL9C,MAAO,MAGRsiB,GAASA,EAAM1L,OAAS,GACvB,eAACpD,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZwf,eAAgB,YALpB,SAQE,eAAC5L,GAAA,EAAD,CAAKF,MAAO,CAAEnV,YAAa,GAAID,WAAY,IAA3C,SACE,gBAACyU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,UACGgrB,EAAMzG,MADT,KACkBR,GAAYQ,EAAM,GAAGA,qBAQnD,gBAACipB,GAAA,EAAD,CACEj4B,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiB,UACjBa,OAAQ,GACRf,WAAY,SACZwf,eAAgB,gBANpB,UASE,eAAC/L,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,IAC7B5C,QAAQ,YACRwV,QAjLO,WACf6c,EAAay9B,GACbH,EAAgBK,GAChB/gB,EAAeihB,GACfjX,EAAamX,GACblX,EAAaoX,GACbT,EAASW,GACT35C,GAAQ,IA2KA9M,MAAM,UAJR,SAMGoJ,EAAQ,iCAAU,WAErB,eAACmC,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,IAC7B5C,QAAQ,YACRwV,QAASo7C,GACT7mD,MAAM,UAJR,SAMGoJ,EAAQ,iCAAU,oB,iCC1RlBg+C,GAAwB,SAAC,GAK1B,IAJVx/B,EAIS,EAJTA,QACA3sB,EAGS,EAHTA,MACAygB,EAES,EAFTA,SACAtS,EACS,EADTA,MAEA,OACE,eAAC6lB,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEnxB,GAAG,cACH9C,MAAOA,EACPygB,SAAUA,EACVzlB,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRX,MAAO,IACPo2B,UAAW,WACX33B,SAAU,GACVwlB,WAAY,OACZnc,MAAO,QAXX,SAcG4nB,EAAQ/Z,KAAI,SAACvB,GACZ,OACE,eAAC,KAAD,CAEEd,MAAO,CAAE8L,eAAgBlO,EAAQ,WAAa,cAC9CnO,MAAOqR,EAAKrR,MAHd,SAKGqR,EAAKtR,MAJDsR,EAAKvO,YCRT,SAASspD,GAAT,GAgBN,IAfP/3B,EAeM,EAfNA,SACAC,EAcM,EAdNA,OACA/pB,EAaM,EAbNA,YACAD,EAYM,EAZNA,gBACAypB,EAWM,EAXNA,kBACAQ,EAUM,EAVNA,sBAEArpB,GAQM,EATNmhD,gBASM,EARNnhD,SACAohD,EAOM,EAPNA,cACAn+C,EAMM,EANNA,MACA6X,EAKM,EALNA,MACAzpB,EAIM,EAJNA,MACAu3B,EAGM,EAHNA,MAGM,IAFN/uB,aAEM,MAFExI,EAAMR,QAAQC,QAAQC,KAExB,MADNmgC,eACM,MADIlrB,aAAK3U,EAAMR,QAAQC,QAAQkX,KAAM,KACrC,IAC8BxF,oBAAS,IADvC,oBACC8mB,EADD,KACaC,EADb,OAEoC/mB,oBAAS,IAF7C,oBAEC6+C,EAFD,KAEgBC,EAFhB,OAIuB9+C,qBAAS,GAJhC,oBAICkE,EAJD,KAIOC,EAJP,OAK6BnE,qBAAS,GALtC,oBAKC++C,EALD,KAKUC,EALV,KAONh4B,sBAAU,WAAO,IAAD,EACiChS,GAAqB,CAClElF,KAAMjT,EACNoY,KAAMrY,EACN6D,QACAjD,YAJMtK,EADM,EACNA,MAAOC,EADD,EACCA,IAAKgiB,EADN,EACMA,OAAQQ,EADd,EACcA,UAO5BgR,EAASzzB,GACT0zB,EAAOzzB,GACP4zB,EAAc5R,GACd2pC,EAAiBnpC,KAChB,CAAC9Y,EAAaD,EAAiBY,IAElC,IAAMypB,EAAc,WAClB,GAAwB,QAApBrqB,EAA2B,CAC7B,IAAMsqB,EAAW,IAAIpqB,KAAKD,GAC1BqqB,EAAS7R,QAAQ6R,EAASha,UAAY,GACtCmZ,EAAkBa,QACb,GAAwB,UAApBtqB,EAA6B,CACtC,IAAMuqB,EAAY,IAAIrqB,KAAKD,GAC3BsqB,EAAU9R,QAAQ8R,EAAUja,UAAY,GACxCmZ,EAAkBc,QACb,GAAwB,SAApBvqB,EAA4B,CACrC,IAAMwqB,EAAW,IAAItqB,KAAKD,GAC1BuqB,EAAS/R,QAAQ+R,EAASla,UAAY,GACtCmZ,EAAkBe,QACb,GAAwB,UAApBxqB,EAA6B,CACtC,IAAMyqB,EAAY,IAAIvqB,KAAKD,GAC3BwqB,EAAU/Q,SAAS+Q,EAAUra,WAAa,GAC1CqZ,EAAkBgB,QACb,GAAwB,SAApBzqB,EAA4B,CACrC,IAAM0qB,EAAW,IAAIxqB,KAAKD,GAC1ByqB,EAASC,YAAYD,EAASlkB,cAAgB,GAC9CijB,EAAkBiB,KAGhBE,EAAe,WACnB,GAAwB,QAApB5qB,EAA2B,CAC7B,IAAM6qB,EAAY,IAAI3qB,KAAKD,GAC3B4qB,EAAUpS,QAAQoS,EAAUva,UAAY,GACxCmZ,EAAkBoB,QACb,GAAwB,UAApB7qB,EAA6B,CACtC,IAAM8qB,EAAY,IAAI5qB,KAAKD,GAC3B6qB,EAAUrS,QAAQqS,EAAUxa,UAAY,GACxCmZ,EAAkBqB,QACb,GAAwB,SAApB9qB,EAA4B,CACrC,IAAM+qB,EAAW,IAAI7qB,KAAKD,GAC1B8qB,EAAStS,QAAQsS,EAASza,UAAY,GACtCmZ,EAAkBsB,QACb,GAAwB,UAApB/qB,EAA6B,CACtC,IAAMgrB,EAAY,IAAI9qB,KAAKD,GAC3B+qB,EAAUtR,SAASsR,EAAU5a,WAAa,GAC1CqZ,EAAkBuB,QACb,GAAwB,SAApBhrB,EAA4B,CACrC,IAAMirB,EAAW,IAAI/qB,KAAKD,GAC1BgrB,EAASN,YAAYM,EAASzkB,cAAgB,GAC9CijB,EAAkBwB,KAIhBhI,EAAWiI,KAAO,IAAIhrB,MAAQirB,OAAOlrB,EAAa,OAExD,OACE,gBAACkG,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,aAChBjhB,YAAa,GACbD,WAAY,GACZ6zB,SAAU,KAPd,UAUE,eAACgD,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,eAAC5hB,GAAA,EAAD,CACEC,MAAO,CACL3S,OAAQ,GACRX,MAAO,GACP5B,QAAS,EACTlB,OAAQ,EACRgB,WAAY,EACZ4B,gBAAiBq/B,GAEnBniC,KAAK,QACLszB,SAAUA,EACV/c,QAAS,WACPujB,EAAkB,IAAIvpB,MACtB8hD,EAAc,IAAI9hD,OAbtB,SAgBE,eAACoF,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOwoB,EAAW,OAASxoB,GAJ/B,SAOGoJ,EAAQ,2BAAS,YAKxB,eAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC,GAAD,CACE2N,gBAAiBA,EACjBmW,SAAU8T,EACVR,kBAAmBA,EACnB5lB,MAAOA,EACP6X,MAAOA,EACP8N,MAAOA,MAGX,gBAACrjB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,iBAJpB,UAOuB,WAApB/R,GACC,gBAAC,KAAMmiB,SAAP,WACE,gBAAC1E,GAAA,EAAD,CACEhjB,MAAM,UACNwL,MAAO,GACPC,QAASrC,EAAQwmB,EAAcO,EAHjC,UAKG/mB,GACC,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,WAGhCoJ,GACA,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,aAIpC,gBAACgjB,GAAA,EAAD,CACEhjB,MAAM,UACNwL,MAAO,CAAEpV,WAAY,IACrBqV,QAASrC,EAAQ+mB,EAAeP,EAHlC,UAKGxmB,GACC,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,WAGhCoJ,GACA,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,gBAMxC,eAACuL,GAAA,EAAD,CACEC,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,GACR34B,gBAAiB,OACjBa,OAAQ,IAEV4S,QAAS,kBAAMqB,GAAQ,IAPzB,SASE,eAACjC,GAAA,EAAD,CAAY7K,MAAM,UAAU/J,QAAQ,SAApC,SACGw5B,MAGgB,WAApBlqB,GACC,eAACgG,GAAA,EAAD,CACEC,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,GACR34B,gBAAiB,OACjBa,OAAQ,GACRxC,YAAa,IAEfoV,QAAS,kBAAMk8C,GAAW,IAR5B,SAUE,eAAC98C,GAAA,EAAD,CAAY7K,MAAM,UAAU/J,QAAQ,SAApC,SACGuxD,MAIP,gBAAC,KAAD,CACE52B,OAAQxnB,EAAQynB,KAAWC,KAC3BC,MAAOC,KAFT,UAIE,eAACC,GAAA,EAAD,CACEC,QAAM,EACNj7B,QAAQ,SACRk7B,aAAa,WACbC,OAAO,aACPh8B,OAAO,QACP2I,GAAG,qBACH9C,MAAOuK,EACPkW,SAAUsT,EACVniB,KAAMA,EAENqZ,QAAS,kBAAMpZ,GAAQ,IACvBukB,eACEjoB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJkoB,cACEloB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJoC,MAAO,CACLhV,UAAW,MACXwlB,SAAU,WACV8H,KAAM1a,EACkB,WAApB7D,EACE,IACA,QACF+F,EACJ4Q,MAAO9S,OACHkC,EACoB,WAApB/F,EACA,IACA,GACJ0W,OAAQ,GACR0U,QAAS,GACTj5B,UAAW,EACXmB,OAAQ,EACRvC,QAAS,EACTlB,OAAQ,EACR8C,MAAO,KAGU,WAApBqN,GACC,eAAC0rB,GAAA,EAAD,CACEC,QAAM,EACNj7B,QAAQ,SACRk7B,aAAa,WACbC,OAAO,aACPh8B,OAAO,QACP2I,GAAG,qBACH9C,MAAOkL,EACPuV,SAAU6rC,EACV16C,KAAM66C,EACNxhC,QAAS,kBAAMyhC,GAAW,IAC1BC,QAASpiD,EACT6rB,eACEjoB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJkoB,cACEloB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJoC,MAAO,CACLhV,UAAW,MACXwlB,SAAU,WACV8H,KAAM1a,EAAQ,QAAKkC,EACnB4Q,MAAO9S,OAAQkC,EAAY,GAC3B2Q,OAAQ,GACR0U,QAAS,GACTj5B,UAAW,EACXmB,OAAQ,EACRvC,QAAS,EACTlB,OAAQ,EACR8C,MAAO,cCpQvB,IAQM2vD,GAAqB,SAAC,GAAD,IAAGn/C,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,iBAE3CF,GAAiBC,cAXf,SAAC3xC,GAAD,MAAiB,CAC9B4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,CAC5B0e,IAEWC,GAAkB3e,aAC7B,GACA,CAAEnuC,KAAM,kBAFqBmuC,CAG7B0e,IAEa,SAASE,GAAT,GAQN,IAPP3+C,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAxU,EAKM,EALNA,SACA2rB,EAIM,EAJNA,SACAwU,EAGM,EAHNA,QACAp1C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQyzB,EADR,OAEgB3mB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMyzB,EAFN,OAIkB5mB,oBAAS,IAJ3B,oBAIC2hB,EAJD,KAIOuvB,EAJP,OAKiClxC,oBAAS,IAL1C,oBAKCq/C,EALD,KAKYC,EALZ,OAMyBt/C,oBAAS,MANlC,oBAMC6R,EAND,KAMQ0tC,EANR,OAOiCv/C,oBAAS,MAP1C,oBAOCw/C,EAPD,KAOYC,EAPZ,KASA3hC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAT1B,EAWoCtY,oBAAS,CACjD8d,EAAIpF,OACJoF,EAAI5G,SACJ4G,EAAIjF,QACJiF,EAAI7G,WACJ6G,EAAIxE,OACJwE,EAAInJ,SACJmJ,EAAIlF,QACJkF,EAAIxM,SAnBA,oBAWCouC,EAXD,KAWgBC,EAXhB,OAsBY3/C,oBAAS,CACzB8d,EAAIpF,OACJoF,EAAI5G,SACJ4G,EAAIjF,QACJiF,EAAI7G,WACJ6G,EAAIxE,OACJwE,EAAInJ,SACJmJ,EAAIlF,QACJkF,EAAIxM,SARCwvB,EAtBD,uBAiC0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,GAChD,CAAExiD,WAAY0gB,EAAIxM,OAAOjf,KAAMutD,iBAAiB,KAF3CC,EAjCD,uBAsCiCnyB,aAAaoyB,GAAkB,CACpE3pB,YAAa,sBAvCT,oBAsCC4pB,EAtCD,KAsCaC,EAtCb,KAyCEhqB,EAAcgR,KAAdhR,UACA7I,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UA3CF,EA6DF3sB,sBAAWlB,IA7DT,IA6CJ7L,MACEqJ,EA9CE,EA8CFA,YACAD,EA/CE,EA+CFA,gBACAY,EAhDE,EAgDFA,QACAI,EAjDE,EAiDFA,aACAb,GAlDE,EAkDFA,YACAC,GAnDE,EAmDFA,UACAa,GApDE,EAoDFA,UACAG,GArDE,EAqDFA,UACAE,GAtDE,EAsDFA,MACAD,GAvDE,EAuDFA,QACAE,GAxDE,EAwDFA,UACAhB,GAzDE,EAyDFA,KACAoC,GA1DE,EA0DFA,SAEFiB,GA5DI,EA4DJA,SAEMkT,GAAUiyB,KAAVjyB,MA4BFusC,GAAqB,SAAC3tD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpC4tD,GAAmB,SAAC5tD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KAYxC00B,sBAAU,WAAO,IAAD,IACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyCA,OAAQ,GAC3DkjD,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASh6C,QAAS,EACdg6C,EAAQj7C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEE2N,OAAQ+C,GAAgB1Q,QAG5B,GAEN,GADAutC,EAAQkP,GACJliD,GAAO,CACT,IAAMsN,EAAMoa,GAAc,CACxB5P,KAAMoqC,EACN/tD,KAAM8L,KAERshD,EAAaj0C,GAGf,IAAIy8B,EAAM,EACVmY,EAAYC,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UAC1CiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAuB7DqkB,sBAAU,YAnBQ,WAChB,IAJkBhR,EAIZ/U,EAAY,CAChBu/C,SAAU,GACVjhD,YACAkhD,WAAYH,GAAO1iD,GACnB8iD,cAAeJ,GAAOvjD,IACtB4jD,YAAaL,GAAOtjD,IACpB4jD,YAAaN,GAAOziD,IACpBgjD,SAXgB7qC,EAWIhY,GAVtBgY,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGnrD,WAAMuN,GAWxDzP,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,MAEtC6qC,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,GAAI9oB,QACG,CACL,IAMMmjD,EANW3vD,KAAEwnC,QACjBvX,EACA,CAACxkB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGtP,YAGgBqX,KAAI,SAACqK,GAC9B,MAAO,CACLmJ,OAAQyoC,GAAgB,UACpB5xC,EAAIqJ,QACF/I,GAAaN,EAAImJ,QACjB,WACF/V,EACJiW,QAASuoC,GAAgB,WACrB5xC,EAAIqJ,QACFrJ,EAAIqJ,QACJ,WACFjW,EACJuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,MACfkd,EAAIuO,EAAI5G,SAAS7kB,MACjB,WACFsQ,EACJkW,QAASsoC,GAAgB,WACrB5xC,EAAIuO,EAAIjF,QAAQxmB,MACdkd,EAAIuO,EAAIjF,QAAQxmB,MAChB,WACFsQ,EACJsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,MACjBkd,EAAIuO,EAAI7G,WAAW5kB,MACnB,WACFsQ,EACJmW,SAAUqoC,GAAgB,YACtB5xC,EAAIuO,EAAIhF,SAASzmB,MACfkd,EAAIuO,EAAIhF,SAASzmB,MACjB,WACFsQ,EACJgS,SAAUwsC,GAAgB,YACtB5xC,EAAIuO,EAAInJ,SAAStiB,MACfkd,EAAIuO,EAAInJ,SAAStiB,MACjB,WACFsQ,EACJ2W,OAAQ6nC,GAAgB,UACpB5xC,EAAIuO,EAAIxE,OAAOjnB,MACbkd,EAAIuO,EAAIxE,OAAOjnB,MACf,WACFsQ,EACJ2O,OAAQ6vC,GAAgB,UACpB5xC,EAAI+B,OACFD,GAAY9B,EAAI+B,QAChB,WACF3O,MAGR28C,EAAa+B,MAEd,CAAC3B,EAAe/9B,EAAMxkB,KAEzB,IAqFMmkD,GAAoB,CACxB,CAAElkD,WAAY0gB,EAAIlF,QAAQvmB,KAAMqB,KAAM,SACtC,CAAE0J,WAAY,SAAU1J,KAAM,QAG1B6tD,GAAW,CAAC,CAAEnkD,WAAYe,KAC1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAIlF,QAAQvmB,KACxBqB,KAAM,QACN+tD,eAAe,GAEjB,CACErkD,WAAY,SACZ1J,KAAM,MACN+tD,eAAe,IAGbC,GAAe5zC,GAAUrN,GAAOiG,QAAO,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,MAEjE,OACE,eAACo5B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QA1CY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WAmCb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACviB,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,WACV8H,KAAM1a,EAAQ,SAAMkC,EACpB4Q,MAAO9S,OAAQkC,EAAY,IAC3BsY,IAAK,GACL+M,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEvX,QAAS5E,GAvFQ,WACzB,IAAMyjD,EAAO,CACX,CAAEtvD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBmhD,EAAapC,EAAU7yC,MAAMzH,KAAI,SAACg6B,GACtC,OAAO,6BACFA,GADL,IAEErtB,MAAOR,GAAY6tB,EAAGrtB,YAGpBsF,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYmuC,EAAU3tC,OAAS,GACpDmU,MAAK,OAAEw5B,QAAF,IAAEA,OAAF,EAAEA,EAAWx5B,MAClB+7B,WAAYthD,EAAQ,kFAAmB,eACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/BkE,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAMigC,EAAYD,QAASxqC,IAnErB,WACpB,IAAMwqC,EAAOjC,EAAcx6C,KAAI,SAAC+8C,GAC9B,MAAO,CAAE5vD,KAAM4vD,EAAG32C,UAGd42C,EAAe,GACjBllD,IACFklD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAWnH,OAAd,OAAuBmH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3K,OAE1D0K,IACFmlD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG1D,SAAH,IAAGA,QAAH,EAAGA,GAAalH,OAAhB,OAAyBkH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAa1K,OAE9DuL,GACFskD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG7C,QAAH,IAAGA,OAAH,EAAGA,EAAc/H,OAAjB,OAA0B+H,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAcvL,OAEhE2L,IACFkkD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzC,SAAH,IAAGA,QAAH,EAAGA,GAAWnI,OAAd,OAAuBmI,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3L,OAG9D,IAAM8kB,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYQ,GAAS,GAC1CkwC,WAAYthD,EAAQ,kFAAmB,eACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/B+uD,UACA7qD,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAM09B,EAAWsC,QAASxqC,IA0FhC7L,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,gBAACwW,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAACuvD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBArUgB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAqUpCh1C,gBAAiBA,EACjBiqB,sBA1UoB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SA0UjDkL,QAASA,EACTohD,cAtUY,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAsUhCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,aAChBwP,YAAa,GACbC,aAAc,GACdrvB,WAAY,GAPhB,UAUE,eAAC,GAAD,CACE6O,aAAcA,EACdq/C,gBApVoB,SAAC3qD,GAC/BkO,GAAS,CAAE9M,KAAM,kBAAmBC,QAASrB,KAoVnCyK,YAAaA,GACbw/B,eAnVmB,SAACjqC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAmVlC0K,UAAWA,GACX2iB,aAlViB,SAACrtB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAkVhC66B,YAAaA,EACbD,UAAWA,EACXuC,SAAUA,EACVlwB,SAAUA,GACV4iD,YAjUmB,SAAC7vD,GAC9BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,KAiU/B0jC,UAAWA,EACXn4B,UAAWA,GACX0oC,aAvViB,SAACj0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAuVhCohB,MAAOA,GACP1V,UAAWA,GACXwoC,aAvViB,SAACl0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAuVhCgmB,MAAOA,EACP7X,MAAOA,IAET,eAAC,GAAD,CACEwe,QAASyiC,GACTpvD,MAAO2L,GACP8U,SAnHa,SAACpR,GAjOG,IAACrP,EAkOL,SAAnBqP,EAAEk6B,OAAOvpC,OACX4tD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmBt+C,EAAEk6B,OAAOvpC,OAvOFA,EAwOLwrB,EAAInc,EAAEk6B,OAAOvpC,OAAOD,KAvO3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MAoVhCmO,MAAOA,UAIb,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,GAAI3W,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,GAChBklD,gBAAiB,SAACC,GAzV5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QAyV6B2uD,OAEhDpkD,IAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WAAYjB,GACZkB,WAAYhB,KAEbtjD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAiBpjC,GAAyBihD,GAAjB5e,GACzBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,UACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,UACNlB,mBAAoBtuB,KACD,IACrB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,eAGhC,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAastC,YAAaA,KACzB9iD,IACC,eAAC,KAAD,CACE41B,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,QACzBmiD,MAAOniD,EAAQ,6CAAY,QAC3BoiD,QAASpiD,EAAQ,iCAAU,SAE7BqiD,wBAAsB,IAG1B,eAAC,KAAD,CACEhvB,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE5G,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OA9VO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,uBAAmB2d,GAAsBgyC,IACnDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBCnNG,SAASkxD,GAAT,GAWX,IAVF9iD,EAUC,EAVDA,MACA6X,EASC,EATDA,MACAzjB,EAQC,EARDA,SACAq4B,EAOC,EAPDA,UACAC,EAMC,EANDA,YACA8W,EAKC,EALDA,QACAuB,EAIC,EAJDA,iBACAnzC,EAGC,EAHDA,KACA+C,EAEC,EAFDA,GACA9C,EACC,EADDA,MAEMwrB,EAAMzF,GAAW,CAAE5X,QAAO6X,UAD/B,EAGiBtY,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9BuF,EAAI3E,QACJ2E,EAAIxE,OACJ,CAAEjnB,KAAMoO,EAAQ,iBAAmB,eAAgB6K,MAAOgN,EAAM3D,UAChE,CAAEtiB,KAAM,gBAAiBiZ,MAAOgN,EAAMqI,aACtC,CAAEtuB,KAAM,QAASiZ,MAAOgN,EAAMzG,OAC9B,CAAExf,KAAM,WAAYiZ,MAAOgN,EAAMxG,UACjC,CAAEzf,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAT1BwvB,EAHN,uBAeuB9gC,oBAAS,IAfhC,oBAeM2hB,EAfN,KAeYuvB,EAfZ,OAgB6BlxC,qBAAS,GAhBtC,oBAgBMylC,EAhBN,KAgBeC,EAhBf,KAkBOhyB,EAAUiyB,KAAVjyB,MAlBP,EAoBmCga,aAAa8hB,GAAa,CAC5DrZ,YAAa,sBArBd,oBAoBMqtB,EApBN,KAoBoBC,EApBpB,KAwBKlU,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOwhB,GACPvuC,UAAU,gBAAI5O,EAAO+C,IAEvB,CACE44B,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAS,gBAAM5O,EAAO+C,GAE5BouD,EAAa,CACXviD,gBAED,CAAC7L,IAzDH,MA2DoBuL,aAAY8uC,GAAeF,GAAzClgB,EA3DN,uBA4DqB1uB,aAAY+iD,GAAenU,GAA1CoU,EA5DN,uBA6DuBhjD,aAAYijD,GAAerU,GAA5CsU,EA7DN,qBA+DK7iB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpB+sC,EAAc,CAAE5iD,UAAW,CAAEyK,SAC7BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAmBnB,OAXAsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIy8B,QAAJ,IAAIA,OAAJ,EAAIA,EAAQhe,UACVC,GAAW,GAEb,OAAI+d,QAAJ,IAAIA,GAAJ,UAAIA,EAAQvmD,YAAZ,iBAAI,EAAcsyC,mBAAlB,aAAI,EAA2BtyC,KAAM,CAAC,IAC5BA,EAASumD,EAAOvmD,KAAKsyC,YAArBtyC,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAAC+d,IAGF,gBAACn+B,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV12B,OAAQ,GACRy0C,UAAW,KALf,UAQE,gBAAC,KAAD,CAAMvf,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQ,IACR4jC,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,GACpBjY,eAAgBf,KAElB,eAAC,KAAD,CAAgBiZ,qBAAmB,IAEnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBzuB,KAEtB,eAAC,KAAD,CACE2vB,IAAK,CAAC,QAAS,YACflB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,cAI/B7e,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,GAAD,CAAc+H,UAAW6M,EAAY5M,WAAYkhC,EAAjD,SACE,eAAC,GAAD,CACErxD,MAAOA,EACPD,KAAMA,EACN66B,UAAWA,EACXC,YAAaA,EACb8W,QAASA,EACTuB,iBAAkBA,EAClB9xB,MAAOA,SAIZ+xB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,OC9LnB,I,MAAA,cAAO,IAAD,MACaitB,aAAao2B,IAD1B,oBACZC,EADY,KACHC,EADG,OAGErjD,aAAYsjD,GAAe,CAC9Cl2B,eAAgB,CAAC,CAAEC,MAAO81B,OADrBI,EAHY,uBAMGvjD,aAAYwjD,GAAe,CAC/Cp2B,eAAgB,CAAC,CAAEC,MAAO81B,OADrBM,EANY,uBASKzjD,aAAY0jD,GAAe,CACjDt2B,eAAgB,CAAC,CAAEC,MAAO81B,OADrBQ,EATY,qBAanBt9B,sBAAU,WACR+8B,MACC,CAACA,IAEJ,IAAM96C,GAAkB,OAAP+6C,QAAO,IAAPA,GAAA,UAAAA,EAAS9mD,YAAT,qDAAgCA,OAAQ,GACnDqnD,GACI,OAARt7C,QAAQ,IAARA,OAAA,EAAAA,EAAU9C,QAAS,EACf8C,EAASvC,QAAO,SAACrS,GAAD,MACd,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAIwX,SAASxX,EAAIiT,eAE3C,GACNi9C,EAAQpnD,MAAK,SAAC6D,EAAQymC,GAAT,OAAoBzmC,EAAEmI,KAAOs+B,EAAEt+B,QAG5C,MAAO,CACLF,WACAs7C,UACAC,eALqB,yBAAMR,QAAN,IAAMA,OAAN,EAAMA,EAASz1B,WAMpC21B,aACAE,cACAE,kBC3CWnyD,gBAAf,+iCCDeA,gBAAf,qwCCqWesyD,GApVM,SAAC,GAUV,IATVvgD,EASS,EATTA,KACAqZ,EAQS,EARTA,QACAhO,EAOS,EAPTA,IACA6S,EAMS,EANTA,MACAI,EAKS,EALTA,UACAC,EAIS,EAJTA,WACA5zB,EAGS,EAHTA,MACAwD,EAES,EAFTA,KACAC,EACS,EADTA,MACS,EACe0N,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IADtD,oBACFy3B,EADE,KACIze,EADJ,OAE+B1X,KAAMjE,SAAS,IAAIlD,MAFlD,oBAEF8oC,EAFE,KAEYC,EAFZ,OAGiB5hC,KAAMjE,SAAS,WAHhC,oBAGFkiC,EAHE,KAGKC,EAHL,OAI6Bl+B,KAAMjE,SAAS,IAJ5C,oBAIF0kD,EAJE,KAIWC,EAJX,OAM4B1gD,KAAMjE,SAAS,MAN3C,oBAMFyoC,EANE,KAMQmc,EANR,OAO8B3gD,KAAMjE,SAAS,MAP7C,oBAOF6U,EAPE,KAOSgwC,EAPT,OASyB7kD,oBACvB,eAAT3N,EAAwBC,EAAQ,MAVzB,oBASFuL,EATE,KASS0oC,EATT,OAYyBvmC,qBAAc,GAZvC,oBAYF47C,EAZE,KAYSC,EAZT,OAcuB77C,oBAAc,IAdrC,oBAcF8kD,EAdE,KAcQC,EAdR,OAe+B/kD,oBAAc,MAf7C,oBAeFglD,EAfE,KAeYC,EAfZ,OAiByC9kD,aAChD7J,EAAI6mB,iBADE/c,EAjBC,EAiBDA,SAAUC,EAjBT,EAiBSA,aAAcC,GAjBvB,EAiBuBA,OAAQ86B,GAjB/B,EAiB+BA,MAjB/B,GAwBU76B,sBAAWtB,IAxBrB,MAsBPyB,UAAa4X,GAtBN,GAsBMA,MAAO7X,GAtBb,GAsBaA,MACX1N,GAvBF,GAuBPhC,MAASgC,KAGHkW,GAAai8C,KAAbj8C,SACA+sB,GAAcgR,KAAdhR,UA3BC,GA6BiCtI,aAAay3B,GAAiB,CACtEhvB,YAAa,sBA9BN,sBA6BFqtB,GA7BE,MA6BY4B,GA7BZ,MAgCTp+B,sBAAU,WACR,GAAInpB,EAAW,CACb,IAAMoD,EAAY,CAAE2T,WAAY/W,EAAU6N,KAC1C83C,GAAa,CAAEviD,cAEjB,GAAImhB,GACW,WAAT/vB,IACF,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOsiB,YAAY,CAAC,IAAD,EACfqyB,EAAI,UAAGjR,GAAUtvB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOsiB,sBADzB,aAAG,EAET,GACJ2xB,EAAaU,MAIlB,CAACppC,EAAWqG,IAEf8iB,sBAAU,WAAO,IAAD,IACd,UAAIo+B,SAAJ,IAAIA,IAAJ,UAAIA,GAAcloD,YAAlB,iBAAI,EAAoBioD,uBAAxB,aAAI,EAAqCjoD,KAAM,CAAC,IACtCA,EAASkoD,GAAaloD,KAAKioD,gBAA3BjoD,KACR,IAAQ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMiJ,QAAS,EAAG,CACpB,IAAMk/C,EAAQnoD,EAAKgI,KAAI,SAACqmB,GACtB,IAAMjgB,EAAK,UAAMigB,EAAE5S,MAAR,cAAmB4S,EAAEja,OAArB,MACX,OAAO,6BACFia,GADL,IAEEl5B,KAAMiZ,EACNzV,OAAQyV,OAIZ,GADAy5C,EAAYM,GACR91C,EAAI2J,MAAO,CAAC,IAAD,EACPhlB,EAAG,UAAGmxD,EAAM3+C,QAAO,SAACqhC,GAAD,OAAaA,EAAGpvB,QAAUpJ,EAAI2J,gBAA9C,aAAG,EAAoD,GAChE+rC,EAAgB/wD,QAIrB,CAACkxD,KAEJp+B,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAM45C,EAAK/1C,EAAIsF,UACThI,EAAK0C,EAAIk5B,SAET8c,EAAiBt8C,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAI3C,GAFAkwD,EAAeY,GAEXD,EAAI,CACN,IAAMhxC,EAASrL,GAASvC,QACtB,SAACrS,GAAD,OAAcA,EAAI8U,OAASm8C,GAAqB,YAAfjxD,EAAII,UACrC,GACFowD,EAAavwC,GAEf,GAAIzH,EAAI,CACN,IAAM0H,EAAQtL,GAASvC,QACrB,SAACrS,GAAD,OAAcA,EAAI8U,OAAS0D,GAAqB,YAAfxY,EAAII,UACrC,GACFmwD,EAAYrwC,GAEd,IAAMK,EAAU,OAAGrF,QAAH,IAAGA,OAAH,EAAGA,EAAKqF,WACxB,GAAIA,EAAY,CACd,IAAMkzB,EAAO9R,GAAUtvB,QAAO,SAACw4B,GAAD,OAAaA,EAAGxzB,MAAQkJ,KAAY,GAClE2xB,EAAauB,QAEV,CACL,IAAM0d,EAAiBv8C,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAEF8wD,EAAiBt8C,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CkwD,EAAeY,GACfX,EAAW,OAACW,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC7BV,EAAY,OAACW,QAAD,IAACA,OAAD,EAACA,EAAiB,OAE/B,CAACj2C,EAAK2yB,EAAOh+B,IAEhB,IAAMpD,GAAQ,yCAAG,WAAO5D,GAAP,gCAAA8D,EAAA,2DACoB4U,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8vB,EAAe/vB,GAAe+vB,EAAe9vB,GAFlC,gCAGPqG,GACJR,EACAlb,GAAQ,+FAAsB,yBALnB,2CASP6Q,EAAiBpU,EAAjBoU,OAAQoI,EAASxc,EAATwc,KACX+uB,GAAa5zB,GAAchX,EAVjB,iCAWPse,GACJR,EACAlb,GAAQ,wHAA2B,oCAbxB,yCAkBTkU,EAAW9W,EACb,CACE+W,WAAY/W,EAAU6N,IACtBqJ,aAAclX,EAAUxL,KACxByiB,eAAgBjX,EAAUhI,OAC1BwhB,cAAexZ,EAAUxG,OAE3B,CACEud,gBAAYjS,EACZoS,kBAAcpS,EACdmS,oBAAgBnS,EAChB0U,mBAAe1U,GAEfsU,EAAa+tC,EACf,CACE1tC,aAAc0tC,EAAa1tC,aAC3BC,eAAgBytC,EAAaztC,eAC7BC,iBAAkBwtC,EAAaxtC,iBAC/BC,gBAAiButC,EAAavtC,iBAEhC,CACEH,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEjBuU,EAAW8tC,EACb,CACEttC,WAAYstC,EAAattC,WACzBC,aAAcqtC,EAAartC,aAC3BC,eAAgBotC,EAAaptC,eAC7BC,cAAemtC,EAAantC,eAE9B,CACEH,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,GAGf1B,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCkO,OAAQzY,GAAeK,gBACvBqX,KAAM81B,EACN6C,SAAUA,EAASt/B,KACnB0L,UAAWA,EAAU1L,KACrBmQ,OAAQ0rC,EAAeA,EAAa1rC,YAAS3W,EAC7CuW,MAAO8rC,EAAeA,EAAarsC,WAAQhW,EAC3CgS,WACAsC,aACAC,WACA5F,SACAoI,OACAjlB,OAAQ1B,GAAK0B,OACb4mC,OAAQtoC,GAAK2Y,KAEfsM,QAAQC,IAAIhX,GAGZq6B,GADelZ,EAAQI,EAAYC,EACrBxhB,GA7EC,4CAAH,sDAgFRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACT87B,KACA,MAAO98B,GACP07B,GAAQ17B,GALE,2CAAH,wDASL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,IAFlB,6CAINsb,GAAWJ,EAASlb,IAJd,OAKZu8B,KACAhlB,QAAQC,IAAIhY,GANA,2CAAH,sDAUP+8B,GAAW,WACf5B,KACA+G,EAAS,WACT0iB,EAAa,MACbD,EAAY,MACZD,EAAe,IACfI,EAAY,IACZxe,EAAa,MACb0e,EAAgB,MAChBpJ,GAAa,IAET9e,GAAa,WACjBC,KACAzf,KAWF,OACE,eAAC4c,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASwf,GACTzxB,MAAOgN,GAAMob,SACb5yB,SAVmB,WACrBT,EAAaS,GAAbT,IAUExR,MAAOA,EACPurC,KAAMA,EACNp3B,GAAI,GARN,SAUE,gBAACwiB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMxI,KACbxd,MAAOszC,EACP7yB,SA5BW,SAAC2C,GACxBmwB,EAAgBnwB,QA8BR,eAAC8P,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,GACT1jC,MAAOuL,EACPqhB,eAAgBqnB,EAChBpnB,eAAgB08B,EAChBz8B,YAAaw8B,EACbn7C,MAAOA,GACPi7C,WAAS,EACT77B,SAAmB,eAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAO7K,GAAQ,0DAAe,cAC9B6X,MAAOA,GACP2G,QAASylC,EACTpyD,MAAOm2C,EACPvpB,eAAgB0lC,EAChBxkD,SAAUA,EACVK,MAAOA,GACPi7C,WAAS,MAGb,gBAACl2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,GAAMhH,OACblR,SAAUA,EACVE,OAAQA,GACRiP,IAAKA,EACL7b,KAAK,SACL+O,WAAS,IAEX,eAAC05B,GAAD,CACE9pC,KAAK,UACLiZ,MAAO7K,GAAQ,mDAAa,WAC5B6X,MAAOA,GACP2G,QAAS6lC,EACTxyD,MAAO0yD,EACP9lC,eAAgB+lC,EAChB7kD,SAAUA,EACVK,MAAOA,GACPof,UAAWhiB,EACX4E,WAAS,IAEX,eAAC6mB,GAAD,CACEj3B,KAAK,OACLypC,WAAS,EACTna,KAAM,EACNrf,MAAOgW,GAAM8Z,YACbhyB,SAAUA,EACVE,OAAQA,GACRiP,IAAKA,EACL9M,WAAS,YAKjB,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCrTR,SAASggC,GAAT,GAQX,IAPFhlD,EAOC,EAPDA,MACA6X,EAMC,EANDA,MACAzjB,EAKC,EALDA,SACAhG,EAIC,EAJDA,MACAwD,EAGC,EAHDA,KACA+C,EAEC,EAFDA,GACA9C,EACC,EADDA,MACC,EACiB0N,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,YAAaiZ,MAAOgN,EAAM3D,UAClC,CAAEtiB,KAAM,WAAYiZ,MAAO7K,EAAQ,0DAAe,eAElD,CAAEpO,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9B,CAAElmB,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAP1BwvB,EADN,uBAWuB9gC,oBAAS,IAXhC,oBAWM2hB,EAXN,KAWYuvB,EAXZ,OAY6BlxC,qBAAS,GAZtC,oBAYMylC,EAZN,KAYeC,EAZf,KAcOhyB,EAAUiyB,KAAVjyB,MAdP,EAgBwCga,aAAag4B,GAAa,CACjEvvB,YAAa,sBAjBd,oBAgBMwvB,EAhBN,KAgBoBC,EAhBpB,KAmBO38C,EAAai8C,KAAbj8C,SACFsmC,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAO03B,GACPzkD,UAAU,gBACP5O,EAAO+C,IAGZ,CACE44B,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAS,gBACZ5O,EAAO+C,GAEVuwD,EAAa,CACX1kD,gBAED,CAAC7L,IAxDH,MA0DoBuL,aAAYklD,GAAetW,GAAzCuW,EA1DN,uBA2DqBnlD,aAAYolD,GAAexW,GAA1CyW,EA3DN,uBA4DuBrlD,aAAYslD,GAAe1W,GAA5C2W,EA5DN,qBA8DKllB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpBovC,EAAc,CAAEjlD,UAAW,CAAEyK,SAC7BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAmBnB,OAXAsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI4+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAangB,UACfC,GAAW,GAEb,OAAIkgB,QAAJ,IAAIA,GAAJ,UAAIA,EAAa1oD,YAAjB,iBAAI,EAAmBwoD,mBAAvB,aAAI,EAAgCxoD,KAAM,CAAC,IACjCA,EAAS0oD,EAAY1oD,KAAKwoD,YAA1BxoD,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAACkgB,IAGF,gBAACtgC,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV12B,OAAQ,GACRy0C,UAAW,KALf,UAQE,gBAAC,KAAD,CAAMvf,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQ,IACR4jC,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,QAAS,SACflB,mBAAoBrvB,KAEtB,eAAC,KAAD,CACEuwB,IAAK,CAAC,aACNlB,mBAAoB,SAACh0C,GAAD,OAClBqoB,GAAyBroB,EAAO4c,EAAUxI,MAG9C,eAAC,KAAD,CACE8gC,IAAK,CAAC,YACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,GAAD,CACE5rB,MAAOA,EACP2zB,UAAWsjC,EACXrjC,WAAYujC,EAHd,SAKE,eAAC,GAAD,CAAc3zD,KAAMA,EAAMC,MAAOA,EAAOohB,MAAOA,SAGlD+xB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,OChLlC,IAoce0lD,GApcO,SAAC,GAWX,IAVVjiD,EAUS,EAVTA,KACAqZ,EASS,EATTA,QACAhO,EAQS,EARTA,IACA6S,EAOS,EAPTA,MACAI,EAMS,EANTA,UACAC,EAKS,EALTA,WACA5zB,EAIS,EAJTA,MACA6kB,EAGS,EAHTA,MACArhB,EAES,EAFTA,KACAC,EACS,EADTA,MACS,EACe0N,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IADtD,oBACFy3B,EADE,KACIze,EADJ,OAE+B1X,KAAMjE,SAAS,IAAIlD,MAFlD,oBAEF8oC,EAFE,KAEYC,EAFZ,OAG6B5hC,KAAMjE,SAAS,IAH5C,oBAGF0kD,EAHE,KAGWC,EAHX,OAI+B1gD,KAAMjE,SAAS,IAJ9C,oBAIFomD,EAJE,KAIYC,EAJZ,OAM4BpiD,KAAMjE,SAAS,MAN3C,oBAMFyoC,EANE,KAMQmc,EANR,OAO8B3gD,KAAMjE,SAAS,MAP7C,oBAOF6U,EAPE,KAOSgwC,EAPT,OASyB7kD,oBACvB,eAAT3N,EAAwBC,EAAQ,MAVzB,oBASF0K,EATE,KASS2iB,EATT,OAYyB3f,qBAAc,GAZvC,oBAYFs9B,EAZE,KAYSC,EAZT,OAcqBv9B,oBAAc,MAdnC,oBAcF+5B,EAdE,KAcO4C,EAdP,OAeyB38B,oBAAc,IAfvC,oBAeFw9B,EAfE,KAeSC,EAfT,OAiB6Bz9B,oBAC3B,iBAAT3N,EAA0BC,EAAQ,MAlB3B,oBAiBFyK,GAjBE,KAiBWw/B,GAjBX,QAoB6Bv8B,qBAAc,GApB3C,sBAoBFm9B,GApBE,MAoBWC,GApBX,SAsByBp9B,oBACvB,WAAT3N,EAAoBC,EAAQ,MAvBrB,sBAsBF0L,GAtBE,MAsBSwoC,GAtBT,MA0BDtZ,GAAc+J,KAAd/J,UACAC,GAAgB6J,KAAhB7J,YA3BC,GA6ByChtB,aAChD7J,EAAI6mB,iBADE/c,GA7BC,GA6BDA,SAAUC,GA7BT,GA6BSA,aAAcC,GA7BvB,GA6BuBA,OAAQ86B,GA7B/B,GA6B+BA,MA7B/B,GAoCU76B,sBAAWtB,IApCrB,MAkCPyB,UAAa4X,GAlCN,GAkCMA,MAAO7X,GAlCb,GAkCaA,MACX1N,GAnCF,GAmCPhC,MAASgC,KAGHkW,GAAai8C,KAAbj8C,SAER+d,sBAAU,WACR,GAAI5E,GACEpkB,GAAW,CACb,IAAa,OAATA,SAAS,IAATA,QAAA,EAAAA,GAAWsZ,eAAyB,iBAATjlB,EAAyB,CAAC,IAAD,EAChD40C,EAAI,UAAG9Z,GAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAWsZ,wBAD7B,aAAG,EAET,GACJilB,GAAe0K,GAEjB,IAAa,OAATjpC,SAAS,IAATA,QAAA,EAAAA,GAAW0Z,aAAuB,eAATrlB,EAAuB,CAAC,IAAD,EAC5C40C,EAAI,UAAG/Z,GAAUxmB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAW0Z,sBAD7B,aAAG,EAET,GACJiI,EAAasnB,OAIlB,CAACjpC,KAEJgpB,sBAAU,WACR,GAAI5E,GACEplB,IACW,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWsa,eAAyB,iBAATjlB,EAAyB,CAAC,IAAD,EAChD40C,EAAI,UAAG9Z,GAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,QAAZ,IAAYA,OAAZ,EAAYA,EAAWsa,wBAD7B,aAAG,EAET,GACJilB,GAAe0K,MAIpB,CAACjqC,IAEJgqB,sBAAU,WACR,GAAIkG,IAAaA,GAAU/mB,OAAS,EAAG,CACrC,IAAMu3B,EAAWxQ,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI2M,UAAYA,KAChE0D,EAAaC,MAEd,CAAC3D,EAAS7M,KAEblG,sBAAU,WACR,GAAI5E,EAAO,CACT,GAAa,WAAT/vB,EAAmB,CACrB,UAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOglB,aAAc,CAAC,IAAD,EACjB2vB,EAAI,UAAG9Z,GAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOglB,wBADzB,aAAG,EAET,GACJilB,GAAe0K,GAEjB,UAAI30C,QAAJ,IAAIA,OAAJ,EAAIA,EAAOolB,WAAY,CAAC,IAAD,EACfuvB,EAAI,UAAG/Z,GAAUxmB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOolB,sBADzB,aAAG,EAET,GACJiI,EAAasnB,IAGjB,GAAa,eAAT50C,IACF,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOglB,cAAc,CAAC,IAAD,EACjB2vB,EAAI,UAAG9Z,GAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOglB,wBADzB,aAAG,EAET,GACJilB,GAAe0K,OAIpB,CAAC/iC,IAEJ8iB,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAM45C,EAAK/1C,EAAIsF,UACThI,EAAK0C,EAAIk5B,SACT9K,EAAQpuB,EAAI+H,aACZsmB,EAAQruB,EAAImI,WACZ4B,EAAS/J,EAAI+J,OAEnB,GAAIqkB,EAAO,CACT,IAAMb,EAAS3P,GAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,GAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,EAAake,GAEf,GAAIvkB,EAAQ,CACV,IAAM3F,EAAMD,EAAMhN,QAAO,SAACqhC,GAAD,OAAaA,EAAG3yC,KAAOkkB,KAAQ,GACxDktB,GAAa7yB,GAEf,IAAM6xC,EAAiBv8C,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAAmC,YAAf1S,EAAII,UAE/CkwD,EAAea,GACf,IAAMD,EAAiBt8C,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAI3C,GAFA4xD,EAAgBd,GAEZD,EAAI,CACN,IAAMhxC,EAASrL,GAASvC,QACtB,SAACrS,GAAD,OAAcA,EAAI8U,OAASm8C,GAAqB,YAAfjxD,EAAII,UACrC,GACFowD,EAAavwC,GAEf,GAAIzH,EAAI,CACN,IAAM0H,EAAQtL,GAASvC,QACrB,SAACrS,GAAD,OAAcA,EAAI8U,OAAS0D,GAAqB,YAAfxY,EAAII,UACrC,GACFmwD,EAAYrwC,QAET,CACL,IAAMixC,EAAiBv8C,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAAmC,YAAf1S,EAAII,UAE/CkwD,EAAea,GACf,IAAMD,EAAiBt8C,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3C4xD,EAAgBd,GAChBV,EAAY,OAACU,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC9BX,EAAW,OAACY,QAAD,IAACA,OAAD,EAACA,EAAiB,OAE9B,CAACj2C,EAAKrL,IAET,IAAMpD,GAAQ,yCAAG,WAAO5D,GAAP,0BAAA8D,EAAA,yDASPsQ,EAAiBpU,EAAjBoU,OAAQoI,EAASxc,EAATwc,KACX+uB,GAAa5zB,EAVH,gCAWPsH,GACJR,EACAlb,GAAQ,wHAA2B,oCAbxB,2CAiBXgoC,IAAa5zB,EAjBF,gCAkBPsH,GACJR,EACAlb,GAAQ,iJAAgC,iCApB7B,wCAwBTwW,EAAala,GACf,CACEua,aAAcva,GAAY2O,IAC1B6L,eAAgBxa,GAAY1K,KAC5BmlB,iBAAkBza,GAAYlH,OAC9B4hB,gBAAiB1a,GAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEjBgS,EAAW3W,GACb,CACE4W,WAAY5W,GAAU4W,WACtBG,aAAc/W,GAAU+W,aACxBD,eAAgB9W,GAAU8W,eAC1BuC,cAAerZ,GAAUqZ,eAE3B,CACEzC,gBAAYjS,EACZoS,kBAAcpS,EACdmS,oBAAgBnS,EAChB0U,mBAAe1U,GAEfuU,EAAWla,EACb,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,OAE3B,CACEqgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,GAGf1B,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCmN,KAAM81B,EACN6C,SAAUA,EAASt/B,KACnB0L,UAAWA,EAAU1L,KACrBmI,SACAgI,OAAQtb,GAAYA,GAAU5I,QAAKuN,EACnCgS,WACAsC,aACAC,WACAwC,OACAjlB,OAAQ1B,GAAK0B,OACb4mC,OAAQtoC,GAAK2Y,KAIf4vB,GADelZ,EAAQI,EAAYC,EACrBxhB,GAhFC,4CAAH,sDAmFRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACT87B,KACA,MAAO98B,GACP07B,GAAQ17B,GALE,2CAAH,wDASL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,IAFlB,6CAINsb,GAAWJ,EAASlb,IAJd,OAKZuX,QAAQC,IAAIhY,GALA,2CAAH,sDAuBP88B,GAAa,WAbjB3B,KACAypB,EAAa,MACbD,EAAY,MACZD,EAAe,IACf0B,EAAgB,IAChB1mC,EAAa,MACb4d,GAAa,GACbhB,GAAe,MACfa,IAAe,GACfT,EAAW,MACXc,EAAa,IACb+I,GAAa,MAIbjpB,KAWF,OACE,eAAC4c,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASwf,GACTzxB,MAAOgN,GAAMnf,SACb2H,SAVmB,WACrBT,GAAaS,GAAbT,IAUExR,MAAOA,EACPurC,KAAMA,EACNp3B,GAAI,GARN,SAUE,gBAACwiB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMxI,KACbxd,MAAOszC,EACP7yB,SA5BW,SAAC2C,GACxBmwB,EAAgBnwB,QA8BR,eAAC8P,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAO7K,GAAQ,sEAAiB,eAChC6X,MAAOA,GACP2G,QAASylC,EACTpyD,MAAOm2C,EACPvpB,eAAgB0lC,EAChBxkD,SAAUA,GACVK,MAAOA,GACP6lD,YAAU,MAGd,eAAC9gC,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,YACLiZ,MAAO7K,GAAQ,0DAAe,cAC9B6X,MAAOA,GACP2G,QAASmnC,EACT9zD,MAAOuiB,EACPqK,eAAgB2lC,EAChBzkD,SAAUA,GACVK,MAAOA,GACP6lD,YAAU,MAId,gBAAC9gC,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,GAAMhH,OACblR,SAAUA,GACVE,OAAQA,GACRiP,IAAKA,EACL7b,KAAK,SACLnE,MAAO,MAET,eAAC4sC,GAAD,CACE9pC,KAAK,OACLiZ,MAAOgN,GAAM9e,KACb8e,MAAOA,GACP2G,QAASvL,EACTphB,MAAO0L,GACPkhB,eAAgBsnB,GAChBpmC,SAAUA,GACVK,MAAOA,GACPgC,WAAS,EACTod,SAAmB,WAATxtB,IAGZ,gBAACyrC,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAOynC,EACPhnB,SAAU,SAACpR,GACTg7B,EAAW5kB,OAAOpW,EAAEk6B,OAAOvpC,QAC3BqtB,EAAa,OAPjB,UAUE,eAACuB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,GAAQ,iCAAU,cAG3B,eAACygB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,GAAQ,6CAAY,cAE7B,eAACygB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,GAAQ,6CAAY,iBAG/B,eAAC07B,GAAD,CACE9pC,KAAK,WACLiZ,MAAmB,IAAZyuB,EAAgBzhB,GAAM3M,UAAY2M,GAAMpB,SAC/C2I,UAAWka,GAAoB,eAAT1nC,EACtBimB,MAAOA,GACP2G,QAASue,EACTlrC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbl9B,SAAUA,GACVK,MAAOA,GACP8oB,GAAI,KAEN,eAAC4S,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,GACT76B,MAAOyK,GACPmiB,eAAgBqd,GAChBpd,eAAgBie,GAChBhe,YAAa+d,GACb/8B,SAAUA,GACVK,MAAOA,GACP8oB,GAAI,GACJ1J,SAAmB,iBAATxtB,IAEZ,eAACi3B,GAAD,CACEj3B,KAAK,OACLypC,WAAS,EACTna,KAAM,EACNrf,MAAOgW,GAAM8Z,YACbhyB,SAAUA,GACVE,OAAQA,GACRiP,IAAKA,EACL9M,WAAS,YAKjB,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCraR,SAAS8gC,GAAT,GAQX,IAPF9lD,EAOC,EAPDA,MACA6X,EAMC,EANDA,MACAzjB,EAKC,EALDA,SACAhG,EAIC,EAJDA,MACAwD,EAGC,EAHDA,KACA+C,EAEC,EAFDA,GACA9C,EACC,EADDA,MACC,EACiB0N,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,WAAYiZ,MAAO7K,EAAQ,sEAAiB,gBACpD,CAAEpO,KAAM,YAAaiZ,MAAO7K,EAAQ,0DAAe,eACnD,CACEpO,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOgN,EAAMrB,YAEf,CACE5kB,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAM,GAAD,OAAKgN,EAAMpB,SAAX,cAAyBoB,EAAM3M,YAEtC,CACEtZ,KAAM,SACNiZ,MAAO7K,EAAQ,uCAAW,QAE5B,CAAEpO,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAE7B,CAAE//B,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAlB1BwvB,EADN,uBAsBuB9gC,oBAAS,IAtBhC,oBAsBM2hB,EAtBN,KAsBYuvB,EAtBZ,OAuB6BlxC,qBAAS,GAvBtC,oBAuBMylC,EAvBN,KAuBeC,EAvBf,KAyBOhyB,EAAUiyB,KAAVjyB,MAzBP,EA2ByCga,aAAa84B,GAAa,CAClErwB,YAAa,sBA5Bd,oBA2BMswB,EA3BN,KA2BoBC,EA3BpB,KA8BOz9C,EAAai8C,KAAbj8C,SACFsmC,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOw4B,GACPvlD,UAAU,gBACP5O,EAAO+C,IAGZ,CACE44B,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAS,gBACZ5O,EAAO+C,GAEVqxD,EAAa,CACXxlD,gBAED,CAAC7L,IAnEH,MAqEqBuL,aAAYgmD,GAAgBpX,GAA3CqX,EArEN,uBAsEsBjmD,aAAYkmD,GAAgBtX,GAA5CuX,EAtEN,uBAuEwBnmD,aAAYomD,GAAgBxX,GAA9CyX,EAvEN,qBAyEKhmB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpBkwC,EAAe,CAAE/lD,UAAW,CAAEyK,SAC9BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAmBnB,OAXAsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI0/B,QAAJ,IAAIA,OAAJ,EAAIA,EAAcjhB,UAChBC,GAAW,GAEb,OAAIghB,QAAJ,IAAIA,GAAJ,UAAIA,EAAcxpD,YAAlB,iBAAI,EAAoBspD,mBAAxB,aAAI,EAAiCtpD,KAAM,CAAC,IAClCA,EAASwpD,EAAaxpD,KAAKspD,YAA3BtpD,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAACghB,IAGF,gBAACphC,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV12B,OAAQ,GACRy0C,UAAW,KALf,UAQE,gBAAC,KAAD,CAAMvf,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQ,IACR4jC,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,QAAS,SACflB,mBAAoBrvB,KAEtB,eAAC,KAAD,CACEuwB,IAAK,CAAC,aACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGtC,eAAC,KAAD,CACE8gC,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,cAGhC,eAAC,KAAD,CACE6tB,IAAK,CAAC,YACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,GAAD,CACE5rB,MAAOA,EACP2zB,UAAWokC,EACXnkC,WAAYqkC,EAHd,SAKE,eAAC,GAAD,CACEz0D,KAAMA,EACNC,MAAOA,EACPohB,MAAOA,SAIZ+xB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,OC9K3B,IAAM6kC,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cAimBS+mB,GA5lBc,SAAC,GAclB,IAAD,EAbT/iD,EAaS,EAbTA,KACAqZ,EAYS,EAZTA,QACAhO,EAWS,EAXTA,IACA6S,EAUS,EAVTA,MACAwE,EASS,EATTA,OACAsgC,EAQS,EARTA,gBACAh6B,EAOS,EAPTA,UACAC,EAMS,EANTA,YACAqY,EAKS,EALTA,iBACA32C,EAIS,EAJTA,MACAooB,EAGS,EAHTA,WACAtC,EAES,EAFTA,SACAuC,EACS,EADTA,SAEMnX,EAAUvP,KADP,EAGmBwP,qBAAS,GAH5B,oBAGFw6B,EAHE,KAGMU,EAHN,OAK8Bl7B,oBAAS,MALvC,oBAKFkM,EALE,KAKSgiC,EALT,OAM0BluC,oBAAS,MANnC,oBAMFxC,EANE,KAMO2wC,EANP,OAQ6BnuC,oBAAc,MAR3C,oBAQFjD,EARE,KAQWw/B,EARX,OAS6Bv8B,qBAAc,GAT3C,oBASFm9B,EATE,KASWC,EATX,KAUHC,EAAiBp5B,KAAM44B,SAVpB,EAYyB78B,oBAAc,MAZvC,oBAYFhD,EAZE,KAYS2iB,EAZT,OAayB3f,qBAAc,GAbvC,oBAaFs9B,EAbE,KAaSC,EAbT,KAcHX,EAAe34B,KAAM44B,SAdlB,EAgByB78B,oBAAc,MAhBvC,oBAgBFnC,EAhBE,KAgBS0oC,EAhBT,OAiBuBvmC,qBAAS,GAjBhC,oBAiBFymC,EAjBE,KAiBQC,EAjBR,QAkBqB1mC,oBAAS,IAlB9B,sBAkBF2d,GAlBE,MAkBOgpB,GAlBP,SAoBwB3mC,oBAAS,MApBjC,sBAoBF/C,GApBE,MAoBMyuC,GApBN,SAsBmB1rC,oBAAc,IAtBjC,sBAsBFomC,GAtBE,MAsBMC,GAtBN,SAuByBrmC,oBAAc,IAvBvC,sBAuBFgmC,GAvBE,MAuBSC,GAvBT,SAwBiBjmC,oBAAc,MAxB/B,sBAwBF+L,GAxBE,MAwBKgwC,GAxBL,SA0ByB/7C,qBAAS,GA1BlC,sBA0BFg8C,GA1BE,MA0BSC,GA1BT,SA4Bej8C,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IA5BtD,sBA4BFy3B,GA5BE,MA4BIze,GA5BJ,SA8B2B3b,qBAAS,GA9BpC,sBA8BFouC,GA9BE,MA8BUC,GA9BV,SA+B6BruC,oBAAS,IA/BtC,sBA+BFgM,GA/BE,MA+BWsiC,GA/BX,SAgCuBtuC,oBAAS,MAhChC,sBAgCF6rC,GAhCE,MAgCQ0C,GAhCR,SAiC8BvuC,oBAAS,MAjCvC,sBAiCFwuC,GAjCE,MAiCSC,GAjCT,SAmCwCzH,KAAzChR,GAnCC,GAmCDA,UAAWL,GAnCV,GAmCUA,YAAaE,GAnCvB,GAmCuBA,aAnCvB,GAqC0B11B,aAAQ,IAAnCC,GArCC,GAqCDA,SAAUC,GArCT,GAqCSA,aArCT,GAyCUE,sBAAWtB,IAzCrB,MAuCPyB,UAAa4X,GAvCN,GAuCMA,MAAO7X,GAvCb,GAuCaA,MACX1N,GAxCF,GAwCPhC,MAASgC,KAGXi0B,sBAAU,WAAO,IAAD,EACR9zB,EAAQ,IAAI4J,KACZ3J,EAAM,IAAI2J,KAChB5J,EAAMkpD,WAAW,GACjBjpD,EAAI+hB,SAAS/hB,EAAIgZ,WAAa,GAC9BhZ,EAAIipD,WAAW,GACflO,EAAah7C,GACbi7C,EAAWh7C,GACXu4C,GAAS,UAACnwC,GAAYmL,QAAO,SAACyK,GAAD,OAAuB,IAAVA,EAAG/b,aAApC,aAAC,EAA+C,IACzDmxC,EAAa5xB,GACb4nB,EAAetlB,GACf0I,EAAazI,KACZ,CAAChT,IAEJ8iB,sBAAU,WACR,GAAI5E,GACEplB,IACF,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWsa,cAAc,CAAC,IAAD,EACrB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,QAAZ,IAAYA,OAAZ,EAAYA,EAAWsa,wBAD7B,aAAG,EAET,GACJilB,EAAe0K,MAIpB,CAACjqC,IAEJgqB,sBAAU,WACR4gB,OACC,CAAC5B,KACJhf,sBAAU,WAAO,IAAD,GACL,OAALjb,SAAK,IAALA,QAAA,EAAAA,GAAOU,OAAY,OAALV,SAAK,IAALA,IAAA,UAAAA,GAAOU,WAAP,eAAYtG,QAAS,GACrCygB,EAAO7a,GAAMU,IAAIV,GAAMU,IAAItG,OAAS,MAErC,CAAC4F,KAEJ,IA2DM67B,GAAkB,WACtB,IACMK,EADWjC,GAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMzI,aAChC0I,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAEvDqnC,EADarC,GAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMxI,iBAC5ByI,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAWnEqlC,GARa,CACXiC,SAHaL,EAIbM,aAAcF,EACdG,WAAYH,EACZx2B,MAAOo2B,EACP32B,OAPa22B,EAQb5W,OAPa4W,EAAMI,KA2BjBvnC,GAAQ,yCAAG,+BAAAE,EAAA,2DACXkL,EAAY1O,GADD,gCAEP2e,GACJR,GACAlb,GAAQ,+FAAsB,yBAJnB,2CAQX,IAAI3D,KAAKoP,GAAWgB,YAAc,IAAIpQ,KAAKU,GAAS0P,UARzC,gCASPiP,GACJR,GACAlb,GAAQ,+FAAsB,yBAXnB,2CAgBVulC,IAAkC,IAArBA,GAAU7/B,OAhBb,kCAiBPgW,GACJR,GACAlb,GAAK,uTAnBM,0CAyBfy6B,GAAU,GACJ3hC,EAAQ,CACZ+R,MAAOkjC,GACPtiC,YACA1O,UACA8T,OAAQ80B,GAAO90B,OACfrU,OAAQA,GAASA,GAAO7H,GAAK,EAC7BuX,MAAO3b,KAAKyB,UAAUuzC,IACtBjzC,KAAMA,GAAK2Y,IACXiJ,SAAU9W,EACN,CACE+W,WAAY/W,EAAU6N,IACtBqJ,aAAclX,EAAUxL,KACxByiB,eAAgBjX,EAAUhI,OAC1BwhB,cAAexZ,EAAUrG,OAE3B,CACEod,gBAAYjS,EACZoS,kBAAcpS,EACdmS,oBAAgBnS,EAChB0U,mBAAe1U,GAGrBsU,WAAYla,EACR,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEvBuU,SAAUla,EACN,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,MACzBygB,cAAe9a,EAAUxF,OAE3B,CACEkgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,EACfmV,mBAAenV,IAGjBwkD,EAAYr7C,GAAc,CAAEvS,QAAOwS,SAAOC,eAAavL,WAC7DymD,EAAgBC,GAChBjsB,GAAU,GACVQ,KAhFe,4CAAH,qDAmFRA,GAAc,WAjGlBwS,EAAa,MACbC,EAAW,MACX5H,EAAa,MACbhK,EAAe,MACf5c,EAAa,MACb+rB,GAAU,MACVqQ,GAAS,MACT9V,GAAa,IACbI,GAAU,IACViI,GAAe,IACfC,GAAY,MACZrT,GAAU,GACVuT,GAAa,MAuFblxB,KAOI7H,IAAU,OAAHnG,QAAG,IAAHA,OAAA,EAAAA,EAAKrD,WAAY,IAAIpP,KAAJ,OAASyS,QAAT,IAASA,OAAT,EAASA,EAAKrD,WAAa,IAAIpP,KACvDmQ,GAAG,OAAGhR,SAAH,IAAGA,QAAH,EAAGA,GAAcyZ,GAAKH,UAEzBjK,GAAQ7K,GACV2hB,EACE,oDACA,0DACFA,EACA,kBACA,mBAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASme,GACTpwB,MAAOA,GACPxK,SArBmB,WACrBT,GAAaS,GAAbT,IAqBExR,MAAOA,EACPurC,KAAMA,GACNp3B,GAAI,GACJ7S,SAAS,KACTqqC,OAAQA,EACR9L,QAAS54B,KAAO+c,KAAK,KACrBynB,UAAW75B,GAAQ,uCAAW,UAZhC,SAcE,uCACE,eAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,gBACGiiB,QADH,IACGA,OADH,EACGA,EAAKoJ,UAIV,gBAAC6M,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,SACE,gBAACuP,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMplB,MACbZ,MAAO4Z,EACP6G,SAAU,SAACwY,GAAD,OAAY2iB,EAAa3iB,IACnC9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMnlB,IACbb,MAAOkL,EACPuV,SAAU,SAACwY,GAAD,OAAY4iB,EAAW5iB,IACjC9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC6D,GAAD,CACEjnB,WAAW,EACXhQ,KAAK,YACLiQ,MAAOgW,GAAMhN,MACbhZ,MAAOk8C,GACPz7B,SAAU,SAACpR,GAAD,OAAY8sC,GAAa9sC,EAAEk6B,OAAOvpC,QAC5Cid,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,GACT1jC,MAAOuL,EACPqhB,eAAgBqnB,EAChBnmC,SAAUA,GACVK,MAAOA,GACP6e,QAzNC,WACnBonB,GAAY,IAyNM1oB,WAAS,EACTvb,WAAS,MAIb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbje,SAAUud,EACVx8B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAKA,OAIT,eAACuY,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,EAAYzmB,QACnB,SAACwiC,GAAD,OAA4B,IAAfA,EAAGlP,WAElB1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBie,EAChBhe,YAAa+d,EACb9d,SAAUge,EACVj9B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,WAKjB,gBAAC+iB,GAAA,EAAD,CACE7hB,MAAI,EACJ8hB,GAAI,EACJ5iB,MAAO,CACLxT,gBAAiB,OACjBuf,aAAc,GALlB,UAQE,eAAChM,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLyX,aAAc,GACdtsB,SAAU,GACVszB,SAAU,IAEZxe,QAAS,WACPyrC,GAAY,MACZF,IAAc,IATlB,SAYG5tC,GAAQ,gEAAgB,iBAE3B,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,IAAKizB,SAAU,QAAvC,SACGnX,GAAY9G,KAAI,SAAC8pC,GAChB,OACE,gBAAC5qC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAAS8lB,GAAoB,CAAE7E,IAAKy/B,IACpCxgD,UAAW6hB,GAAqB2+B,EAAIzhC,SAAU9M,MAEhD,eAAC4Z,GAAA,EAAD,CACEvX,QAAS,kBA5SJ,SAACa,GAC5B,IAAMsrC,EAAUjjC,GAAYtF,QAAO,SAACwoC,GAAD,OAAaA,EAAGhP,QAAUv8B,EAAKu8B,SAC5DkJ,EAAgB9D,GAAa2J,GACnCX,GAAelF,GAySsB+F,CAAqBH,IACpC1jC,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAHpB,SAKE,eAAC,KAAD,CACEkV,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAGlC,eAACgjB,GAAA,EAAD,CACExX,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyrC,GAAYS,GACZX,IAAc,IAEhB/iC,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,+BAWhD,gBAACmuB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,UACE,eAACuP,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,IAEzB,gBAAC+T,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXurB,aAAc,GACd1L,aAAc,IANlB,UASE,eAAC7L,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACovC,GAAD,CACEpf,QAASumB,EACTlH,QAhYM,SAAC36B,GACrB,IAAMwlC,EAAQ,uBAAOnD,IAAP,8BAAuBriC,GAAvB,IAA6B03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,GAAamD,IA8XC9wB,MAAOA,GACP4U,UAAWA,EACXC,YAAaA,EACbptB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,OAGX,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,SACE,eAACsmB,GAAD,CACE1wC,OAAQ,IACRyxB,KAAMqkB,GACNnF,SAxYO,SAACl9B,GACtB,IAAMwlC,EAAWnD,GAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,GAAamD,IAgYC72C,WA7XW,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,IACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,GAAamD,IA0XC3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,UAIZ,gBAACyyB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,gBAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,gBAACvjB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGsqB,GAAMzG,MADT,MACmBR,GAAY+0B,GAAO90B,WAEtC,eAACvO,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,IAAzB,SACE,eAACotC,GAAD,CACE9pC,KAAK,SACLiZ,MAAOgN,GAAMrb,OACbqb,MAAOA,GACP2G,QAAS1jB,GACTjJ,MAAO2K,GACPiiB,eAAgBwsB,GAChBlsB,QAAM,EACN/e,MAAOA,GACPlR,MAAO,WAIb,gBAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAAC7iB,GAAA,EAAD,CACEC,MAAO,CAAEye,SAAU,IAAKvyB,UAAW,GACnCzB,QAAQ,WACRwV,QAAS,kBAAMm5C,IAAa,IAH9B,4CAOA,eAACr5C,GAAA,EAAD,CACEC,MAAO,CAAEye,SAAU,IAAKvyB,UAAW,GACnCzB,QAAQ,WACRwV,QAAS,kBAAMi5C,GAAS,OAH1B,8EAQF,eAACv2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACQ,OAAL1Z,SAAK,IAALA,QAAA,EAAAA,GAAOU,MACN,eAAC6Y,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV+d,UAAW,KAJf,SAOE,eAACn+B,GAAA,EAAD,CAAKF,MAAO,CAAE3T,cAAe,OAA7B,gBACG6c,SADH,IACGA,IADH,UACGA,GAAOU,WADV,aACG,EAAYvH,KAAI,SAACkI,EAAS8yB,GACzB,OACE,gBAACn9B,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL3T,cAAe,MACfC,WAAY,SACZwf,eAAgB,gBAChBtf,gBAAiB,OACjB5C,OAAQ,EACRkB,QAAS,GARb,UAWE,eAACuU,GAAA,EAAD,UAAasO,GAAepD,EAAI3M,MAChC,eAACyB,GAAA,EAAD,CAAY5U,QAAQ,UAApB,SACG4yC,EAAQ,mBAU3B,eAAC,GAAD,CACEhtC,MAAOgZ,EACPhI,KAAM83C,GACNz+B,QAAS,kBAAM0+B,IAAa,IAC5Bn7C,SAAUi7C,GACVltD,MAAOA,EACP4R,MAAOA,GACP6X,MAAOA,KAET,eAAC,GAAD,CACEpU,KAAMkqC,GACN7wB,QAAS,kBAAM8wB,IAAc,IAC7B9+B,IAAKs8B,GACLzpB,OAAOypB,GACPrpB,UAjdY,SAAC7e,GACvB,IAAMwlC,EAAQ,uBAAOn9B,IAAP,CAAoBrI,IAC5BylC,EAAgB9D,GAAa6D,GACnCmF,GAAelF,IA+cL3mB,WA7ca,SAAC9e,GACxB,IAAMwlC,EAAWn9B,GAAY9G,KAAI,SAACg6B,GAChC,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnCmF,GAAelF,IAqcLv6C,MAAOA,EACP0K,MAAK,6BAAOgW,GAAP,IAAYrD,YAAW1O,cAE9B,eAAC,GAAD,CACEmgB,QAASA,GACTzZ,KAAMuiC,EACNlpB,QA/bY,WACtBmpB,GAAY,GACZC,GAAW,KA8bDvkB,OAAO,EACP6Y,YA5ba,SAACsO,GACxBhD,EAAagD,IA4bHh6B,IAAK,KACLiT,UAAWmT,GACXlT,WAAYoT,iBCrmBbzd,GAAW,SAAC7I,GAAD,OAAcA,EAAI2wB,OAEpCI,GAAqB,SAACj0C,GAAD,OACzB,eAAC,KAAD,cACEg0C,mBAAoB,gBAAG/tC,EAAH,EAAGA,MAAH,OAClB,eAAC4P,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiCyqB,OAAOzlB,GAAS,MAE/CjG,KAgBKk0C,GAAiBC,cAZf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,SASP,CAAE8D,KAAM,kBAA3BmuC,EAJH,SAAC,GAAD,IAAGzgC,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAMC,MAAP,6BAAiBD,GAAjB,IAA4B1+B,UAAWjC,EAAQ0gC,mBAOlC,SAAS2mB,GAAT,GAKN,IAJPzlC,EAIM,EAJNA,KACA0lC,EAGM,EAHNA,oBACA5mD,EAEM,EAFNA,MACA6X,EACM,EADNA,MAEMwF,EAAMzF,GAAW,CAAE5X,QAAO6X,UAD1B,EAGYtY,oBAAS,CACzB,CAAE5K,GAAI,EAAGyE,IAAK,QAASxH,KAAM,QAASiZ,MAAOgN,EAAMhN,OACnDwS,EAAI5R,UACJ4R,EAAIvE,OACJ,CACEnkB,GAAI,EACJyE,IAAK,aACLxH,KAAM,iBACNiZ,MAAOgN,EAAMrB,YAEf,CACE7hB,GAAI,EACJyE,IAAK,WACLxH,KAAM,eACNiZ,MAAOgN,EAAMpB,UAGf4G,EAAI7gB,OACJ6gB,EAAIxM,SAlBCwvB,EAHD,qBAwBAE,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBopB,EAAQppB,EAAQ,GACtBuwC,EAAoBnnB,IAHF,2CAAH,sDAOnB,OACE,eAAC5a,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV12B,OAAQ,GACRy0C,UAAW,KALf,SAQGvf,GACC,gBAAC,KAAD,CAAMA,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQ,IACR4jC,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,GACpBjY,eAAgBf,KAElB,eAAC,KAAD,CACEgB,IAAK,CAAC,aACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,UACNlB,mBAAoBtvB,KAEtB,eAAC,KAAD,CACEwwB,IAAK,CAAC,UACNlB,mBAAoBnvB,KAEtB,eAAC,KAAD,CACEqwB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,kBACNlB,mBAAoB,SAACh0C,GAAD,O9HqMG,SAAC,GAAyB,IAAD,IAAtBkjB,EAAsB,EAAtBA,IAAK9O,EAAiB,EAAjBA,MACzC,OACE,+BACGA,EAAK,OACF8O,QADE,IACFA,GADE,UACFA,EAAK0H,kBADH,aACF,EAAiBO,iBADf,OAEFjI,QAFE,IAEFA,GAFE,UAEFA,EAAK0H,kBAFH,aAEF,EAAiBM,iB8HzMb+vC,CAAoB,6BAAKj7D,GAAN,IAAaoU,cAGpC,eAAC,KAAD,CACE8gC,IAAK,CAAC,gBACNlB,mBAAoB,SAACh0C,GAAD,O9HwMC,SAAC,GAAyB,IAAD,IAAtBkjB,EAAsB,EAAtBA,IAAK9O,EAAiB,EAAjBA,MACvC,OACE,+BACGA,EAAK,OAAG8O,QAAH,IAAGA,GAAH,UAAGA,EAAK2H,gBAAR,aAAG,EAAeU,eAAlB,OAAmCrI,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAK2H,gBAAxC,aAAmC,EAAeS,e8H1MhD4vC,CAAkB,6BAAKl7D,GAAN,IAAaoU,cAGlC,eAAC,GAAD,CAAoB8gC,IAAK,CAAC,WAC1B,eAAC,KAAD,CAAgBiY,qBAAmB,IAEnC,eAAC,KAAD,CACEhY,kBAAmB7f,GAAQA,EAAKxb,OAAS,EACzCu7B,iBAAkBjnB,KAEpB,eAAC,KAAD,CACEpoB,KAAK,eACLsvC,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aAWX,MAVY,CACV,CACE7b,IAAK,cACLryB,KAAMmuC,KAAgBC,YACtBvyC,MAAO,KAJC,oBAMPqyC,EAAal7B,QACd,SAACq7B,GAAD,OAAYA,EAAEruC,OAASmuC,KAAgBC,yBC7IlD,I,YAAMwD,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cAqeSsnB,GAheG,SAAC,GAmBP,IAlBVtjD,EAkBS,EAlBTA,KACAqZ,EAiBS,EAjBTA,QACAhO,EAgBS,EAhBTA,IACA6S,EAeS,EAfTA,MACAI,EAcS,EAdTA,UACAC,EAaS,EAbTA,WACAyK,EAYS,EAZTA,UACAC,EAWS,EAXTA,YACA6I,EAUS,EAVTA,UACAwP,EASS,EATTA,iBACA32C,EAQS,EARTA,MACAgG,EAOS,EAPTA,SACAovC,EAMS,EANTA,QACAxV,EAKS,EALTA,QACAg5B,EAIS,EAJTA,WACAC,EAGS,EAHTA,SAGS,IAFTp1D,aAES,MAFD,KAEC,MADTD,YACS,MADF,KACE,IACmB2N,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAG8Bl7B,oBAAS,MAHvC,oBAGFwuC,EAHE,KAGSC,EAHT,OAIsBzuC,oBAAS,MAJ/B,oBAIF9M,EAJE,KAIKyzB,EAJL,OAKkB3mB,oBAAS,MAL3B,oBAKF7M,EALE,KAKGyzB,EALH,OAO6B5mB,oBAC3B,iBAAT3N,EAA0BC,EAAQ,MAR3B,oBAOFyK,EAPE,KAOWw/B,EAPX,OAU6Bv8B,qBAAc,GAV3C,oBAUFm9B,EAVE,KAUWC,EAVX,KAWHC,EAAiBp5B,KAAM44B,SAXpB,EAayB78B,oBACvB,eAAT3N,EAAwBC,EAAQ,MAdzB,oBAaF0K,EAbE,KAaS2iB,EAbT,OAgByB3f,qBAAc,GAhBvC,oBAgBFs9B,EAhBE,KAgBSC,EAhBT,KAiBHX,GAAe34B,KAAM44B,SAjBlB,GAmByB78B,oBACvB,eAAT3N,EAAwBC,EAAQ,MApBzB,sBAmBFuL,GAnBE,MAmBS0oC,GAnBT,SAsByBvmC,qBAAc,GAtBvC,sBAsBF47C,GAtBE,MAsBSC,GAtBT,MAuBHC,GAAe73C,KAAM44B,SAvBlB,GAyBwB78B,oBAAS,MAzBjC,sBAyBF/C,GAzBE,MAyBMyuC,GAzBN,SA2ByB1rC,qBAAc,GA3BvC,sBA2BF2nD,GA3BE,MA2BSC,GA3BT,SA4BmB5nD,oBAAc,IA5BjC,sBA4BF6nD,GA5BE,MA4BMC,GA5BN,SA6BiB9nD,oBAAc,MA7B/B,sBA6BF6R,GA7BE,MA6BK0tC,GA7BL,SA+Bev/C,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IA/BtD,sBA+BFy3B,GA/BE,MA+BIze,GA/BJ,SAiCiCxb,aAAQ,IAA1CC,GAjCC,GAiCDA,SAAUC,GAjCT,GAiCSA,aAAc+6B,GAjCvB,GAiCuBA,MAjCvB,GAoCU76B,sBAAWtB,IAD5ByB,UAAa4X,GAnCN,GAmCMA,MAAO7X,GAnCb,GAmCaA,MAiBtBumB,sBAAU,WACR,GAAI5E,GACEplB,GAAsB,iBAAT3K,IACf,OAAI2K,QAAJ,IAAIA,OAAJ,EAAIA,EAAWsa,cAAc,CAAC,IAAD,EACrB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,QAAZ,IAAYA,OAAZ,EAAYA,EAAWsa,wBAD7B,aAAG,EAET,GACJilB,EAAe0K,MAIpB,CAACjqC,IAEJgqB,sBAAU,WACR,GAAI5E,EAAO,CAAC,IAAD,EACHlvB,EAAQ,IAAI4J,KACZ3J,EAAM,IAAI2J,KAQhB,GAPA5J,EAAMgiB,SAAS,EAAG,EAAG,EAAG,GACxB/hB,EAAIkiB,QAAQliB,EAAI+Z,UAAY,GAC5B/Z,EAAI+hB,SAAS,GAAI,GAAI,GAAI,KACzByR,EAASzzB,GACT0zB,EAAOzzB,GACPu4C,GAAS,UAACnwC,GAAYmL,QAAO,SAACyK,GAAD,OAAuB,IAAVA,EAAG/b,aAApC,aAAC,EAA+C,IACzD0yD,GAAU,IACG,eAATz1D,IACF,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOglB,cAAc,CAAC,IAAD,EACjB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAYpZ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOglB,wBADzB,aAAG,EAET,GACJilB,EAAe0K,OAIpB,CAAC/iC,IAKJ8iB,sBAAU,YAJc,WACtB,IAAM+gC,EAASr2D,KAAEw0B,MAAM2hC,GAAQ,UAC/BtI,GAASwI,GAGTngB,KACC,CAACigB,KAEJ7gC,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAMiyB,EAAQpuB,EAAI+H,aACZsmB,EAAQruB,EAAImI,WACZ2kC,EAAS9sC,EAAIqF,WAKnB,GAHA+R,EAAQ,OAACpX,QAAD,IAACA,OAAD,EAACA,EAAKrc,OACd0zB,EAAM,OAACrX,QAAD,IAACA,OAAD,EAACA,EAAKpc,KACZs7C,EAAY,OAACl/B,QAAD,IAACA,OAAD,EAACA,EAAKjE,OACdqyB,EAAO,CACT,IAAMb,EAAS3P,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,EAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,EAAake,GAEf,GAAIwe,EAAQ,CACV,IAAMvU,EAAO9R,EAAUtvB,QAAO,SAAC81C,GAAD,OAAaA,EAAG9wC,MAAQ2wC,KAAQ,GAC9D9V,GAAauB,OAGhB,CAACv4B,IAEJ,IAWMzO,GAAQ,yCAAG,+BAAAE,EAAA,2DACX9N,EAAQC,GADG,gCAEPgpB,GACJR,GACAlb,GAAQ,+FAAsB,yBAJnB,2CASV+tC,EATU,gCAUPryB,GACJR,GACAlb,GAAQ,kHAA0B,yBAZvB,2CAiBV5C,GAjBU,kCAkBPse,GACJR,GACAlb,GAAQ,oIAA6B,uBApB1B,8CAwBX2hB,GAAWylC,IAA4B,IAAlBA,GAAO1hD,OAxBjB,kCAyBPgW,GACJR,GACAlb,GAAQ,mFAAoB,0BA3BjB,0CA+Bfy6B,GAAU,GACJ1kB,EACJqxC,IAAUA,GAAO1hD,OAAS,EAAIoQ,GAAesxC,SAAUllD,EAEnD1B,EAAiB,CACrB7L,GAAIma,GAAOA,EAAIna,GAAKma,EAAIna,QAAKuN,EAC7B2I,MAAOkjC,IAAS,OAAe3wC,SAAf,IAAeA,QAAf,EAAeA,GAAWxL,MAC1Ca,QACAC,MACAme,OAAQO,GACR5U,OAAQA,GAASA,GAAO7H,GAAK,EAC7BojB,SAAU,EACVhC,SACA6C,MAAOwuC,GAASA,GAAO1hD,YAASxD,EAChCqlD,OAAQ5lC,EAAQ,OAAIzf,EACpBgS,SAAU9W,GACN,CACE+W,WAAY/W,GAAU6N,IACtBqJ,aAAclX,GAAUxL,KACxByiB,eAAgBjX,GAAUhI,OAC1BwhB,cAAexZ,GAAUrG,OAE3B,CACEod,gBAAYjS,EACZoS,kBAAcpS,EACdmS,oBAAgBnS,EAChB0U,mBAAe1U,GAGrBsU,WAAYla,EACR,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEvBuU,SAAUla,EACN,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,MACzBygB,cAAe9a,EAAUxF,OAE3B,CACEkgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,EACfmV,mBAAenV,IAKvB24B,GAFelZ,EAAQI,EAAYC,EAErBxhB,GA3FC,4CAAH,qDA8FRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACTwa,YAAW,WACTgT,IACAiN,OACC,KACH,MAAOz7B,GACP07B,GAAQ17B,GACR+X,QAAQC,IAAIhY,GATF,2CAAH,wDAaL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,GAASlb,IAFlB,6CAINsb,GAAWJ,GAASlb,IAJd,OAKZ26B,KACApjB,QAAQC,IAAIhY,GANA,2CAAH,sDAUPy7B,GAAc,WA/HlB/U,EAAS,MACTC,EAAO,MACP2f,GAAa,MACbhK,EAAe,MACf5c,EAAa,MACb+rB,GAAU,MACV+C,EAAa,MACbvT,GAAU,GA0HV3d,KAOI7H,IAAU,OAAHnG,QAAG,IAAHA,OAAA,EAAAA,EAAKrc,OAAQ,IAAI4J,KAAJ,OAASyS,QAAT,IAASA,OAAT,EAASA,EAAKrc,OAAS,IAAI4J,KAC/CmQ,GAAG,OAAGhR,SAAH,IAAGA,QAAH,EAAGA,GAAcyZ,GAAKH,UACzBjK,GAAQ7K,GACV2hB,EACE,0DACA,0DACFA,EACA,WACA,YAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASme,GACTpwB,MAAOA,GACPxK,SApBmB,WACrBT,GAAaS,GAAbT,IAoBExR,MAAOA,EACPurC,KAAMA,GACNp3B,GAAI,GACJ7S,SAAUiyB,EAAQ,KAAO,KACzB3f,WAAS,EACT83B,cAAY,EACZC,OAAQA,EACR9L,QAAS54B,KAAOie,WAAW,KAC3BwV,GAAI,GAdN,SAgBE,uCACE,eAACxmB,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,gBACGiiB,QADH,IACGA,OADH,EACGA,EAAKoJ,UAIV,gBAAC6M,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACR6L,WAAW,EACXhQ,KAAK,YACLiQ,MAAOgW,GAAMhN,MACbhZ,MAAOk8C,EACPz7B,SAAU,SAACpR,GAAD,OAAY8sC,EAAa9sC,EAAEk6B,OAAOvpC,QAC5Cid,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,EACT1jC,MAAOuL,GACPqhB,eAAgBqnB,GAChBpnB,eAAgB08B,GAChBz8B,YAAaw8B,GACbv8B,SAAUy8B,GACV17C,SAAUA,GACVK,MAAOA,GACPgC,WAAS,EACTub,WAAS,EACT6B,SAAmB,eAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMplB,MACbZ,MAAOY,EACP6f,SAAU,SAACwY,GAAD,OAAY5E,EAAS4E,IAC/B9C,OAAO,qBACP3Y,MAAI,EACJyZ,GAAI,MAIR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbje,SAAUud,GACVx8B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAKA,GACL4S,SAAmB,eAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,EAAYzmB,QAAO,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAC9C1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBie,EAChBhe,YAAa+d,EACb9d,SAAUge,EACVj9B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTod,SAAmB,iBAATxtB,MAGd,eAACmzB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMnlB,IACbb,MAAOa,EACP4f,SAAU,SAACwY,GAAD,OAAY3E,EAAO2E,IAC7B9C,OAAO,qBACP3Y,MAAI,EACJyZ,GAAI,SAIV,eAAC/D,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,SACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACGrD,GACC,gBAACrf,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjBN,UAAW,GACX6f,aAAc,IAJlB,UAOE,eAAC7L,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,aAChB0R,kBAAmB,IALvB,SAQE,eAACzd,GAAA,EAAD,CACEvL,MAAM,UACNyL,QAAS,kBAAM8kD,IAAa,IAC5Bt6D,QAAQ,YAHV,SAKGmT,GAAQ,sEAAiB,uBAG9B,gBAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,UACE,eAAC8sC,GAAD,CACEa,UAAW7lC,EACXT,KAAMkmC,GACNR,oBAjXU,SAACnnB,GAC3B,IAAMmJ,EAAO,aAAOwe,IACpBxe,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCye,GAAU1e,IA8WMlc,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXwP,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,GACP6X,MAAOA,GACPzpB,MAAOA,EACPyqB,OAAQ/J,EAAIna,GACZgtB,MAAOA,EACPlL,SAAUla,EACVia,WAAYla,EACZ4X,SAAU9W,GACVomC,QAASA,EACT/wC,MAAOu0D,EACPt0D,IAAKu0D,IAEP,gBAACxlD,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGsqB,GAAMzG,MADT,MACmBR,GAAYQ,iBAOzC,eAAC,GAAD,CACE3N,KAAMyjD,GACNpqC,QAAS,kBAAMqqC,IAAa,IAC5Br4C,IAAK,KACL6S,OAAO,EACP8K,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACX9e,SAAUla,EACVia,WAAYla,EACZ4X,SAAU9W,GACV2nC,iBAAkBA,EAClB32C,MAAOA,EACP+3B,OAAQA,EACRsgC,gBAhagB,SAAC1wC,GACvB,IAAM2yB,EAAQ,uBAAO0e,IAAP,aAAkBrxC,IAC1B0xC,EAASx2D,KAAEy2D,OAAOhf,EAAU,aAC5BC,EAAgB9D,GAAa4iB,GACnCJ,GAAU1e,YCvFCj3C,gBAAf,i+CCAeA,gBAAf,8/CCAeA,gBAAf,6JCmDM+sD,GAAqB,SAAC,GAAD,IAAGn/C,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,iBAE3CF,GAAiBC,cArDf,SAAC3xC,GAAD,MAAiB,CAC9B4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAkDP,CAAE8D,KAAM,kBAA3BmuC,CAC5B0e,ICrBW5Z,IDuBqB9E,cAjDf,iBAAO,CACxBC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK1N,KAAO+c,KAAK,KAAM,UA8CW,CACvDxgB,KAAM,kBAD0BmuC,CAE/B0e,IACgC1e,cA7Cf,iBAAO,CACzBC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK1N,KAAO2c,MAAM,KAAM,SA0CY,CACzDpgB,KAAM,kBAD2BmuC,CAEhC0e,IAC8B1e,cAzCf,iBAAO,CACvBC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK1N,KAAOuc,IAAI,KAAM,SAsCU,CACrDhgB,KAAM,kBADyBmuC,CAE9B0e,IACiC1e,cArCf,iBAAO,CAC1BC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK1N,KAAOsyD,OAAO,KAAM,SAkCa,CAC3D/1D,KAAM,kBAD4BmuC,CAEjC0e,IACiC1e,cAjCf,iBAAO,CAC1BC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK1N,KAAOie,WAAW,KAAM,SA8BS,CAC3D1hB,KAAM,kBAD4BmuC,CAEjC0e,IAC+B1e,cA7Bf,iBAAO,CACxBC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK1N,KAAO2zB,KAAK,KAAM,SA0BW,CACvDp3B,KAAM,kBAD0BmuC,CAE/B0e,ICxCyB,SAAClpC,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,eAoiBSmoB,GA/hBU,SAAC,GAYd,IAXVnkD,EAWS,EAXTA,KACAqZ,EAUS,EAVTA,QACA/jB,EASS,EATTA,KACAw8B,EAQS,EARTA,UACAvG,EAOS,EAPTA,SACAvC,EAMS,EANTA,UACAC,EAKS,EALTA,YACA8W,EAIS,EAJTA,QAIS,IAHT7hB,aAGS,SAFTvzB,EAES,EAFTA,MACA8d,EACS,EADTA,MAEM5M,EAAUvP,KADP,EAEewP,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAG+B1X,KAAMjE,SAAS,IAAIlD,MAHlD,oBAGF8oC,EAHE,KAGYC,EAHZ,OAIiB7lC,oBAAc,IAJ/B,oBAIF8lC,EAJE,KAIKC,EAJL,OAMyB/lC,oBAAc,IANvC,oBAMFgmC,EANE,KAMSC,EANT,OAOuBjmC,oBAAc,IAPrC,oBAOFiJ,EAPE,KAOQi9B,EAPR,OAQiBlmC,oBAAc,QAR/B,oBAQFkiC,EARE,KAQKC,EARL,OAUuBniC,oBAAS,GAVhC,oBAUF8R,EAVE,KAUQq0B,EAVR,OAWmBnmC,oBAAc,IAXjC,oBAWFomC,EAXE,KAWMC,EAXN,OAayBrmC,oBAAc,MAbvC,oBAaFnC,EAbE,KAaS0oC,EAbT,OAcyBvmC,qBAAc,GAdvC,oBAcF47C,EAdE,KAcSC,EAdT,KAeHC,GAAe73C,KAAM44B,SAflB,GAiB6B78B,oBAAc,MAjB3C,sBAiBFjD,GAjBE,MAiBWw/B,GAjBX,SAkB6Bv8B,qBAAc,GAlB3C,sBAkBFm9B,GAlBE,MAkBWC,GAlBX,MAmBHC,GAAiBp5B,KAAM44B,SAnBpB,GAqByB78B,oBAAc,MArBvC,sBAqBFhD,GArBE,MAqBS2iB,GArBT,SAsByB3f,qBAAc,GAtBvC,sBAsBFs9B,GAtBE,MAsBSC,GAtBT,MAuBHX,GAAe34B,KAAM44B,SAvBlB,GAyBmB78B,qBAAS,GAzB5B,sBAyBFoiC,GAzBE,MAyBMC,GAzBN,SA2BuBliC,aAAQ,IAAhCE,GA3BC,GA2BDA,aAAc+6B,GA3Bb,GA2BaA,MA3Bb,GA+BU76B,sBAAWtB,IA/BrB,MA6BPyB,UAAa4X,GA7BN,GA6BMA,MAAO7X,GA7Bb,GA6BaA,MACX1N,GA9BF,GA8BPhC,MAASgC,KAGLw8C,GAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOwhB,GACPvuC,UAAW,CACT/N,OAAO,IAAI4J,MAAOoY,SAAS,EAAG,EAAG,EAAG,GACpC/hB,KAAK,IAAI2J,MAAOoY,SAAS,GAAI,GAAI,GAAI,OAGzC,CACE8Y,MAAOkI,IAET,CACElI,MAAOkJ,IAET,CACElJ,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MA1DJ,GA+DYhtB,aAAY8uC,GAAeF,IAAzClgB,GA/DE,yBAiEyB0X,KAA1BvQ,GAjEC,GAiEDA,QAASJ,GAjER,GAiEQA,aA2CjBpP,sBAAU,WACJ5E,GAASoU,IACXuP,GAAgB,OAAPvP,SAAO,IAAPA,QAAA,EAAAA,GAASn+B,cAAe0f,OAAM,OAACye,SAAD,IAACA,QAAD,EAACA,GAASn+B,cAAgB,EAAI,KAEtE,CAAC6L,IAEJ8iB,sBAAU,WACR4gB,OACC,CAAC5B,EAAWl0B,EAAUowB,EAAOE,KAEhCpb,sBAAU,WACR,GAAIxtB,GAAQA,EAAKtG,MAAO,CACtB,IAAMwY,EAAMlS,EAAKob,WACXkzB,EAAO9R,EAAUtvB,QAAO,SAACw4B,GAAD,OAAaA,EAAGxzB,MAAQA,KAAK,GAC3D66B,EAAauB,GACb,IAAMnK,EAAQnkC,EAAK8d,aACbsmB,EAAQpkC,EAAKke,WACnB,GAAIimB,EAAO,CACT,IAAMb,EAAS3P,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,GAAeO,GAEjB,GAAIc,EAAO,CACT,IAAMC,EAAO3Q,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,GAAake,IAGblxB,GACFs5B,EAAat5B,KAEd,CAACnT,EAAMi2B,EAAUuG,EAAWrpB,IAE/B,IAAMi7B,GAAkB,WACtB,IACMK,EADWjC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMzI,aAChC0I,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAEvDqnC,EADarC,EAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMxI,iBAC5ByI,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAC7DsQ,EAAS22B,EAAMn2B,EAUrBu0B,EARa,CACXiC,SAAUh3B,EACVi3B,aAAcF,EACdG,WAAYH,EACZx2B,MAAOo2B,EACP32B,SACA+f,OAPa4W,EAAMn2B,EAAWu2B,IA+BhCnC,EArBa,CACX,CACEuC,SAAUz/B,GACV6L,UAAW7L,GACXsI,OAAQ22B,EACRv0C,KAAM0E,GAAeC,cAEvB,CACEowC,SAAUz/B,GACV6L,UAAW7L,GACXsI,OAAQQ,EACRpe,KAAM0E,GAAeM,kBAEvB,CACE+vC,SACY,SAAVvG,EAAmBl5B,GAA2BA,GAChD6L,UAAW7L,GACXsI,OAAQ8wB,GAAS6F,EAAMn2B,EAAW,EAClCpe,KAAM0E,GAAeK,oBAMrBqI,GAAQ,yCAAG,2CAAAE,EAAA,2DACoB4U,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8vB,EAAe/vB,GAAe+vB,EAAe9vB,GAFlC,gCAGPqG,GACJR,EACAlb,GAAQ,+FAAsB,yBALnB,6CASXqR,EAAW,GATA,gCAUPqK,GACJR,EACAlb,GAAQ,sIAA+B,2BAZ5B,6CAgBXqR,GAAQ,OAAGs0B,QAAH,IAAGA,OAAH,EAAGA,EAAQv0B,QAhBR,kCAiBPsK,GACJR,EACAlb,GACI,6NACA,sCArBO,6CAyBV5C,EAzBU,wBA0Bbg+C,GAAa,GACbC,GAAQp7B,QAAQ6e,QA3BH,gCA8BXnd,GAASrK,OAAO+tB,IAAU/tB,OAAOye,GAAQn+B,eA9B9B,kCA+BP8jB,GACJR,EACAlb,GAAK,uCAC+B+1B,GAAQn+B,cADvC,6KAEmCm+B,GAAQn+B,eAnCrC,6CAuCV2tC,GAAkC,IAArBA,EAAU7/B,OAvCb,kCAwCPgW,GACJR,EACAlb,GAAK,6KACmC+1B,GAAQn+B,cAD3C,uCAE+Bm+B,GAAQn+B,eA5CjC,0CAgDPiZ,EAAsC80B,EAAtC90B,OAAQk3B,EAA8BpC,EAA9BoC,WAAYnX,EAAkB+U,EAAlB/U,OAAQxf,EAAUu0B,EAAVv0B,MAE9B5Q,EAAiB,CACrB0X,MAAOmtB,EAAQA,EAAM4C,gBAAa/lC,EAClCmN,KAAM81B,EACNjxB,SAAU,CACRC,WAAY/W,EAAU6N,IACtBqJ,aAAclX,EAAUxL,KACxByiB,eAAgBjX,EAAUhI,OAC1BwhB,cAAexZ,EAAUrG,OAE3Byf,WAAYla,GACR,CACEua,aAAcva,GAAY2O,IAC1B6L,eAAgBxa,GAAY1K,KAC5BmlB,iBAAkBza,GAAYlH,OAC9B4hB,gBAAiB1a,GAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEvBuU,SAAUla,GACN,CACE0a,WAAY1a,GAAU0O,IACtBiM,aAAc3a,GAAU3K,KACxBulB,eAAgB5a,GAAUnH,OAC1BgiB,cAAe7a,GAAU3F,MACzBygB,cAAe9a,GAAUxF,OAE3B,CACEkgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,EACfmV,mBAAenV,GAErBgK,MAAO3b,KAAKyB,UAAUuzC,GACtBwC,aACA32B,QACAC,WACAR,SACA+f,SACAsX,OAAQvG,GACRA,UACAwG,WAAYxG,GAAS9wB,EAAS,EAC9BrI,WACA++B,YAAa9F,EACb7G,OAAQtoC,GAAK2Y,IACb4N,OAAQ9f,EAAKpE,IAGfkmC,GAAMjM,GAAYpuB,GAtGH,4CAAH,qDAyGRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cAETm1B,KACAsF,KACA,MAAOz7B,GACP07B,GAAQ17B,GACR+X,QAAQC,IAAIhY,GARF,2CAAH,wDAYL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,IAFlB,6CAINsb,GAAWJ,EAASlb,IAJd,OAKZ26B,KACApjB,QAAQC,IAAIhY,GANA,2CAAH,sDAUPy7B,GAAc,WA9OlBuK,EAAa,IACbE,EAAY,GACZE,EAAU,IACVE,EAAa,MACbR,EAAS,IACTG,EAAY,IACZ/D,EAAS,QACT0D,EAAgB,IAAI/oC,MACpBy/B,GAAe,MACf5c,GAAa,MAuObpC,KAOIsrB,GAAoBhM,oBACpBiM,GAAmBC,2BAAgB,CACvCj5C,QAAS,kBAAM+4C,GAAanoB,SAC5BsoB,cAAc,YAAD,OAAclD,GAC3BmD,kBAAkB,IAEd9F,GAAY,CAChBsB,UAAWqB,EACXh2B,KAAM81B,EACN7wB,aAAY,OAAElX,QAAF,IAAEA,OAAF,EAAEA,EAAWxL,KACzBglB,cAAa,OAAExZ,QAAF,IAAEA,OAAF,EAAEA,EAAWrG,MAC1Bqa,MAAOu0B,EAAOv0B,MACdP,OAAQ80B,EAAO90B,OACf3E,MAAOq5B,GAGH16B,GAAQ7K,GACV2hB,EACE,sEACA,sEACFA,EACA,cACA,eAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASme,GACTpwB,MAAOA,GACPxK,SAlCmB,WACrBT,GAAaS,GAAbT,IAkCExR,MAAOA,EACPurC,KAAMA,EACNnI,MAAO6W,GACP34C,SAAS,KACT6S,GAAI,EACJumB,GAAI,GACJmF,QAAS54B,KAAO2c,MAAM,KAZxB,SAcE,gBAAC+S,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMxI,KACbxd,MAAOszC,EACP7yB,SAhQe,SAAC2C,GACxBmwB,EAAgBnwB,QAkQZ,eAAC8P,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC,GAAD,CACEnN,MAAOA,GACP4pB,MAAOA,EACPE,OAAQA,GACRC,UAAWA,GACXF,SAAUA,MAGd,eAAC3c,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,EACT1jC,MAAOuL,EACPqhB,eAAgBqnB,EAChBpnB,eAAgB08B,EAChBz8B,YAAaw8B,EACbn7C,MAAOA,GACPgC,WAAS,MAIb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAAC1iB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAeuR,GAAQ,cAAgB,MACvCtR,WAAY,SACZwf,eAAgB,WAChBlhB,WAAYgT,QAAQkC,EAAY,GAChCjV,YAAa+S,GAAQ,QAAKkC,GAR9B,UAWGyf,GACC,eAAClgB,GAAA,EAAD,CAAYW,MAAO,CAAExL,MAAO,QAA5B,SAAuCihB,GAAMC,KAE/C,eAACnW,GAAA,EAAD,CACE/P,KAAK,QACLwtB,UAAWuC,EACX9vB,MAAOwzC,EACP/yB,SAAU,SAACpR,GAAD,OAAYokC,EAAShuB,OAAOpW,EAAEk6B,OAAOvpC,SAC/ChF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO6yB,EAAQ,GAAK,IAAK30B,WAAY,IAC9ChB,OAAO,QAEP6yC,WAAY,CACVz8B,MAAO,CACLiR,UAAW,SACX9lB,SAAU,GACVkC,OAAQ,YAOlB,eAACs1B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,GACPkiB,eAAgBS,GAChBR,eAAgBoe,GAChBne,YAAake,GACbje,SAAUud,GACVpd,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAK,SAGT,eAACuY,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,EAAYzmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGlP,WAC5C1nC,MAAOyK,GACPmiB,eAAgBqd,GAChBpd,eAAgBie,GAChBhe,YAAa+d,GACb9d,SAAUge,GACV7d,QAAM,EACN/e,MAAOA,GACPlR,MAAO,QAGX,gBAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXurB,aAAc,GACd1L,aAAc,IANlB,UASE,eAAC7L,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACovC,GAAD,CACEpf,QAASwQ,EACT6O,QArYQ,SAAC36B,GACrB,IAAMwlC,EAAQ,uBAAOnD,GAAP,8BAAuBriC,GAAvB,IAA6B03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,EAAamD,IAmYD9wB,MAAOA,GACP4U,UAAWA,EACXC,YAAaA,EACbptB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,OAIX,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,SACE,eAACsmB,GAAD,CACEjf,KAAMqkB,EACNnF,SA7YS,SAACl9B,GACtB,IAAMwlC,EAAWnD,EAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,EAAamD,IAqYD72C,WAlYa,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,GACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,EAAamD,IA+XD3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,UAIZ,gBAACgQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,iBAJpB,UAOE,eAACvM,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAOgW,GAAMxG,SACbxf,MAAOwf,EAAS42B,WAChB31B,SAAU,SAACpR,GAAD,OAAYwkC,EAAYpuB,OAAOpW,EAAEk6B,OAAOvpC,SAClDhF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPiH,KAAK,SACL0rC,QAAS,SAACz9B,GAAD,OAAOA,EAAEk6B,OAAOwD,YAG3B,eAAC,GAAD,CACE/tB,OAAM,OAAE80B,QAAF,IAAEA,OAAF,EAAEA,EAAQ90B,OAChBO,MAAK,OAAEu0B,QAAF,IAAEA,OAAF,EAAEA,EAAQv0B,MACfC,SAAUA,EACVwG,MAAOA,QAGX,eAACvV,GAAA,EAAD,UACE,sBAAKF,MAAO,CAAE5T,QAAS,QAAvB,SACE,eAAC,GAAD,CACEg1C,QAASA,EACTd,UAAWA,GACXtpC,IAAKgvC,kBChkBN12C,gBAAf,4gCC2BA,SAASm2D,GAASj8D,GAAQ,IAChBmxB,EAAqCnxB,EAArCmxB,SAAUlrB,EAA2BjG,EAA3BiG,MAAO4tC,EAAoB7zC,EAApB6zC,MAAUqoB,EADZ,aACsBl8D,EADtB,8BAGvB,OACE,gDACE6I,KAAK,WACLszD,OAAQl2D,IAAU4tC,EAClB9qC,GAAE,4BAAuB8qC,GACzBvF,kBAAA,uBAAiCuF,IAC7BqoB,GALN,aAOGj2D,IAAU4tC,GACT,eAACn9B,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,UAAasb,SAcvB,IAAMirC,GAAY75D,cAAW,SAACC,GAAD,MAAY,CACvCc,KAAM,CACJk0B,SAAU,EACVx0B,gBAAiBR,EAAMR,QAAQI,WAAWK,MAC1CG,QAAS,OACTiB,OAAQ,KAEVw4D,KAAM,CACJC,YAAY,aAAD,OAAe95D,EAAMR,QAAQu6D,cAuc7BC,GA1bO,SAAC,GAaX,IAZV3kD,EAYS,EAZTA,KACAqZ,EAWS,EAXTA,QACA5Z,EAUS,EAVTA,KACA+P,EASS,EATTA,MACA0O,EAQS,EARTA,MACA8K,EAOS,EAPTA,UACAC,EAMS,EANTA,YACA6I,EAKS,EALTA,UACAwP,EAIS,EAJTA,iBACA32C,EAGS,EAHTA,MACAgG,EAES,EAFTA,SACAovC,EACS,EADTA,QAEMlkC,EAAU0oD,KADP,EAGyBzoD,qBAAc,GAHvC,oBAGF2nD,EAHE,KAGSC,EAHT,OAImB5nD,oBAAc,IAJjC,oBAIF6nD,EAJE,KAIMC,EAJN,OAKiB9nD,oBAAc,MAL/B,oBAKF6R,EALE,KAKK0tC,EALL,OAMav/C,oBAAS2D,GANtB,oBAMF4L,EANE,KAMGu5C,EANH,OAOiB7kD,KAAMjE,SAAS,GAPhC,oBAOF1N,EAPE,KAOKm+C,EAPL,KAaTzpB,sBAAU,WACR,IAAQ,OAAJrjB,QAAI,IAAJA,OAAA,EAAAA,EAAMvO,KAAMse,GAASA,EAAMvN,OAAS,EAAG,CAAC,IAAD,EACnC4iD,EAAM,UAAGr1C,EAAMhN,QAAO,SAACqhC,GAAD,OAAaA,EAAG3yC,KAAOuO,EAAKvO,aAA5C,aAAG,EAA+C,GAC9D0zD,EAAOC,MAER,CAACr1C,IAlBK,MAoB6B1T,qBAAS,GApBtC,oBAoBFk8C,EApBE,KAoBWC,EApBX,OAqByBn8C,oBAAc,IArBvC,oBAqBFgmC,EArBE,KAqBSC,EArBT,KAsBH30B,GAAY,OAAH/B,QAAG,IAAHA,OAAA,EAAAA,EAAK+B,QAAS/B,EAAI+B,OAAS,EACpCa,GAAmB,OAAH5C,QAAG,IAAHA,OAAA,EAAAA,EAAK4C,eAAgB5C,EAAI4C,cAAgB,EACzDC,GAAe,OAAH7C,QAAG,IAAHA,OAAA,EAAAA,EAAK6C,WAAY7C,EAAI6C,UAAY,EAC7CI,GAAmB,OAAHjD,QAAG,IAAHA,OAAA,EAAAA,EAAKiD,eAAgBjD,EAAIiD,cAAgB,EACzD4G,GAAc,OAAH7J,QAAG,IAAHA,OAAA,EAAAA,EAAK6J,UAAW7J,EAAI6J,SAAW,EA1BvC,EA8BU7Y,sBAAWtB,IAD5ByB,UAAa4X,EA7BN,EA6BMA,MAAO7X,EA7Bb,EA6BaA,MA7Bb,EAgC0BitB,aAAas7B,GAAc,CAC5D7yB,YAAa,sBAjCN,oBAgCF0Q,EAhCE,KAgCQC,EAhCR,KAoCT9f,sBAAU,WACR,GAAI9iB,EAAM,CAAC,IAAD,IACFyI,GAAiB,OAATm6B,QAAS,IAATA,GAAA,UAAAA,EAAW5pC,YAAX,sDAAmCA,OAAQ,GACzD,GAAIyP,GAASA,EAAMxG,OAAS,EAAG,CAC7B,IAAM+gC,EAAMv6B,EAAMzH,KAAI,SAACg6B,GAAD,OAAaA,EAAGiI,UAChCC,EAAW5B,EAAiB9+B,QAAO,SAAC2gC,GAAD,OACvCH,EAAIr7B,SAASw7B,EAAI37B,QAGb47B,EAAiB36B,EAAMzH,KAAI,SAACvB,EAAWu8B,GAAgB,IAEzDqH,EAWE5jC,EAXF4jC,WACAhpB,EAUE5a,EAVF4a,aACAC,EASE7a,EATF6a,eACAlH,EAQE3T,EARF2T,aACAC,EAOE5T,EAPF4T,eACAC,EAME7T,EANF6T,iBACAC,EAKE9T,EALF8T,gBACAC,EAIE/T,EAJF+T,WACAC,EAGEhU,EAHFgU,aACAC,EAEEjU,EAFFiU,eACAC,EACElU,EADFkU,cAEIkoB,EAAOqH,EAAS1gC,QAAO,SAACs5B,GAAD,OAAaA,EAAGt0B,MAAQ/H,EAAKwjC,UAAQ,GAClE,OAAO,6BACFpH,GADL,IAEEwH,aACAhpB,eACAC,iBACAlH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAqoB,QACArB,UAAWl7B,EAAK6jC,UAChB7I,QAASh7B,EAAKzL,IACdunC,UAAW97B,EAAKkO,WAIdo3C,EAAav3D,KAAE41C,GAClBzhB,QAAQ,OACR3gB,KAAI,SAAC4gB,EAAOC,GAAR,MAAiB,CACpBra,IAAKoa,EAAM,GAAGpa,IACdrZ,KAAMyzB,EAAM,GAAGzzB,KACfwD,OAAQiwB,EAAM,GAAGjwB,OACjB0xC,WAAYzhB,EAAM,GAAGyhB,WACrBhpB,aAAcuH,EAAM,GAAGvH,aACvBC,eAAgBsH,EAAM,GAAGtH,eACzBlH,aAAcwO,EAAM,GAAGxO,aACvBC,eAAgBuO,EAAM,GAAGvO,eACzBC,iBAAkBsO,EAAM,GAAGtO,iBAC3BC,gBAAiBqO,EAAM,GAAGrO,gBAC1BC,WAAYoO,EAAM,GAAGpO,WACrBC,aAAcmO,EAAM,GAAGnO,aACvBC,eAAgBkO,EAAM,GAAGlO,eACzBC,cAAeiO,EAAM,GAAGjO,cACxBqxC,OAAQpjC,EAAM,GAAGojC,OACjBvwC,MAAOmN,EAAM,GAAGnN,MAChB8X,KAAM3K,EAAM,GAAG2K,KACflxB,SAAUumB,EAAM,GAAGvmB,SACnB2gC,MAAOpa,EAAM,GAAGoa,MAChBrB,UAAW/Y,EAAM,GAAG+Y,UACpBF,QAASjtC,KAAEw0B,MAAMJ,EAAO,WACxB2Z,UAAW/tC,KAAEw0B,MAAMJ,EAAO,iBAE3BoT,QAAQ,SACR5mC,QACH2zC,EAAagjB,OAGhB,CAACniB,EAAW5iC,IAEf8iB,sBAAU,WACR4gB,OACC,CAACigB,IAEJ7gC,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAMzK,EAAY,CAAEqY,OAAQ/J,EAAIna,IAChCyxC,EAAS,CAAE5lC,iBAEZ,CAACsO,IAEJ,IAAMq4B,GAAkB,WACtB,IAAMmgB,EAASr2D,KAAEw0B,MAAM2hC,EAAQ,UAC/BtI,EAASwI,IAaLoB,GAAYt3C,GAAgBP,EAC5BhG,GAAK,UAAMgN,EAAM9e,KAAZ,qBAAsB+V,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAKjE,OAEtC,OACE,eAAC6uB,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAZgB,WAJlBuqC,EAAU,IACVrX,EAAS,GAKTlzB,KAWEjS,MAAOA,GACPxK,SAAU,kBAAM,MAChBjS,MAAOA,EACPurC,KAAM,GACNp3B,GAAI,GACJ7S,SAAUiyB,EAAQ,KAAO,KACzB3f,WAAS,EACT83B,cAAY,EACZF,WAAS,EACT3L,QAAS54B,KAAOie,WAAW,KAC3BwV,GAAI,GAdN,SAgBE,uCACE,gBAAC/D,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,QAFrB,UAKE,eAAC0T,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEpW,OAAQ,MAEpC8iB,GACC,gBAACxM,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,UACE,eAACguC,GAAD,CAAUh2D,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACwc,GAAD,CACExvB,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXwP,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPuzB,MAAOA,EACP/vB,KAAK,SACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAKna,OAGb,eAACkzD,GAAD,CAAUh2D,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqjB,GAAD,CACE9iD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVq4B,UAAWA,EACXC,YAAaA,EACb8W,QAASA,EACTuB,iBAAkBA,EAClBnzC,KAAK,SACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAKna,OAGb,eAACkzD,GAAD,CAAUh2D,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACulB,GAAD,CACEhlD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,SACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAKna,OAGb,eAACkzD,GAAD,CAAUh2D,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqmB,GAAD,CACE9lD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,SACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAKna,OAGb,gBAAC2N,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,gBAChBlhB,WAAY,GACZC,YAAa,IANjB,UASE,gBAACqV,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,UAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAY83C,SAGjB,gBAACpmD,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,sEAAiB,aAE5B,gBAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGorB,EADH,UAIF,gBAACrW,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYc,QAGjB,gBAACpP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,yDAAc,eAEzB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYe,QAGjB,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAOuc,IAAI,MAD3C,SAGG5R,EAAQ,6CAAY,gBACT,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAOuc,IAAI,MAJtB,SAOGhB,GAAYc,EAAgBC,QAIjC,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBACV,IACd,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYmB,QAGjB,gBAACzP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAO+c,KAAK,MAD5C,SAGGpS,EAAQ,sEAAiB,iBACd,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAO+c,KAAK,MAJvB,SAOGxB,GAAYc,EAAgBK,mBAQ1CjD,GACC,gBAACiW,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAAC1iB,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,GAAIurB,aAAc,KAA3C,SACE,eAAC8uC,GAAA,EAAD,CACEC,YAAY,WACZ/7D,QAAQ,aACRgF,MAAOA,EACPygB,SApTK,SAACxZ,EAAO6mB,GAC3BqwB,EAASrwB,IAoTKuE,aAAW,QACX3iB,UAAWjC,EAAQ2oD,KANrB,SAQGzb,GAAiB/nC,KAAI,SAACvB,GACrB,OACE,eAAC2lD,GAAA,EAAD,cACEzmD,MAAO,CACLxT,gBACEiD,IAAUqR,EAAKvO,GAAK,YAASuN,GAEjCL,MAAO7B,EAAQkD,EAAK9N,OAAS8N,EAAKtR,OAjXvC6tC,EAkXmBv8B,EAAKvO,GAjXlC,CACLA,GAAG,gBAAD,OAAkB8qC,GACpB,gBAAgB,qBAAhB,OAAsCA,OAH1C,IAAmBA,SAwXL,gBAACn9B,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,OACjB5C,OAAQ,EACRkB,QAAS,EACTihB,aAAc,EACdzf,WAAY,aACZwf,eAAgB,UAPpB,UAUE,eAACzM,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CACL2Q,WAAY,OACZzkB,UAAW,GACXurB,aAAc,IALlB,SAQG/K,EAAIjE,QAEP,eAACpJ,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQzkB,UAAW,IAF1C,SAIGupB,EAAM3D,WAET,eAACzS,GAAA,EAAD,UACGzB,EAAQ8O,EAAIuF,eAAiBvF,EAAIwF,eAEpC,eAAC7S,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQzkB,UAAW,IAF1C,SAIGupB,EAAMpB,WAET,eAAChV,GAAA,EAAD,UACGzB,EAAQ8O,EAAIqI,eAAiBrI,EAAIoI,eAEpC,eAACzV,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQzkB,UAAW,IAF1C,SAIGupB,EAAMrB,aAET,eAAC/U,GAAA,EAAD,UACGzB,EAAQ8O,EAAIiI,iBAAmBjI,EAAIgI,oBAGxC,eAACxU,GAAA,EAAD,CAAKF,MAAO,CAAElV,QAAS,GAAIoB,UAAW,IAAtC,SACE,eAAC6T,GAAA,EAAD,CACEtV,QAAQ,YACRmV,WAAS,EACTpL,MAAM,UACNyL,QAAS,kBAAMq5C,GAAe,IAJhC,SAMG7jC,EAAM8W,qBAMhB7f,GACC,eAAC,GAAD,CACErL,KAAMyjD,EACNpqC,QAAS,kBAAMqqC,GAAa,IAC5Br4C,IAAK,KACL6S,OAAO,EACP8K,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXwP,iBAAkBA,EAClB32C,MAAOA,EACPi5D,UAAWA,IAGdv4C,GACC,eAAC,GAAD,CACErL,KAAMg4C,EACN3+B,QAAS,kBAAM4+B,GAAe,IAC9B3iD,KAAM+V,EACNymB,UAAWA,EACXvG,SAAU+V,EACVtY,UAAWA,EACXC,YAAaA,EACb8W,QAASA,EACTp1C,MAAOA,EACP8d,MAAOq5B,UCndN5tB,GAAW,SAAC7I,GAAD,OAAuBA,EAAI7D,KAEpC,SAAS69C,GAAT,GAUX,IATF9oD,EASC,EATDA,MACA6X,EAQC,EARDA,MACAzjB,EAOC,EAPDA,SACAhG,EAMC,EANDA,MACAo1C,EAKC,EALDA,QACAuB,EAIC,EAJDA,iBACAlzC,EAGC,EAHDA,MACAD,EAEC,EAFDA,KACA+C,EACC,EADDA,GACC,EACuB4K,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAD9D,oBACMy3B,EADN,KACYze,EADZ,KAEKmC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAF/B,EAGiBtY,oBAAS,CACzB8d,EAAIxS,MAEJwS,EAAI5qB,MACJ4qB,EAAI3qB,IACJ2qB,EAAInJ,SACJmJ,EAAI7G,WACJ6G,EAAI5G,SACJ4G,EAAIzE,MACJyE,EAAI1E,SACJ,CAAE/mB,KAAM,SAAUiZ,MAAO7K,EAAQ,mDAAa,SAC9Cqd,EAAI3L,cACJ2L,EAAI1L,UACJ,CACEhd,GAAI,GACJyE,IAAK,MACLxH,KAAM,MACNiZ,MAAO7K,EAAQ,6CAAY,eAE7Bqd,EAAItL,cACJ,CACEpd,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,sEAAiB,kBAxB7BqgC,EAHN,uBA+BuB9gC,oBAAS,IA/BhC,oBA+BM2hB,EA/BN,KA+BYuvB,EA/BZ,OAiCuBlxC,oBAAS,MAjChC,oBAiCM2D,EAjCN,KAiCYnR,EAjCZ,OAkC+BwN,qBAAS,GAlCxC,oBAkCMwpD,EAlCN,KAkCgB31C,EAlChB,OAoCgDmzB,KAAzChR,EApCP,EAoCOA,UAAWL,EApClB,EAoCkBA,YAAaE,EApC/B,EAoC+BA,aACxB1I,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UACAxZ,EAAUiyB,KAAVjyB,MAvCP,EA8CmCga,aAAaiX,GAAU,CACzDxO,YAAa,sBA/Cd,oBA8CMszB,EA9CN,KA8CiBC,EA9CjB,KAkDKna,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAO2W,GACP1jC,UAAU,gBAAI5O,EAAO+C,IAEvB,CACE44B,MAAOkJ,MAKblQ,sBAAU,WACR,GAAIwiC,EAAU,CAAC,IAAD,IACNG,GAAgB,OAATD,QAAS,IAATA,GAAA,UAAAA,EAAWxsD,YAAX,kDAA+BA,OAAQ,GACpD,GAAIysD,GAAQA,EAAKxjD,OAAS,EAAG,CAAC,IAAD,EACrB4iD,EAAM,UAAGY,EAAKjjD,QAAO,SAACqhC,GAAD,OAAaA,EAAGr8B,MAAQ/H,EAAK+H,cAA5C,aAAG,EAAgD,GAC/DlZ,EAAQu2D,OAGX,CAACW,IAEJ1iC,sBAAU,WACR,IAAM/lB,EAAS,gBACZ5O,EAAO+C,GAEVq0D,EAAU,CACRxoD,gBAED,CAAC7L,IA/EH,MAiF+C4K,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIxS,MAAMjZ,KAAMutD,iBAAiB,KAD1CC,EAjFN,uBAqFiBl/C,aAAYipD,GAAYra,GAAnCsa,EArFN,uBAsFkBlpD,aAAYmpD,GAAYva,GAApCwa,EAtFN,uBAuFwBppD,aAAYqpD,GAAgBza,GAA9C0a,EAvFN,qBAyFKjpB,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GAFF,SAGAmzC,EAAe,CAAEhpD,UAAW,CAAEyK,SAH9B,WAIoB,KAA/B,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAW8sD,sBAAX,eAA2B7oD,IAJb,6BAKZqK,QALY,IAKZA,GALY,UAKZA,EAAKtO,YALO,iBAKZ,EAAW8sD,sBALC,aAKZ,EAA2B/pD,MAAM4L,SAAS,YAL9B,kCAMRqQ,GAAiBP,EAASlb,GANlB,iDAQRsb,GAAWJ,EAASlb,GARZ,4CAAH,sDAcnBumB,sBAAU,WAAO,IAAD,IACd,UAAI0iC,QAAJ,IAAIA,GAAJ,UAAIA,EAAWxsD,YAAf,iBAAI,EAAiBynC,gBAArB,aAAI,EAA2BznC,KAAM,CAAC,IAC5BA,EAASwsD,EAAUxsD,KAAKynC,SAAxBznC,KACRg0C,EAAQh0C,MAET,CAACwsD,IAEJ,IAAMj7B,EAAU,WACL,OAATi7B,QAAS,IAATA,KAAWn7B,WAGb,OACE,gBAACjJ,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV12B,OAAQ,GACRy0C,UAAW,KALf,UAQE,gBAAC,KAAD,CAAMvf,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQ,IACR4jC,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,GACpBjY,eAAgBf,KAElB,eAAC,KAAD,CAAgBiZ,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClBqK,yBAA0B,CACxBpsC,EAAI7G,WAAW5kB,KACfyrB,EAAIzE,MAAMhnB,KACVyrB,EAAItL,cAAcngB,KAClByrB,EAAI5qB,MAAMb,KACVyrB,EAAI3qB,IAAId,QAGZ,eAAC,KAAD,CACEkvC,IAAK,CAAC,SACNlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BAAKvnB,GAAN,IAAamG,UAASqhB,oBAGxC,eAAC,KAAD,CACE0tB,IAAK,CAAC,QAAS,OACflB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,OACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,SAAU,gBAAiB,aACjClB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,iBACNlB,mBAAoBltB,KAEtB,eAAC,KAAD,CACEouB,IAAK,CAAC,UACNlB,mBAAoB/tB,KAEtB,eAAC,KAAD,CACEivB,IAAK,CAAC,YACNlB,mBAAoBrsB,KAEtB,eAAC,KAAD,CACEutB,IAAK,CAAC,YACNlB,mBAAoBpsB,KAGrBpf,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,GAAD,CAAc+H,UAAWqnC,EAASpnC,WAAYsnC,EAA9C,SACE,eAAC,GAAD,CACEz3D,MAAOA,EACPD,KAAMA,EACN66B,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXL,YAAaA,EACbE,aAAcA,EACdoO,QAASA,EACTuB,iBAAkBA,EAClB32C,MAAOA,EACPgG,SAAUA,EACV45B,QAASA,SAId2L,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,IAGNtX,GACC,eAAC,GAAD,CACEO,KAAMslD,EACNjsC,QAhLY,WAClB1J,GAAY,GACZrhB,EAAQ,OA+KFmR,KAAMA,EACN+P,MAAOA,EACP0O,OAAO,EACPvzB,MAAOA,EACPq+B,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXL,YAAaA,EACbE,aAAcA,EACdoO,QAASA,EACTuB,iBAAkBA,EAClB3wC,SAAUA,EACV45B,QAASA,EACTjM,UAAWqnC,EACXpnC,WAAYsnC,OCzQtB,SAASzB,GAASj8D,GAAQ,IAChBmxB,EAAqCnxB,EAArCmxB,SAAUlrB,EAA2BjG,EAA3BiG,MAAO4tC,EAAoB7zC,EAApB6zC,MAAUqoB,EADZ,aACsBl8D,EADtB,8BAGvB,OACE,gDACE6I,KAAK,WACLszD,OAAQl2D,IAAU4tC,EAClB9qC,GAAE,4BAAuB8qC,GACzBvF,kBAAA,uBAAiCuF,IAC7BqoB,GALN,aAOGj2D,IAAU4tC,GACT,eAACn9B,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,UAAasb,SAcvB,IAAMirC,GAAY75D,cAAW,SAACC,GAAD,MAAY,CACvCc,KAAM,CACJN,gBAAiBR,EAAMR,QAAQI,WAAWK,MAC1CG,QAAS,OACTiB,OAAQ,KAEVw4D,KAAM,CACJC,YAAY,aAAD,OAAe95D,EAAMR,QAAQu6D,cAoS7BuB,GAvRW,SAAC,GAYf,IAXVjmD,EAWS,EAXTA,KACAqZ,EAUS,EAVTA,QACAhO,EASS,EATTA,IACA6S,EAQS,EARTA,MACAvzB,EAOS,EAPTA,MACAgG,EAMS,EANTA,SACAs4B,EAKS,EALTA,YACA8W,EAIS,EAJTA,QACA/W,EAGS,EAHTA,UACAsY,EAES,EAFTA,iBACAxP,EACS,EADTA,UAEMj2B,EAAU0oD,KADP,EAGiBxkD,KAAMjE,SAAS,GAHhC,oBAGF1N,EAHE,KAGKm+C,EAHL,KAQHn/B,GAAY,OAAH/B,QAAG,IAAHA,OAAA,EAAAA,EAAK+B,QAAS/B,EAAI+B,OAAS,EACpCa,GAAmB,OAAH5C,QAAG,IAAHA,OAAA,EAAAA,EAAK4C,eAAgB5C,EAAI4C,cAAgB,EACzDC,GAAe,OAAH7C,QAAG,IAAHA,OAAA,EAAAA,EAAK6C,WAAY7C,EAAI6C,UAAY,EAC7CI,GAAmB,OAAHjD,QAAG,IAAHA,OAAA,EAAAA,EAAKiD,eAAgBjD,EAAIiD,cAAgB,EACzD4G,GAAc,OAAH7J,QAAG,IAAHA,OAAA,EAAAA,EAAK6J,UAAW7J,EAAI6J,SAAW,EAZvC,EAgBU7Y,sBAAWtB,IAD5ByB,UAAa4X,EAfN,EAeMA,MAAO7X,EAfb,EAeaA,MAGhB6K,EAAK,UAAMgN,EAAM3D,SAAZ,cAA0BlU,EAAK,OAAG8O,QAAH,IAAGA,OAAH,EAAGA,EAAK1Z,OAAR,OAAiB0Z,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAKld,MAEhE,OACE,eAAC8nC,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASA,EACTjS,MAAOA,EACPxK,SAAU,kBAAM,MAChBu5B,WAAS,EACTxrC,MAAOA,EACPurC,KAAM,GACNjqC,SAAU,KACVo5B,GAAI,GACJvmB,GAAI,GAXN,SAaE,gBAACwiB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,QAFrB,UAKE,eAAC0T,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEpW,OAAQ,MACpC8iB,GACC,gBAACxM,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,UACE,eAAC,GAAD,CAAUhoB,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqpB,GAAD,CACE/jB,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPo1C,QAASA,EACT5xC,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACwc,GAAD,CACExvB,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXwP,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPuzB,MAAOA,EACP/vB,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqjB,GAAD,CACE9iD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVq4B,UAAWA,EACXC,YAAaA,EACb8W,QAASA,EACTuB,iBAAkBA,EAClBnzC,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACulB,GAAD,CACEhlD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqmB,GAAD,CACE9lD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,gBAAC3I,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,gBAChBlhB,WAAY,GACZC,YAAa,IANjB,UASE,gBAACqV,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,UAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYC,QAGjB,gBAACvO,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,sEAAiB,aAE5B,gBAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGorB,EADH,UAIF,gBAACrW,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYc,QAGjB,gBAACpP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,yDAAc,eAEzB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYe,QAGjB,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAOuc,IAAI,MAD3C,SAGG5R,EAAQ,6CAAY,gBACT,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAOuc,IAAI,MAJtB,SAOGhB,GAAYc,EAAgBC,QAIjC,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBACV,IACd,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYmB,QAGjB,gBAACzP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAO+c,KAAK,MAD5C,SAGGpS,EAAQ,sEAAiB,iBACd,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAO+c,KAAK,MAJvB,SAOGxB,GAAYc,EAAgBK,mBAQ1CjD,GACC,gBAACiW,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAAC1iB,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,GAAIurB,aAAc,KAA3C,SACE,eAAC8uC,GAAA,EAAD,CACEC,YAAY,WACZ/7D,QAAQ,aACRgF,MAAOA,EACPygB,SAvMO,SAACxZ,EAAO6mB,GAC3BqwB,EAASrwB,IAuMGuE,aAAW,QACX3iB,UAAWjC,EAAQ2oD,KANrB,SAQG1b,GAAa9nC,KAAI,SAACvB,GACjB,OACE,eAAC2lD,GAAA,EAAD,cACEzmD,MAAO,CACLxT,gBAAiBiD,IAAUqR,EAAKvO,GAAK,YAASuN,GAEhDL,MAAO7B,EAAQkD,EAAK9N,OAAS8N,EAAKtR,OA5PrC6tC,EA6PiBv8B,EAAKvO,GA5PhC,CACLA,GAAG,gBAAD,OAAkB8qC,GACpB,gBAAgB,qBAAhB,OAAsCA,OAH1C,IAAmBA,SAmQP,gBAACn9B,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,OACjB5C,OAAQ,EACRkB,QAAS,EACTihB,aAAc,EACdzf,WAAY,aACZwf,eAAgB,SAChB6U,cAAe,IARnB,UAWE,eAACthB,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CACL2Q,WAAY,OACZzkB,UAAW,GACXurB,aAAc,IALlB,SAQG7Z,EAAQ8O,EAAI1Z,OAAS0Z,EAAIld,OAE5B,eAAC6P,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQzkB,UAAW,IAF1C,SAIGupB,EAAMqI,cAET,eAACze,GAAA,EAAD,UAAaqN,EAAI/X,QAChB+X,EAAI7X,OACH,uCACE,eAACwK,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQzkB,UAAW,IAF1C,SAIGupB,EAAM5gB,QAET,eAACwK,GAAA,EAAD,UAAaqN,EAAI7X,uBClSpB,SAAS0yD,GAAU/9D,GAAa,IACrCoU,EACNpU,EADMoU,MAAO6X,EACbjsB,EADaisB,MAAOxU,EACpBzX,EADoByX,SAAUjP,EAC9BxI,EAD8BwI,SAAUhG,EACxCxC,EADwCwC,MAAOo1C,EAC/C53C,EAD+C43C,QAASuB,EACxDn5C,EADwDm5C,iBADd,EAGpBxlC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAHnB,oBAGrCy3B,EAHqC,KAG/Bze,EAH+B,OAIpB3b,oBAAS,IAJW,oBAIrC2hB,EAJqC,KAI/BuvB,EAJ+B,OAKpBlxC,oBAAS,MALW,oBAKrC2D,EALqC,KAK/BnR,EAL+B,OAMZwN,qBAAS,GANG,oBAMrCwpD,EANqC,KAM3B31C,EAN2B,KAQpCH,EAAUiyB,KAAVjyB,MACAyZ,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UAMFpP,EAAMzF,GAAW,CAAE5X,QAAO6X,UAhBY,EAiB1BtY,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMjmB,MAChD,CAAEA,KAAM,QAASiZ,MAAOgN,EAAMqI,aAC9B,CAAEtuB,KAAM,QAASiZ,MAAOgN,EAAM5gB,OAC9B,CAAErF,KAAM,UAAWiZ,MAAOgN,EAAM2a,SAChC,CAAE5gC,KAAM,SAAUiZ,MAAO7K,EAAQ,mDAAa,SAC9Cqd,EAAI1E,SACJ0E,EAAI3L,cACJ2L,EAAI1L,UACJ,CACEhd,GAAI,GACJyE,IAAK,MACLxH,KAAM,MACNiZ,MAAO7K,EAAQ,6CAAY,eAE7Bqd,EAAItL,cACJ,CACEpd,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,sEAAiB,kBApB7BqgC,EAjBqC,uBAyCRpT,aAAa6H,GAAc,CAC7DY,YAAa,sBA1C6B,oBAyCrCszB,EAzCqC,KAyC1BC,EAzC0B,KA6CtCna,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOuH,GACPt0B,UAAW,CAAER,YAKnBumB,sBAAU,WACR,GAAIwiC,EAAU,CAAC,IAAD,IACNG,GAAgB,OAATD,QAAS,IAATA,GAAA,UAAAA,EAAWxsD,YAAX,sDAAmCA,OAAQ,GACxD,GAAIysD,GAAQA,EAAKxjD,OAAS,EAAG,CAAC,IAAD,EACrB4iD,EAAM,UAAGY,EAAKjjD,QAAO,SAACqhC,GAAD,OAAaA,EAAGr8B,MAAQ/H,EAAK+H,cAA5C,aAAG,EAAgD,GAC/DlZ,EAAQu2D,OAGX,CAACW,IAEJ1iC,sBAAU,WACRyiC,EAAU,CAAEhpD,YACX,IAlEyC,MAoEtBE,aAAY+0B,GAAgB6Z,GAA3C5Z,EApEqC,uBAqErBh1B,aAAYi1B,GAAgB2Z,GAA5C1Z,EArEqC,uBAsEnBl1B,aAAYm1B,GAAgByZ,GAA9CxZ,EAtEqC,qBAwEtCiL,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GAFF,SAGAif,EAAe,CAAE90B,UAAW,CAAEyK,SAH9B,WAIoB,KAA/B,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAW44B,sBAAX,eAA2B30B,IAJb,6BAKZqK,QALY,IAKZA,GALY,UAKZA,EAAKtO,YALO,iBAKZ,EAAW44B,sBALC,aAKZ,EAA2B71B,MAAM4L,SAAS,YAL9B,kCAMRqQ,GAAiBP,EAASlb,GANlB,iDAQRsb,GAAWJ,EAASlb,GARZ,4CAAH,sDAcnBumB,sBAAU,WAAO,IAAD,IACd,UAAI0iC,QAAJ,IAAIA,GAAJ,UAAIA,EAAWxsD,YAAf,iBAAI,EAAiBq4B,oBAArB,aAAI,EAA+Br4B,KAAM,CAAC,IAChCA,EAASwsD,EAAUxsD,KAAKq4B,aAAxBr4B,KACRg0C,EAAQh0C,MAET,CAACwsD,IAKJ,OACE,eAACl7B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAVY,WACL,OAATi7B,QAAS,IAATA,KAAWn7B,WAGX,SAQE,gBAACjJ,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM3D,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE0Q,yBAA0B,CAAC,QAAS,aAEtC,eAAC,KAAD,CACE3oB,IAAK,CAAC,SAAU,QAChBlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BAAKvnB,GAAN,IAAamG,UAASqhB,oBAGxC,eAAC,KAAD,CACE0tB,IAAK,CAAC,SAAU,gBAAiB,YAAa,iBAC9ClB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,OACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,UACNlB,mBAAoB/tB,KAEtB,eAAC,KAAD,CACEivB,IAAK,CAAC,YACNlB,mBAAoBpsB,KAErBpf,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAG1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWmT,EACXlT,WAAYoT,EAHd,SAKE,eAAC,GAAD,SAGHuE,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,IAGP,eAAC,GAAD,CACE/W,KAAMslD,EACNjsC,QAzKY,WAClB1J,GAAY,GACZrhB,EAAQ,OAwKF+c,IAAK5L,EACLye,OAAO,EACPI,UAAWmT,EACXlT,WAAYoT,EACZhnC,MAAOA,EACPgG,SAAUA,EACVs4B,YAAaA,EACb8W,QAASA,EACT/W,UAAWA,EACXsY,iBAAkBA,EAClBxP,UAAWrU,EACXjO,MAAOA,SCrNF,SAAS22C,GAAT,GAA2D,IAAvC5pD,EAAsC,EAAtCA,MAAO6X,EAA+B,EAA/BA,MAAOzpB,EAAwB,EAAxBA,MAAOgG,EAAiB,EAAjBA,SAAiB,EACzCmL,qBAAS,GADgC,oBAChEylC,EADgE,KACvDC,EADuD,OAE/C1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFQ,oBAEhEy3B,EAFgE,KAE1Dze,EAF0D,OAIrD3b,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMjmB,MAChD,CACEA,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOgN,EAAMrB,YAEf,CACE5kB,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAM,GAAD,OAAKgN,EAAMpB,SAAX,cAAyBoB,EAAM3M,YAEtC,CAAEtZ,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,QAASiZ,MAAOgN,EAAMzgB,SAXzBipC,EAJgE,uBAkBVjB,KAArDpQ,EAlB+D,EAkB/DA,SAAUwF,EAlBqD,EAkBrDA,WAAYE,EAlByC,EAkBzCA,YAAaE,EAlB4B,EAkB5BA,cAErC2L,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAKArQ,EAAc,CAAEp0B,UAAW,CAAEyK,SAL7B,WAMgB,KAA3B,QADDF,EALY,cAMX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWk4B,kBAAX,eAAuBj0B,IANT,6BAOZqK,QAPY,IAOZA,GAPY,UAOZA,EAAKtO,YAPO,iBAOZ,EAAWk4B,kBAPC,aAOZ,EAAuBn1B,MAAM4L,SAAS,YAP1B,kCAQRqQ,GAAiBP,EAASlb,GARlB,iDAURsb,GAAWJ,EAASlb,GAVZ,QAalBilC,GAAW,GAbO,4CAAH,sDAiBnB,OACE,gBAACpgB,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,gBAAC,KAAD,CAAMkhB,KAAM8N,EAAUqR,QAASA,EAAS1oB,SAAUA,GAAlD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAC/B,eAAC,KAAD,IAEA,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IAEnC,eAAC,KAAD,CACEjY,IAAK,CAAC,SACNlB,mBAAoBtuB,KAGrBld,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAG1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWyS,EACXxS,WAAY0S,EAHd,SAKE,eAAC,GAAD,SAGHiF,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,OChEE,SAASqvC,GAAT,GAQX,IAPF7pD,EAOC,EAPDA,MACA6X,EAMC,EANDA,MACAxU,EAKC,EALDA,SACAjP,EAIC,EAJDA,SACAhG,EAGC,EAHDA,MACAo1C,EAEC,EAFDA,QACAuB,EACC,EADDA,iBAEM1nB,EAAMzF,GAAW,CAAE5X,QAAO6X,UAD/B,EAGiBtY,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9BuF,EAAI3E,QACJ2E,EAAIxE,OACJ,CAAEjnB,KAAMoO,EAAQ,iBAAmB,eAAgB6K,MAAOgN,EAAM3D,UAChE,CAAEtiB,KAAM,gBAAiBiZ,MAAOgN,EAAMqI,aACtC,CAAEtuB,KAAM,QAASiZ,MAAOgN,EAAMzG,OAC9B,CAAExf,KAAM,WAAYiZ,MAAOgN,EAAMxG,UACjC,CAAEzf,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAT1BwvB,EAHN,uBAeuB9gC,oBAAS,IAfhC,oBAeM2hB,EAfN,KAeYuvB,EAfZ,OAgB6BlxC,qBAAS,GAhBtC,oBAgBMylC,EAhBN,KAgBeC,EAhBf,OAiByB1lC,oBAAc,MAjBvC,oBAiBM9M,EAjBN,KAiBayzB,EAjBb,OAkBqB3mB,oBAAc,MAlBnC,oBAkBM7M,EAlBN,KAkBWyzB,EAlBX,KAoBOlT,EAAUiyB,KAAVjyB,MACAyZ,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UAtBP,EA0BG3sB,sBAAWrB,IA1Bd,IAwBC1L,MAASqJ,EAxBV,EAwBUA,YAAaD,EAxBvB,EAwBuBA,gBAAiBY,EAxBxC,EAwBwCA,QAASL,EAxBjD,EAwBiDA,KAChDqD,EAzBD,EAyBCA,SAzBD,EAuCmCktB,aAAa8hB,GAAa,CAC5DrZ,YAAa,sBAxCd,oBAuCMqtB,EAvCN,KAuCoBC,EAvCpB,KA2CKlU,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOwhB,GACPvuC,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,IAG/C,CACEqrB,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,GAE7C6gD,EAAa,CACXviD,gBAED,CAAC/N,EAAOC,IAjFV,MAmFoBwN,aAAY8uC,GAAeF,GAAzClgB,EAnFN,uBAoFqB1uB,aAAY+iD,GAAenU,GAA1CoU,EApFN,uBAqFuBhjD,aAAYijD,GAAerU,GAA5CsU,EArFN,qBAuFK7iB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpB+sC,EAAc,CAAE5iD,UAAW,CAAEyK,SAC7BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAQnBsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIy8B,QAAJ,IAAIA,OAAJ,EAAIA,EAAQhe,UACVC,GAAW,GAEb,OAAI+d,QAAJ,IAAIA,GAAJ,UAAIA,EAAQvmD,YAAZ,iBAAI,EAAcsyC,mBAAlB,aAAI,EAA2BtyC,KAAM,CAAC,IAC5BA,EAASumD,EAAOvmD,KAAKsyC,YAArBtyC,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAAC+d,IAUJ,OACE,eAACj1B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAfY,WACR,OAANg1B,QAAM,IAANA,KAAQl1B,WAeNG,QAAS54B,KAAO2c,MAAM,KAPxB,SASE,gBAAC6S,GAAA,EAAD,WACE,eAACo5B,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBAlGkB,SAACurB,GACzBpxC,EAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAkGtCh1C,gBAAiBA,EACjBiqB,sBAvGsB,SAACllB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAuGnDkL,QAASA,EACTohD,cAlGc,SAAChN,GACrBpxC,EAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAkGlCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAAC,KAAD,CAAM8yB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,EAChBklD,gBAAiB,SAACC,GA/B1B9hD,EAAS,CAAE9M,KAAM,UAAWC,QA+B2B2uD,OAEjD,eAAC,KAAD,CAAcnhB,gBAAiBH,IAC/B,eAAC,KAAD,IAEA,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,GACpBjY,eAAgBf,KAElB,eAAC,KAAD,CAAgBiZ,qBAAmB,IAEnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBzuB,KAEtB,eAAC,KAAD,CACE2vB,IAAK,CAAC,QAAS,YACflB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,cAI/B7e,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAItB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAG1C,eAAC,GAAD,CAAcm2B,UAAW6M,EAAY5M,WAAYkhC,EAAjD,SACE,eAAC,GAAD,CACEz2B,UAAWA,EACXC,YAAaA,EACb8W,QAASA,EACTuB,iBAAkBA,EAClB9xB,MAAOA,SAIZ+xB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,SC9O7B,IAAM2X,GAAW,SAAC7I,GAAD,OAAuBA,EAAI7D,KAEpC,SAAS6+C,GAAT,GAA6C,IAAzB9pD,EAAwB,EAAxBA,MAAOwI,EAAiB,EAAjBA,SAAiB,EAC3BjJ,qBAAS,GADkB,oBAClDylC,EADkD,KACzCC,EADyC,OAEjC1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFN,oBAElDy3B,EAFkD,KAE5Cze,EAF4C,OAIvC3b,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAO7K,EAAQ,0DAAe,QACjE,CAAEpO,KAAM,OAAQiZ,MAAO7K,EAAQ,0DAAe,QAC9C,CACEpO,KAAMoO,EAAQ,WAAa,SAC3B6K,MAAO7K,EAAQ,kFAAmB,gBAEpC,CACEpO,KAAM,aACNiZ,MAAO7K,EAAQ,kFAAmB,kBAT/BqgC,EAJkD,uBAgBNokB,KAA3ChB,EAhBiD,EAgBjDA,WAAYE,EAhBqC,EAgBrCA,YAAaE,EAhBwB,EAgBxBA,cACzBxjC,EAAakqB,KAAblqB,SAEFkgB,EAAa,yCAAG,8CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,oBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,KACLjxB,EAJY,UAIFxL,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAIqX,MAAQA,YAJxC,aAIF,EAAiD,OACtD,OAAI+I,QAAJ,IAAIA,OAAJ,EAAIA,EAAS62B,SALN,iCAMEgZ,EAAc,CAAErjD,UAAW,CAAEyK,SAN/B,WAOqB,KAA9B,QADDF,EANU,cAOT,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWmnD,qBAAX,eAA0BljD,IAPd,6BAQVqK,QARU,IAQVA,GARU,UAQVA,EAAKtO,YARK,iBAQV,EAAWmnD,qBARD,aAQV,EAA0BpkD,MAAM4L,SAAS,YAR/B,kCASNqQ,GAAiBP,EAASlb,GATpB,iDAWNsb,GAAWJ,EAASlb,GAXd,iDAeVwb,GAAkBN,EAASlb,GAfjB,QAiBlBilC,GAAW,GAjBO,4CAAH,sDA2BnB,OACE,gBAACpgB,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,gBAAC,KAAD,CAAMkhB,KAAM1Y,EAAU63B,QAASA,EAAS1oB,SAAUA,GAAlD,UACE,eAAC,KAAD,CACEgqC,eAAgB,CACd,CAAEhlD,WAAY,SAAUvP,UAAW,OACnC,CAAEuP,WAAY,OAAQvP,UAAW,UAGrC,eAAC,KAAD,IAEA,eAAC,KAAD,CAAcszC,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,UACNlB,mBAjCgB,SAAC,GAAe,IAAb/tC,EAAY,EAAZA,MACnBmC,EAASqsB,EAASpa,QAAO,SAAC8jD,GAAD,OAAaA,EAAGzsC,WAAazrB,KAAO,GAC7DD,EAAOoO,EAAQ,SAAW,OAChC,OAAO,+BAAMhM,EAASA,EAAOpC,GAAQ,QAiCjC,eAAC,KAAD,CACEovC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAEpB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CAAcm2B,UAAW0hC,EAAYzhC,WAAY2hC,EAAjD,SACE,eAAC,GAAD,CAAcn7C,SAAUA,SAG3BmxB,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,OCxHb,IA6CewvC,GA7Ca,SAAC,GAA8C,IAA5CvoB,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUoE,EAA0B,EAA1BA,aAAcjuB,EAAY,EAAZA,MAK5D,OACE,gBAACwlB,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAO4vC,EACPnvB,SAVa,SAACpR,GAChBwgC,EAASxgC,EAAEk6B,OAAOvpC,OAClBi0C,EAAa,OAGb,UAOE,eAACxjC,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACgyB,GAAA,EAAD,CACE5uB,MAAM,UACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAOgW,EAAMga,gBAGjB,eAACvvB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACgyB,GAAA,EAAD,CACE5uB,MAAM,cACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAOgW,EAAMka,gBAGjB,eAACzvB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACgyB,GAAA,EAAD,CACE5uB,MAAM,aACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAOgW,EAAMia,mBCyURm4B,GArVM,SAAC,GAQV,IAPVxmD,EAOS,EAPTA,KACAqZ,EAMS,EANTA,QACAhO,EAKS,EALTA,IACA6S,EAIS,EAJTA,MACAI,EAGS,EAHTA,UACAC,EAES,EAFTA,WACA5zB,EACS,EADTA,MACS,EACemR,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IADtD,oBACFy3B,EADE,KACIze,EADJ,OAE+B1X,KAAMjE,SAAS,IAAIlD,MAFlD,oBAEF8oC,EAFE,KAEYC,EAFZ,OAGiB5hC,KAAMjE,SAAS,WAHhC,oBAGFkiC,EAHE,KAGKC,EAHL,OAI6Bl+B,KAAMjE,SAAS,IAJ5C,oBAIF0kD,EAJE,KAIWC,EAJX,OAK+B1gD,KAAMjE,SAAS,IAL9C,oBAKFomD,EALE,KAKYC,EALZ,OAO4BpiD,KAAMjE,SAAS,MAP3C,oBAOFyoC,EAPE,KAOQmc,EAPR,OAQ8B3gD,KAAMjE,SAAS,MAR7C,oBAQF6U,EARE,KAQSgwC,EART,OAUyB7kD,oBAAc,MAVvC,oBAUFnC,EAVE,KAUS0oC,EAVT,OAYyCpmC,aAChD7J,EAAI6mB,iBADE/c,EAZC,EAYDA,SAAUC,EAZT,EAYSA,aAAcC,EAZvB,EAYuBA,OAAQ86B,EAZ/B,EAY+BA,MAZ/B,EAmBU76B,sBAAWtB,IAnBrB,IAiBPyB,UAAa4X,EAjBN,EAiBMA,MAAO7X,EAjBb,EAiBaA,MACX1N,EAlBF,EAkBPhC,MAASgC,KAGHkW,EAAai8C,KAAbj8C,SACA+sB,EAAcgR,KAAdhR,UAERhP,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAM45C,EAAK/1C,EAAIsF,UACThI,EAAK0C,EAAIk5B,SACTkiB,EAAKp7C,EAAIsB,OACf,GAAW,KAAP85C,EAAW,CACbxoB,EAAS,WACT,IAAMqjB,EAAiBv8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CkwD,EAAea,GACfa,EAAgBb,GAElB,GAAW,KAAPmF,EAAW,CACbxoB,EAAS,eACT,IAAMqjB,EAAiBv8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAERkwD,EAAea,GACf,IAAMD,EAAiBt8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3C4xD,EAAgBd,GAElB,GAAW,KAAPoF,EAAW,CACbxoB,EAAS,cACT,IAAMqjB,EAAiBv8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAER4xD,EAAgBb,GAChB,IAAMD,EAAiBt8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CkwD,EAAeY,GAEjB,GAAW,KAAPoF,EAAW,CACbxoB,EAAS,eACT,IAAMqjB,EAAiBv8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAER4xD,EAAgBb,GAChB,IAAMD,EAAiBt8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CkwD,EAAeY,GAGjB,GAAID,EAAI,CACN,IAAMhxC,EAASrL,EAASvC,QACtB,SAACrS,GAAD,OAAcA,EAAI8U,OAASm8C,GAAqB,YAAfjxD,EAAII,UACrC,GACFowD,EAAavwC,GAEf,GAAIzH,EAAI,CACN,IAAM0H,EAAQtL,EAASvC,QACrB,SAACrS,GAAD,OAAcA,EAAI8U,OAAS0D,GAAqB,YAAfxY,EAAII,UACrC,GACFmwD,EAAYrwC,GAEd,IAAMK,EAAU,OAAGrF,QAAH,IAAGA,OAAH,EAAGA,EAAKqF,WACxB,GAAIA,EAAY,CACd,IAAMkzB,EAAO9R,EAAUtvB,QAAO,SAACw4B,GAAD,OAAaA,EAAGxzB,MAAQkJ,KAAY,GAClE2xB,EAAauB,QAEV,CACL,GAAc,YAAV5F,EAAqB,CACvB,IAAMsjB,EAAiBv8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CkwD,EAAea,GACfa,EAAgBb,GAChBX,EAAY,OAACW,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC9BZ,EAAW,OAACY,QAAD,IAACA,OAAD,EAACA,EAAiB,IAE/B,GAAc,gBAAVtjB,EAAyB,CAC3B,IAAMsjB,EAAiBv8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAERkwD,EAAea,GACf,IAAMD,EAAiBt8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3C4xD,EAAgBd,GAChBV,EAAY,OAACU,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC9BX,EAAW,OAACY,QAAD,IAACA,OAAD,EAACA,EAAiB,IAE/B,GAAc,eAAVtjB,EAAwB,CAC1B,IAAMsjB,EAAiBv8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAER4xD,EAAgBb,GAChB,IAAMD,EAAiBt8C,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CkwD,EAAeY,GACfX,EAAW,OAACW,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC7BV,EAAY,OAACW,QAAD,IAACA,OAAD,EAACA,EAAiB,QAGjC,CAACj2C,EAAK2yB,EAAOh+B,IAEhB,IAUMpD,EAAQ,yCAAG,WAAO5D,GAAP,4BAAA8D,EAAA,2DACoB4U,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8vB,EAAe/vB,GAAe+vB,EAAe9vB,GAFlC,gCAGPqG,GACJR,EACAlb,EAAQ,+FAAsB,yBALnB,2CASP6Q,EAAiBpU,EAAjBoU,OAAQoI,EAASxc,EAATwc,KACX+uB,GAAa5zB,EAVH,iCAWPsH,GACJR,EACAlb,EAAQ,wHAA2B,oCAbxB,4CAiBXgoC,IAAa5zB,EAjBF,kCAkBPsH,GACJR,EACAlb,EAAQ,iJAAgC,iCApB7B,0CAyBTkU,EAAW,CACfC,WAAU,OAAE/W,QAAF,IAAEA,OAAF,EAAEA,EAAW6N,IACvBqJ,aAAY,OAAElX,QAAF,IAAEA,OAAF,EAAEA,EAAWxL,KACzByiB,eAAc,OAAEjX,QAAF,IAAEA,OAAF,EAAEA,EAAWhI,OAC3BwhB,cAAa,OAAExZ,QAAF,IAAEA,OAAF,EAAEA,EAAWrG,OAGtByJ,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCkO,OA3CY,YAAVqxB,EACK9pC,GAAegB,QACH,eAAV8oC,EACF9pC,GAAekB,aACH,gBAAV4oC,EACF9pC,GAAeiB,eADjB,EAwCLyW,KAAM81B,EACN6C,SAAUA,EAASt/B,KACnB0L,UAAWA,EAAU1L,KACrBwL,SAAU9W,EAAY8W,OAAWhS,EACjC2O,SACAoI,OACAjlB,OAAQ1B,EAAK0B,OACb4mC,OAAQtoC,EAAK2Y,KAGf4vB,GADelZ,EAAQI,EAAYC,EACrBxhB,GA7CC,4CAAH,sDAgDRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACT4a,GAAaF,EAASlb,GACtBs8B,KACA,MAAO98B,GACP07B,GAAQ17B,GANE,2CAAH,wDAUL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZu8B,KACAhlB,QAAQC,IAAIhY,GANA,2CAAH,sDAUP+8B,GAAW,WACf5B,IACA+G,EAAS,WACT0iB,EAAa,MACbD,EAAY,MACZD,EAAe,IACf0B,EAAgB,KAEZtpB,GAAa,WACjBC,KACAzf,KAWF,OACE,eAAC4c,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASwf,GACTzxB,MAAOgN,EAAM+Z,QACbvxB,SAVmB,WACrBT,EAAaS,EAAbT,IAUExR,MAAOA,EACPurC,KAAMA,EACNp3B,GAAI,GARN,SAUE,gBAACwiB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,gBAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC,GAAD,CACEhlB,MAAOA,EACP6B,MAAOgW,EAAMxI,KACbxd,MAAOszC,EACP7yB,SA5BW,SAAC2C,GACxBmwB,EAAgBnwB,MA8BN,eAAC3S,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,SAE9B,gBAACkL,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC,GAAD,CACEyc,MAAOA,EACPC,SAAUA,EACVoE,aAAcA,EACdjuB,MAAOA,IAET,eAACvV,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,SAE9B,eAACkL,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,YACLiZ,MAAOgN,EAAM6Z,KACb7Z,MAAOA,EACP2G,QAASmnC,EACT9zD,MAAOuiB,EACPqK,eAAgB2lC,EAChBzkD,SAAUA,EACVK,MAAOA,EACPi7C,WAAS,MAGb,eAACl2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,EAAMjT,GACbiT,MAAOA,EACP2G,QAASylC,EACTpyD,MAAOm2C,EACPvpB,eAAgB0lC,EAChBxkD,SAAUA,EACVK,MAAOA,EACPi7C,WAAS,MAGb,gBAACl2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC1iB,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,MAE5B,eAACgP,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,EAAMhH,OACblR,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL7b,KAAK,SACL+O,WAAS,IAEX,eAAC6mB,GAAD,CACEj3B,KAAK,OACLypC,WAAS,EACTna,KAAM,EACNrf,MAAOgW,EAAM8Z,YACbhyB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,YAKjB,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCtTR,SAASmlC,GAAT,GAA+D,IAA5CnqD,EAA2C,EAA3CA,MAAO6X,EAAoC,EAApCA,MAAOxU,EAA6B,EAA7BA,SAAUjP,EAAmB,EAAnBA,SAAUhG,EAAS,EAATA,MAAS,EACzDmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,WAAYiZ,MAAOgN,EAAMjT,IACjC,CAAEhT,KAAM,YAAaiZ,MAAOgN,EAAM6Z,MAClC,CAAE9/B,KAAM,SAAUiZ,MAAOgN,EAAM5kB,MAC/B,CAAErB,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9B,CAAElmB,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAP1BwvB,EADoE,uBAWnD9gC,oBAAS,IAX0C,oBAWpE2hB,EAXoE,KAW9DuvB,EAX8D,OAY7ClxC,qBAAS,GAZoC,oBAYpEylC,EAZoE,KAY3DC,EAZ2D,OAcjD1lC,oBAAc,MAdmC,oBAcpE9M,EAdoE,KAc7DyzB,EAd6D,OAerD3mB,oBAAc,MAfuC,oBAepE7M,EAfoE,KAe/DyzB,EAf+D,OAoBvErmB,sBAAW7C,IApB4D,IAkBzElK,MAASqJ,EAlBgE,EAkBhEA,YAAaD,EAlBmD,EAkBnDA,gBAAiBY,EAlBkC,EAkBlCA,QAASL,EAlByB,EAkBzBA,KAChDqD,EAnByE,EAmBzEA,SAnByE,EAiClCktB,aAAam9B,GAAa,CACjE10B,YAAa,sBAlC4D,oBAiCpEwvB,EAjCoE,KAiCtDC,EAjCsD,KAoCnE38C,EAAai8C,KAAbj8C,SACFsmC,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAO68B,GACP5pD,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,IAG/C,CACEqrB,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,GAE7CgjD,EAAa,CACX1kD,gBAED,CAAC/N,EAAOC,IA3EgE,MA6EtDwN,aAAYklD,GAAetW,GAAzCuW,EA7EoE,uBA8ErDnlD,aAAYolD,GAAexW,GAA1CyW,EA9EoE,uBA+EnDrlD,aAAYslD,GAAe1W,GAA5C2W,EA/EoE,qBAiFrEllB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpBovC,EAAc,CAAEjlD,UAAW,CAAEyK,SAC7BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAQnBsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI4+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAangB,UACfC,GAAW,GAEb,OAAIkgB,QAAJ,IAAIA,GAAJ,UAAIA,EAAa1oD,YAAjB,iBAAI,EAAmB2tD,mBAAvB,aAAI,EAAgC3tD,KAAM,CAAC,IACjCA,EAAS0oD,EAAY1oD,KAAK2tD,YAA1B3tD,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAACkgB,IAUJ,OACE,eAACp3B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAfY,WACH,OAAXm3B,QAAW,IAAXA,KAAar3B,WAQb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACo5B,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBAjGkB,SAACurB,GACzBpxC,EAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAiGtCh1C,gBAAiBA,EACjBiqB,sBAtGsB,SAACllB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAsGnDkL,QAASA,EACTohD,cAjGc,SAAChN,GACrBpxC,EAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAiGlCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAAC,KAAD,CAAM8yB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,EAChBklD,gBAAiB,SAACC,GA9B1B9hD,EAAS,CAAE9M,KAAM,UAAWC,QA8B2B2uD,OAEjD,eAAC,KAAD,CAAcnhB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoBlsB,KAEtB,eAAC,KAAD,CACEotB,IAAK,CAAC,QAAS,SACflB,mBAAoBrvB,KAEtB,eAAC,KAAD,CACEuwB,IAAK,CAAC,aACNlB,mBAAoB,SAACh0C,GAAD,OAClBqoB,GAAyBroB,EAAO4c,EAAUxI,MAG9C,eAAC,KAAD,CACE8gC,IAAK,CAAC,YACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWsjC,EACXrjC,WAAYujC,EAHd,SAKE,eAAC,GAAD,SAGHvgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,SC/M7B,IAAM6kC,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cAyuBS4qB,GApuBU,SAAC,GAcd,IAbV5mD,EAaS,EAbTA,KACAqZ,EAYS,EAZTA,QACAhO,EAWS,EAXTA,IACA6S,EAUS,EAVTA,MACAI,EASS,EATTA,UACAC,EAQS,EARTA,WACAyK,EAOS,EAPTA,UACAC,EAMS,EANTA,YACAqY,EAKS,EALTA,iBACA9xB,EAIS,EAJTA,MACA7kB,EAGS,EAHTA,MACAo1C,EAES,EAFTA,QACApvC,EACS,EADTA,SAEMkL,EAAUvP,KADP,EAGqBwP,qBAAS,GAH9B,oBAGFylC,EAHE,KAGOC,EAHP,OAK8B1lC,oBAAS,MALvC,oBAKFkM,EALE,KAKSgiC,EALT,OAM0BluC,oBAAS,MANnC,oBAMFxC,EANE,KAMO2wC,EANP,OAQ6BnuC,oBAAc,MAR3C,oBAQFjD,EARE,KAQWw/B,EARX,OAS6Bv8B,qBAAc,GAT3C,oBASFm9B,EATE,KASWC,EATX,KAUHC,EAAiBp5B,KAAM44B,SAVpB,EAYyB78B,oBAAc,MAZvC,oBAYFhD,EAZE,KAYS2iB,EAZT,OAayB3f,qBAAc,GAbvC,oBAaFs9B,EAbE,KAaSC,EAbT,KAcHX,EAAe34B,KAAM44B,SAdlB,EAgByB78B,oBAAc,MAhBvC,oBAgBFnC,EAhBE,KAgBS0oC,EAhBT,OAiBuBvmC,qBAAS,GAjBhC,oBAiBFymC,EAjBE,KAiBQC,EAjBR,OAkBqB1mC,oBAAS,IAlB9B,qBAkBF2d,GAlBE,MAkBOgpB,GAlBP,SAoBwB3mC,oBAAS,MApBjC,sBAoBF/C,GApBE,MAoBMyuC,GApBN,SAsBmB1rC,oBAAc,IAtBjC,sBAsBFomC,GAtBE,MAsBMC,GAtBN,SAuByBrmC,oBAAc,IAvBvC,sBAuBFgmC,GAvBE,MAuBSC,GAvBT,SAwByBjmC,oBAAc,MAxBvC,sBAwBFhC,GAxBE,MAwBSwoC,GAxBT,SA0B6BxmC,qBAAS,GA1BtC,sBA0BFk8C,GA1BE,MA0BWC,GA1BX,SA4Ben8C,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IA5BtD,sBA4BFy3B,GA5BE,MA4BIze,GA5BJ,SA8B2B3b,qBAAS,GA9BpC,sBA8BFouC,GA9BE,MA8BUC,GA9BV,SA+B6BruC,oBAAS,IA/BtC,sBA+BFgM,GA/BE,MA+BWsiC,GA/BX,SAgCuBtuC,oBAAS,MAhChC,sBAgCF6rC,GAhCE,MAgCQ0C,GAhCR,SAiC8BvuC,oBAAS,MAjCvC,sBAiCFwuC,GAjCE,MAiCSC,GAjCT,SAmCwCzH,KAAzChR,GAnCC,GAmCDA,UAAWL,GAnCV,GAmCUA,YAAaE,GAnCvB,GAmCuBA,aAnCvB,GAqC0B11B,aAAQ,IAAnCC,GArCC,GAqCDA,SAAUC,GArCT,GAqCSA,aArCT,GAyCUE,sBAAWtB,IAzCrB,MAuCPyB,UAAa4X,GAvCN,GAuCMA,MAAO7X,GAvCb,GAuCaA,MACX1N,GAxCF,GAwCPhC,MAASgC,KAxCF,GA2C0B26B,aAAakZ,GAAmB,CACjEzQ,YAAa,sBA5CN,sBA2CF0Q,GA3CE,MA2CQC,GA3CR,SA+C+BpZ,aAAaghB,GAAY,CAC/DvY,YAAa,sBAhDN,sBA+CFwY,GA/CE,MA+CWC,GA/CX,MAmDT5nB,sBAAU,WACR,GAAI5E,GACEpkB,GAAW,CACb,UAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAAWsZ,aAAc,CAAC,IAAD,EACrB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAWsZ,wBAD7B,aAAG,EAET,GACJilB,EAAe0K,GAEjB,UAAIjpC,SAAJ,IAAIA,QAAJ,EAAIA,GAAW0Z,WAAY,CAAC,IAAD,EACnBuvB,EAAI,UAAG/Z,EAAUxmB,QACrB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1N,SAAZ,IAAYA,QAAZ,EAAYA,GAAW0Z,sBAD7B,aAAG,EAET,GACJiI,EAAasnB,OAIlB,CAACjpC,KAEJgpB,sBAAU,WACR,GAAI5E,GACEplB,IACF,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWsa,cAAc,CAAC,IAAD,EACrB2vB,EAAI,UAAG9Z,EAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,QAAZ,IAAYA,OAAZ,EAAYA,EAAWsa,wBAD7B,aAAG,EAET,GACJilB,EAAe0K,MAIpB,CAACjqC,IAEJgqB,sBAAU,WAAO,IAAD,QACRra,GAAiB,OAATm6B,SAAS,IAATA,IAAA,UAAAA,GAAW5pC,YAAX,2DAAwCA,OAAQ,GACxDuQ,GAAqB,OAAXmhC,SAAW,IAAXA,IAAA,UAAAA,GAAa1xC,YAAb,oDAAmCA,OAAQ,GAE3D,GAAIyP,GAASA,EAAMxG,OAAS,EAAG,CAC7B,IAAM+gC,EAAMv6B,EAAMzH,KAAI,SAACg6B,GAAD,OAAaA,EAAGiI,UAChCC,EAAW5B,EAAiB9+B,QAAO,SAAC2gC,GAAD,OACvCH,EAAIr7B,SAASw7B,EAAI37B,QAGb47B,EAAiB36B,EAAMzH,KAAI,SAACvB,EAAWu8B,GAAgB,IAEzDqH,EAWE5jC,EAXF4jC,WACAhpB,EAUE5a,EAVF4a,aACAC,EASE7a,EATF6a,eACAlH,EAQE3T,EARF2T,aACAC,EAOE5T,EAPF4T,eACAC,EAME7T,EANF6T,iBACAC,EAKE9T,EALF8T,gBACAC,EAIE/T,EAJF+T,WACAC,EAGEhU,EAHFgU,aACAC,EAEEjU,EAFFiU,eACAC,EACElU,EADFkU,cAEIkoB,EAAOqH,EAAS1gC,QAAO,SAACs5B,GAAD,OAAaA,EAAGt0B,MAAQ/H,EAAKwjC,UAAQ,GAClE,OAAO,6BACFpH,GADL,IAEEwH,aACAhpB,eACAC,iBACAlH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAqoB,QACArB,UAAWl7B,EAAK6jC,UAChB7I,QAASh7B,EAAKzL,IACdunC,UAAW97B,EAAKkO,WAIpBy1B,EAAenqC,MAAK,SAAC6D,EAAQymC,GAAT,OAClBzmC,EAAE0mC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO1mC,EAAE0mC,MAAQ,EAAI,KAE/CzB,GAAaqB,GAEb,IAAM8B,EAAgB9D,GAAa73B,GACnC6gC,GAAelF,GACf1D,GAAW,MAEZ,CAACoB,GAAW8H,KAEf5nB,sBAAU,WACR,GAAI5E,EAAO,CAAC,IAAD,EACHlvB,EAAQ,IAAI4J,KACZ3J,EAAM,IAAI2J,KAChB5J,EAAMkpD,WAAW,GACjBjpD,EAAI+hB,SAAS/hB,EAAIgZ,WAAa,GAC9BhZ,EAAIipD,WAAW,GACflO,EAAah7C,GACbi7C,EAAWh7C,GACXu4C,GAAS,UAACnwC,GAAYmL,QAAO,SAACyK,GAAD,OAAuB,IAAVA,EAAG/b,aAApC,aAAC,EAA+C,OAE1D,CAAC8O,IAEJ8iB,sBAAU,WACR4gB,OACC,CAAC5B,KAEJhf,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClBg6B,GAAW,GACXmB,GAAS,CAAE5lC,UAAW,CAAE4mC,KAAMt4B,EAAI7D,OAClCijC,GAAY,CAAE1tC,UAAW,CAAE4tC,QAASt/B,EAAIna,MAExC,IAAMuoC,EAAQpuB,EAAI+H,aACZsmB,EAAQruB,EAAImI,WACZ2kC,EAAS9sC,EAAIqF,WACb0nC,EAAS/sC,EAAItS,OACbqc,EAAS/J,EAAI+J,OAMnB,GALAm1B,GAAY,OAACl/B,QAAD,IAACA,OAAD,EAACA,EAAKjE,OAElB4iC,EAAY,OAAC3+B,QAAD,IAACA,OAAD,EAACA,EAAKrD,WAClBiiC,EAAU,OAAC5+B,QAAD,IAACA,OAAD,EAACA,EAAK/R,SAEZmgC,EAAO,CACT,IAAMb,EAAS3P,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQiyB,KAAO,GACnEpB,EAAeO,GAEjB,GAAIxjB,EAAQ,CACV,IAAM3F,EAAMD,EAAMhN,QAAO,SAACqhC,GAAD,OAAaA,EAAG3yC,KAAOkkB,KAAQ,GACxDktB,GAAa7yB,GAEf,GAAIiqB,EAAO,CACT,IAAMC,EAAO3Q,EAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI1hB,MAAQkyB,KAAO,GAC/Dje,EAAake,GAEf,GAAIwe,EAAQ,CACV,IAAMvU,EAAO9R,GAAUtvB,QAAO,SAAC81C,GAAD,OAAaA,EAAG9wC,MAAQ2wC,KAAQ,GAC9D9V,EAAauB,GAEf,GAAIwU,EAAQ,CACV,IAAMG,EAAOlhD,GAAYmL,QAAO,SAACyK,GAAD,OAAaA,EAAG/b,KAAOknD,KAAQ,GAC/D5Q,GAAU+Q,OAGb,CAACltC,IAEJ,IpJhEsBw7C,GoJ8GhBnjB,GAAkB,WACtB,IACMK,EADWjC,GAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMzI,aAChC0I,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAEvDqnC,EADarC,GAAU9gC,KAAI,SAACgjC,GAAD,OAAgBA,EAAMxI,iBAC5ByI,QAAO,SAACC,EAAWpnC,GAAZ,OAAuBonC,EAAOpnC,IAAG,GAWnEqlC,GARa,CACXiC,SAHaL,EAIbM,aAAcF,EACdG,WAAYH,EACZx2B,MAAOo2B,EACP32B,OAPa22B,EAQb5W,OAPa4W,EAAMI,KAuCjBvnC,GAAQ,yCAAG,6BAAAE,EAAA,2DAcXkL,EAAY1O,GAdD,gCAeP2e,GACJR,GACAlb,GAAQ,+FAAsB,yBAjBnB,2CAqBX,IAAI3D,KAAKoP,GAAWgB,YAAc,IAAIpQ,KAAKU,GAAS0P,UArBzC,gCAsBPiP,GACJR,GACAlb,GAAQ,+FAAsB,yBAxBnB,2CA6BVulC,IAAkC,IAArBA,GAAU7/B,OA7Bb,kCA8BPgW,GACJR,GACAlb,GAAK,uTAhCM,0CAuCTQ,EAAiB,CACrB7L,GAAIma,GAAOA,EAAIna,GAAKma,EAAIna,QAAKuN,EAC7B2I,MAAOkjC,GACPtiC,YACA1O,UACA8T,OAAQ80B,GAAO90B,OACfrU,OAAQA,GAASA,GAAO7H,GAAK,EAC7BuX,MAAO3b,KAAKyB,UAAUuzC,IACtBv4B,QAASzc,KAAKyB,UAAUuZ,IACxBsN,OAAQtb,GAAYA,GAAU5I,QAAKuN,EACnCgS,SAAU9W,EACN,CACE+W,WAAY/W,EAAU6N,IACtBqJ,aAAclX,EAAUxL,KACxByiB,eAAgBjX,EAAUhI,OAC1BwhB,cAAexZ,EAAUrG,OAE3B,CACEod,gBAAYjS,EACZoS,kBAAcpS,EACdmS,oBAAgBnS,EAChB0U,mBAAe1U,GAGrBsU,WAAYla,EACR,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEvBuU,SAAUla,EACN,CACE0a,WAAY1a,EAAU0O,IACtBiM,aAAc3a,EAAU3K,KACxBulB,eAAgB5a,EAAUnH,OAC1BgiB,cAAe7a,EAAU3F,MACzBygB,cAAe9a,EAAUxF,OAE3B,CACEkgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,EACfmV,mBAAenV,IAIvB24B,GADelZ,EAAQI,EAAYC,EACrBxhB,GA7FC,4CAAH,qDAgGRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACTy6B,KACA,MAAOz7B,GACP07B,GAAQ17B,GACR+X,QAAQC,IAAIhY,GANF,2CAAH,wDAUL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,GAASlb,IAFlB,6CAINsb,GAAWJ,GAASlb,IAJd,OAKZuX,QAAQC,IAAIhY,GALA,2CAAH,sDASPy7B,GAAc,WAjIlBwS,EAAa,MACbC,EAAW,MACX5H,EAAa,MACbhK,EAAe,MACf5c,EAAa,MACb+rB,GAAU,MACVlF,GAAa,MACbP,GAAa,IACbI,GAAU,IACViI,GAAe,IACfC,GAAY,MACZE,GAAa,MAwHblxB,KAOI7H,IAAU,OAAHnG,QAAG,IAAHA,OAAA,EAAAA,EAAKrD,WAAY,IAAIpP,KAAJ,OAASyS,QAAT,IAASA,OAAT,EAASA,EAAKrD,WAAa,IAAIpP,KACvDmQ,GAAG,OAAGhR,SAAH,IAAGA,QAAH,EAAGA,GAAcyZ,GAAKH,UAEzBjK,GAAQ7K,GACV2hB,EACE,oDACA,0DACFA,EACA,kBACA,mBACE6tB,GAA8B,KAAf1gC,EAAItS,SAAkBpI,EAC3C,OACE,eAACslC,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASme,GACTpwB,MAAOA,GACPxK,SArBmB,WACrBT,GAAaS,GAAbT,IAqBExR,MAAOA,EACPurC,KAAMA,GACNp3B,GAAI,GACJumB,GAAI,GACJp5B,SAAS,KACT6N,UAAWA,GACX0wB,QAAS54B,KAAO+c,KAAK,KAZvB,SAcE,uCACE,eAAC9P,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,QAAUlmB,QAAQ,QAAnD,gBACGiiB,QADH,IACGA,OADH,EACGA,EAAKoJ,UAIV,eAAC6M,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,SACE,gBAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,GAAvB,UACE,gBAACuP,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMplB,MACbZ,MAAO4Z,EACP6G,SAAU,SAACwY,GAAD,OAAY2iB,EAAa3iB,IACnC9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAAC,GAAD,CACExV,MAAOA,GACP6B,MAAOgW,GAAMnlB,IACbb,MAAOkL,EACPuV,SAAU,SAACwY,GAAD,OAAY4iB,EAAW5iB,IACjC9C,OAAO,qBACP3Y,MAAI,MAGR,eAAC0V,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,eAAC6D,GAAD,CACEjnB,WAAW,EACXhQ,KAAK,YACLiQ,MAAOgW,GAAMhN,MACbhZ,MAAOk8C,GACPz7B,SAAU,SAACpR,GAAD,OAAY8sC,GAAa9sC,EAAEk6B,OAAOvpC,QAC5Cid,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAM3D,SACb2D,MAAOA,GACP2G,QAAS+W,GACT1jC,MAAOuL,EACPqhB,eAAgBqnB,EAChBnmC,SAAUA,GACVK,MAAOA,GACP6e,QAvOC,WACnBonB,GAAY,IAuOM1oB,WAAS,EACTvb,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,OACLiZ,MAAOgN,GAAM9e,KACb8e,MAAOA,GACP2G,QAASvL,EACTphB,MAAO0L,GACPkhB,eAAgBsnB,GAChBpmC,SAAUA,GACVK,MAAOA,GACPgC,WAAS,MAGb,eAAC+iB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMpB,SACboB,MAAOA,GACP2G,QAASiO,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC1CznC,MAAO0K,EACPkiB,eAAgBS,EAChBR,eAAgBoe,EAChBne,YAAake,EACbje,SAAUud,EACVx8B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,EACTwK,IAAKA,OAGT,eAACuY,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,EAAYzmB,QACnB,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAEpB1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBie,EAChBhe,YAAa+d,EACb9d,SAAUge,EACVj9B,SAAUA,GACVof,QAAM,EACN/e,MAAOA,GACPgC,WAAS,WAKjB,gBAAC+iB,GAAA,EAAD,CACE7hB,MAAI,EACJ8hB,GAAI,EACJ5iB,MAAO,CACL9T,UAAW,EACXM,gBAAiBmU,aAAK1N,KAAO2zB,KAAK,KAAM,IACxC7a,aAAc,GANlB,UASE,eAAChM,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLyX,aAAc,GACdtsB,SAAU,GACVszB,SAAU,IAEZxe,QAAS,WACPyrC,GAAY,MACZF,IAAc,IATlB,SAYG5tC,GAAQ,gEAAgB,iBAE3B,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQ,IAAKizB,SAAU,QAAvC,SACGnX,GAAY9G,KAAI,SAAC8pC,GAChB,OACE,gBAAC5qC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAAS8lB,GAAoB,CAAE7E,IAAKy/B,IACpCxgD,UAAW6hB,GAAqB2+B,EAAIzhC,SAAU9M,MAEhD,eAAC4Z,GAAA,EAAD,CACEvX,QAAS,kBAxVJ,SAACa,GAC5B,IAAMsrC,EAAUjjC,GAAYtF,QAAO,SAACwoC,GAAD,OAAaA,EAAGhP,QAAUv8B,EAAKu8B,SAC5DkJ,EAAgB9D,GAAa2J,GACnCX,GAAelF,GAqVsB+F,CAAqBH,IACpC1jC,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAHpB,SAKE,eAAC,KAAD,CACEkV,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,eAGlC,eAACgjB,GAAA,EAAD,CACExX,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyrC,GAAYS,GACZX,IAAc,IAEhB/iC,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIqJ,MAAO,6BAU9C,gBAAC0L,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiBmU,aAAK1N,KAAO2zB,KAAK,KAAM,IACxC97B,QAAS,GACToB,UAAW,GACXurB,aAAc,GACd1L,aAAc,IANlB,UASE,eAAC7L,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACovC,GAAD,CACEpf,QAASumB,EACTlH,QAvaM,SAAC36B,GACrB,IAAMwlC,EAAQ,uBAAOnD,IAAP,8BAAuBriC,GAAvB,IAA6B03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,GAAamD,IAqaC9wB,MAAOA,GACP4U,UAAWA,EACXC,YAAaA,EACbptB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTglC,GACA,eAAC1iC,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,SACE,eAACsmB,GAAD,CACEjf,KAAMqkB,GACNnF,SA/aK,SAACl9B,GACtB,IAAMwlC,EAAWnD,GAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,GAAamD,IAuaG72C,WApaS,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,IACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,GAAamD,IAiaG3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,OAIX0yC,GAAW,eAAC,GAAD,OAEd,gBAAC1iC,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,UACE,gBAACgT,GAAA,EAAD,CACEW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,GAAIssB,aAAc,IAD3D,UAGGhC,GAAMzG,MAHT,MAGmBR,GAAY+0B,GAAO90B,YAE/B,OAAN80B,SAAM,IAANA,QAAA,EAAAA,GAAQ90B,SACP,eAACpP,GAAA,EAAD,CAAYW,MAAO,CAAEsb,YAAa,GAAIC,aAAc,IAApD,UpJrgBQ2sC,GoJsgBG3kB,GAAO90B,OpJrgBb,IAAI05C,GAAQD,GAAQ,OAAO95D,coJ0gBpC,gBAACu0B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,SACLiZ,MAAOgN,GAAMrb,OACbqb,MAAOA,GACP2G,QAAS1jB,GACTjJ,MAAO2K,GACPiiB,eAAgBwsB,GAChBlsB,QAAM,EACN/e,MAAOA,GACPlR,MAAO,QAGX,eAACi2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACIrD,GACA,eAACrf,GAAA,EAAD,CACEmX,EAAG,EACHjrB,QAAQ,OACR4T,MAAO,CAAE9S,KAAM,EAAG4e,eAAgB,YAHpC,SAKE,eAAC/L,GAAA,EAAD,CACErW,KAAK,SACL8K,MAAM,UACN/J,QAAQ,YACRwV,QAAS,kBAAMq5C,IAAe,IAC9Bt8B,SAAUowB,GALZ,SAOG33B,GAAM+W,yBAQrB,eAAC,GAAD,CACEnrB,KAAMg4C,GACN3+B,QAAS,kBAAM4+B,IAAe,IAC9B7M,eAAgB/xB,EAChB8xB,QAAS9/B,EACTkgB,SAAU+V,EACV7yB,UAAW8P,EACXwhB,QAASA,EACTp1C,MAAOA,EACP8d,MAAOq5B,KAET,eAAC,GAAD,CACEroB,QAASA,GACTzZ,KAAMuiC,EACNlpB,QA1bgB,WACtBmpB,GAAY,GACZC,GAAW,KAybLvkB,OAAO,EACP6Y,YAvbiB,SAACsO,GACxBhD,EAAagD,IAubPh6B,IAAK,KACLiT,UAAWmT,GACXlT,WAAYoT,KAEd,eAAC,GAAD,CACE3xB,KAAMkqC,GACN7wB,QAAS,kBAAM8wB,IAAc,IAC7B9+B,IAAKs8B,GACLzpB,OAAOypB,GACPrpB,UAlfgB,SAAC7e,GACvB,IAAMwlC,EAAQ,uBAAOn9B,IAAP,CAAoBrI,IAC5BylC,EAAgB9D,GAAa6D,GACnCmF,GAAelF,IAgfT3mB,WA9eiB,SAAC9e,GACxB,IAAMwlC,EAAWn9B,GAAY9G,KAAI,SAACg6B,GAChC,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnCmF,GAAelF,IAseTv6C,MAAOA,EACP0K,MAAK,6BAAOgW,GAAP,IAAYrD,YAAW1O,oBC1vBtC,SAAS8qD,GAASj8D,GAAQ,IAChBmxB,EAAqCnxB,EAArCmxB,SAAUlrB,EAA2BjG,EAA3BiG,MAAO4tC,EAAoB7zC,EAApB6zC,MAAUqoB,EADZ,aACsBl8D,EADtB,8BAGvB,OACE,gDACE6I,KAAK,WACLszD,OAAQl2D,IAAU4tC,EAClB9qC,GAAE,4BAAuB8qC,GACzBvF,kBAAA,uBAAiCuF,IAC7BqoB,GALN,aAOGj2D,IAAU4tC,GACT,eAACn9B,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,UAAasb,SAcvB,IAAMirC,GAAY75D,cAAW,SAACC,GAAD,MAAY,CACvCc,KAAM,CACJN,gBAAiBR,EAAMR,QAAQI,WAAWK,MAC1CG,QAAS,OACTiB,OAAQ,KAEVw4D,KAAM,CACJC,YAAY,aAAD,OAAe95D,EAAMR,QAAQu6D,cA4P7BqC,GA/Oa,SAAC,GAYjB,IAXV/mD,EAWS,EAXTA,KACAqZ,EAUS,EAVTA,QACAhO,EASS,EATTA,IACA6S,EAQS,EARTA,MACAvzB,EAOS,EAPTA,MACAgG,EAMS,EANTA,SACAs4B,EAKS,EALTA,YACA8W,EAIS,EAJTA,QACA/W,EAGS,EAHTA,UACAsY,EAES,EAFTA,iBACAxP,EACS,EADTA,UAEMj2B,EAAU0oD,KADP,EAGiBxkD,KAAMjE,SAAS,GAHhC,oBAGF1N,EAHE,KAGKm+C,EAHL,KAQHn/B,GAAY,OAAH/B,QAAG,IAAHA,OAAA,EAAAA,EAAK+B,QAAS/B,EAAI+B,OAAS,EACpCa,GAAmB,OAAH5C,QAAG,IAAHA,OAAA,EAAAA,EAAK4C,eAAgB5C,EAAI4C,cAAgB,EACzDC,GAAe,OAAH7C,QAAG,IAAHA,OAAA,EAAAA,EAAK6C,WAAY7C,EAAI6C,UAAY,EAC7CI,GAAmB,OAAHjD,QAAG,IAAHA,OAAA,EAAAA,EAAKiD,eAAgBjD,EAAIiD,cAAgB,EACzD4G,GAAc,OAAH7J,QAAG,IAAHA,OAAA,EAAAA,EAAK6J,UAAW7J,EAAI6J,SAAW,EAZvC,EAgBU7Y,sBAAWtB,IAD5ByB,UAAa4X,EAfN,EAeMA,MAAO7X,EAfb,EAeaA,MAGhB6K,EAAK,UAAMgN,EAAMrB,WAAZ,cAA4BxW,EAAK,OAAG8O,QAAH,IAAGA,OAAH,EAAGA,EAAK1Z,OAAR,OAAiB0Z,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAKld,MAElE,OACE,eAAC8nC,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASA,EACTjS,MAAOA,EACPxK,SAAU,kBAAM,MAChBu5B,WAAS,EACTxrC,MAAOA,EACPurC,KAAM,GACNjqC,SAAU,KACVo5B,GAAI,GACJvmB,GAAI,GAXN,SAaE,gBAACwiB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,QAFrB,UAKE,eAAC0T,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEpW,OAAQ,MACpC8iB,GACC,gBAACxM,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,UACE,eAAC,GAAD,CAAUhoB,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqpB,GAAD,CACE/jB,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPo1C,QAASA,EACT5xC,KAAK,eACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACwc,GAAD,CACExvB,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXwP,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPuzB,MAAOA,EACP/vB,KAAK,eACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqjB,GAAD,CACE9iD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVq4B,UAAWA,EACXC,YAAaA,EACb8W,QAASA,EACTuB,iBAAkBA,EAClBnzC,KAAK,eACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACulB,GAAD,CACEhlD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,eACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqmB,GAAD,CACE9lD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,eACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,gBAAC3I,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,gBAChBlhB,WAAY,GACZC,YAAa,IANjB,UASE,gBAACqV,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,UAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYC,QAGjB,gBAACvO,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,sEAAiB,aAE5B,gBAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGorB,EADH,UAIF,gBAACrW,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYc,QAGjB,gBAACpP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,yDAAc,eAEzB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYe,QAGjB,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAOuc,IAAI,MAD3C,SAGG5R,EAAQ,6CAAY,gBACT,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAOuc,IAAI,MAJtB,SAOGhB,GAAYc,EAAgBC,QAIjC,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBACV,IACd,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYmB,QAGjB,gBAACzP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAO+c,KAAK,MAD5C,SAGGpS,EAAQ,sEAAiB,iBACd,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAO+c,KAAK,MAJvB,SAOGxB,GAAYc,EAAgBK,mBAQ1CjD,GACC,eAACiW,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC1iB,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,GAAIurB,aAAc,KAA3C,SACE,eAAC8uC,GAAA,EAAD,CACEC,YAAY,WACZ/7D,QAAQ,aACRgF,MAAOA,EACPygB,SAvMO,SAACxZ,EAAO6mB,GAC3BqwB,EAASrwB,IAuMGuE,aAAW,QACX3iB,UAAWjC,EAAQ2oD,KANrB,SAQG1b,GAAa9nC,KAAI,SAACvB,GACjB,OACE,eAAC2lD,GAAA,EAAD,cACEzmD,MAAO,CACLxT,gBAAiBiD,IAAUqR,EAAKvO,GAAK,YAASuN,GAEhDL,MAAO7B,EAAQkD,EAAK9N,OAAS8N,EAAKtR,OA5PrC6tC,EA6PiBv8B,EAAKvO,GA5PhC,CACLA,GAAG,gBAAD,OAAkB8qC,GACpB,gBAAgB,qBAAhB,OAAsCA,OAH1C,IAAmBA,iBCpBnB,SAASooB,GAASj8D,GAAQ,IAChBmxB,EAAqCnxB,EAArCmxB,SAAUlrB,EAA2BjG,EAA3BiG,MAAO4tC,EAAoB7zC,EAApB6zC,MAAUqoB,EADZ,aACsBl8D,EADtB,8BAGvB,OACE,gDACE6I,KAAK,WACLszD,OAAQl2D,IAAU4tC,EAClB9qC,GAAE,4BAAuB8qC,GACzBvF,kBAAA,uBAAiCuF,IAC7BqoB,GALN,aAOGj2D,IAAU4tC,GACT,eAACn9B,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,UAAasb,SAcvB,IAAMirC,GAAY75D,cAAW,SAACC,GAAD,MAAY,CACvCc,KAAM,CACJN,gBAAiBR,EAAMR,QAAQI,WAAWK,MAC1CG,QAAS,OACTiB,OAAQ,KAEVw4D,KAAM,CACJC,YAAY,aAAD,OAAe95D,EAAMR,QAAQu6D,cAoS7BsC,GAvRW,SAAC,GAYf,IAXVhnD,EAWS,EAXTA,KACAqZ,EAUS,EAVTA,QACAhO,EASS,EATTA,IACA6S,EAQS,EARTA,MACAvzB,EAOS,EAPTA,MACAgG,EAMS,EANTA,SACAs4B,EAKS,EALTA,YACA8W,EAIS,EAJTA,QACA/W,EAGS,EAHTA,UACAsY,EAES,EAFTA,iBACAxP,EACS,EADTA,UAEMj2B,EAAU0oD,KADP,EAGiBxkD,KAAMjE,SAAS,GAHhC,oBAGF1N,EAHE,KAGKm+C,EAHL,KAQHn/B,GAAY,OAAH/B,QAAG,IAAHA,OAAA,EAAAA,EAAK+B,QAAS/B,EAAI+B,OAAS,EACpCa,GAAmB,OAAH5C,QAAG,IAAHA,OAAA,EAAAA,EAAK4C,eAAgB5C,EAAI4C,cAAgB,EACzDC,GAAe,OAAH7C,QAAG,IAAHA,OAAA,EAAAA,EAAK6C,WAAY7C,EAAI6C,UAAY,EAC7CI,GAAmB,OAAHjD,QAAG,IAAHA,OAAA,EAAAA,EAAKiD,eAAgBjD,EAAIiD,cAAgB,EACzD4G,GAAc,OAAH7J,QAAG,IAAHA,OAAA,EAAAA,EAAK6J,UAAW7J,EAAI6J,SAAW,EAZvC,EAgBU7Y,sBAAWtB,IAD5ByB,UAAa4X,EAfN,EAeMA,MAAO7X,EAfb,EAeaA,MAGhB6K,EAAK,UAAMgN,EAAMpB,SAAZ,cAA0BzW,EAAK,OAAG8O,QAAH,IAAGA,OAAH,EAAGA,EAAK1Z,OAAR,OAAiB0Z,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAKld,MAEhE,OACE,eAAC8nC,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASA,EACTjS,MAAOA,EACPxK,SAAU,kBAAM,MAChBu5B,WAAS,EACTxrC,MAAOA,EACPurC,KAAM,GACNjqC,SAAU,KACVo5B,GAAI,GACJvmB,GAAI,GAXN,SAaE,gBAACwiB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,QAFrB,UAKE,eAAC0T,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEpW,OAAQ,MACpC8iB,GACC,gBAACxM,GAAA,EAAD,CAAKF,MAAO,CAAEyX,aAAc,IAA5B,UACE,eAAC,GAAD,CAAUhoB,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqpB,GAAD,CACE/jB,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPo1C,QAASA,EACT5xC,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACwc,GAAD,CACExvB,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,EACXwP,iBAAkBA,EAClB3wC,SAAUA,EACV4L,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPuzB,MAAOA,EACP/vB,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqjB,GAAD,CACE9iD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVq4B,UAAWA,EACXC,YAAaA,EACb8W,QAASA,EACTuB,iBAAkBA,EAClBnzC,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACulB,GAAD,CACEhlD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,eAAC,GAAD,CAAUpZ,MAAOA,EAAO4tC,MAAO,EAA/B,SACE,eAACqmB,GAAD,CACE9lD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPwD,KAAK,aACLC,MAAOid,EACPna,GAAE,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAK7D,QAGb,gBAAC3I,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,gBAChBlhB,WAAY,GACZC,YAAa,IANjB,UASE,gBAACqV,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,UAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYC,QAGjB,gBAACvO,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,sEAAiB,aAE5B,gBAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,UACGorB,EADH,UAIF,gBAACrW,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBAExB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYc,QAGjB,gBAACpP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,yDAAc,eAEzB,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYe,QAGjB,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAOuc,IAAI,MAD3C,SAGG5R,EAAQ,6CAAY,gBACT,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAOuc,IAAI,MAJtB,SAOGhB,GAAYc,EAAgBC,QAIjC,gBAACrP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,IAA/B,SACGyS,EAAQ,mDAAa,mBACV,IACd,eAACyB,GAAA,EAAD,CAAYW,MAAO,CAAE2Q,WAAY,OAAQxlB,SAAU,IAAnD,SACGqjB,GAAYmB,QAGjB,gBAACzP,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CAAE7U,SAAU,GAAIqJ,MAAOvB,KAAO+c,KAAK,MAD5C,SAGGpS,EAAQ,sEAAiB,iBACd,IACd,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL2Q,WAAY,OACZxlB,SAAU,GACVqJ,MAAOvB,KAAO+c,KAAK,MAJvB,SAOGxB,GAAYc,EAAgBK,mBAQ1CjD,GACC,gBAACiW,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAAC1iB,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,GAAIurB,aAAc,KAA3C,SACE,eAAC8uC,GAAA,EAAD,CACEC,YAAY,WACZ/7D,QAAQ,aACRgF,MAAOA,EACPygB,SAvMO,SAACxZ,EAAO6mB,GAC3BqwB,EAASrwB,IAuMGuE,aAAW,QACX3iB,UAAWjC,EAAQ2oD,KANrB,SAQG1b,GAAa9nC,KAAI,SAACvB,GACjB,OACE,eAAC2lD,GAAA,EAAD,cACEzmD,MAAO,CACLxT,gBAAiBiD,IAAUqR,EAAKvO,GAAK,YAASuN,GAEhDL,MAAO7B,EAAQkD,EAAK9N,OAAS8N,EAAKtR,OA5PrC6tC,EA6PiBv8B,EAAKvO,GA5PhC,CACLA,GAAG,gBAAD,OAAkB8qC,GACpB,gBAAgB,qBAAhB,OAAsCA,OAH1C,IAAmBA,SAmQP,gBAACn9B,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,OACjB5C,OAAQ,EACRkB,QAAS,EACTihB,aAAc,EACdzf,WAAY,aACZwf,eAAgB,SAChB6U,cAAe,IARnB,UAWE,eAACthB,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CACL2Q,WAAY,OACZzkB,UAAW,GACXurB,aAAc,IALlB,SAQG7Z,EAAQ8O,EAAI1Z,OAAS0Z,EAAIld,OAE5B,eAAC6P,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQzkB,UAAW,IAF1C,SAIGupB,EAAMqI,cAET,eAACze,GAAA,EAAD,UAAaqN,EAAI/X,QAChB+X,EAAI7X,OACH,uCACE,eAACwK,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAE2Q,WAAY,OAAQzkB,UAAW,IAF1C,SAIGupB,EAAM5gB,QAET,eAACwK,GAAA,EAAD,UAAaqN,EAAI7X,uBC9QpB,SAASyzD,GAAT,GAQX,IAPF1qD,EAOC,EAPDA,MACA6X,EAMC,EANDA,MACAxU,EAKC,EALDA,SACAjP,EAIC,EAJDA,SACAhG,EAGC,EAHDA,MACAo1C,EAEC,EAFDA,QACAuB,EACC,EADDA,iBACC,EACqBxlC,qBAAS,GAD9B,oBACMkS,EADN,KACWk5C,EADX,KAEKttC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAF/B,EAIiBtY,oBAAS,CACzB,CAAE5K,GAAI,EAAGyE,IAAK,QAASxH,KAAM,QAASiZ,MAAOgN,EAAMhN,OACnDwS,EAAIjE,UACJiE,EAAI5R,UACJ4R,EAAIvE,OACJuE,EAAInJ,SACJmJ,EAAInF,MACJmF,EAAIxE,OACJwE,EAAI5G,SACJ4G,EAAI7G,WACJ6G,EAAI7gB,OACJ6gB,EAAItE,KACJsE,EAAIxM,SAZCwvB,EAJN,uBAmBuB9gC,oBAAS,IAnBhC,oBAmBM2hB,EAnBN,KAmBYuvB,EAnBZ,OAoB6BlxC,qBAAS,GApBtC,oBAoBMylC,EApBN,KAoBeC,EApBf,OAqByB1lC,oBAAc,MArBvC,oBAqBM9M,EArBN,KAqBayzB,EArBb,OAsBqB3mB,oBAAc,MAtBnC,oBAsBM7M,EAtBN,KAsBWyzB,EAtBX,OAuBqC5mB,oBAAc,MAvBnD,oBAuBMqrD,EAvBN,KAuBmBC,EAvBnB,OAyBuBtrD,oBAAS,MAzBhC,oBAyBM2D,EAzBN,KAyBYnR,EAzBZ,OA0BuBwN,oBAAS,MA1BhC,oBA0BM3N,EA1BN,KA0BYk5D,EA1BZ,OA2BuCvrD,qBAAS,GA3BhD,oBA2BMwrD,EA3BN,KA2BoBC,EA3BpB,OA4B+CzrD,qBAAS,GA5BxD,oBA4BM0rD,EA5BN,KA4BwBC,EA5BxB,OA6B+C3rD,qBAAS,GA7BxD,oBA6BM4rD,EA7BN,KA6BwBC,GA7BxB,QA8BmD7rD,qBAAS,GA9B5D,sBA8BM8rD,GA9BN,MA8B0BC,GA9B1B,MAqDKC,GAAkB,SAAC9uD,GAAe,IAAD,EAC/B2gC,EAAI,UAAG3Q,GAAUxmB,QAAO,SAACwiC,GAAD,OAAaA,EAAGx9B,MAAQxO,EAAKwa,qBAAjD,aAAG,EAA4D,GACrEmmB,IACFrrC,EAAQqrC,GACR0tB,EAAQ,cAGNU,GAAoB,SAAC/uD,GAAe,IAAD,EACjC2gC,EAAI,UAAG1Q,GAAYzmB,QACvB,SAACwiC,GAAD,OAAaA,EAAGx9B,MAAQxO,EAAKoa,uBADrB,aAAG,EAET,GACAumB,IACFrrC,EAAQqrC,GACR0tB,EAAQ,gBAGNW,GAAkB,SAAChvD,GAAe,IAAD,EAC/B2gC,EAAI,UAAG7H,GAAUtvB,QAAO,SAACwiC,GAAD,OAAaA,EAAGx9B,MAAQxO,EAAK0X,qBAAjD,aAAG,EAA4D,GACrEipB,IACFrrC,EAAQqrC,GACR0tB,EAAQ,cAIJ73C,GAAUiyB,KAAVjyB,MA7EP,GA8EgDszB,KAAzChR,GA9EP,GA8EOA,UAAWL,GA9ElB,GA8EkBA,YAAaE,GA9E/B,GA8E+BA,aA9E/B,GA+EsDmB,KAA/C7J,GA/EP,GA+EOA,YAAac,GA/EpB,GA+EoBA,cAAeE,GA/EnC,GA+EmCA,eA/EnC,GAgFgD8I,KAAzC/J,GAhFP,GAgFOA,UAAWqC,GAhFlB,GAgFkBA,YAAakF,GAhF/B,GAgF+BA,aAhF/B,GAqFGl0B,sBAAWjD,IArFd,MAmFC9J,MAASqJ,GAnFV,GAmFUA,YAAaD,GAnFvB,GAmFuBA,gBAAiBY,GAnFxC,GAmFwCA,QACvCgD,GApFD,GAoFCA,SApFD,GAiGqCktB,aAAayjB,GAAW,CAC5Dhb,YAAa,sBAlGd,sBAiGMg2B,GAjGN,MAiGkB3a,GAjGlB,MAqGKjC,GAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOmjB,GACPlwC,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,IAG/C,CACEqrB,MAAOkJ,IAET,CACElJ,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,EAC3CuP,OAEFi6C,GAAW,CACTlrD,gBAED,CAAC/N,EAAOC,EAAK+e,IAzIf,OA2IkBvR,aAAYywC,GAAa7B,IAArCx4B,GA3IN,yBA4ImBpW,aAAYuS,GAAaq8B,IAAtC58B,GA5IN,yBA6IyBhS,aAAYi8C,GAAiBrN,IAAhDsN,GA7IN,sBA+IK7b,GAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpB+lC,GAAgB,CAAE57C,UAAW,CAAEyK,SAC/BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAQnBsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIwqB,SAAJ,IAAIA,QAAJ,EAAIA,GAAY/L,UACdC,GAAW,GAEb,OAAI8L,SAAJ,IAAIA,IAAJ,UAAIA,GAAYt0C,YAAhB,iBAAI,EAAkBi0C,iBAAtB,aAAI,EAA6Bj0C,KAAM,CAAC,IAC9BA,EAASs0C,GAAWt0C,KAAKi0C,UAAzBj0C,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAAC8L,KAEJxqB,sBAAU,WACR,GAAa,eAAT30B,GACE86B,IAAeA,GAAYhnB,OAAS,EAAG,CAAC,IAAD,EACnC4iD,EAAM,UAAG57B,GAAYzmB,QACzB,SAACqhC,GAAD,OAAaA,EAAGr8B,MAAQ/H,EAAK+H,cADnB,aAAG,EAEX,GACJlZ,EAAQu2D,GAGZ,GAAa,aAAT12D,GACE66B,IAAaA,GAAU/mB,OAAS,EAAG,CAAC,IAAD,EAC/B4iD,EAAM,UAAG77B,GAAUxmB,QAAO,SAACqhC,GAAD,OAAaA,EAAGr8B,MAAQ/H,EAAK+H,cAAjD,aAAG,EAAqD,GACpElZ,EAAQu2D,GAGZ,GAAa,aAAT12D,IACF2lB,QAAQC,IAAI,WAAYtU,GAEpBqyB,IAAaA,GAAU7vB,OAAS,GAAG,CAAC,IAAD,EAC/B4iD,EAAM,UAAG/yB,GAAUtvB,QAAO,SAACqhC,GAAD,OAAaA,EAAGr8B,MAAQ/H,EAAK+H,cAAjD,aAAG,EAAqD,GACpElZ,EAAQu2D,MAGX,CAAC57B,GAAaD,GAAW8I,KAE5B,IA3LC,GA+L+Ch2B,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAI5R,UAAU7Z,KAAMutD,iBAAiB,GACnD,CAAExiD,WAAY0gB,EAAIvE,OAAOlnB,KAAMutD,iBAAiB,GAChD,CAAExiD,WAAY0gB,EAAIxM,OAAOjf,KAAMutD,iBAAiB,KAH3CC,GA/LN,sBAqMD,OACE,eAACrxB,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAjBY,WACJ,OAAV+iB,SAAU,IAAVA,OAAYjjB,WAiBV88B,YAAaA,EACbC,eAAgBA,EAChB58B,QAAS54B,KAAO+c,KAAK,KATvB,SAWE,gBAACyS,GAAA,EAAD,WACE,gBAACviB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAAC4T,GAAA,EAAD,CACEF,MAAO,CACLizC,QAAS5jC,EAAM,QAAMvP,EACrBypD,cAAel6C,EAAM,YAASvP,GAHlC,SAME,eAAC+7C,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,GACbwpB,kBA3Ic,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KA2IlCh1C,gBAAiBA,GACjBiqB,sBAhJkB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAgJ/CkL,QAASA,GACTohD,cA5IU,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KA4I9BxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPwI,MAAOvB,KAAO+c,KAAK,KACnB6b,QAAS54B,KAAO+c,KAAK,QAGzB,eAAC9P,GAAA,EAAD,CACEF,MAAO,CACLlV,QAAS,EACTlB,OAAQ,EACR4C,gBAAiByG,KAAO+c,KAAK,IAC7BuL,aAAc,GACd3wB,WAAY,GACZC,YAAa,GACbkhB,aAAc,GARlB,SAWE,eAACsS,GAAA,EAAD,CACEC,QACE,eAACvO,GAAA,EAAD,CACE/P,MAAO,CAAElV,QAAS,GAClBmlB,QAASZ,EACTa,SAAU,kBAAMq4C,GAAQl5C,IACxB7a,MAAM,YAGViL,MACE,eAACJ,GAAA,EAAD,CACEW,MAAO,CAAExL,MAAOvB,KAAO+c,KAAK,MAC5BvlB,QAAQ,YAFV,SAIGmT,EAAQ,oGAAsB,qBAGnCoC,MAAO,CAAE7U,SAAU,WAIzB,gBAAC,KAAD,CAAM2zB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,KAC/B,eAAC,KAAD,IAEA,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,GACpBjY,eAAgBf,KAElB,eAAC,KAAD,CAAgBiZ,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,GAClBqK,yBAA0B,CACxBpsC,EAAIjE,UAAUxnB,KACdyrB,EAAI7gB,OAAO5K,KACXyrB,EAAInF,MAAMtmB,QAId,eAAC,KAAD,CACEkvC,IAAK,CAAC,UACNlB,mBAAoBtvB,KAEtB,eAAC,KAAD,CACEwwB,IAAK,CAAC,YAAa,aACnBlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,UACNlB,mBAAoBnvB,KAEtB,eAAC,KAAD,CACEqwB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,QACNlB,mBAAoB,SAACh0C,GAAD,OAClBqmB,GAAc,6BAAKrmB,GAAN,IAAasmB,mBAG9B,eAAC,KAAD,CACE4uB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OnJkKA,SAAC,GAMrB,IAAD,EALTiG,EAKS,EALTA,MACAohB,EAIS,EAJTA,MACAlhB,EAGS,EAHTA,QACAqhB,EAES,EAFTA,YACA03C,EACS,EADTA,QAEM/xD,EAAI,UAAGka,EAAMhN,QAAO,SAACiN,GAAD,OAAcA,EAAIve,KAAO9C,YAAzC,aAAG,EAA+C,GAC5D,OAAIkH,EAEA,sBACEsJ,QAAS,WACPtQ,EAAQgH,GACR+xD,EAAQ,QACR13C,GAAY,IAEdhR,MAAO,CAAE0B,OAAQ,WANnB,SAQE,eAACrC,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACV8lB,UAAW,QACXzc,MAAOvB,KAAOie,WAAW,MAJ7B,SAOGva,EAAK8R,UAKL,0BmJ/LG+gD,CAAiB,6BACZhgE,GADW,IAEdqnB,SACAlhB,UACAqhB,YAAa43C,EACbF,gBAIN,eAAC,KAAD,CACEhqB,IAAK,CAAC,iBAAkB,gBACxBlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BACVvnB,GADS,IAEZmG,QAASw5D,GACTn4C,YAAag4C,SAInB,eAAC,KAAD,CACEtqB,IAAK,CAAC,mBAAoB,kBAC1BlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BACVvnB,GADS,IAEZmG,QAASy5D,GACTp4C,YAAak4C,SAInB,eAAC,KAAD,CACExqB,IAAK,CAAC,iBAAkB,gBACxBlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BACVvnB,GADS,IAEZmG,QAAS05D,GACTr4C,YAAa83C,QAKlB92D,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAItB,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CAAcm2B,UAAWzL,GAAU0L,WAAY9P,GAA/C,SACE,eAAC,GAAD,CACEua,UAAWA,GACXC,YAAaA,GACb8W,QAASA,EACTuB,iBAAkBA,EAClB32C,MAAOA,EACP6kB,MAAOA,GACP7e,SAAUA,MAGd,eAAC,KAAD,CACExC,KAAK,eACLsvC,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aAWX,MAVY,CACV,CACE7b,IAAK,cACLryB,KAAMmuC,KAAgBC,YACtBvyC,MAAO,MAJC,oBAMPqyC,EAAal7B,QACd,SAACq7B,GAAD,OAAYA,EAAEruC,OAASmuC,KAAgBC,uBAOhD2D,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,eAAC,GAAD,CACEyD,KAAM4nD,GACNvuC,QA/WsB,WAC5BwuC,IAAsB,GACtBv5D,EAAQ,MACR+4D,EAAQ,OA6WFh8C,IAAK5L,EACLye,OAAO,EACPI,UAAWyL,GACXxL,WAAY0L,GACZt/B,MAAOA,EACPgG,SAAUA,EACVs4B,YAAaA,GACb8W,QAASA,EACT/W,UAAWA,GACXsY,iBAAkBA,EAClBxP,UAAWA,GACXtiB,MAAOA,KAET,eAAC,GAAD,CACExP,KAAM0nD,EACNruC,QApYoB,WAC1BsuC,IAAoB,GACpBr5D,EAAQ,MACR+4D,EAAQ,OAkYFh8C,IAAK5L,EACLye,OAAO,EACPI,UAAW+M,GACX9M,WAAYgS,GACZ5lC,MAAOA,EACPgG,SAAUA,EACVs4B,YAAaA,GACb8W,QAASA,EACT/W,UAAWA,GACXsY,iBAAkBA,EAClBxP,UAAWA,GACXtiB,MAAOA,KAET,eAAC,GAAD,CACExP,KAAMsnD,EACNjuC,QA9ZgB,WACtBkuC,GAAgB,GAChBj5D,EAAQ,MACR+4D,EAAQ,OA4ZF5nD,KAAMA,EACN+P,MAAOA,GACP0O,OAAO,EACPvzB,MAAOA,EACPq+B,UAAWA,GACXC,YAAaA,GACb6I,UAAWA,GACXL,YAAaA,GACbE,aAAcA,GACdoO,QAASA,EACTuB,iBAAkBA,EAClB3wC,SAAUA,IAEZ,eAAC,GAAD,CACEqP,KAAMwnD,EACNnuC,QAzaoB,WAC1BouC,GAAoB,GACpBn5D,EAAQ,MACR+4D,EAAQ,OAuaFh8C,IAAK5L,EACLye,OAAO,EACPI,UAAWmT,GACXlT,WAAYoT,GACZhnC,MAAOA,EACPgG,SAAUA,EACVs4B,YAAaA,GACb8W,QAASA,EACT/W,UAAWA,GACXsY,iBAAkBA,EAClBxP,UAAWrU,EACXjO,MAAOA,UC/hBjB,IAAMne,GAAO,eAAC,KAAD,CAA0BvH,SAAS,UAC1CisD,GAAc,eAAC,KAAD,CAAcjsD,SAAS,UAE5B,SAASs+D,GAAT,GASN,IARPrtC,EAQM,EARNA,QACA3sB,EAOM,EAPNA,MACAm+C,EAMM,EANNA,SACAn4B,EAKM,EALNA,MACA7X,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MAEM,IADN4qD,eACM,SACN,OACE,eAACr6B,GAAA,EAAD,CACEvzB,KAAK,QACL6tD,UAAWD,EACXl7B,QAASA,EACTo7B,sBAAoB,EACpBC,iBAAe,EACf73C,WAAS,EACTsd,eAAgB,SAACC,GAAD,OAAkBvf,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,MACjEwQ,MAAO,GACPsd,aAAc,SAACH,EAAD,OAAW6rB,EAAX,EAAWA,SAAX,OACZ,gBAAC9oC,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNZ,WAAY,SACZwf,eAAgB,YALpB,WAQIwrC,GACA,eAACvnC,GAAA,EAAD,CACErd,KAAMA,GACN0kD,YAAaA,GACbp3C,MAAO,CAAEnV,YAAa,GACtBolB,QAAS+4B,IAGZprC,EAAQuf,EAAOnqB,OAASmqB,EAAO3tB,SAGpCC,MAAOA,EACPygB,SAAU,SAACrhB,EAAG0uB,GACZqwB,EAASrwB,IAEXG,YAAa,SAACC,GAAD,OACX,eAACpe,GAAA,EAAD,6BACMoe,GADN,IAEEmB,KAAM,EACNoa,QAAS,EACT3mC,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOgW,EAAMjmB,GACb/E,QAAQ,WACRuV,MAAO,CACLtT,MAAOA,GAAgB,IACvB7B,YAAa,EACbD,WAAY,EACZ4B,iBAAsB,OAALiD,QAAK,IAALA,OAAA,EAAAA,EAAO6T,QAAS,EAAI,eAAYxD,EACjD3U,SAAU,GACVvB,OAAQ,EACRkB,QAAS,SCfrB,IAWa4yC,GAAiBC,cAXf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,EAHH,SAAC,GAAD,IAAGzgC,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,mBAMzC,SAAS8rB,GAAT,GAQN,IAPP9rD,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAxU,EAKM,EALNA,SACA0oD,EAIM,EAJNA,aAEA39D,GAEM,EAHNo1C,QAGM,EAFNp1C,OACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQyzB,EADR,OAEgB3mB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMyzB,EAFN,OAIkB5mB,oBAAS,IAJ3B,oBAIC2hB,EAJD,KAIOuvB,EAJP,OAKiClxC,oBAAS,IAL1C,oBAKYs/C,GALZ,aAMyBt/C,oBAAS,MANlC,oBAMQu/C,GANR,WAQAzhC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAR1B,EAUoCtY,oBAAS,CACjD8d,EAAIpF,OACJoF,EAAIzpB,IACJypB,EAAIxE,OACJwE,EAAI5E,MAEJ4E,EAAI9E,MAGJ8E,EAAIjN,OACJiN,EAAI5G,SACJ4G,EAAIlF,QACJkF,EAAInE,YACJmE,EAAIlE,eAvBA,oBAUC8lC,EAVD,KAUgBC,EAVhB,OA0BY3/C,oBAAS,CACzB8d,EAAIpF,OACJoF,EAAIzpB,IACJypB,EAAIxE,OACJwE,EAAI5E,MAEJ4E,EAAI9E,MAGJ8E,EAAIjN,OACJiN,EAAI5G,SACJ4G,EAAIlF,QACJkF,EAAInE,YACJmE,EAAIlE,eAbCknB,EA1BD,uBA0C0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,GAChD,CAAExiD,WAAY0gB,EAAIxM,OAAOjf,KAAMutD,iBAAiB,KAF3CC,EA1CD,uBA+CiCnyB,aAAaoyB,GAAkB,CACpE3pB,YAAa,sBAhDT,oBA+CC4pB,EA/CD,KA+CaC,EA/Cb,OAqEFz/C,sBAAW7C,IArET,IAoDJlK,MACEqJ,EArDE,EAqDFA,YACAD,EAtDE,EAsDFA,gBACAY,EAvDE,EAuDFA,QACAI,EAxDE,EAwDFA,aACAb,EAzDE,EAyDFA,YACAC,EA1DE,EA0DFA,UACAa,EA3DE,EA2DFA,UACAC,EA5DE,EA4DFA,SACAC,EA7DE,EA6DFA,SACAC,EA9DE,EA8DFA,UACAE,EA/DE,EA+DFA,MACAD,EAhEE,EAgEFA,QACAE,EAjEE,EAiEFA,UACAhB,EAlEE,EAkEFA,KAEFqD,GApEI,EAoEJA,SAEMkT,GAAUiyB,KAAVjyB,MAmBRsT,sBAAU,WAAO,IAAD,QACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyCA,OAAQ,GAC3DuvD,GAAqB,OAAXzM,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyC0+B,UAAW,KAE9DtqB,EAASm7C,EAAU10C,OAAO00C,GAAW,KAErCrM,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASh6C,QAAS,EACdg6C,EAAQj7C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEE2N,OAAQ+C,GAAgB1Q,QAG5B,GAEF2N,GACF8uC,EAAYsM,QAAQ,CAClBhhD,IAAK5O,KAAKklD,MACV2K,UAAW,sEACXC,QAAS,mBACTt7C,WAIJ4/B,EAAQkP,GACR,IAAInY,EAAM,EACVmY,EAAYC,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UAC1CiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAyB7DqkB,sBAAU,YArBQ,WAChB,IAJkBhR,EAIZ/U,EAAY,CAChB4rD,WAAYvM,GAAOviD,GACnB0iD,WAAYH,GAAO1iD,GACnBkvD,YAAaxM,GAAOxiD,GACpB4iD,cAAeJ,GAAOvjD,GACtB4jD,YAAaL,GAAOtjD,GACpB4jD,YAAaN,GAAOziD,GACpBgjD,SAXgB7qC,EAWIhY,EAVtBgY,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGnrD,WAAMuN,GAWxDzP,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,MAEtC8C,QAAQC,IAAIhX,GAEZ8+C,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,EAAOD,EAASE,IAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,IAEMq6B,EAFW3vD,KAAEwnC,QAAQvX,EAAM,CAACxkB,EAAK,GAAGC,YAAa,CAACD,EAAK,GAAGtP,YAErCqX,KAAI,SAACqK,GAC9B,MAAO,CACLmJ,OAAQyoC,GAAgB,UACpBtxC,GAAaN,EAAImJ,aACjB/V,EACJiW,QAASuoC,GAAgB,WAAa5xC,EAAIqJ,aAAUjW,EACpDuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,WACjBsQ,EACJkW,QAASsoC,GAAgB,WAAa5xC,EAAIuO,EAAIjF,QAAQxmB,WAAQsQ,EAC9DsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,WACnBsQ,EACJmW,SAAUqoC,GAAgB,YACtB5xC,EAAIuO,EAAIhF,SAASzmB,WACjBsQ,EACJgS,SAAUwsC,GAAgB,YACtB5xC,EAAIuO,EAAInJ,SAAStiB,WACjBsQ,EACJ2O,OAAQ6vC,GAAgB,UAAY9vC,GAAY9B,EAAI+B,aAAU3O,MAIlE28C,EAAa+B,KACZ,CAAC3B,EAAe/9B,EAAMxkB,IAEzB,IAwDMokD,GAAW,CAAC,CAAEnkD,WAAYe,IAE1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAIhF,SAASzmB,KACzBqB,KAAM,QACN+tD,eAAe,GAGjB,CACErkD,WAAY,SACZ1J,KAAM,MAEN+tD,eAAe,GAEjB,CACErkD,WAAY0gB,EAAIhF,SAASzmB,KACzBqB,KAAM,QAENq5D,mBAAmB,GAErB,CACE3vD,WAAY,SACZ1J,KAAM,MACNq5D,mBAAmB,IAKvB,OACE,eAACv+B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QArDY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WA8Cb,SAQE,gBAACjJ,GAAA,EAAD,WAcE,gBAACviB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAACuvD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBA3PgB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KA2PpCh1C,gBAAiBA,EACjBiqB,sBAhQoB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAgQjDkL,QAASA,EACTohD,cA5PY,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KA4PhCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL3S,OAAQ,GACRf,WAAY,SACZwf,eAAgB,aAChBwP,YAAa,GACbC,aAAc,IAPlB,UAUE,eAACrb,GAAA,EAAD,CAAKF,MAAO,CAAEpV,WAAY,GAAIC,YAAa,IAA3C,SACE,eAAC4+D,GAAD,CACErtC,QAASvL,GACTphB,MAAK,OAAE0L,QAAF,IAAEA,OAAF,EAAEA,EAAY,GACnByyC,SAzQe,SAACn+C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,EAAQ,CAACA,GAAS,MAyQhDgmB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,OACL8nD,SAAO,EACP5qD,MAAO,QAGX,eAAC+8D,GAAD,CACErtC,QAASutC,EACTl6D,MAAK,OAAEyL,QAAF,IAAEA,OAAF,EAAEA,EAAW,GAClB0yC,SAvRgB,SAACn+C,GAC3BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,EAAQ,CAACA,GAAS,MAuRjDgmB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,UACL8nD,SAAO,EACP5qD,MAAO,YAeb,eAAC+1B,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,GAAI3W,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,EAChBklD,gBAAiB,SAACC,GAxI5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QAwI6B2uD,OAEhDpkD,GAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WAzIc,CACxB,CAAEnlD,WAAY,SAAU1J,KAAM,OAC9B,CAAE0J,WAAY,QAAS1J,KAAM,QAwInB8uD,WAAYhB,KAEbtjD,GAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAgBf,GAChBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,UACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,SAAU,SAChBlB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,UACNlB,mBAAoBlsB,KAEtB,eAAC,KAAD,CACEotB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,eAGhC,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAastC,YAAaA,KACzB9iD,GAAS,eAAC,KAAD,CAAe4kD,wBAAsB,IAE/C,eAAC,KAAD,CACEhvB,SAAU,CACRmU,IAAK,WASb,eAAC,KAAD,CACEpuC,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OA1SO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,yBAAqB2d,GAAsBgyC,IACrDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBC3OL,IAAM26D,GAA0B,CACrCpwD,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVE,UAAW,GACXC,QAAS,OACTC,OAAO,EACPC,UAAW,OACXlB,OAAQ,KACRE,KAAM,CAAC,CAAEC,WAAY,YAAavP,UAAW,UAGlCo/D,GAAsB,SAACz5D,EAA2BC,GAC7D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwK,UAAWvK,EAAOE,UACvC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmByJ,OAAQxJ,EAAOE,UACpC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBC5CPs5D,GAJoBzwD,yBACjC,ICoEIyiD,GAAqB,SAAC,GAAD,IAAGn/C,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,iBAE3CF,GAAiBC,cAXf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,CAC5B0e,IAEWC,GAAkB3e,aAC7B,GACA,CAAEnuC,KAAM,kBAFqBmuC,CAG7B0e,IAEa,SAASE,GAAT,GAQN,IAPP3+C,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAxU,EAKM,EALNA,SACA2rB,EAIM,EAJNA,SACAwU,EAGM,EAHNA,QACAp1C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQyzB,EADR,OAEgB3mB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMyzB,EAFN,OAIkB5mB,oBAAS,IAJ3B,oBAIC2hB,EAJD,KAIOuvB,EAJP,OAKiClxC,oBAAS,IAL1C,oBAKCq/C,EALD,KAKYC,EALZ,OAMyBt/C,oBAAS,MANlC,oBAMC6R,EAND,KAMQ0tC,EANR,OAOiCv/C,oBAAS,MAP1C,oBAOCw/C,EAPD,KAOYC,EAPZ,KASA3hC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAT1B,EAWoCtY,oBAAS,CACjD8d,EAAI5R,UACJ4R,EAAIhO,KACJgO,EAAIxE,OACJwE,EAAI5G,SACJ4G,EAAI7G,WACJ6G,EAAInJ,SACJmJ,EAAI7gB,OACJ6gB,EAAInF,MACJmF,EAAIxM,SApBA,oBAWCouC,EAXD,KAWgBC,EAXhB,OAuBY3/C,oBAAS,CACzB8d,EAAI5R,UACJ4R,EAAIhO,KACJgO,EAAIxE,OACJwE,EAAI5G,SACJ4G,EAAI7G,WACJ6G,EAAInJ,SACJmJ,EAAI7gB,OACJ6gB,EAAInF,MACJmF,EAAIxM,SATCwvB,EAvBD,uBAmC0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,KAD3CC,EAnCD,uBAuCiCnyB,aAAay/B,GAAiB,CACnEh3B,YAAa,sBAxCT,oBAuCC4pB,EAvCD,KAuCaC,EAvCb,KA0CEhqB,EAAcgR,KAAdhR,UACA7I,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UA5CF,EA8DF3sB,sBAAW2sD,IA9DT,IA8CJ15D,MACEqJ,EA/CE,EA+CFA,YACAD,EAhDE,EAgDFA,gBACAY,EAjDE,EAiDFA,QACAI,EAlDE,EAkDFA,aACAb,GAnDE,EAmDFA,YACAC,GApDE,EAoDFA,UACAa,GArDE,EAqDFA,UACAG,GAtDE,EAsDFA,UACAE,GAvDE,EAuDFA,MACAD,GAxDE,EAwDFA,QACAE,GAzDE,EAyDFA,UACAlB,GA1DE,EA0DFA,OACAE,GA3DE,EA2DFA,KAEFqD,GA7DI,EA6DJA,SAEMkT,GAAUiyB,KAAVjyB,MA2BFusC,GAAqB,SAAC3tD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpC4tD,GAAmB,SAAC5tD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KASxC00B,sBAAU,WAAO,IAAD,IACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,yDAAwCA,OAAQ,GAEhE,GADAg0C,EAAQiP,GACJjiD,GAAO,CACT,IAAMsN,EAAMoa,GAAc,CACxB5P,KAAMmqC,EACN9tD,KAAM8L,KAERshD,EAAaj0C,GAEf,IAAIy8B,EAAM,EACVkY,EAAQE,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UACtCiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAqB7DqkB,sBAAU,YAlBQ,WAChB,IAHkBhR,EAGZ/U,EAAY,CAChBw/C,WAAYH,GAAO1iD,GACnB8iD,cAAeJ,GAAOvjD,IACtB4jD,YAAaL,GAAOtjD,IACpB4jD,YAAaN,GAAOziD,IACpBgjD,SARgB7qC,EAQIhY,GAPtBgY,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGnrD,WAAMuN,GAQxDzP,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,KACpCjY,OAAQA,GAASA,GAAO7H,QAAKuN,GAE/Bo9C,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,GAAI9oB,QACG,CACL,IAKMmjD,EALW3vD,KAAEwnC,QACjBvX,EACA,CAACxkB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGtP,YAEgBqX,KAAI,SAACqK,GAC9B,MAAO,CACLmG,KAAMyrC,GAAgB,QAClB5xC,EAAIrD,UACF2D,GAAaN,EAAIrD,WACjB,WACFvJ,EACJmN,KAAMqxC,GAAgB,QAClB5xC,EAAIrD,UACFiE,GAAiBZ,EAAIrD,WACrB,WACFvJ,EACJgW,MAAOwoC,GAAgB,SACnB5xC,EAAIoJ,MACFpJ,EAAIoJ,MACJ,WACFhW,EACJ1F,OAAQkkD,GAAgB,UACpB5xC,EAAItS,OACFmU,GAA8B7B,EAAItS,QAClC,WACF0F,EACJuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,MACfkd,EAAIuO,EAAI5G,SAAS7kB,MACjB,WACFsQ,EACJkW,QAASsoC,GAAgB,WACrB5xC,EAAIuO,EAAIjF,QAAQxmB,MACdkd,EAAIuO,EAAIjF,QAAQxmB,MAChB,WACFsQ,EACJsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,MACjBkd,EAAIuO,EAAI7G,WAAW5kB,MACnB,WACFsQ,EACJgS,SAAUwsC,GAAgB,YACtB5xC,EAAIuO,EAAInJ,SAAStiB,MACfkd,EAAIuO,EAAInJ,SAAStiB,MACjB,WACFsQ,EACJ2W,OAAQ6nC,GAAgB,UACpB5xC,EAAIuO,EAAIxE,OAAOjnB,MACbkd,EAAIuO,EAAIxE,OAAOjnB,MACf,WACFsQ,EACJ2O,OAAQ6vC,GAAgB,UACpB5xC,EAAI+B,OACFD,GAAY9B,EAAI+B,QAChB,WACF3O,MAIR28C,EAAa+B,MAEd,CAAC3B,EAAe/9B,EAAMxkB,KAEzB,IA6FMmkD,GAAoB,CACxB,CAAElkD,WAAY0gB,EAAInF,MAAMtmB,KAAMqB,KAAM,SACpC,CAAE0J,WAAY,SAAU1J,KAAM,QAG1B6tD,GAAW,CAAC,CAAEnkD,WAAYe,KAC1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAInF,MAAMtmB,KACtBqB,KAAM,QACN+tD,eAAe,GAEjB,CACErkD,WAAY,SACZ1J,KAAM,MACN+tD,eAAe,IAGbC,GAAe5zC,GAAUrN,GAAOiG,QACpC,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,IAAwB,IAAZuO,EAAKvO,IAAwB,IAAZuO,EAAKvO,MAGxD,OACE,eAACo5B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAhDY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WAyCb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACviB,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,WACV8H,KAAM1a,EAAQ,SAAMkC,EACpB4Q,MAAO9S,OAAQkC,EAAY,IAC3BsY,IAAK,GACL+M,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEvX,QAAS5E,GA7FQ,WACzB,IAAMyjD,EAAO,CACX,CAAEtvD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBmhD,EAAapC,EAAU7yC,MAAMzH,KAAI,SAACg6B,GACtC,OAAO,6BACFA,GADL,IAEErtB,MAAOR,GAAY6tB,EAAGrtB,YAGpBsF,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYmuC,EAAU3tC,OAAS,GACpDmU,MAAK,OAAEw5B,QAAF,IAAEA,OAAF,EAAEA,EAAWx5B,MAClB+7B,WAAYthD,EAAQ,kFAAmB,eACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/BkE,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAMigC,EAAYD,QAASxqC,IAvErB,WACpB,IAAMwqC,EAAOjC,EAAcx6C,KAAI,SAAC+8C,GAC9B,MAAO,CAAE5vD,KAAM4vD,EAAG32C,UAGd42C,EAAe,GACjBllD,IACFklD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAWnH,OAAd,OAAuBmH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3K,OAE1D4K,IACFilD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGxD,SAAH,IAAGA,QAAH,EAAGA,GAAQpH,OAAX,OAAoBoH,SAApB,IAAoBA,QAApB,EAAoBA,GAAQ5K,OAEpD0K,IACFmlD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG1D,SAAH,IAAGA,QAAH,EAAGA,GAAalH,OAAhB,OAAyBkH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAa1K,OAE9DuL,GACFskD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG7C,QAAH,IAAGA,OAAH,EAAGA,EAAc/H,OAAjB,OAA0B+H,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAcvL,OAEhE2L,IACFkkD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzC,SAAH,IAAGA,QAAH,EAAGA,GAAWnI,OAAd,OAAuBmI,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3L,OAG9D,IAAM8kB,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYQ,GAAS,GAC1CkwC,WAAYthD,EAAQ,kFAAmB,qBACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/B+uD,UACA7qD,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAM09B,EAAWsC,QAASxqC,IAiGhC7L,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,gBAACwW,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAACuvD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBArUgB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAqUpCh1C,gBAAiBA,EACjBiqB,sBA1UoB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SA0UjDkL,QAASA,EACTohD,cAtUY,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAsUhCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,SAChBwP,YAAa,GACbC,aAAc,GACdrvB,WAAY,GAPhB,UAUE,eAAC,GAAD,CACE6O,aAAcA,EACdq/C,gBApVoB,SAAC3qD,GAC/BkO,GAAS,CAAE9M,KAAM,kBAAmBC,QAASrB,KAoVnCyK,YAAaA,GACbw/B,eAnVmB,SAACjqC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAmVlC0K,UAAWA,GACX2iB,aAlViB,SAACrtB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAkVhC66B,YAAaA,EACbD,UAAWA,EACXuC,SAAUA,EACVuG,UAAWA,EACXn4B,UAAWA,GACX0oC,aArViB,SAACj0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAqVhCohB,MAAOA,GACP1V,UAAWA,GACXwoC,aArViB,SAACl0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAqVhCgmB,MAAOA,EACP7X,MAAOA,IAET,eAAC,GAAD,CACEwe,QAASyiC,GACTpvD,MAAO2L,GACP8U,SAvHa,SAACpR,GA3NG,IAACrP,EA4NL,SAAnBqP,EAAEk6B,OAAOvpC,OACX4tD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmBt+C,EAAEk6B,OAAOvpC,OAjOFA,EAkOLwrB,EAAInc,EAAEk6B,OAAOvpC,OAAOD,KAjO3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MAkVhCmO,MAAOA,OAGX,eAACsC,GAAA,EAAD,CACEF,MAAO,CACL9T,WAAY,GAFhB,SAKE,eAACu9D,GAAD,CACErtC,QAAS1jB,GACTjJ,MAAO2K,GACPwzC,SA3Vc,SAACn+C,GACzBkO,GAAS,CAAE9M,KAAM,YAAaC,QAASrB,KA2V7BgmB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,SACL8nD,SAAO,EACP5qD,MAAO,WAIb,eAAC+1B,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,GAAI3W,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,GAChBklD,gBAAiB,SAACC,GApI5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QAoI6B2uD,OAEhDpkD,IAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WAAYjB,GACZkB,WAAYhB,KAEbtjD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAiBpjC,GAAyBihD,GAAjB5e,GACzBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,aACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,QACNlB,mBAAoBpvB,KAEtB,eAAC,KAAD,CACEswB,IAAK,CAAC,UACNlB,mBAAoBnvB,KAEtB,eAAC,KAAD,CACEqwB,IAAK,CAAC,UACNlB,mBAAoBtuB,KACD,IACrB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,eAGhC,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAastC,YAAaA,KACzB9iD,IACC,eAAC,KAAD,CACE41B,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,QACzBmiD,MAAOniD,EAAQ,6CAAY,QAC3BoiD,QAASpiD,EAAQ,iCAAU,SAE7BqiD,wBAAsB,IAG1B,eAAC,KAAD,CACEhvB,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE5G,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OAnYO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,wBAAoB2d,GAAsBgyC,IACpDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBC5LZ,IAWakuC,GAAiBC,cAXf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,EAHH,SAAC,GAAD,IAAGzgC,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,mBAMzC,SAAS2sB,GAAT,GAON,IANP3sD,EAMM,EANNA,MACA6X,EAKM,EALNA,MACAxU,EAIM,EAJNA,SAEAjV,GAEM,EAHNo1C,QAGM,EAFNp1C,OACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQyzB,EADR,OAEgB3mB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMyzB,EAFN,OAIkB5mB,oBAAS,IAJ3B,oBAIC2hB,EAJD,KAIOuvB,EAJP,OAKiClxC,oBAAS,IAL1C,oBAKYs/C,GALZ,aAMyBt/C,oBAAS,MANlC,oBAMC6R,EAND,KAMQ0tC,EANR,KAQAzhC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAR1B,EAUoCtY,oBAAS,CACjD8d,EAAIpF,OACJoF,EAAInJ,SAGJmJ,EAAIjN,OACJiN,EAAIxE,OACJwE,EAAIlF,QACJkF,EAAI9E,MAEJ8E,EAAI5E,MACJ4E,EAAInE,YACJmE,EAAIlE,eAtBA,oBAUC8lC,EAVD,KAUgBC,EAVhB,OAyBY3/C,oBAAS,CACzB8d,EAAIpF,OACJoF,EAAInJ,SAGJmJ,EAAIjN,OACJiN,EAAIxE,OACJwE,EAAIlF,QACJkF,EAAI9E,MAEJ8E,EAAInE,YACJmE,EAAIlE,eAXCknB,EAzBD,uBAuC0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,GAChD,CAAExiD,WAAY0gB,EAAIxM,OAAOjf,KAAMutD,iBAAiB,KAF3CC,EAvCD,uBA4CiCnyB,aAAaoyB,GAAkB,CACpE3pB,YAAa,sBA7CT,oBA4CC4pB,EA5CD,KA4CaC,EA5Cb,KA+CEhqB,EAAcgR,KAAdhR,UA/CF,EAkEFz1B,sBAAW5B,IAlET,IAkDJnL,MACEqJ,EAnDE,EAmDFA,YACAD,EApDE,EAoDFA,gBACAY,EArDE,EAqDFA,QACAI,EAtDE,EAsDFA,aACAb,EAvDE,EAuDFA,YACAC,EAxDE,EAwDFA,UACAa,EAzDE,EAyDFA,UACAC,EA1DE,EA0DFA,SACAC,EA3DE,EA2DFA,SACAG,EA5DE,EA4DFA,MACAD,EA7DE,EA6DFA,QACAE,EA9DE,EA8DFA,UACAhB,EA/DE,EA+DFA,KAEFqD,GAjEI,EAiEJA,SAEMkT,GAAUiyB,KAAVjyB,MAgBRsT,sBAAU,WAAO,IAAD,QACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyCA,OAAQ,GAC3DuvD,GAAqB,OAAXzM,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyC0+B,UAAW,KAE9DtqB,EAASm7C,EAAU10C,OAAO00C,GAAW,KAErCrM,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASh6C,QAAS,EACdg6C,EAAQj7C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEE2N,OAAQ+C,GAAgB1Q,QAG5B,GAEF2N,GACF8uC,EAAYsM,QAAQ,CAClBhhD,IAAK5O,KAAKklD,MACV2K,UAAW,sEACXC,QAAS,mBACTt7C,WAIJ4/B,EAAQkP,GACR,IAAInY,EAAM,EACVmY,EAAYC,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UAC1CiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAqB7DqkB,sBAAU,YAnBQ,WAChB,IAAM/lB,EAAY,CAChBu/C,SAAU,EACVqM,WAAYvM,GAAOviD,GACnB0iD,WAAYH,GAAO1iD,GACnBkvD,YAAaxM,GAAOxiD,GACpB4iD,cAAeJ,GAAOvjD,GACtB4jD,YAAaL,GAAOtjD,GACpB4jD,YAAaN,GAAOziD,GACpB3K,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,MAEtC6qC,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,EAAOD,EAASE,IAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,IAEMq6B,EAFW3vD,KAAEwnC,QAAQvX,EAAM,CAACxkB,EAAK,GAAGC,YAAa,CAACD,EAAK,GAAGtP,YAErCqX,KAAI,SAACqK,GAC9B,MAAO,CACLmJ,OAAQyoC,GAAgB,UACpBtxC,GAAaN,EAAImJ,aACjB/V,EACJiW,QAASuoC,GAAgB,WAAa5xC,EAAIqJ,aAAUjW,EACpDuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,WACjBsQ,EACJkW,QAASsoC,GAAgB,WAAa5xC,EAAIuO,EAAIjF,QAAQxmB,WAAQsQ,EAC9DsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,WACnBsQ,EACJmW,SAAUqoC,GAAgB,YACtB5xC,EAAIuO,EAAIhF,SAASzmB,WACjBsQ,EACJgS,SAAUwsC,GAAgB,YACtB5xC,EAAIuO,EAAInJ,SAAStiB,WACjBsQ,EACJ2O,OAAQ6vC,GAAgB,UAAY9vC,GAAY9B,EAAI+B,aAAU3O,MAIlE28C,EAAa+B,KACZ,CAAC3B,EAAe/9B,EAAMxkB,IAEzB,IAwDMokD,GAAW,CAAC,CAAEnkD,WAAYe,IAE1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAIhF,SAASzmB,KACzBqB,KAAM,QACN+tD,eAAe,GAGjB,CACErkD,WAAY,SACZ1J,KAAM,MAEN+tD,eAAe,GAEjB,CACErkD,WAAY0gB,EAAIhF,SAASzmB,KACzBqB,KAAM,QAENq5D,mBAAmB,GAErB,CACE3vD,WAAY,SACZ1J,KAAM,MACNq5D,mBAAmB,IAKvB,OACE,eAACv+B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QArDY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WA8Cb,SAQE,gBAACjJ,GAAA,EAAD,WAcE,gBAACviB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAACuvD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBApPgB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAoPpCh1C,gBAAiBA,EACjBiqB,sBAzPoB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAyPjDkL,QAASA,EACTohD,cArPY,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAqPhCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,eAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL3S,OAAQ,GACRf,WAAY,SACZwf,eAAgB,gBAChBwP,YAAa,IACbC,aAAc,KAPlB,SAUE,eAACkuC,GAAD,CACErtC,QAAS+W,EACT1jC,MAAK,OAAEuL,QAAF,IAAEA,OAAF,EAAEA,EAAY,GACnB4yC,SApQiB,SAACn+C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,EAAQ,CAACA,GAAS,MAoQlDgmB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,WACL8nD,SAAO,EACP5qD,MAAO,QAGX,eAACwT,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,WAChB2S,SAAU,IACV5zB,YAAa,IANjB,SASE,eAACwU,GAAA,EAAD,CAAY5U,QAAQ,YAAYuV,MAAO,CAAE2Q,WAAY,QAArD,SACGzB,GAAkB,CAAEzf,MAAOuf,WAIlC,eAACyT,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,GAAI3W,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,EAChBklD,gBAAiB,SAACC,GA9H5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QA8H6B2uD,OAEhDpkD,GAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WA/Hc,CACxB,CAAEnlD,WAAY,SAAU1J,KAAM,OAC9B,CAAE0J,WAAY,QAAS1J,KAAM,QA8HnB8uD,WAAYhB,KAEbtjD,GAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAgBf,GAChBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,UACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,SAAU,SAChBlB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,UACNlB,mBAAoBlsB,KAEtB,eAAC,KAAD,CACEotB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,eAGhC,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAastC,YAAaA,KACzB9iD,GAAS,eAAC,KAAD,CAAe4kD,wBAAsB,IAC/C,eAAC,KAAD,CACEhvB,SAAU,CACRmU,IAAK,WASb,eAAC,KAAD,CACEpuC,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OA/RO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,yBAAqB2d,GAAsBgyC,IACrDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBClOL,IAAMg7D,GAA4B,CACvC1wD,iBAAkB,aAClBC,gBAAiB,MACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,YAAavP,UAAW,UAGlCy/D,GAAwB,SACnC95D,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAO,6BAAKF,GAAZ,IAAmBmJ,iBAAkBlJ,EAAOE,UAC9C,IAAK,qBACH,OAAO,6BAAKH,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCpBP25D,GAJsB9wD,yBACnC,IC8Ca,SAAS+wD,GAAT,GAAgE,IAA5C/sD,EAA2C,EAA3CA,MAAO6X,EAAoC,EAApCA,MAAOxU,EAA6B,EAA7BA,SAAUjP,EAAmB,EAAnBA,SAAUhG,EAAS,EAATA,MAAS,EAC1DmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,WAAYiZ,MAAO7K,EAAQ,sEAAiB,gBACpD,CAAEpO,KAAM,YAAaiZ,MAAO7K,EAAQ,0DAAe,eACnD,CACEpO,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOgN,EAAMrB,YAEf,CACE5kB,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAM,GAAD,OAAKgN,EAAMpB,SAAX,cAAyBoB,EAAM3M,YAEtC,CACEtZ,KAAM,SACNiZ,MAAO7K,EAAQ,uCAAW,QAE5B,CAAEpO,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAE7B,CAAE//B,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAlB1BwvB,EADqE,uBAsBpD9gC,oBAAS,IAtB2C,oBAsBrE2hB,EAtBqE,KAsB/DuvB,EAtB+D,OAuB9ClxC,qBAAS,GAvBqC,oBAuBrEylC,EAvBqE,KAuB5DC,EAvB4D,OAyBlD1lC,oBAAc,MAzBoC,oBAyBrE9M,EAzBqE,KAyB9DyzB,EAzB8D,OA0BtD3mB,oBAAc,MA1BwC,oBA0BrE7M,EA1BqE,KA0BhEyzB,EA1BgE,KA2BpElT,EAAUiyB,KAAVjyB,MA3BoE,EAgCxEnT,sBAAWzB,IAhC6D,IA8B1EtL,MAASqJ,EA9BiE,EA8BjEA,YAAaD,EA9BoD,EA8BpDA,gBAAiBY,EA9BmC,EA8BnCA,QAASL,EA9B0B,EA8B1BA,KAChDqD,EA/B0E,EA+B1EA,SA/B0E,EA6ClCktB,aAAa84B,GAAa,CAClErwB,YAAa,sBA9C6D,oBA6CrEswB,EA7CqE,KA6CvDC,EA7CuD,KAgDpEz9C,EAAai8C,KAAbj8C,SACFsmC,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOw4B,GACPvlD,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,IAG/C,CACEqrB,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,GAE7C8jD,EAAa,CACXxlD,gBAED,CAAC/N,EAAOC,IAvFiE,MAyFtDwN,aAAYgmD,GAAgBpX,GAA3CqX,EAzFqE,uBA0FrDjmD,aAAYkmD,GAAgBtX,GAA5CuX,EA1FqE,uBA2FnDnmD,aAAYomD,GAAgBxX,GAA9CyX,EA3FqE,qBA6FtEhmB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpBkwC,EAAe,CAAE/lD,UAAW,CAAEyK,SAC9BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAQnBsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI0/B,QAAJ,IAAIA,OAAJ,EAAIA,EAAcjhB,UAChBC,GAAW,GAEb,OAAIghB,QAAJ,IAAIA,GAAJ,UAAIA,EAAcxpD,YAAlB,iBAAI,EAAoBspD,mBAAxB,aAAI,EAAiCtpD,KAAM,CAAC,IAClCA,EAASwpD,EAAaxpD,KAAKspD,YAA3BtpD,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAACghB,IASJ,OACE,eAACl4B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAdY,WACF,OAAZi4B,QAAY,IAAZA,KAAcn4B,WAOd,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACo5B,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBAhGkB,SAACurB,GACzBpxC,EAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAgGtCh1C,gBAAiBA,EACjBiqB,sBArGsB,SAACllB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAqGnDkL,QAASA,EACTohD,cAhGc,SAAChN,GACrBpxC,EAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAgGlCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAAC,KAAD,CAAM8yB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,EAChBklD,gBAAiB,SAACC,GA7B1B9hD,EAAS,CAAE9M,KAAM,UAAWC,QA6B2B2uD,OAEjD,eAAC,KAAD,CAAcnhB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,QAAS,SACflB,mBAAoBrvB,KAEtB,eAAC,KAAD,CACEuwB,IAAK,CAAC,aACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGtC,eAAC,KAAD,CACE8gC,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,cAGhC,eAAC,KAAD,CACE6tB,IAAK,CAAC,YACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWokC,EACXnkC,WAAYqkC,EAHd,SAKE,eAAC,GAAD,CAAepzC,MAAOA,SAGzB+xB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,SC9MpC,IAQMy+C,GAAqB,SAAC,GAAD,IAAGn/C,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,iBAE3CF,GAAiBC,cAXf,SAAC3xC,GAAD,MAAiB,CAC9B4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,CAC5B0e,IAEWC,GAAkB3e,aAC7B,GACA,CAAEnuC,KAAM,kBAFqBmuC,CAG7B0e,IAEa,SAASuO,GAAT,GAWN,IAVPhtD,EAUM,EAVNA,MACA6X,EASM,EATNA,MACAxU,EAQM,EARNA,SACA2rB,EAOM,EAPNA,SACAi+B,EAMM,EANNA,UACAC,EAKM,EALNA,WAEA1pB,GAGM,EAJN2pB,OAIM,EAHN3pB,SACAp1C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQyzB,EADR,OAEgB3mB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMyzB,EAFN,OAIkB5mB,oBAAS,IAJ3B,oBAIC2hB,EAJD,KAIOuvB,EAJP,OAKiClxC,oBAAS,IAL1C,oBAKCq/C,EALD,KAKYC,EALZ,OAMyBt/C,oBAAS,MANlC,oBAMC6R,EAND,KAMQ0tC,EANR,OAOiCv/C,oBAAS,MAP1C,oBAOCw/C,EAPD,KAOYC,EAPZ,KASA3hC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAT1B,EAWoCtY,oBAAS,CACjD8d,EAAIpF,OACJoF,EAAI5G,SACJ4G,EAAIjF,QACJiF,EAAI7G,WACJ6G,EAAIhF,SACJgF,EAAI/E,SACJ+E,EAAIlF,QACJkF,EAAIxM,SAnBA,oBAWCouC,EAXD,KAWgBC,EAXhB,OAsBY3/C,oBAAS,CACzB8d,EAAIpF,OACJoF,EAAI5G,SACJ4G,EAAIjF,QACJiF,EAAI7G,WACJ6G,EAAIhF,SACJgF,EAAI/E,SACJ+E,EAAIlF,QACJkF,EAAIxM,SARCwvB,EAtBD,uBAiC0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,GAChD,CAAExiD,WAAY0gB,EAAIxM,OAAOjf,KAAMutD,iBAAiB,KAF3CC,EAjCD,uBAsCiCnyB,aAAaoyB,GAAkB,CACpE3pB,YAAa,sBAvCT,oBAsCC4pB,EAtCD,KAsCaC,EAtCb,KAyCE7yB,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UA1CF,EA4DF3sB,sBAAWd,IA5DT,IA4CJjM,MACEqJ,EA7CE,EA6CFA,YACAD,EA9CE,EA8CFA,gBACAY,EA/CE,EA+CFA,QACAI,GAhDE,EAgDFA,aACAb,GAjDE,EAiDFA,YACAC,GAlDE,EAkDFA,UACA2C,GAnDE,EAmDFA,UAEA7B,IArDE,EAoDF8B,WApDE,EAqDF9B,UACAI,GAtDE,EAsDFA,MACAD,GAvDE,EAuDFA,QACAE,GAxDE,EAwDFA,UACAhB,GAzDE,EAyDFA,KAEFqD,GA3DI,EA2DJA,SAgCIy/C,GAAqB,SAAC3tD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpC4tD,GAAmB,SAAC5tD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KASxC00B,sBAAU,WAAO,IAAD,IACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyCA,OAAQ,GAC3DkjD,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASh6C,QAAS,EACdg6C,EAAQj7C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEE2N,OAAQ+C,GAAgB1Q,QAG5B,GAEN,GADAutC,EAAQkP,GACJliD,GAAO,CACT,IAAMsN,EAAMoa,GAAc,CACxB5P,KAAMoqC,EACN/tD,KAAM8L,KAERshD,EAAaj0C,GAGf,IAAIy8B,EAAM,EACVmY,EAAYC,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UAC1CiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAoB7DqkB,sBAAU,YAlBQ,WAChB,IAAM/lB,EAAY,CAChBu/C,SAAU,GACVC,WAAYH,GAAO1iD,IACnBkvD,YAAaxM,GAAOxiD,IACpB4iD,cAAeJ,GAAOvjD,IACtB4jD,YAAaL,GAAOtjD,IACpB6wD,YAAavN,GAAO3gD,IACpBzM,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,MAEtC6qC,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,GAAI9oB,QACG,CACL,IAMMmjD,EANW3vD,KAAEwnC,QACjBvX,EACA,CAACxkB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGtP,YAGgBqX,KAAI,SAACqK,GAC9B,MAAO,CACLmJ,OAAQyoC,GAAgB,UACpB5xC,EAAIqJ,QACF/I,GAAaN,EAAImJ,QACjB,WACF/V,EACJiW,QAASuoC,GAAgB,WACrB5xC,EAAIqJ,QACFrJ,EAAIqJ,QACJ,WACFjW,EACJuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,MACfkd,EAAIuO,EAAI5G,SAAS7kB,MACjB,WACFsQ,EACJkW,QAASsoC,GAAgB,WACrB5xC,EAAIuO,EAAIjF,QAAQxmB,MACdkd,EAAIuO,EAAIjF,QAAQxmB,MAChB,WACFsQ,EACJsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,MACjBkd,EAAIuO,EAAI7G,WAAW5kB,MACnB,WACFsQ,EACJmW,SAAUqoC,GAAgB,YACtB5xC,EAAIuO,EAAIhF,SAASzmB,MACfkd,EAAIuO,EAAIhF,SAASzmB,MACjB,WACFsQ,EACJoW,SAAUooC,GAAgB,YACtB5xC,EAAIuO,EAAI/E,SAAS1mB,MACfkd,EAAIuO,EAAI/E,SAAS1mB,MACjB,WACFsQ,EACJ2O,OAAQ6vC,GAAgB,UACpB5xC,EAAI+B,OACFD,GAAY9B,EAAI+B,QAChB,WACF3O,MAGR28C,EAAa+B,MAEd,CAAC3B,EAAe/9B,EAAMxkB,KAEzB,IAqFMmkD,GAAoB,CACxB,CAAElkD,WAAY0gB,EAAIlF,QAAQvmB,KAAMqB,KAAM,SACtC,CAAE0J,WAAY,SAAU1J,KAAM,QAG1B6tD,GAAW,CAAC,CAAEnkD,WAAYe,KAC1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAIlF,QAAQvmB,KACxBqB,KAAM,QACN+tD,eAAe,GAEjB,CACErkD,WAAY,SACZ1J,KAAM,MACN+tD,eAAe,IAGbC,GAAe5zC,GAAUrN,GAAOiG,QAAO,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,MAEjE,OACE,eAACo5B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QA1CY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WAmCb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACviB,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,WACV8H,KAAM1a,EAAQ,SAAMkC,EACpB4Q,MAAO9S,OAAQkC,EAAY,IAC3BsY,IAAK,GACL+M,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEvX,QAAS5E,GAvFQ,WACzB,IAAMyjD,EAAO,CACX,CAAEtvD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBmhD,EAAapC,EAAU7yC,MAAMzH,KAAI,SAACg6B,GACtC,OAAO,6BACFA,GADL,IAEErtB,MAAOR,GAAY6tB,EAAGrtB,YAGpBsF,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYmuC,EAAU3tC,OAAS,GACpDmU,MAAK,OAAEw5B,QAAF,IAAEA,OAAF,EAAEA,EAAWx5B,MAClB+7B,WAAYthD,EAAQ,kFAAmB,eACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/BkE,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAMigC,EAAYD,QAASxqC,IAnErB,WACpB,IAAMwqC,EAAOjC,EAAcx6C,KAAI,SAAC+8C,GAC9B,MAAO,CAAE5vD,KAAM4vD,EAAG32C,UAGd42C,EAAe,GACjBllD,IACFklD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAWnH,OAAd,OAAuBmH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3K,OAE1D0K,IACFmlD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG1D,SAAH,IAAGA,QAAH,EAAGA,GAAalH,OAAhB,OAAyBkH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAa1K,OAE9DuL,IACFskD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG7C,SAAH,IAAGA,QAAH,EAAGA,GAAc/H,OAAjB,OAA0B+H,SAA1B,IAA0BA,QAA1B,EAA0BA,GAAcvL,OAEhEyL,IACFokD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG3C,SAAH,IAAGA,QAAH,EAAGA,GAAUjI,OAAb,OAAsBiI,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAUzL,OAG5D,IAAM8kB,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYQ,GAAS,GAC1CkwC,WAAYthD,EAAQ,kFAAmB,eACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/B+uD,UACA7qD,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAM09B,EAAWsC,QAASxqC,IA0FhC7L,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,eAACmyD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBApTkB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAoTtCh1C,gBAAiBA,EACjBiqB,sBAzTsB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAyTnDkL,QAASA,EACTohD,cArTc,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAqTlCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV8H,KAAM1a,EAAQ,SAAMkC,EACpB4Q,MAAO9S,OAAQkC,EAAY,IAC3BsY,IAAK,GACL/qB,OAAQ,GACR83B,OAAQ,IACR74B,WAAY,SACZwf,eAAgB,aAChBwP,YAAa,GACbC,aAAc,GACdrvB,UAAW,GAbf,UAgBE,eAAC,GAAD,CACE6O,aAAcA,GACdq/C,gBAzUsB,SAAC3qD,GAC/BkO,GAAS,CAAE9M,KAAM,kBAAmBC,QAASrB,KAyUrCyK,YAAaA,GACbw/B,eAxUqB,SAACjqC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAwUpC0K,UAAWA,GACX2iB,aAvUmB,SAACrtB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAuUlC66B,YAAaA,EACbD,UAAWA,EACXuC,SAAUA,EACVuG,UAAW03B,EACX7vD,UAAW8B,GACX4mC,aA1UmB,SAACj0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KA0UlCwL,SAAUA,GACVgwD,YAzUkB,SAACx7D,GAC3BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,KAyUjCq7D,WAAYA,EACZr1C,MAAOA,EACP7X,MAAOA,IAET,eAAC,GAAD,CACEwe,QAASyiC,GACTpvD,MAAO2L,GACP8U,SA9Ge,SAACpR,GAtNG,IAACrP,EAuNL,SAAnBqP,EAAEk6B,OAAOvpC,OACX4tD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmBt+C,EAAEk6B,OAAOvpC,OA5NFA,EA6NLwrB,EAAInc,EAAEk6B,OAAOvpC,OAAOD,KA5N3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MAoUlCmO,MAAOA,OAGX,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,GAAI3W,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,GAChBklD,gBAAiB,SAACC,GAxU5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QAwU6B2uD,OAEhDpkD,IAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WAAYjB,GACZkB,WAAYhB,KAEbtjD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAiBpjC,GAAyBihD,GAAjB5e,GACzBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,UACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAaivC,YAAaA,KACzB9iD,IACC,eAAC,KAAD,CACE41B,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,QACzBmiD,MAAOniD,EAAQ,6CAAY,QAC3BoiD,QAASpiD,EAAQ,iCAAU,SAE7BqiD,wBAAsB,IAG1B,eAAC,KAAD,CACEhvB,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE5G,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OA9UO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,uBAAmB2d,GAAsBgyC,IACnDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBCpMZ,IAWakuC,GAAiBC,cAXf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,EAHH,SAAC,GAAD,IAAGzgC,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,mBAMzC,SAASstB,GAAT,GAQN,IAPPttD,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAxU,EAKM,EALNA,SACA0oD,EAIM,EAJNA,aAEA39D,GAEM,EAHNo1C,QAGM,EAFNp1C,OACAgG,EACM,EADNA,SAEMm5D,EAAgB,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAc9lD,QACrC,SAACrS,GAAD,OAAiC,KAAnBA,EAAIiT,cAFd,EAIoBtH,oBAAc,MAJlC,oBAIC9M,EAJD,KAIQyzB,EAJR,OAKgB3mB,oBAAc,MAL9B,oBAKC7M,EALD,KAKMyzB,EALN,OAOkB5mB,oBAAS,IAP3B,oBAOC2hB,EAPD,KAOOuvB,EAPP,OAQiClxC,oBAAS,IAR1C,oBAQYs/C,GARZ,aASyBt/C,oBAAS,MATlC,oBASC6R,EATD,KASQ0tC,EATR,KAWAzhC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAX1B,EAaoCtY,oBAAS,CACjD8d,EAAIpF,OACJoF,EAAIlF,QACJkF,EAAIzpB,IAGJypB,EAAI9E,MAGJ8E,EAAIxE,OACJwE,EAAIpE,KACJoE,EAAIjN,OACJiN,EAAIxM,SAzBA,oBAaCouC,EAbD,KAagBC,EAbhB,OA4BY3/C,oBAAS,CACzB8d,EAAIpF,OACJoF,EAAIlF,QACJkF,EAAIzpB,IAGJypB,EAAI9E,MAGJ8E,EAAIxE,OACJwE,EAAIpE,KACJoE,EAAIjN,OACJiN,EAAIxM,SAZCwvB,EA5BD,uBA2C0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,GAChD,CAAExiD,WAAY0gB,EAAIxM,OAAOjf,KAAMutD,iBAAiB,KAF3CC,EA3CD,uBAgDiCnyB,aAAaoyB,GAAkB,CACpE3pB,YAAa,sBAjDT,oBAgDC4pB,EAhDD,KAgDaC,EAhDb,OAsEFz/C,sBAAW/B,IAtET,IAqDJhL,MACEqJ,EAtDE,EAsDFA,YACAD,EAvDE,EAuDFA,gBACAY,EAxDE,EAwDFA,QACAI,EAzDE,EAyDFA,aACAb,EA1DE,EA0DFA,YACAC,EA3DE,EA2DFA,UACAa,EA5DE,EA4DFA,UACAC,EA7DE,EA6DFA,SACAC,EA9DE,EA8DFA,SACAC,EA/DE,EA+DFA,UACAE,EAhEE,EAgEFA,MACAD,EAjEE,EAiEFA,QACAE,GAlEE,EAkEFA,UACAhB,GAnEE,EAmEFA,KAEFqD,GArEI,EAqEJA,SAEMkT,GAAUiyB,KAAVjyB,MAmBRsT,sBAAU,WAAO,IAAD,QACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyCA,OAAQ,GAC3DuvD,GAAqB,OAAXzM,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,0DAAyC0+B,UAAW,KAE9DtqB,EAASm7C,EAAU10C,OAAO00C,GAAW,KAErCrM,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASh6C,QAAS,EACdg6C,EAAQj7C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEE2N,OAAQ+C,GAAgB1Q,QAG5B,GAEF2N,GACF8uC,EAAYsM,QAAQ,CAClBhhD,IAAK5O,KAAKklD,MACV2K,UAAW,sEACXC,QAAS,mBACTt7C,WAIJ4/B,EAAQkP,GACR,IAAInY,EAAM,EACVmY,EAAYC,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UAC1CiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAwB7DqkB,sBAAU,YApBQ,WAChB,IAJkBhR,EAIZ/U,EAAY,CAChBu/C,SAAU,GACVqM,WAAYvM,GAAOviD,GACnB0iD,WAAYH,GAAO1iD,GACnBkvD,YAAaxM,GAAOxiD,GACpB4iD,cAAeJ,GAAOvjD,GACtB4jD,YAAaL,GAAOtjD,GACpB4jD,YAAaN,GAAOziD,GACpBgjD,SAZgB7qC,EAYIhY,EAXtBgY,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGnrD,WAAMuN,GAYxDzP,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,MAEtC6qC,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,EAAOD,EAASE,KAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,IAEMq6B,EAFW3vD,KAAEwnC,QAAQvX,EAAM,CAACxkB,GAAK,GAAGC,YAAa,CAACD,GAAK,GAAGtP,YAErCqX,KAAI,SAACqK,GAC9B,MAAO,CACLmJ,OAAQyoC,GAAgB,UACpBtxC,GAAaN,EAAImJ,aACjB/V,EACJiW,QAASuoC,GAAgB,WAAa5xC,EAAIqJ,aAAUjW,EACpDuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,WACjBsQ,EACJkW,QAASsoC,GAAgB,WAAa5xC,EAAIuO,EAAIjF,QAAQxmB,WAAQsQ,EAC9DsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,WACnBsQ,EACJmW,SAAUqoC,GAAgB,YACtB5xC,EAAIuO,EAAIhF,SAASzmB,WACjBsQ,EACJgS,SAAUwsC,GAAgB,YACtB5xC,EAAIuO,EAAInJ,SAAStiB,WACjBsQ,EACJ2O,OAAQ6vC,GAAgB,UAAY9vC,GAAY9B,EAAI+B,aAAU3O,MAIlE28C,EAAa+B,KACZ,CAAC3B,EAAe/9B,EAAMxkB,KAEzB,IA+CMmkD,GAAoB,CACxB,CAAElkD,WAAYe,GAAWzK,KAAM,SAC/B,CAAE0J,WAAY0gB,EAAIhF,SAASzmB,KAAMqB,KAAM,SACvC,CAAE0J,WAAY,SAAU1J,KAAM,QAO1B6tD,GAAW,CAAC,CAAEnkD,WAAYe,KAE1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAIhF,SAASzmB,KACzBqB,KAAM,QACN+tD,eAAe,GAGjB,CACErkD,WAAY,SACZ1J,KAAM,MAEN+tD,eAAe,GAEjB,CACErkD,WAAY0gB,EAAIhF,SAASzmB,KACzBqB,KAAM,QAENq5D,mBAAmB,GAErB,CACE3vD,WAAY,SACZ1J,KAAM,MACNq5D,mBAAmB,IAKvB,OACE,eAACv+B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAtDY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WA+Cb,SAQE,gBAACjJ,GAAA,EAAD,WAcE,eAACo5B,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBAlPkB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAkPtCh1C,gBAAiBA,EACjBiqB,sBAvPsB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAuPnDkL,QAASA,EACTohD,cAnPc,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAmPlCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV8H,KAAM1a,EAAQ,SAAMkC,EACpB4Q,MAAO9S,OAAQkC,EAAY,IAC3BsY,IAAK,GACL/qB,OAAQ,GACR83B,OAAQ,IACR74B,WAAY,SACZwf,eAAgB,aAChBwP,YAAa,GACbC,aAAc,GACdrvB,UAAW,GAbf,UAgBE,eAACgU,GAAA,EAAD,CAAKF,MAAO,CAAEpV,WAAY,GAAIC,YAAa,IAA3C,SACE,eAAC4+D,GAAD,CACErtC,QAASvL,GACTphB,MAAK,OAAE0L,QAAF,IAAEA,OAAF,EAAEA,EAAY,GACnByyC,SAtQiB,SAACn+C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,EAAQ,CAACA,GAAS,MAsQlDgmB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,OACL8nD,SAAO,EACP5qD,MAAO,QAGX,eAAC+8D,GAAD,CACErtC,QAAS+uC,EACT17D,MAAK,OAAEyL,QAAF,IAAEA,OAAF,EAAEA,EAAW,GAClB0yC,SApRkB,SAACn+C,GAC3BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,EAAQ,CAACA,GAAS,MAoRnDgmB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,UACL8nD,SAAO,EACP5qD,MAAO,MAET,eAACwT,GAAA,EAAD,CACEF,MAAO,CACLye,SAAU,IACV5zB,YAAa+S,EAAQ,QAAKkC,EAC1BlV,WAAYgT,OAAQkC,EAAY,IAJpC,SAOE,eAACT,GAAA,EAAD,CAAY5U,QAAQ,YAAYuV,MAAO,CAAE2Q,WAAY,QAArD,SACGzB,GAAkB,CAAEzf,MAAOuf,WAIlC,eAACyT,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,IAAK3W,SAAU,QAA5D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,GAChBklD,gBAAiB,SAACC,GArI5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QAqI6B2uD,OAEhDpkD,GAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WAAYjB,GACZkB,WAAYhB,KAEbtjD,GAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAgBf,GAChBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,UACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoBlsB,KAEtB,eAAC,KAAD,CACEotB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,eAGhC,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAastC,YAAaA,KACzB9iD,GAAS,eAAC,KAAD,CAAe4kD,wBAAsB,IAC9C5kD,GACC,eAAC,KAAD,CACE41B,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,gBAMnC,eAAC,KAAD,CACE5G,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OArSO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,yBAAqB2d,GAAsBgyC,IACrDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBCjOG,IC0NA47D,GAlNQ,SAAC,GAUZ,IATV/pD,EASS,EATTA,KACAqZ,EAQS,EARTA,QACAhO,EAOS,EAPTA,IACA6S,EAMS,EANTA,MACA6Y,EAKS,EALTA,YACAzY,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACA9uB,EACS,EADTA,MACS,EACmBmR,qBAAS,GAD5B,oBACFw6B,EADE,KACMU,EADN,OAEel7B,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFtD,oBAEFy3B,EAFE,KAEIze,EAFJ,OAG6B3b,oBAAc,MAH3C,oBAGFjD,EAHE,KAGWw/B,EAHX,OAIuBv8B,qBAAc,GAJrC,oBAIFw8B,EAJE,KAIQC,EAJR,OAKiBz8B,oBAAc,WAL/B,oBAKF3I,EALE,KAKKurB,EALL,KAOHga,EAAe34B,KAAM44B,SAPlB,EASyC18B,aAAQ7J,EAAI0B,cAAtDoI,EATC,EASDA,SAAUC,EATT,EASSA,aAAcC,EATvB,EASuBA,OAAQ86B,EAT/B,EAS+BA,MAT/B,EAaU76B,sBAAWtB,IAbrB,IAWPyB,UAAa4X,EAXN,EAWMA,MAAO7X,EAXb,EAWaA,MACX1N,EAZF,EAYPhC,MAASgC,KAEHo6B,EAAgB6J,KAAhB7J,YAERnG,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClB,IAAMA,EAAM6D,EAAI+H,aACVwlB,EAAS3P,EAAYzmB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQA,KAAK,GACjE6wB,EAAeO,GACfla,EAASrT,EAAIlY,UAEd,CAACkY,IAEJ,IAAMzO,EAAQ,yCAAG,WAAO5D,GAAP,wBAAA8D,EAAA,sDACfk6B,GAAU,GACJ7oC,EAAO6K,EAAK7K,KAAKua,OACjB/W,EAASqH,EAAKrH,OAAO+W,OACrBwmB,EAAOl2B,EAAKk2B,KACZnc,EAAala,EACf,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEjB1B,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCtQ,OACAwD,SACAwB,QACA+7B,OACA2G,QAAS,EACT9iB,aACAxiB,OAAQ1B,EAAK0B,OACb4mC,OAAQtoC,EAAK2Y,KAKf4vB,EAFelZ,EAAQI,EAAYC,EAChBL,EAAQ,iBAAmB,iBACpBnhB,GAhCX,2CAAH,sDAmCRq6B,EAAK,yCAAG,WAAOC,EAAaC,EAAoBv6B,GAAxC,kBAAAD,EAAA,+EAEQu6B,EAAO,CAAEt6B,cAFjB,cAEJuK,EAFI,OAGJiwB,EAAQpf,GAAc7Q,EAAKgwB,GAC7BP,GAAeQ,GAAOR,EAAYQ,EAAO,YAC7CP,GAAU,GALA,SAMJrf,GAAaF,EAASlb,GANlB,OAOVs8B,IAPU,kDASVpB,EAAQ,EAAD,IATG,0DAAH,0DAaLA,EAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,GAFlB,6CAINsb,GAAWJ,EAASlb,GAJd,OAKZu8B,IACAhlB,QAAQC,IAAIhY,GANA,2CAAH,sDAUP+8B,EAAW,WACf5B,IACAmB,EAAe,MACf3Z,EAAS,YAELma,EAAa,WACjBxf,IACAyf,KAOI1xB,EAAQ7K,EACV2hB,EACE,0DACA,+FACFA,EACA,eACA,gBAEJ,OACE,eAAC+X,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAASwf,EACTzxB,MAAOA,EACPxK,SAlBmB,WACrBT,EAAaS,EAAbT,IAkBExR,MAAOA,EACPurC,KAAMA,EACN7Q,GAAI,GACJiR,OAAQA,EATV,SAWE,gBAAChV,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACR6L,WAAS,EACThQ,KAAK,SACLiQ,MAAOgW,EAAMjmB,KACb+N,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACThW,OAAQ,GACR88B,GAAI,OAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,OACLiQ,MAAOgW,EAAMyY,OACb3wB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTkb,QAASA,EACTlxB,OAAQ,GACR88B,GAAI,UAIV,gBAAC,KAAMxK,SAAP,WACE,eAACod,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,EAAMrB,WACbqB,MAAOA,EACP2G,QAASkO,EAAYzmB,QAAO,SAACjR,GAAD,OAA8B,IAAhBA,EAAIukC,WAC9C1nC,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBsd,EAChBrd,YAAaod,EACbnd,SAAUud,EACVx8B,SAAUA,EAEVK,MAAOA,EACPgC,WAAS,EACT8mB,GAAI,KAEN,eAACD,GAAD,CACEj3B,KAAK,OACLiQ,MAAOgW,EAAM8a,KACbhzB,SAAUA,EACVE,OAAQA,EACRiP,IAAKA,EACL9M,WAAS,EACTq5B,WAAS,EACTC,QAAS,EACTpa,KAAM,IAER,eAAC6D,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,SACE,gBAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,UACE,eAACrjB,GAAA,EAAD,CACEyd,UAAQ,EACRxtB,KAAK,QACLC,OAAU,OAAHid,QAAG,IAAHA,OAAA,EAAAA,EAAKlY,OAAQkY,EAAIlY,MAAQA,EAChC/J,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,IAAKF,gBAAiBgI,GACtC2kC,WAAY,CAAEn5B,MAAO,CAAE+L,aAAc,EAAGvX,MAAO,SAC/C5K,OAAO,UAET,eAAC,GAAD,CAAam2B,SAAUA,EAAUvrB,MAAOA,eAKhD,eAACmuB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCjMR,SAASyoC,GAAT,GAMN,IALPztD,EAKM,EALNA,MACA6X,EAIM,EAJNA,MACAzjB,EAGM,EAHNA,SACAhG,EAEM,EAFNA,MACAiV,EACM,EADNA,SACM,EACwB9D,qBAAS,GADjC,oBACCylC,EADD,KACUC,EADV,OAEkB1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFzD,oBAECy3B,EAFD,KAEOze,EAFP,OAIY3b,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMjmB,MAChD,CAAEA,KAAM,SAAUiZ,MAAOgN,EAAMjhB,OAC/B,CACEhF,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOgN,EAAMrB,YAEf,CAAE5kB,KAAM,OAAQiZ,MAAOgN,EAAM8a,QAPxB0N,EAJD,uBFzBO,WAAO,IAAD,IAGbrgC,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgB66B,aAAa0G,GAAc,CAC5DnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,MALd,oBAIZxlB,EAJY,KAIAC,EAJA,OAQG3zB,aAAY4zB,GAAgB,CAChDxG,eAAgB,CACd,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,KACtD,CAAE7rB,MAAOoG,GAAcnzB,UAAW,CAAER,aAHjC8uB,EARY,uBAcI5uB,aAAY6zB,GAAgB,CACjDzG,eAAgB,CACd,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,KACtD,CAAE7rB,MAAOoG,GAAcnzB,UAAW,CAAER,aAHjCg0B,EAdY,uBAoBM9zB,aAAY+zB,GAAgB,CACnD3G,eAAgB,CACd,CAAEC,MAAOoG,GAAcnzB,UAAW,CAAER,QAAOo5C,SAAU,CAAC,KACtD,CAAE7rB,MAAOoG,GAAcnzB,UAAW,CAAER,aAHjCk0B,EApBY,qBAkCnB,OAPA3N,sBAAU,WACRqN,MACC,CAACA,IAKG,CACLnH,WAJuB,OAAPoH,QAAO,IAAPA,GAAA,UAAAA,EAASp3B,YAAT,sDAAiCA,OAAQ,GAKzD03B,gBAJsB,yBAAMN,QAAN,IAAMA,OAAN,EAAMA,EAAS/F,WAKrCgB,cACAkF,eACAE,kBEMEw5B,GALFjhC,EAfI,EAeJA,UACAqC,EAhBI,EAgBJA,YACAkF,EAjBI,EAiBJA,aACAE,EAlBI,EAkBJA,eACAC,EAnBI,EAmBJA,gBAGIoM,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAIA/Q,EAAe,CAAE1zB,UAAW,CAAEyK,SAJ9B,WAKoB,KAA/B,QADDF,EAJY,cAKX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWw3B,sBAAX,eAA2BvzB,IALb,6BAMZqK,QANY,IAMZA,GANY,UAMZA,EAAKtO,YANO,iBAMZ,EAAWw3B,sBANC,aAMZ,EAA2Bz0B,MAAM4L,SAAS,YAN9B,kCAORqQ,GAAiBP,EAASlb,GAPlB,iDASRsb,GAAWJ,EAASlb,GATZ,QAYlBilC,GAAW,GAZO,4CAAH,sDAgBnB,OACE,eAAClX,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAASmG,EANX,SAQE,gBAACtP,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,gBAAC,KAAD,CAAMkhB,KAAMuL,EAAW4T,QAASA,EAAS1oB,SAAUA,GAAnD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,UACNlB,mBAAoB/wB,KAEtB,eAAC,KAAD,CACEiyB,IAAK,CAAC,SACNlB,mBAAoBtxB,KAEtB,eAAC,KAAD,CACEwyB,IAAK,CAAC,WACNlB,mBAAoB,SAACh0C,GAAD,OAClB2iB,GAAiB,6BAAK3iB,GAAN,IAAaoU,cAGhC5L,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAW+M,EACX9M,WAAYgS,EAHd,SAKE,eAAC,GAAD,SAGH2F,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,SChGA,SAASmzC,GAAT,GAA+D,IAA5C3tD,EAA2C,EAA3CA,MAAO6X,EAAoC,EAApCA,MAAOxU,EAA6B,EAA7BA,SAAUjP,EAAmB,EAAnBA,SAAUhG,EAAS,EAATA,MAAS,EACzDmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,YAAaiZ,MAAOgN,EAAM3D,UAClC,CAAEtiB,KAAM,WAAYiZ,MAAO7K,EAAQ,0DAAe,eAElD,CAAEpO,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9B,CAAElmB,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAP1BwvB,EADoE,uBAWnD9gC,oBAAS,IAX0C,oBAWpE2hB,EAXoE,KAW9DuvB,EAX8D,OAY7ClxC,qBAAS,GAZoC,oBAYpEylC,EAZoE,KAY3DC,EAZ2D,OAcjD1lC,oBAAc,MAdmC,oBAcpE9M,EAdoE,KAc7DyzB,EAd6D,OAerD3mB,oBAAc,MAfuC,oBAepE7M,EAfoE,KAe/DyzB,EAf+D,KAiBnElT,EAAUiyB,KAAVjyB,MAjBmE,EAsBvEnT,sBAAWlC,IAtB4D,IAoBzE7K,MAASqJ,EApBgE,EAoBhEA,YAAaD,EApBmD,EAoBnDA,gBAAiBY,EApBkC,EAoBlCA,QAASL,EApByB,EAoBzBA,KAChDqD,EArByE,EAqBzEA,SArByE,EAmClCktB,aAAag4B,GAAa,CACjEvvB,YAAa,sBApC4D,oBAmCpEwvB,EAnCoE,KAmCtDC,EAnCsD,KAsCnE38C,EAAai8C,KAAbj8C,SACFsmC,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAO03B,GACPzkD,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,IAG/C,CACEqrB,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,GAE7CgjD,EAAa,CACX1kD,gBAED,CAAC/N,EAAOC,IA7EgE,MA+EtDwN,aAAYklD,GAAetW,GAAzCuW,EA/EoE,uBAgFrDnlD,aAAYolD,GAAexW,GAA1CyW,EAhFoE,uBAiFnDrlD,aAAYslD,GAAe1W,GAA5C2W,EAjFoE,qBAmFrEllB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpBovC,EAAc,CAAEjlD,UAAW,CAAEyK,SAC7BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAQnBsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI4+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAangB,UACfC,GAAW,GAEb,OAAIkgB,QAAJ,IAAIA,GAAJ,UAAIA,EAAa1oD,YAAjB,iBAAI,EAAmBwoD,mBAAvB,aAAI,EAAgCxoD,KAAM,CAAC,IACjCA,EAAS0oD,EAAY1oD,KAAKwoD,YAA1BxoD,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAACkgB,IAUJ,OACE,eAACp3B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAfY,WACH,OAAXm3B,QAAW,IAAXA,KAAar3B,WAQb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACo5B,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBAjGkB,SAACurB,GACzBpxC,EAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAiGtCh1C,gBAAiBA,EACjBiqB,sBAtGsB,SAACllB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAsGnDkL,QAASA,EACTohD,cAjGc,SAAChN,GACrBpxC,EAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAiGlCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAAC,KAAD,CAAM8yB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,EAChBklD,gBAAiB,SAACC,GA9B1B9hD,EAAS,CAAE9M,KAAM,UAAWC,QA8B2B2uD,OAEjD,eAAC,KAAD,CAAcnhB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,QAAS,SACflB,mBAAoBrvB,KAEtB,eAAC,KAAD,CACEuwB,IAAK,CAAC,aACNlB,mBAAoB,SAACh0C,GAAD,OAClBqoB,GAAyBroB,EAAO4c,EAAUxI,MAG9C,eAAC,KAAD,CACE8gC,IAAK,CAAC,YACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWsjC,EACXrjC,WAAYujC,EAHd,SAKE,eAAC,GAAD,CAActyC,MAAOA,SAGxB+xB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,SC3O7B,I,GAAM2X,GAAW,SAAC7I,GAAD,OAAcA,EAAI2wB,OAEpCI,GAAqB,SAACj0C,GAAD,OACzB,eAAC,KAAD,cACEg0C,mBAAoB,gBAAG/tC,EAAH,EAAGA,MAAH,OAClB,eAAC4P,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiCyqB,OAAOzlB,GAAS,MAE/CjG,KAgBKk0C,GAAiBC,cAZf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,SASP,CAAE8D,KAAM,kBAA3BmuC,EAJH,SAAC,GAAD,IAAGzgC,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAMC,MAAP,6BAAiBD,GAAjB,IAA4B1+B,UAAWjC,EAAQ0gC,mBAOlC,SAAS4tB,GAAT,GAMN,IALP1sC,EAKM,EALNA,KACApvB,EAIM,EAJNA,WACAkO,EAGM,EAHNA,MACA6X,EAEM,EAFNA,MACArP,EACM,EADNA,SACM,EACYjJ,oBAAS,CACzB,CAAE3N,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9B,CAAElmB,KAAM,WAAYiZ,MAAOgN,EAAMjT,IACjC,CAAEhT,KAAM,YAAaiZ,MAAOgN,EAAM6Z,MAClC,CAAE9/B,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAL1BwvB,EADD,uBAS+B9gC,oBAAS,CAC5C,CAAE5C,WAAY,QAAS7N,MAAO,MAAO0T,MAAO,QAC5C,CAAE7F,WAAY,WAAY7N,MAAO,MAAO0T,MAAO,QAC/C,CAAE7F,WAAY,YAAa7N,MAAO,MAAO0T,MAAO,QAChD,CAAE7F,WAAY,OAAQ7N,MAAO,QAC7B,CAAE6N,WAAY,SAAU7N,MAAO,MAAO0T,MAAO,WALxC89B,EATD,qBAiBAC,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBopB,EAAQppB,EAAQ,GACtBvkB,EAAW2tC,IAHO,2CAAH,sDAWnB,OACE,eAAC5a,GAAA,EAAD,CACEziB,MAAO,CACLo+B,UAAW,IACX9d,SAAU,OACV12B,OAAQ,GACRy0C,UAAW,KALf,SAQGvf,GACC,gBAAC,KAAD,CAAMA,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,CACEI,oBAlBU,WAClB,OAAO,eAACr+B,GAAA,EAAD,CAAK9T,QAAQ,UAkBZoyC,iBAAkBN,EAClBO,eAAgBf,KAElB,eAAC,KAAD,CACEgB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,GAAD,CAAoBwvB,IAAK,CAAC,WAC1B,eAAC,KAAD,CACEA,IAAK,CAAC,WAAY,aAClBlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGtC,eAAC,KAAD,CACE+gC,mBAAiB,EAEjBE,iBAAkB/B,KAEpB,eAAC,KAAD,SC3GKxtC,oBAAf,wpBCqBamzC,GAAe,SAACtvB,GAC3B,OAAOA,EAAK9Q,KAAI,SAACvB,EAAWu8B,GAC1B,OAAO,6BACFv8B,GADL,IAEEu8B,cA+cSouB,GA1cS,SAAC,GAQb,IAPVpqD,EAOS,EAPTA,KACAqZ,EAMS,EANTA,QACAhO,EAKS,EALTA,IACA6S,EAIS,EAJTA,MACAI,EAGS,EAHTA,UACAC,EAES,EAFTA,WACA5zB,EACS,EADTA,MACS,EACqBmR,qBAAS,GAD9B,oBACFylC,EADE,KACOC,EADP,OAGe1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAHtD,oBAGFy3B,EAHE,KAGIze,EAHJ,OAI+B1X,KAAMjE,SAAS,IAAIlD,MAJlD,oBAIF8oC,EAJE,KAIYC,EAJZ,OAK6B5hC,KAAMjE,SAAS,IAL5C,oBAKF0kD,EALE,KAKWC,EALX,OAM+B1gD,KAAMjE,SAAS,IAN9C,oBAMFomD,EANE,KAMYC,EANZ,OAQwBpiD,KAAMjE,SAAS,GARvC,oBAQFsR,EARE,KAQMi9C,EARN,OASoBtqD,KAAMjE,SAAS,IATnC,oBASF0Z,EATE,KASI80C,EATJ,OAU4BvqD,KAAMjE,SAAS,MAV3C,oBAUFyoC,EAVE,KAUQmc,EAVR,OAW8B3gD,KAAMjE,SAAS,MAX7C,oBAWF6U,EAXE,KAWSgwC,EAXT,KAYH4J,EAAcxqD,KAAM44B,SAZjB,EAcyB78B,oBAAc,IAdvC,oBAcFgmC,EAdE,KAcSC,EAdT,OAgB6BjmC,oBAAc,MAhB3C,oBAgBFjD,EAhBE,KAgBWw/B,EAhBX,OAiB6Bv8B,qBAAc,GAjB3C,qBAiBFm9B,GAjBE,MAiBWC,GAjBX,MAkBHC,GAAiBp5B,KAAM44B,SAlBpB,GAoByB78B,oBAAc,MApBvC,sBAoBFhD,GApBE,MAoBS2iB,GApBT,SAqByB3f,qBAAc,GArBvC,sBAqBFs9B,GArBE,MAqBSC,GArBT,MAsBHX,GAAe34B,KAAM44B,SAtBlB,GAwBqB78B,oBAAc,MAxBnC,sBAwBF+5B,GAxBE,MAwBO4C,GAxBP,SAyByB38B,oBAAc,IAzBvC,sBAyBFw9B,GAzBE,MAyBSC,GAzBT,SA2BuBz9B,oBAAc,IA3BrC,sBA2BF0uD,GA3BE,MA2BQC,GA3BR,SA+BUpuD,sBAAWtB,IA/BrB,MA6BPyB,UAAa4X,GA7BN,GA6BMA,MAAO7X,GA7Bb,GA6BaA,MACX1N,GA9BF,GA8BPhC,MAASgC,KA9BF,GAiC0B26B,aAAakhC,GAAmB,CACjEz4B,YAAa,sBAlCN,sBAiCF0Q,GAjCE,MAiCQC,GAjCR,MAqCD79B,GAAai8C,KAAbj8C,SACAkkB,GAAgB6J,KAAhB7J,YACAD,GAAc+J,KAAd/J,UAERlG,sBAAU,WACR,GAAIkG,IAAaA,GAAU/mB,OAAS,EAAG,CACrC,IAAMu3B,EAAWxQ,GAAUxmB,QAAO,SAAC0mB,GAAD,OAAcA,EAAI2M,UAAYA,MAChE0D,GAAaC,MAEd,CAAC3D,GAAS7M,KAEblG,sBAAU,WACR,GAAI5E,GACEplB,KACF,OAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAAWsa,cAAc,CAAC,IAAD,EACrB2vB,EAAI,UAAG9Z,GAAYzmB,QACvB,SAACjR,GAAD,OAAcA,EAAIiW,OAAJ,OAAY1O,SAAZ,IAAYA,QAAZ,EAAYA,GAAWsa,wBAD7B,aAAG,EAET,GACJilB,EAAe0K,MAIpB,CAACjqC,KAEJgqB,sBAAU,WAAO,IAAD,IACRra,GAAiB,OAATm6B,SAAS,IAATA,IAAA,UAAAA,GAAW5pC,YAAX,2DAAwCA,OAAQ,GAC9D,GAAIyP,GAASA,EAAMxG,OAAS,EAAG,CAC7B,IAAMjJ,EAAOxL,KAAEib,GACZkZ,QAAQ,WACR3gB,KAAI,SAAC4gB,EAAOC,EAAKma,GAAW,IAAD,cACpBuI,EAAQ,UAAG3iB,EAAMpf,QAAO,SAACmoD,GAAD,OAAcA,EAAIt6C,gBAAlC,iBAAG,EAAwC,UAA3C,aAAG,EAA4Cu6C,QACvDj6C,EAAS,UAAGiR,EAAMpf,QAAO,SAACmoD,GAAD,OAAcA,EAAIv6C,iBAAlC,iBAAG,EAAyC,UAA5C,aAAG,EACdw6C,QACEx9C,EAAM,UAAGwU,EAAM,UAAT,aAAG,EAAUxU,OACnBoI,EAAI,UAAGoM,EAAM,UAAT,aAAG,EAAUpM,KAEvB,MAAO,CACL5J,KAFQ,UAAGgW,EAAM,UAAT,aAAG,EAAUpN,OAGrB+vB,WACA5zB,YACAvD,SACAoI,OACAjlB,OAAQ1B,GAAK0B,OACb4mC,OAAQtoC,GAAK2Y,QAGhBpZ,QAEG82C,EAAgB9D,GAAapoC,GACnC+oC,EAAamD,GACb1D,GAAW,MAEZ,CAACoB,KAEJ9f,sBAAU,WACR29B,EAAe17C,IACfo9C,EAAgBp9C,MACf,CAAC/E,IAEJ8iB,sBAAU,WACR,GAAIzX,GAAOA,EAAI7D,IAAK,CAClBg6B,GAAW,GACX,IAAMzkC,EAAY,CAAE4mC,KAAMt4B,EAAI7D,KAC9Bm7B,GAAS,CACP5lC,cAGF0tD,GAAYp/C,EAAImK,MAEhBiuB,GAAiBp4B,EAAIO,SAEtB,CAACP,IAEJ,IAAMw/C,GAAa,yCAAG,iCAAA/tD,EAAA,yDACfynC,GAAa5zB,EADE,gCAEZsH,GACJR,EACAlb,GAAQ,wHAA2B,oCAJnB,2CAQhBgoC,IAAa5zB,EARG,gCASZsH,GACJR,EACAlb,GAAQ,iJAAgC,iCAXxB,wCAedkD,EAAO,CACXmM,KAAM81B,EACN6C,SAAUA,EAASt/B,KACnB0L,UAAWA,EAAU1L,KACrBmI,SACAoI,OACAjlB,OAAQ1B,GAAK0B,OACb4mC,OAAQtoC,GAAK2Y,KAETy9B,EAxBc,uBAwBCnD,GAxBD,8BAwBiBriC,GAxBjB,IAwBuB03B,OAAQtoC,GAAK2Y,QAClD09B,EAAgB9D,GAAa6D,GACnClD,EAAamD,GACb4lB,KACAP,EAAO/tC,QAAQ6e,QA5BK,4CAAH,qDAiDbz+B,GAAQ,yCAAG,uCAAAE,EAAA,2DACoB4U,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8vB,EAAe/vB,GAAe+vB,EAAe9vB,GAFlC,gCAGPqG,GACJR,EACAlb,GAAQ,+FAAsB,yBALnB,2CASVulC,GAAkC,IAArBA,EAAU7/B,OATb,gCAUPgW,GACJR,EACAlb,GAAQ,sGAAwB,wBAZrB,wCAgBTwW,EAAala,EACf,CACEua,aAAcva,EAAY2O,IAC1B6L,eAAgBxa,EAAY1K,KAC5BmlB,iBAAkBza,EAAYlH,OAC9B4hB,gBAAiB1a,EAAY1F,OAE/B,CACEigB,kBAAc3U,EACd4U,oBAAgB5U,EAChB6U,sBAAkB7U,EAClB8U,qBAAiB9U,GAEjBuU,EAAWla,GACb,CACE0a,WAAY1a,GAAU0O,IACtBiM,aAAc3a,GAAU3K,KACxBulB,eAAgB5a,GAAUnH,OAC1BgiB,cAAe7a,GAAU3F,OAE3B,CACEqgB,gBAAY/U,EACZgV,kBAAchV,EACdiV,oBAAgBjV,EAChBkV,mBAAelV,GAGf1B,EAAiB,CACrByK,IAAK6D,GAAOA,EAAI7D,IAAM6D,EAAI7D,SAAM/I,EAChCkO,OAAQzY,GAAesB,KACvBoW,KAAM81B,EACNj5B,MAAO3b,KAAKyB,UAAUuzC,GACtB/uB,aACAC,WACAwC,KAAMg1C,GACNj6D,OAAQ1B,GAAK0B,OACb4mC,OAAQtoC,GAAK2Y,KAGf4vB,GADelZ,EAAQI,EAAYC,EACrBxhB,GAvDC,4CAAH,qDA0DRq6B,GAAK,yCAAG,WAAOC,EAAat6B,GAApB,UAAAD,EAAA,sDACZ,IACEu6B,EAAO,CAAEt6B,cACT87B,KACA,MAAO98B,GACP07B,GAAQ17B,GALE,2CAAH,wDASL07B,GAAO,yCAAG,WAAO17B,GAAP,UAAAe,EAAA,0DACVf,EAAM27B,QAAQ/vB,SAAS,aADb,gCAENiQ,GAAeH,EAASlb,IAFlB,6CAINsb,GAAWJ,EAASlb,IAJd,OAKZuX,QAAQC,IAAIhY,GALA,2CAAH,sDASP+uD,GAAY,WAChBT,EAAU,GACVC,EAAQ,IACR3J,EAAa,MACbD,EAAY,OAeR7nB,GAAa,WAZjBiyB,KACArK,EAAe,IACf0B,EAAgB,IAChBpgB,EAAa,IACb1J,EAAe,MACfa,IAAe,GACfzd,GAAa,MACb4d,IAAa,GACbZ,GAAW,MACXc,GAAa,IACbkxB,GAAY,IAIZpxC,KAGIoqB,GAAmB,SAACjyB,GACxBmwB,EAAgBnwB,IAGlB,OACE,eAACykB,GAAD,CACE15B,MAAOA,GACPyD,KAAMA,EACNqZ,QAASwf,GACTzxB,MAAOgN,GAAMib,YACbzyB,SAAUA,GACVjS,MAAOA,EACPurC,KAAMA,EACNp3B,GAAI,GACJ7S,SAAS,KATX,SAWE,gBAACq1B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,UACE,eAAC,GAAD,CACEhlB,MAAOA,GACP6B,MAAOgW,GAAMxI,KACbxd,MAAOszC,EACP7yB,SAAU40B,KAEZ,eAACre,GAAD,CACEj3B,KAAK,WACLiQ,MAAOgW,GAAM8Z,YACb9/B,MAAOo8D,GACP37C,SAAU,SAACpR,GAAD,OAAYgtD,GAAYhtD,EAAEk6B,OAAOvpC,QAC3Cid,IAAKA,EACL9M,WAAS,EACTq5B,WAAS,EACTC,QAAS,EACTpa,KAAM,IAER,gBAAC6D,GAAA,EAAD,CACE3iB,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACTihB,aAAc,IAEhBuV,WAAS,EACTn1B,QAAS,EAPX,UASE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAACD,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAOgN,GAAMjT,GACbiT,MAAOA,GACP2G,QAASylC,EACTpyD,MAAOm2C,EACPvpB,eAAgB0lC,EAChBnkD,MAAOA,GACPi7C,WAAS,EACTnyB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,YACLiZ,MAAOgN,GAAM6Z,KACb7Z,MAAOA,GACP2G,QAASmnC,EACT9zD,MAAOuiB,EACPqK,eAAgB2lC,EAChBpkD,MAAOA,GACPi7C,WAAS,EACTr8B,SAAUovC,EACVllC,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACE9yB,UAAQ,EACRnE,KAAK,SACLiQ,MAAOgW,GAAMhH,OACbhf,MAAOgf,EACPyB,SAAU,SAACpR,GAAD,OAAY4sD,EAAUx2C,OAAOpW,EAAEk6B,OAAOvpC,SAChDid,IAAKA,EACL7b,KAAK,SACL+O,WAAS,EACT8mB,GAAI,MAIR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,gBAACqY,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACH1M,MAAO,CAAEyX,cAAe,IACxBhoB,MAAOynC,GACPhnB,SAAU,SAACpR,GACTg7B,GAAW5kB,OAAOpW,EAAEk6B,OAAOvpC,QAC3BqtB,GAAa,OARjB,UAWE,eAACuB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,GAAQ,iCAAU,cAE3B,eAACygB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,GAAQ,6CAAY,cAE7B,eAACygB,GAAA,EAAD,CACE5uB,MAAO,EACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,GAAQ,6CAAY,mBAIjC,eAAC+kB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,IACf,eAACD,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,WACLiZ,MAAmB,IAAZyuB,GAAgBzhB,GAAMpB,SAAWoB,GAAM3M,UAC9CkU,UAAWka,GACXzhB,MAAOA,GACP2G,QAASue,GACTlrC,MAAO0K,GACPkiB,eAAgBS,GAChBR,eAAgBoe,GAChBne,YAAake,GACbje,SAAUud,GACVn8B,MAAOA,GACP8oB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC0W,GAAD,CACE9pC,KAAK,aACLiZ,MAAOgN,GAAMrB,WACbqB,MAAOA,GACP2G,QAASkO,GACT76B,MAAOyK,EACPmiB,eAAgBqd,EAChBpd,eAAgBie,GAChBhe,YAAa+d,GACb9d,SAAUge,GACV58B,MAAOA,GACP8oB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAAC6D,GAAD,CACEj3B,KAAK,OACLiQ,MAAOgW,GAAM8Z,YACb9/B,MAAOonB,EACP3G,SAAU,SAACpR,GAAD,OAAY6sD,EAAQ7sD,EAAEk6B,OAAOvpC,QACvCid,IAAKA,EACL9M,WAAS,EACT8mB,GAAI,MAGR,eAAC/D,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,EAAf,SACE,eAACtL,GAAA,EAAD,CACEtX,MAAO,CAAEpV,WAAY,GAAIsB,UAAW,GACpCsI,MAAM,UACN9K,KAAK,QACLuW,QAASisD,GACTzjD,MAAM,iBALR,SAOE,eAAC,KAAD,aAKR,eAAC+iD,GAAD,CACE1sC,KAAMqkB,EACNnF,SAtSW,SAACl9B,GACtB,IAAMwlC,EAAWnD,EAAU9gC,KAAI,SAACg6B,GAC9B,OAAIA,EAAGxzB,MAAQ/H,EAAK+H,IACX/H,EAEAu7B,KAGLkK,EAAgB9D,GAAa6D,GACnClD,EAAamD,IA8RH72C,WA3Re,SAAC2tC,GAC1B,IAAMmJ,EAAO,aAAOrD,GACpBqD,EAAQC,OAAOpJ,EAAO,GACtB,IAAMkJ,EAAgB9D,GAAa+D,GACnCpD,EAAamD,IAwRH3oC,MAAOA,GACP6X,MAAOA,GACPvlB,KAAMA,GACNkW,SAAUA,KAEXw8B,GAAW,eAAC,GAAD,UAGhB,eAACjgB,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,UCjbR,SAASwpC,GAAT,GAMX,IALFxuD,EAKC,EALDA,MACA6X,EAIC,EAJDA,MACAxU,EAGC,EAHDA,SACAjP,EAEC,EAFDA,SACAhG,EACC,EADDA,MACC,EACiBmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7B,CAAEzd,KAAM,QAASiZ,MAAOgN,EAAMC,IAC9B,CAAElmB,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,SAAUiZ,MAAOgN,EAAM5kB,MAC/B,CAAErB,KAAM,SAAUiZ,MAAOgN,EAAMhH,UAL1BwvB,EADN,uBASuB9gC,oBAAS,IAThC,oBASM2hB,EATN,KASYuvB,EATZ,OAU6BlxC,qBAAS,GAVtC,oBAUMylC,EAVN,KAUeC,EAVf,OAYyB1lC,oBAAc,MAZvC,oBAYM9M,EAZN,KAYayzB,EAZb,OAaqB3mB,oBAAc,MAbnC,oBAaM7M,EAbN,KAaWyzB,EAbX,OAkBGrmB,sBAAW7C,IAlBd,IAgBClK,MAASqJ,EAhBV,EAgBUA,YAAaD,EAhBvB,EAgBuBA,gBAAiBY,EAhBxC,EAgBwCA,QAASL,EAhBjD,EAgBiDA,KAChDqD,EAjBD,EAiBCA,SAjBD,EA+BwCktB,aAAawhC,GAAoB,CACxE/4B,YAAa,sBAhCd,oBA+BMwvB,EA/BN,KA+BoBC,EA/BpB,KAkCO38C,EAAai8C,KAAbj8C,SACFsmC,EAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAOkhC,GACPjuD,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,IAG/C,CACEqrB,MAAOkJ,IAET,CACElJ,MAAOkI,IAET,CACElI,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACR,IAAM/lB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,GAE7CgjD,EAAa,CACX1kD,gBAED,CAAC/N,EAAOC,IAzEV,MA2EoBwN,aAAYwuD,GAAsB5f,GAAhDuW,EA3EN,uBA4EqBnlD,aAAYyuD,GAAsB7f,GAAjDyW,EA5EN,uBA6EuBrlD,aAAY0uD,GAAsB9f,GAAnD2W,EA7EN,qBA+EKllB,EAAa,yCAAG,gCAAAhgC,EAAA,uDAAS8V,EAAT,EAASA,WAErBpL,EAAMoL,EAAQ,GACpBovC,EAAc,CAAEjlD,UAAW,CAAEyK,SAC7BwlC,EAAQvvB,EAAKjb,QAAO,SAAC6I,GAAD,OAAcA,EAAI7D,MAAQA,OAJ5B,2CAAH,sDAQnBsb,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI4+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAangB,UACfC,GAAW,GAEb,OAAIkgB,QAAJ,IAAIA,GAAJ,UAAIA,EAAa1oD,YAAjB,iBAAI,EAAmBgyD,0BAAvB,aAAI,EAAuChyD,KAAM,CAAC,IACxCA,EAAS0oD,EAAY1oD,KAAKgyD,mBAA1BhyD,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAACkgB,IAUJ,OACE,eAACp3B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAfY,WACH,OAAXm3B,QAAW,IAAXA,KAAar3B,WAQb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACo5B,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBAjGkB,SAACurB,GACzBpxC,EAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAiGtCh1C,gBAAiBA,EACjBiqB,sBAtGsB,SAACllB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAsGnDkL,QAASA,EACTohD,cAjGc,SAAChN,GACrBpxC,EAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAiGlCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAAC,KAAD,CAAM8yB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,EAChBklD,gBAAiB,SAACC,GA9B1B9hD,EAAS,CAAE9M,KAAM,UAAWC,QA8B2B2uD,OAEjD,eAAC,KAAD,CAAcnhB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEjY,IAAK,CAAC,QACNlB,mBAAoB1vB,KAEtB,eAAC,KAAD,CACE4wB,IAAK,CAAC,UACNlB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoBlsB,KAEtB,eAAC,KAAD,CACEotB,IAAK,CAAC,QAAS,SACflB,mBAAoBrvB,KAEtB,eAAC,KAAD,CACEuwB,IAAK,CAAC,aACNlB,mBAAoB,SAACh0C,GAAD,OAClBqoB,GAAyBroB,EAAO4c,EAAUxI,MAG9C,eAAC,KAAD,CACE8gC,IAAK,CAAC,YACNlB,mBAAoB,SAACh0C,GAAD,OAClBmoB,GAAiBnoB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWsjC,EACXrjC,WAAYujC,EAHd,SAKE,eAAC,GAAD,SAGHvgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,SC3P7B,IAEQ6uD,GAFa7yD,yBAAwC,I,uBCoH7D,IAAM8yD,GAA6C,SAAC,GAMpD,IALLC,EAKI,EALJA,iBACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,UACAjvD,EAEI,EAFJA,MACAwU,EACI,EADJA,KAEA,OACE,uBAAKjT,UAAU,gBAAf,UACE,yBACEa,MAAO,CACLxT,gBAAiB4lB,IAAS06C,KAASC,IAAM,eAAYjtD,EACrD6Q,WAAY,OACZnc,MAAO4d,IAAS06C,KAASC,IAAM,YAASjtD,GAE1CX,UAAU,SACVc,QAAS,kBAAM0sD,EAAiBG,KAASC,MAP3C,SASGnvD,EAAQ,qBAAQ,QAEnB,yBACEuB,UAAU,SACVa,MAAO,CACLxT,gBAAiB4lB,IAAS06C,KAASE,KAAO,eAAYltD,EACtD6Q,WAAY,OACZnc,MAAO4d,IAAS06C,KAASE,KAAO,YAASltD,GAE3CG,QAAS,kBAAM0sD,EAAiBG,KAASE,OAP3C,SASGpvD,EAAQ,iCAAU,SAErB,yBACEoC,MAAO,CACLxT,gBAAiB4lB,IAAS06C,KAASG,MAAQ,eAAYntD,EACvD6Q,WAAY,OACZnc,MAAO4d,IAAS06C,KAASG,MAAQ,YAASntD,GAE5CX,UAAU,SACVc,QAAS,kBAAM0sD,EAAiBG,KAASG,QAP3C,SASGrvD,EAAQ,qBAAQ,UAGnB,uBAAKoC,MAAO,CAAE2Q,WAAY,QAAUxR,UAAU,SAA9C,UACE,yBAAOA,UAAU,gBAAjB,UACE,wBACEtO,KAAK,WACLq8D,eAAgBL,EAChB5sD,QAAS,kBAAM2sD,GAAkBC,MAEnC,uBAAM1tD,UAAU,cAEjBvB,EAAQ,kFAAmB,wBC7JpC,IAyFeuvD,GAzFI,SAAC,GAAiD,IAA/C9rD,EAA8C,EAA9CA,KAAMqZ,EAAwC,EAAxCA,QAAS1uB,EAA+B,EAA/BA,MAAO6kB,EAAwB,EAAxBA,MAAOjT,EAAiB,EAAjBA,MAAiB,EAC1CT,oBAAS,IADiC,oBAC3D2hB,EAD2D,KACrDuvB,EADqD,OAE1ClxC,oBAAmB2vD,KAASC,KAFc,oBAE3D36C,EAF2D,KAErDg7C,EAFqD,OAGhCjwD,qBAAS,GAHuB,oBAG3D0vD,EAH2D,KAGhDQ,EAHgD,KAK9DC,EAAc,GACdl7C,IAAS06C,KAASG,MACpBK,EAAc,IACLl7C,IAAS06C,KAASE,OAC3BM,EAAc,KAGhBnpC,sBAAU,WACR,GAAItT,GAASA,EAAMvN,OAAS,EAAG,CAC7B,IAAMiqD,EAAU18C,EAAMxO,KAAI,SAACyO,GACzB,OAAO,6BACFA,GADL,IAEEzgB,MAAO,IAAI4J,KAAK6W,EAAIzgB,OACpBC,IAAK,IAAI2J,KAAK6W,EAAIxgB,KAClBd,KAAMshB,EAAIrI,WAGd4lC,EAAQkf,MAET,CAAClsD,IAEJ,IAIMoH,EAAQ7K,EAAQ,sEAAiB,aAEvC,OACE,eAAC05B,GAAD,CACE15B,MAAOA,EACPyD,KAAMA,EACNqZ,QAViB,WACnBA,KAUEjS,MAAOA,EACPxK,SAAU,kBAAM,MAChBjS,MAAOA,EACPwrC,WAAS,EACTD,KAAM,GACNjqC,SAAS,KATX,SAWE,eAACq1B,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,SACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAf,SACE,gBAAC1iB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,OACjBxB,UAAW,OAHf,UAME,eAAC,GAAD,CACE2hE,iBAAkB,SAACa,GAAD,OAAcJ,EAAQI,IACxCZ,iBAAkBS,EAClBR,UAAWA,EACXjvD,MAAOA,EACPwU,KAAMA,IAGR,qBAAIpS,MAAO,CAAEiR,UAAW,UAAxB,SACGrT,EAAQ,sEAAiB,cAE5B,eAAC,KAAD,CACEiT,MAAOiO,EACP0uC,SAAUp7C,EACVgT,OAAO,KAOPqoC,cAAeZ,EAAY,QAAU,GACrCa,YAAa,IACbJ,YAAaA,EACbK,iBAAiB,UACjBC,mBAAmB,OAEnBC,yBAAyB,UACzBC,WAAW,sBCpCZv4C,GAAW,SAAC7I,GAAD,OAAuBA,EAAI7D,KAEpC,SAASklD,GAAT,GAQX,IAPFnwD,EAOC,EAPDA,MACA6X,EAMC,EANDA,MACAxU,EAKC,EALDA,SACAjP,EAIC,EAJDA,SACAhG,EAGC,EAHDA,MACAo1C,EAEC,EAFDA,QACAuB,EACC,EADDA,iBACC,EACuBxlC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAD9D,oBACMy3B,EADN,KACYze,EADZ,KAGKmC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAH/B,EAKiBtY,oBAAS,CACzB8d,EAAIxS,MACJwS,EAAIjE,UAEJiE,EAAI5qB,MACJ4qB,EAAI3qB,IACJ2qB,EAAInJ,SACJmJ,EAAI7G,WACJ6G,EAAI5G,SACJ4G,EAAIzE,MACJyE,EAAI1E,SACJ,CAAE/mB,KAAM,SAAUiZ,MAAO7K,EAAQ,mDAAa,SAC9Cqd,EAAI3L,cACJ2L,EAAI1L,UACJ,CACEhd,GAAI,GACJyE,IAAK,MACLxH,KAAM,MACNiZ,MAAO7K,EAAQ,6CAAY,eAE7Bqd,EAAItL,cACJ,CACEpd,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,sEAAiB,kBAzB7BqgC,EALN,uBAkCuB9gC,oBAAS,IAlChC,oBAkCM2hB,EAlCN,KAkCYuvB,EAlCZ,OAmC6BlxC,qBAAS,GAnCtC,oBAmCMylC,EAnCN,KAmCeC,EAnCf,OAoCiC1lC,qBAAS,GApC1C,oBAoCM6wD,EApCN,KAoCiBC,EApCjB,OAqCyB9wD,oBAAc,MArCvC,oBAqCM9M,EArCN,KAqCayzB,EArCb,OAsCqB3mB,oBAAc,MAtCnC,oBAsCM7M,EAtCN,KAsCWyzB,EAtCX,OAuCqC5mB,oBAAc,MAvCnD,oBAuCMqrD,EAvCN,KAuCmBC,EAvCnB,OAyCuBtrD,oBAAS,MAzChC,oBAyCM2D,EAzCN,KAyCYnR,EAzCZ,OA0C+BwN,qBAAS,GA1CxC,oBA0CMwpD,EA1CN,KA0CgB31C,EA1ChB,KA2COsZ,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UA5CP,EAoDG3sB,sBAAW+uD,IApDd,IAkDC97D,MAASqJ,EAlDV,EAkDUA,YAAaD,EAlDvB,EAkDuBA,gBAAiBY,EAlDxC,EAkDwCA,QACvCgD,GAnDD,EAmDCA,SAnDD,GAgEmCktB,aAAaiX,GAAU,CACzDxO,YAAa,sBAjEd,sBAgEMszB,GAhEN,MAgEiBC,GAhEjB,MAoEKna,GAAc,CAClBxhB,eAAgB,CACd,CACEC,MAAO2W,GACP1jC,UAAW,CACT/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,IAG/C,CACEqrB,MAAOkJ,IAET,CACElJ,MAAO2W,IAET,CACE3W,MAAOuH,IAET,CACEvH,MAAOoG,IAET,CACEpG,MAAOL,MAKb3G,sBAAU,WACRyiC,GAAU,MACT,IACHziC,sBAAU,WACR,IAAM/lB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EAAMA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,UAAOvS,GAE7C8mD,GAAU,CACRxoD,gBAED,CAAC/N,EAAOC,IA1GV,OA4G+C6M,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIxS,MAAMjZ,KAAMutD,iBAAiB,KAD1CC,GA5GN,yBAgHiBl/C,aAAYipD,GAAYra,IAAnCsa,GAhHN,yBAiHkBlpD,aAAYmpD,GAAYva,IAApCwa,GAjHN,yBAkHwBppD,aAAYqpD,GAAgBza,IAA9C0a,GAlHN,yBAmHgDjjB,KAAzChR,GAnHP,GAmHOA,UAAWL,GAnHlB,GAmHkBA,YAAaE,GAnH/B,GAmH+BA,aAE1BmL,GAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAIAukB,GAAe,CAAEhpD,UAAW,CAAEyK,SAJ9B,WAKoB,KAA/B,QADDF,EAJY,cAKX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAW8sD,sBAAX,eAA2B7oD,IALb,6BAMZqK,QANY,IAMZA,GANY,UAMZA,EAAKtO,YANO,iBAMZ,EAAW8sD,sBANC,aAMZ,EAA2B/pD,MAAM4L,SAAS,YAN9B,kCAORqQ,GAAiBP,EAASlb,GAPlB,iDASRsb,GAAWJ,EAASlb,GATZ,QAYlBilC,GAAW,GAZO,4CAAH,sDAgBnB1e,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI0iC,SAAJ,IAAIA,QAAJ,EAAIA,GAAWjkB,UACbC,GAAW,GAEb,OAAIgkB,SAAJ,IAAIA,IAAJ,UAAIA,GAAWxsD,YAAf,iBAAI,EAAiBynC,gBAArB,aAAI,EAA2BznC,KAAM,CAAC,IAC5BA,EAASwsD,GAAUxsD,KAAKynC,SAAxBznC,KACRg0C,EAAQh0C,GACRwoC,GAAW,MAEZ,CAACgkB,KAEJ,IAAMj7B,GAAU,WACL,OAATi7B,SAAS,IAATA,OAAWn7B,WAGb,OACE,eAACC,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAASA,GACT48B,YAAaA,EACbC,eAAgBA,EAChB58B,QAAS54B,KAAOie,WAAW,KAT7B,SAWE,gBAACuR,GAAA,EAAD,WACE,gBAACviB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAACuvD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBArHgB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAqHpCh1C,gBAAiBA,EACjBiqB,sBA1HoB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SA0HjDkL,QAASA,EACTohD,cAtHY,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAsHhCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPwI,MAAOvB,KAAOie,WAAW,KACzB2a,QAAS54B,KAAOie,WAAW,MAE7B,eAAChR,GAAA,EAAD,CAAKF,MAAO,GAAZ,SACE,eAACD,GAAA,EAAD,CACEtV,QAAQ,YACR+J,MAAM,UACNyL,QAAS,kBAAMguD,GAAa,IAH9B,SAKGrwD,EAAQ,gEAAgB,mBAK/B,gBAAC6kB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM3D,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,KAC/B,eAAC,KAAD,IAEA,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,GACpBjY,eAAgBf,KAElB,eAAC,KAAD,CAAgBiZ,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,GAClBqK,yBAA0B,CACxBpsC,EAAIjE,UAAUxnB,KACdyrB,EAAI7G,WAAW5kB,KACfyrB,EAAIzE,MAAMhnB,KACVyrB,EAAItL,cAAcngB,KAClByrB,EAAI5qB,MAAMb,KACVyrB,EAAI3qB,IAAId,QAGZ,eAAC,KAAD,CACEkvC,IAAK,CAAC,SACNlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BAAKvnB,GAAN,IAAamG,UAASqhB,oBAGxC,eAAC,KAAD,CACE0tB,IAAK,CAAC,QAAS,MAAO,aACtBlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,OACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,SAAU,gBAAiB,aACjClB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,iBACNlB,mBAAoBltB,KAEtB,eAAC,KAAD,CACEouB,IAAK,CAAC,UACNlB,mBAAoB/tB,KAEtB,eAAC,KAAD,CACEivB,IAAK,CAAC,YACNlB,mBAAoBrsB,KAEtB,eAAC,KAAD,CACEutB,IAAK,CAAC,YACNlB,mBAAoBpsB,KAGrBpf,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAItB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CAAcm2B,UAAWqnC,GAASpnC,WAAYsnC,GAA9C,SACE,eAAC,GAAD,CACE78B,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,GACXL,YAAaA,GACbE,aAAcA,GACdoO,QAASA,EACTuB,iBAAkBA,EAClB32C,MAAOA,EACPgG,SAAUA,EACV45B,QAASA,GACTg5B,WAAYv0D,EACZw0D,SAAUv0D,SAIfsyC,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,eAAC,GAAD,CACEyD,KAAM2sD,EACNtzC,QAAS,kBAAMuzC,GAAa,IAC5Bp9C,MAAOiO,EACP9yB,MAAOA,EACP4R,MAAOA,IAER25B,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,IAGNtX,GACC,eAAC,GAAD,CACEO,KAAMslD,EACNjsC,QA7QQ,WAClB1J,GAAY,GACZrhB,EAAQ,OA4QEmR,KAAMA,EACN+P,MAAOiO,EACPS,OAAO,EACPvzB,MAAOA,EACPq+B,UAAWA,EACXC,YAAaA,EACb6I,UAAWA,GACXL,YAAaA,GACbE,aAAcA,GACdoO,QAASA,EACTuB,iBAAkBA,EAClB3wC,SAAUA,EACV45B,QAASA,GACTg5B,WAAYv0D,EACZw0D,SAAUv0D,EACVqvB,UAAWqnC,GACXpnC,WAAYsnC,aC5YnB,I,GAAMgH,GAAmB,CAC9Bn0D,gBAAiB,OACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,YAAavP,UAAW,UAGlCmjE,GAAe,SAACx9D,EAA2BC,GACtD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCnBPzB,gBAAf,08CCKe8+D,GAJuBx0D,yBAEpC,ICoEIyiD,GAAqB,SAAC,GAAD,IAAGn/C,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,iBAE3CF,GAAiBC,cAXf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,CAC5B0e,IAEWC,GAAkB3e,aAC7B,GACA,CAAEnuC,KAAM,kBAFqBmuC,CAG7B0e,IAEa,SAASgS,GAAT,GAQN,IAPPzwD,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAxU,EAKM,EALNA,SACA2rB,EAIM,EAJNA,SACAwU,EAGM,EAHNA,QACAp1C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQyzB,EADR,OAEgB3mB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMyzB,EAFN,OAIkB5mB,oBAAS,IAJ3B,oBAIC2hB,EAJD,KAIOuvB,EAJP,OAKiClxC,oBAAS,IAL1C,oBAKCq/C,EALD,KAKYC,EALZ,OAMyBt/C,oBAAS,MANlC,oBAMC6R,EAND,KAMQ0tC,EANR,OAOiCv/C,oBAAS,MAP1C,oBAOCw/C,EAPD,KAOYC,EAPZ,KASA3hC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAT1B,EAWoCtY,oBAAS,CACjD,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7BgO,EAAIjN,OACJiN,EAAInF,MACJmF,EAAI5E,MACJ4E,EAAInJ,SACJmJ,EAAIxE,OACJwE,EAAI5G,SACJ4G,EAAI7G,WACJ6G,EAAIxM,SApBA,oBAWCouC,EAXD,KAWgBC,EAXhB,OAuBY3/C,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOgN,EAAMxI,MAC7BgO,EAAIjN,OACJiN,EAAInF,MACJmF,EAAI5E,MACJ4E,EAAInJ,SACJmJ,EAAIxE,OACJwE,EAAI5G,SACJ4G,EAAI7G,WACJ6G,EAAIxM,SATCwvB,EAvBD,uBAmC0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,KAD3CC,EAnCD,uBAwCiCnyB,aAAayjC,GAAoB,CACtEh7B,YAAa,sBAzCT,oBAwCC4pB,EAxCD,KAwCaC,EAxCb,KA2CEhqB,EAAcgR,KAAdhR,UACA7I,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UA7CF,EA+DF3sB,sBAAW0wD,IA/DT,IA+CJz9D,MACEqJ,EAhDE,EAgDFA,YACAD,EAjDE,EAiDFA,gBACAY,EAlDE,EAkDFA,QACAT,EAnDE,EAmDFA,YACAC,GApDE,EAoDFA,UACAa,GArDE,EAqDFA,UACAG,GAtDE,EAsDFA,UACAE,GAvDE,EAuDFA,MACAD,GAxDE,EAwDFA,QACAE,GAzDE,EAyDFA,UACAlB,GA1DE,EA0DFA,OACAE,GA3DE,EA2DFA,KACA+/C,GA5DE,EA4DFA,MAEF18C,GA9DI,EA8DJA,SAEMkT,GAAUiyB,KAAVjyB,MA2BFusC,GAAqB,SAAC3tD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpC4tD,GAAmB,SAAC5tD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KASxC00B,sBAAU,WAAO,IAAD,IACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,4DAA2CA,OAAQ,GAGnE,GADAg0C,EAAQiP,GACJjiD,GAAO,CACT,IAAMsN,EAAMoa,GAAc,CACxB5P,KAAMmqC,EACN9tD,KAAM8L,KAERshD,EAAaj0C,GAEf,IAAIy8B,EAAM,EACVkY,EAAQE,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UACtCiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAGvDyuD,GAAgB,SAACp7C,GAAD,OACpBA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGjuD,cAASqQ,GAmB/DqkB,sBAAU,YAlBQ,WAChB,IALkBhR,EAKZ/U,EAAY,CAChBy/C,cAAeJ,GAAOvjD,GACtB4jD,YAAaL,GAAOtjD,IACpB4jD,YAAaN,GAAOziD,IACpBgjD,SATgB7qC,EASIhY,GARtBgY,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGnrD,WAAMuN,GASxDu6C,MAAOkU,GAAclU,IACrBhqD,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,KACpCjY,OAAQA,GAASA,GAAO7H,QAAKuN,GAE/Bo9C,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,GAAI9oB,QACG,CACL,IAKMmjD,EALW3vD,KAAEwnC,QACjBvX,EACA,CAACxkB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGtP,YAEgBqX,KAAI,SAACqK,GAC9B,MAAO,CACLmG,KAAMyrC,GAAgB,QAClB5xC,EAAIrD,UACF2D,GAAaN,EAAIrD,WACjB,WACFvJ,EACJmN,KAAMqxC,GAAgB,QAClB5xC,EAAIrD,UACFiE,GAAiBZ,EAAIrD,WACrB,WACFvJ,EACJgW,MAAOwoC,GAAgB,SACnB5xC,EAAIoJ,MACFpJ,EAAIoJ,MACJ,WACFhW,EACJ1F,OAAQkkD,GAAgB,UACpB5xC,EAAItS,OACFmU,GAA8B7B,EAAItS,QAClC,WACF0F,EACJuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,MACfkd,EAAIuO,EAAI5G,SAAS7kB,MACjB,WACFsQ,EACJkW,QAASsoC,GAAgB,WACrB5xC,EAAIuO,EAAIjF,QAAQxmB,MACdkd,EAAIuO,EAAIjF,QAAQxmB,MAChB,WACFsQ,EACJsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,MACjBkd,EAAIuO,EAAI7G,WAAW5kB,MACnB,WACFsQ,EACJgS,SAAUwsC,GAAgB,YACtB5xC,EAAIuO,EAAInJ,SAAStiB,MACfkd,EAAIuO,EAAInJ,SAAStiB,MACjB,WACFsQ,EACJ2W,OAAQ6nC,GAAgB,UACpB5xC,EAAIuO,EAAIxE,OAAOjnB,MACbkd,EAAIuO,EAAIxE,OAAOjnB,MACf,WACFsQ,EACJu6C,MAAOiE,GAAgB,SACnB5xC,EAAIuO,EAAIxE,OAAOjnB,MACbkd,EAAIuO,EAAIxE,OAAOjnB,MACf,WACFsQ,EACJkO,OAAQswC,GAAgB,UACpB5xC,EAAIuO,EAAIjN,OAAOxe,MACbkd,EAAIuO,EAAIjN,OAAOxe,MACf,WACFsQ,EACJ2O,OAAQ6vC,GAAgB,UACpB5xC,EAAI+B,OACFD,GAAY9B,EAAI+B,QAChB,WACF3O,MAIR28C,EAAa+B,MAEd,CAAC3B,EAAe/9B,EAAMxkB,KAEzB,IA2FMmkD,GAAoB,CACxB,CAAElkD,WAAY0gB,EAAInF,MAAMtmB,KAAMqB,KAAM,SACpC,CAAE0J,WAAY,SAAU1J,KAAM,QAG1B6tD,GAAW,CAAC,CAAEnkD,WAAYe,KAC1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAInF,MAAMtmB,KACtBqB,KAAM,QACN+tD,eAAe,GAEjB,CACErkD,WAAY,SACZ1J,KAAM,MACN+tD,eAAe,IAGbC,GAAe5zC,GAAUrN,GAAOiG,QACpC,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,IAAwB,IAAZuO,EAAKvO,IAAwB,IAAZuO,EAAKvO,MAGxD,OACE,eAACo5B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAhDY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WAyCb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACviB,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,WACV8H,KAAM1a,EAAQ,SAAMkC,EACpB4Q,MAAO9S,OAAQkC,EAAY,IAC3BsY,IAAK,GACL+M,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEvX,QAAS5E,GA7FQ,WACzB,IAAMyjD,EAAO,CACX,CAAEtvD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBmhD,EAAapC,EAAU7yC,MAAMzH,KAAI,SAACg6B,GACtC,OAAO,6BACFA,GADL,IAEErtB,MAAOR,GAAY6tB,EAAGrtB,YAGpBsF,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYmuC,EAAU3tC,OAAS,GACpDmU,MAAK,OAAEw5B,QAAF,IAAEA,OAAF,EAAEA,EAAWx5B,MAClB+7B,WAAYthD,EAAQ,kFAAmB,eACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/BkE,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAMigC,EAAYD,QAASxqC,IArErB,WACpB,IAAMwqC,EAAOjC,EAAcx6C,KAAI,SAAC+8C,GAC9B,MAAO,CAAE5vD,KAAM4vD,EAAG32C,UAGd42C,EAAe,GACjBllD,IACFklD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAWnH,OAAd,OAAuBmH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3K,OAE1D4K,IACFilD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGxD,SAAH,IAAGA,QAAH,EAAGA,GAAQpH,OAAX,OAAoBoH,SAApB,IAAoBA,QAApB,EAAoBA,GAAQ5K,OAEpD0K,GACFmlD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG1D,QAAH,IAAGA,OAAH,EAAGA,EAAalH,OAAhB,OAAyBkH,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAa1K,OAG9D2L,IACFkkD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzC,SAAH,IAAGA,QAAH,EAAGA,GAAWnI,OAAd,OAAuBmI,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3L,OAG9D,IAAM8kB,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYQ,GAAS,GAC1CkwC,WAAYthD,EAAQ,kFAAmB,qBACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/B+uD,UACA7qD,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAM09B,EAAWsC,QAASxqC,IAiGhC7L,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,gBAACwW,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAACuvD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBAhVgB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAgVpCh1C,gBAAiBA,EACjBiqB,sBArVoB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAqVjDkL,QAASA,EACTohD,cAjVY,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAiVhCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,SAChBwP,YAAa,GACbC,aAAc,GACdrvB,WAAY,GAPhB,UAUE,eAAC,GAAD,CACE6O,aAAc,GACdq/C,gBAAiB,kBAAM,MACvBlgD,YAAaA,EACbw/B,eAjWmB,SAACjqC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAiWlC0K,UAAWA,GACX2iB,aAhWiB,SAACrtB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAgWhC66B,YAAaA,EACbD,UAAWA,EACXuC,SAAUA,EACVuG,UAAWA,EACXn4B,UAAWA,GACX0oC,aAnWiB,SAACj0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAmWhCohB,MAAOA,GACP1V,UAAWA,GACXwoC,aAnWiB,SAACl0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAmWhCgmB,MAAOA,EACP7X,MAAOA,EACPsN,cAAeA,GACfmvC,MAAOA,GACPC,SArWa,SAAC7qD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,OAsW9B,eAAC,GAAD,CACE2sB,QAASyiC,GACTpvD,MAAO2L,GACP8U,SA1Ha,SAACpR,GAtOG,IAACrP,EAuOL,SAAnBqP,EAAEk6B,OAAOvpC,OACX4tD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmBt+C,EAAEk6B,OAAOvpC,OA5OFA,EA6OLwrB,EAAInc,EAAEk6B,OAAOvpC,OAAOD,KA5O3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MAgWhCmO,MAAOA,OAGX,eAACsC,GAAA,EAAD,CACEF,MAAO,CACL9T,WAAY,EACZi5B,OAAQ,KAHZ,SAME,eAACskC,GAAD,CACErtC,QAAS1jB,GACTjJ,MAAO2K,GACPwzC,SA1Wc,SAACn+C,GACzBkO,GAAS,CAAE9M,KAAM,YAAaC,QAASrB,KA0W7BgmB,MAAOA,EACP7X,MAAOA,EACPpO,KAAK,SACL8nD,SAAO,EACP5qD,MAAO,WAIb,eAAC+1B,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,GAAI3W,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,GAChBklD,gBAAiB,SAACC,GAxI5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QAwI6B2uD,OAEhDpkD,IAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WAAYjB,GACZkB,WAAYhB,KAEbtjD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAiBpjC,GAAyBihD,GAAjB5e,GACzBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,aACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,QACNlB,mBAAoBzvB,KAEtB,eAAC,KAAD,CACE2wB,IAAK,CAAC,UACNlB,mBAAoBnvB,KAEtB,eAAC,KAAD,CACEqwB,IAAK,CAAC,UACNlB,mBAAoBtuB,KACD,IACrB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,eAEX,IACrB,eAAC,KAAD,CACE6tB,IAAK,CAAC,UACNlB,mBAAoBlsB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAa6sC,YAAaA,KACzB9iD,IACC,eAAC,KAAD,CACE41B,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,QACzBmiD,MAAOniD,EAAQ,6CAAY,QAC3BoiD,QAASpiD,EAAQ,iCAAU,SAE7BqiD,wBAAsB,IAG1B,eAAC,KAAD,CACEhvB,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE5G,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OAnZO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,wBAAoB2d,GAAsBgyC,IACpDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBCvPL,I,GAAMg/D,GAA6B,CACxCz0D,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVE,UAAW,GACXk/C,MAAO,GACPj/C,QAAS,OACTC,OAAO,EACPC,UAAW,OACXlB,OAAQ,KACRE,KAAM,CAAC,CAAEC,WAAY,YAAavP,UAAW,UAGlCyjE,GAAyB,SACpC99D,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwK,UAAWvK,EAAOE,UACvC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0pD,MAAOzpD,EAAOE,UACnC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmByJ,OAAQxJ,EAAOE,UACpC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBClDP29D,GAJsB90D,yBAEnC,ICHatK,gBAAf,0sDCsEM+sD,GAAqB,SAAC,GAAD,IAAGn/C,EAAH,EAAGA,QAAY2gC,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmC1+B,UAAWjC,EAAQ0gC,iBAE3CF,GAAiBC,cAXf,SAAC3xC,GAAD,MAAY,CACzB4xC,aAAc,CACZ,8BAA+B,CAC7BpxC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BmuC,CAC5B0e,IAEWC,GAAkB3e,aAC7B,GACA,CAAEnuC,KAAM,kBAFqBmuC,CAG7B0e,IAEa,SAASsS,GAAT,GAQN,IAPP/wD,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAxU,EAKM,EALNA,SACA2rB,EAIM,EAJNA,SACAwU,EAGM,EAHNA,QACAp1C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQyzB,EADR,OAEgB3mB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMyzB,EAFN,OAIkB5mB,oBAAS,IAJ3B,oBAIC2hB,EAJD,KAIOuvB,EAJP,OAKiClxC,oBAAS,IAL1C,oBAKCq/C,EALD,KAKYC,EALZ,OAMyBt/C,oBAAS,MANlC,oBAMC6R,EAND,KAMQ0tC,EANR,OAOiCv/C,oBAAS,MAP1C,oBAOCw/C,EAPD,KAOYC,EAPZ,KASA3hC,EAAMzF,GAAW,CAAE5X,QAAO6X,UAT1B,EAWoCtY,oBAAS,CACjD8d,EAAIpF,OACJoF,EAAIna,KACJma,EAAIjN,OACJiN,EAAIlF,QACJkF,EAAInJ,SACJmJ,EAAIxE,OACJwE,EAAI5G,SACJ4G,EAAI7G,WACJ,CAAE5kB,KAAM,MAAOiZ,MAAOgN,EAAMpgB,KAC5B,CAAE7F,KAAM,QAASiZ,MAAOgN,EAAMhH,UArB1B,oBAWCouC,EAXD,KAWgBC,EAXhB,OAwBY3/C,oBAAS,CACzB8d,EAAIpF,OACJoF,EAAIna,KACJma,EAAIjN,OACJiN,EAAIlF,QACJkF,EAAInJ,SACJmJ,EAAIxE,OACJwE,EAAI5G,SACJ4G,EAAI7G,WACJ,CAAE5kB,KAAM,MAAOiZ,MAAOgN,EAAMpgB,KAC5B,CAAE7F,KAAM,QAASiZ,MAAOgN,EAAMhH,UAVzBwvB,EAxBD,uBAqC0C9gC,oBAAS,CACvD,CAAE5C,WAAY0gB,EAAIpF,OAAOrmB,KAAMutD,iBAAiB,KAD3CC,EArCD,uBA0CiCnyB,aAAa+jC,GAAmB,CACrEt7B,YAAa,sBA3CT,oBA0CC4pB,EA1CD,KA0CaC,EA1Cb,KA6CEhqB,EAAcgR,KAAdhR,UACA7I,EAAgB6J,KAAhB7J,YACAD,EAAc+J,KAAd/J,UA/CF,EAkEF3sB,sBAAWgxD,IAlET,IAiDJ/9D,MACEqJ,EAlDE,EAkDFA,YACAD,EAnDE,EAmDFA,gBACAY,EApDE,EAoDFA,QACAI,EArDE,EAqDFA,aACAb,GAtDE,EAsDFA,YACAC,GAvDE,EAuDFA,UACAa,GAxDE,EAwDFA,UACAG,GAzDE,EAyDFA,UACAE,GA1DE,EA0DFA,MACAD,GA3DE,EA2DFA,QACAE,GA5DE,EA4DFA,UACAlB,GA7DE,EA6DFA,OACAE,GA9DE,EA8DFA,KACA+/C,GA/DE,EA+DFA,MAEF18C,GAjEI,EAiEJA,SAEMkT,GAAUiyB,KAAVjyB,MA8BFusC,GAAqB,SAAC3tD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpC4tD,GAAmB,SAAC5tD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KASxC00B,sBAAU,WAAO,IAAD,IACRm5B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAa9iD,YAAb,2DAA0CA,OAAQ,GAGlE,GADAg0C,EAAQiP,GACJjiD,GAAO,CACT,IAAMsN,EAAMoa,GAAc,CACxB5P,KAAMmqC,EACN9tD,KAAM8L,KAERshD,EAAaj0C,GAEf,IAAIy8B,EAAM,EACVkY,EAAQE,SAAQ,SAACr/C,GAAD,OAAainC,GAAOjnC,EAAEsQ,UACtCiuC,EAAStX,KACR,CAAC+X,IAEJ,IAAMM,GAAS,SAACtqC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAG70C,YAAO/I,GAGvDyuD,GAAgB,SAACp7C,GAAD,OACpBA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGjuD,cAASqQ,GAoB/DqkB,sBAAU,YAnBQ,WAChB,IALkBhR,EAKZ/U,EAAY,CAChBw/C,WAAYH,GAAO1iD,GACnB8iD,cAAeJ,GAAOvjD,IACtB4jD,YAAaL,GAAOtjD,IACpB4jD,YAAaN,GAAOziD,IACpBgjD,SAVgB7qC,EAUIhY,GATtBgY,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM7P,QAAS,EAAI6P,EAAK9Q,KAAI,SAACq7C,GAAD,OAAaA,EAAGnrD,WAAMuN,GAUxDu6C,MAAOkU,GAAclU,IACrBhqD,MAAOA,EAAQA,EAAMgiB,SAAS,EAAG,EAAG,EAAG,QAAKvS,EAC5CxP,IAAKA,EACDA,EAAI+hB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIpY,MAAOoY,SAAS,GAAI,GAAI,GAAI,KACpCjY,OAAQA,GAASA,GAAO7H,QAAKuN,GAE/Bo9C,EAAW,CACT9+C,cAKF6/C,KACC,CAAC5tD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAM4iD,GAAmBlkB,kBAAO,MAE1BmkB,GAAcC,wBAAY,WAC9BF,GAAYrgC,QAAQwgC,eACnB,CAACH,KAaEI,GAAkB,SAAC9uD,GACvB,IAAMy3C,EAAK4V,EAAch5C,QAAO,SAAC06C,GAAD,OAAaA,EAAGvnD,MAAQxH,KACxD,SAAIy3C,GAAMA,EAAG3jC,OAAS,IAOxB6gB,sBAAU,WACR,GAAI9oB,QACG,CACL,IAKMmjD,EALW3vD,KAAEwnC,QACjBvX,EACA,CAACxkB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGtP,YAEgBqX,KAAI,SAACqK,GAC9B,MAAO,CACLmG,KAAMyrC,GAAgB,QAClB5xC,EAAIrD,UACF2D,GAAaN,EAAIrD,WACjB,WACFvJ,EACJmN,KAAMqxC,GAAgB,QAClB5xC,EAAIrD,UACFiE,GAAiBZ,EAAIrD,WACrB,WACFvJ,EACJgW,MAAOwoC,GAAgB,SACnB5xC,EAAIoJ,MACFpJ,EAAIoJ,MACJ,WACFhW,EACJ1F,OAAQkkD,GAAgB,UACpB5xC,EAAItS,OACFmU,GAA8B7B,EAAItS,QAClC,WACF0F,EACJuU,SAAUiqC,GAAgB,YACtB5xC,EAAIuO,EAAI5G,SAAS7kB,MACfkd,EAAIuO,EAAI5G,SAAS7kB,MACjB,WACFsQ,EACJkW,QAASsoC,GAAgB,WACrB5xC,EAAIuO,EAAIjF,QAAQxmB,MACdkd,EAAIuO,EAAIjF,QAAQxmB,MAChB,WACFsQ,EACJsU,WAAYkqC,GAAgB,cACxB5xC,EAAIuO,EAAI7G,WAAW5kB,MACjBkd,EAAIuO,EAAI7G,WAAW5kB,MACnB,WACFsQ,EACJgS,SAAUwsC,GAAgB,YACtB5xC,EAAIuO,EAAInJ,SAAStiB,MACfkd,EAAIuO,EAAInJ,SAAStiB,MACjB,WACFsQ,EACJ2W,OAAQ6nC,GAAgB,UACpB5xC,EAAIuO,EAAIxE,OAAOjnB,MACbkd,EAAIuO,EAAIxE,OAAOjnB,MACf,WACFsQ,EACJkO,OAAQswC,GAAgB,UACpB5xC,EAAIuO,EAAIjN,OAAOxe,MACbkd,EAAIuO,EAAIjN,OAAOxe,MACf,WACFsQ,EACJ2O,OAAQ6vC,GAAgB,UACpB5xC,EAAI+B,OACFD,GAAY9B,EAAI+B,QAChB,WACF3O,MAIR28C,EAAa+B,MAEd,CAAC3B,EAAe/9B,EAAMxkB,KAEzB,IA2FMmkD,GAAoB,CACxB,CAAElkD,WAAY0gB,EAAInF,MAAMtmB,KAAMqB,KAAM,SACpC,CAAE0J,WAAY,QAAS1J,KAAM,QAGzB6tD,GAAW,CAAC,CAAEnkD,WAAYe,KAC1BqjD,GAAoB,CACxB,CACEpkD,WAAY0gB,EAAInF,MAAMtmB,KACtBqB,KAAM,QACN+tD,eAAe,GAEjB,CACErkD,WAAY,QACZ1J,KAAM,MACN+tD,eAAe,IAGbC,GAAe5zC,GAAUrN,GAAOiG,QACpC,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,IAAwB,IAAZuO,EAAKvO,MAGvC,OACE,eAACo5B,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAhDY,WACH,OAAXuxB,QAAW,IAAXA,KAAazxB,WAyCb,SAQE,gBAACjJ,GAAA,EAAD,WACE,eAACviB,GAAA,EAAD,CACEF,MAAO,CACLwQ,SAAU,WACV8H,KAAM1a,EAAQ,SAAMkC,EACpB4Q,MAAO9S,OAAQkC,EAAY,IAC3BsY,IAAK,GACL+M,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEvX,QAAS5E,GA7FQ,WACzB,IAAMyjD,EAAO,CACX,CAAEtvD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBmhD,EAAapC,EAAU7yC,MAAMzH,KAAI,SAACg6B,GACtC,OAAO,6BACFA,GADL,IAEErtB,MAAOR,GAAY6tB,EAAGrtB,YAGpBsF,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYmuC,EAAU3tC,OAAS,GACpDmU,MAAK,OAAEw5B,QAAF,IAAEA,OAAF,EAAEA,EAAWx5B,MAClB+7B,WAAYthD,EAAQ,kFAAmB,eACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/BkE,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAMigC,EAAYD,QAASxqC,IArErB,WACpB,IAAMwqC,EAAOjC,EAAcx6C,KAAI,SAAC+8C,GAC9B,MAAO,CAAE5vD,KAAM4vD,EAAG32C,UAGd42C,EAAe,GACjBllD,IACFklD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAWnH,OAAd,OAAuBmH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3K,OAE1D4K,IACFilD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGxD,SAAH,IAAGA,QAAH,EAAGA,GAAQpH,OAAX,OAAoBoH,SAApB,IAAoBA,QAApB,EAAoBA,GAAQ5K,OAEpD0K,IACFmlD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG1D,SAAH,IAAGA,QAAH,EAAGA,GAAalH,OAAhB,OAAyBkH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAa1K,OAG9D2L,IACFkkD,EAAQp8C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzC,SAAH,IAAGA,QAAH,EAAGA,GAAWnI,OAAd,OAAuBmI,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW3L,OAG9D,IAAM8kB,EAAO,CACX1W,QACAohD,KAAMvpC,EAAMzG,MACZiwC,YAAajwC,EAAQR,GAAYQ,GAAS,GAC1CkwC,WAAYthD,EAAQ,kFAAmB,qBACvC0jC,KAAMF,EAAQE,KACd3sC,MAAOysC,EAAQK,KACfxlB,OAAQmlB,EAAQkT,IAChBlkB,QAASgR,EAAQhR,QACjBgR,QAASxjC,EAAQwjC,EAAQpuC,OAASouC,EAAQ5xC,KAC1Ca,MAAOA,EAAQ2c,GAAa3c,GAAS,GACrCC,IAAKA,EAAM0c,GAAa1c,GAAO,GAC/B+uD,UACA7qD,MAAO,UACP2qD,IAAKhyC,GAAsB,IAAIlT,OAGrB,cAAE6kB,KAAM09B,EAAWsC,QAASxqC,IAiGhC7L,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,gBAACwW,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLwQ,SAAU,WACV2U,OAAQ,IACR94B,cAAe,MACfC,WAAY,UANhB,UASE,eAACuvD,GAAD,CACE/3B,SAAUA,EACVC,OAAQA,EACR/pB,YAAaA,EACbwpB,kBA/UgB,SAACurB,GACzBpxC,GAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KA+UpCh1C,gBAAiBA,EACjBiqB,sBApVoB,SAACllB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAoVjDkL,QAASA,EACTohD,cAhVY,SAAChN,GACrBpxC,GAAS,CAAE9M,KAAM,aAAcC,QAASi+C,KAgVhCxrB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvB3lB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZwf,eAAgB,SAChBwP,YAAa,GACbC,aAAc,GACdrvB,WAAY,GAPhB,UAUE,eAAC,GAAD,CACE6O,aAAcA,EACdq/C,gBA/UoB,SAAC3qD,GAC/BkO,GAAS,CAAE9M,KAAM,kBAAmBC,QAASrB,KA+UnCyK,YAAaA,GACbw/B,eAhWmB,SAACjqC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAgWlC0K,UAAWA,GACX2iB,aA/ViB,SAACrtB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KA+VhC66B,YAAaA,EACbD,UAAWA,EACXuC,SAAUA,EACVuG,UAAWA,EACXn4B,UAAWA,GACX0oC,aAlWiB,SAACj0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAkWhCohB,MAAOA,GACP1V,UAAWA,GACXwoC,aAlWiB,SAACl0C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAkWhCgmB,MAAOA,EACP7X,MAAOA,EACPsN,cAAeA,GACfmvC,MAAOA,GACPC,SApWa,SAAC7qD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,OAqW9B,eAAC,GAAD,CACE2sB,QAASyiC,GACTpvD,MAAO2L,GACP8U,SA1Ha,SAACpR,GAlOG,IAACrP,EAmOL,SAAnBqP,EAAEk6B,OAAOvpC,OACX4tD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmBt+C,EAAEk6B,OAAOvpC,OAxOFA,EAyOLwrB,EAAInc,EAAEk6B,OAAOvpC,OAAOD,KAxO3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MA4VhCmO,MAAOA,UAIb,eAAC6kB,GAAA,EAAD,CAAOziB,MAAO,CAAE3S,OAAQqR,OAAOu4B,YAAc,GAAI3W,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMmf,QAASA,EAAS1oB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEgqC,eAAgBjlD,GAChBklD,gBAAiB,SAACC,GAvH5B9hD,GAAS,CAAE9M,KAAM,UAAWC,QAuH6B2uD,OAEhDpkD,IAAS,eAAC,KAAD,CAAeqjD,SAAUA,KACnC,eAAC,KAAD,CACEgB,WAAYjB,GACZkB,WAAYhB,KAEbtjD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEhO,OAAQqR,OAAOu4B,YAAc,IAC7BwH,eAAiBpjC,GAAyBihD,GAAjB5e,GACzBzM,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEnY,iBAAkBwe,EAClB4C,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAO7hB,GACGp6B,QAAO,SAAC1F,GAAD,OAAa0hD,EAAI72C,SAAS7K,EAAE3O,SACtDswD,EAAOxlD,MAAK,SAAC6D,EAAQymC,GAAT,OACVzmC,EAAE5L,GAAKqyC,EAAEryC,GAAK,EAAIqyC,EAAEryC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvCuqD,EAAiBgD,MAGrB,eAAC,KAAD,CACEphB,IAAK,CAAC,UACNlB,mBAAoBvvB,KAEtB,eAAC,KAAD,CACEywB,IAAK,CAAC,UACNlB,mBAAoBnvB,KAEtB,eAAC,KAAD,CACEqwB,IAAK,CAAC,UACNlB,mBAAoBtuB,KACD,IACrB,eAAC,KAAD,CACEwvB,IAAK,CAAC,UACNlB,mBAAoB,SAACh0C,GAAD,OAClBonB,GAAgB,6BAAKpnB,GAAN,IAAaqnB,eAEX,IACrB,eAAC,KAAD,CACE6tB,IAAK,CAAC,UACNlB,mBAAoBlsB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAa6sC,YAAaA,KACzB9iD,IACC,eAAC,KAAD,CACE41B,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,QACzBmiD,MAAOniD,EAAQ,6CAAY,QAC3BoiD,QAASpiD,EAAQ,iCAAU,SAE7BqiD,wBAAsB,IAG1B,eAAC,KAAD,CACEhvB,SAAU,CACRmU,IAAKxnC,EAAQ,6CAAY,QACzBulB,MAAOvlB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE5G,IAAKknD,GACLp/B,KAAMA,EACNmf,QAASA,EACTiiB,OAzXO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMpB,EAAM,IAAIllD,KACVzK,EAAI,wBAAoB2d,GAAsBgyC,IACpDqB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE1vD,KAAM,6BADvB,UAEDrB,EAFC,qBC7PL,IAAMq/D,GAA4B,CACvC90D,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVE,UAAW,GACXk/C,MAAO,GACPj/C,QAAS,OACTC,OAAO,EACPC,UAAW,OACXlB,OAAQ,KACRE,KAAM,CAAC,CAAEC,WAAY,YAAavP,UAAW,UAGlC8jE,GAAwB,SACnCn+D,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,gBAAiBnJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,YAAapJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBgK,QAAS/J,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBoK,aAAcnK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBuJ,YAAatJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,UAAWvJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBqK,UAAWpK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBsK,SAAUrK,EAAOE,UACtC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBwK,UAAWvK,EAAOE,UACvC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0pD,MAAOzpD,EAAOE,UACnC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmByJ,OAAQxJ,EAAOE,UACpC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCdP,SAASg+D,GAAT,GAQN,IAPPnxD,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAzjB,EAKM,EALNA,SACAhG,EAIM,EAJNA,MACAiV,EAGM,EAHNA,SACA0hC,EAEM,EAFNA,iBACAvB,EACM,EADNA,QACM,EACwBjkC,qBAAS,GADjC,oBACCylC,EADD,KACUC,EADV,OAEkB1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFzD,oBAECy3B,EAFD,KAEOze,EAFP,OAGkB3b,oBAAS,MAH3B,oBAGC2D,EAHD,KAGOnR,EAHP,OAI0BwN,qBAAS,GAJnC,oBAICwpD,EAJD,KAIW31C,EAJX,KAKAiK,EAAMzF,GAAW,CAAE5X,QAAO6X,UAExB5E,EAAUiyB,KAAVjyB,MACAyZ,EAAgB6J,KAAhB7J,YACA6I,EAAcgR,KAAdhR,UATF,EAeYh2B,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMjmB,MAChD,CAAEA,KAAM,SAAUiZ,MAAOgN,EAAMjhB,OAC/B,CAAEhF,KAAM,QAASiZ,MAAOgN,EAAMqI,aAC9B,CAAEtuB,KAAM,QAASiZ,MAAOgN,EAAM5gB,OAC9B,CACErF,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOgN,EAAMrB,YAEf,CAAE5kB,KAAM,OAAQiZ,MAAOgN,EAAM8a,MAC7B,CAAE/gC,KAAM,UAAWiZ,MAAO7K,EAAQ,0DAAe,WACjD,CAAEpO,KAAM,SAAUiZ,MAAO7K,EAAQ,mDAAa,SAC9Cqd,EAAI1E,SACJ0E,EAAI3L,cACJ2L,EAAI1L,UACJ,CACEhd,GAAI,GACJyE,IAAK,MACLxH,KAAM,MACNiZ,MAAO7K,EAAQ,6CAAY,eAE7Bqd,EAAItL,cACJ,CACEpd,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,sEAAiB,kBA1B7BqgC,EAfD,uBAmDFiZ,KALF7sB,EA9CI,EA8CJA,UACAqC,EA/CI,EA+CJA,YACAkF,EAhDI,EAgDJA,aACAE,EAjDI,EAiDJA,eACAC,EAlDI,EAkDJA,gBAGF5N,sBAAU,WACR,GAAIwiC,GACEt8B,GAAaA,EAAU/mB,OAAS,EAAG,CAAC,IAAD,EAC/B4iD,EAAM,UAAG77B,EAAUxmB,QAAO,SAACqhC,GAAD,OAAaA,EAAGr8B,MAAQ/H,EAAK+H,cAAjD,aAAG,EAAqD,GACpElZ,EAAQu2D,MAGX,CAAC77B,IAEJ,IAAM8T,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAKA/Q,EAAe,CAAE1zB,UAAW,CAAEyK,SAL9B,WAMoB,KAA/B,QADDF,EALY,cAMX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWw3B,sBAAX,eAA2BvzB,IANb,6BAOZqK,QAPY,IAOZA,GAPY,UAOZA,EAAKtO,YAPO,iBAOZ,EAAWw3B,sBAPC,aAOZ,EAA2Bz0B,MAAM4L,SAAS,YAP9B,kCAQRqQ,GAAiBP,EAASlb,GARlB,iDAURsb,GAAWJ,EAASlb,GAVZ,QAalBilC,GAAW,GAbO,4CAAH,sDAiBnB,OACE,eAAClX,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAASmG,EANX,SAQE,gBAACtP,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAC5B,gBAAC,KAAD,CACEkhB,KAAMuL,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WACvC+G,QAASA,EACT1oB,SAAUA,GAHZ,UAKE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE0Q,yBAA0B,CACxB,QACA,OACA,QACA,UACA,YAIJ,eAAC,KAAD,CACE3oB,IAAK,CAAC,WACNlB,mBAAoB,SAACh0C,GAAD,OAClB2iB,GAAiB,6BAAK3iB,GAAN,IAAaoU,cAGjC,eAAC,KAAD,CACE8gC,IAAK,CAAC,SAAU,QAChBlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BAAKvnB,GAAN,IAAamG,UAASqhB,oBAGxC,eAAC,KAAD,CACE0tB,IAAK,CAAC,SAAU,gBAAiB,YAAa,iBAC9ClB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,OACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,UACNlB,mBAAoB/wB,KAEtB,eAAC,KAAD,CACEiyB,IAAK,CAAC,UACNlB,mBAAoB/tB,KAEtB,eAAC,KAAD,CACEivB,IAAK,CAAC,YACNlB,mBAAoBpsB,KAGrBpf,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAW+M,EACX9M,WAAYgS,EAHd,SAKE,eAAC,GAAD,SAGH2F,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,IAGP,eAAC,GAAD,CACE/W,KAAMslD,EACNjsC,QAjLY,WAClB1J,GAAY,GACZrhB,EAAQ,OAgLF+c,IAAK5L,EACLye,OAAO,EACPI,UAAW+M,EACX9M,WAAYgS,EACZ5lC,MAAOA,EACPgG,SAAUA,EACVs4B,YAAaA,EACb8W,QAASA,EACT/W,UAAWA,EACXsY,iBAAkBA,EAClBxP,UAAWA,EACXtiB,MAAOA,SChNF,SAASm+C,GAAT,GAQN,IAPPpxD,EAOM,EAPNA,MACA6X,EAMM,EANNA,MACAzjB,EAKM,EALNA,SACAhG,EAIM,EAJNA,MACAiV,EAGM,EAHNA,SACAmgC,EAEM,EAFNA,QACAuB,EACM,EADNA,iBACM,EACwBxlC,qBAAS,GADjC,oBACCylC,EADD,KACUC,EADV,OAEkB1lC,oBAAS,CAAE4b,MAAM,EAAOZ,IAAK,GAAItnB,UAAMiP,IAFzD,oBAECy3B,EAFD,KAEOze,EAFP,OAGkB3b,oBAAS,MAH3B,oBAGC2D,EAHD,KAGOnR,EAHP,OAI0BwN,qBAAS,GAJnC,oBAICwpD,EAJD,KAIW31C,EAJX,KAKAiK,EAAMzF,GAAW,CAAE5X,QAAO6X,UAExB5E,EAAUiyB,KAAVjyB,MACAwZ,EAAc+J,KAAd/J,UACA8I,EAAcgR,KAAdhR,UATF,EAgBYh2B,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOgN,EAAMjmB,MAChD,CAAEA,KAAM,SAAUiZ,MAAOgN,EAAMjhB,OAC/B,CAAEhF,KAAM,UAAWiZ,MAAOgN,EAAM5kB,MAChC,CAAErB,KAAM,OAAQiZ,MAAOgN,EAAM8Z,aAC7B,CAAE//B,KAAM,SAAUiZ,MAAO7K,EAAQ,mDAAa,SAC9Cqd,EAAI1E,SACJ0E,EAAI3L,cACJ2L,EAAI1L,UACJ,CACEhd,GAAI,GACJyE,IAAK,MACLxH,KAAM,MACNiZ,MAAO7K,EAAQ,6CAAY,eAE7Bqd,EAAItL,cACJ,CACEpd,GAAI,GACJyE,IAAK,SACLxH,KAAM,SACNiZ,MAAO7K,EAAQ,sEAAiB,kBApB7BqgC,EAhBD,uBA8CF9J,KALF7J,EAzCI,EAyCJA,YACAc,EA1CI,EA0CJA,cACAE,EA3CI,EA2CJA,eACAE,EA5CI,EA4CJA,iBACAC,EA7CI,EA6CJA,kBAGFtH,sBAAU,WACR,GAAIwiC,GACEr8B,GAAeA,EAAYhnB,OAAS,EAAG,CAAC,IAAD,EACnC4iD,EAAM,UAAG57B,EAAYzmB,QACzB,SAACqhC,GAAD,OAAaA,EAAGr8B,MAAQ/H,EAAK+H,cADnB,aAAG,EAEX,GACJlZ,EAAQu2D,MAGX,CAAC57B,IAEJ,IAAM6T,EAAa,yCAAG,0CAAAhgC,EAAA,2DAAS8V,EAAT,EAASA,SAAT,wBAEZpL,EAAMoL,EAAQ,GACpB4uB,GAAW,GAHO,SAIArX,EAAiB,CAAEptB,UAAW,CAAEyK,SAJhC,WAKsB,KAAjC,QADDF,EAJY,cAKX,IAAHA,GAAA,UAAAA,EAAKtO,YAAL,mBAAWkxB,wBAAX,eAA6BjtB,IALf,6BAMZqK,QANY,IAMZA,GANY,UAMZA,EAAKtO,YANO,iBAMZ,EAAWkxB,wBANC,aAMZ,EAA6BnuB,MAAM4L,SAAS,YANhC,kCAORqQ,GAAiBP,EAASlb,GAPlB,iDASRsb,GAAWJ,EAASlb,GATZ,QAYlBilC,GAAW,GAZO,4CAAH,sDAgBnB,OACE,eAAClX,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAASH,EANX,SAQE,gBAAChJ,GAAA,EAAD,WACGmgB,GAAW,eAAC,GAAD,CAAShlC,MAAOA,IAE5B,gBAAC,KAAD,CACEkhB,KAAMwL,EAAYzmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGlP,WACzC8G,QAASA,EACT1oB,SAAUA,GAHZ,UAKE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAc+oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACE9wC,OAAQqR,OAAOu4B,YAAc,IAC7BhG,SAAU,CACRwlB,OAAQ74C,EAAQ,6EAAmB,WAErC84C,mBAAoB,KAGtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE0Q,yBAA0B,CAAC,SAAU,UAAW,UAElD,eAAC,KAAD,CACE3oB,IAAK,CAAC,UACNlB,mBAAoB/wB,KAEtB,eAAC,KAAD,CACEiyB,IAAK,CAAC,WACNlB,mBAAoB7wB,KAEtB,eAAC,KAAD,CACE+xB,IAAK,CAAC,SAAU,QAChBlB,mBAAoB,SAACh0C,GAAD,OAClBunB,GAAe,6BAAKvnB,GAAN,IAAamG,UAASqhB,oBAGxC,eAAC,KAAD,CACE0tB,IAAK,CAAC,SAAU,gBAAiB,YAAa,iBAC9ClB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,OACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,UACNlB,mBAAoB/wB,KAEtB,eAAC,KAAD,CACEiyB,IAAK,CAAC,UACNlB,mBAAoB/tB,KAEtB,eAAC,KAAD,CACEivB,IAAK,CAAC,YACNlB,mBAAoBpsB,KAGrBpf,GACC,eAAC,KAAD,CACE4sC,iBAAe,EACfD,mBAAiB,EACjBkY,gBAAc,EACdhY,iBAAkBjnB,KAItB,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEk/B,eAAgB,SAACttD,GACf,OAAO,eAACu8B,GAAD,cAAanoB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACP2zB,UAAWyL,EACXxL,WAAY0L,EAHd,SAKE,eAAC,GAAD,SAGHiM,EAAKxe,MACJ,eAACmN,GAAD,CACEtoB,MAAOA,EACP/M,KAAI,OAAE0mC,QAAF,IAAEA,OAAF,EAAEA,EAAM1mC,KACZsnB,IAAG,OAAEof,QAAF,IAAEA,OAAF,EAAEA,EAAMpf,IACXC,KAAG,IAGP,eAAC,GAAD,CACE/W,KAAMslD,EACNjsC,QA3KY,WAClB1J,GAAY,GACZrhB,EAAQ,OA0KF+c,IAAK5L,EACLye,OAAO,EACPI,UAAWyL,EACXxL,WAAY0L,EACZt/B,MAAOA,EACPgG,SAAUA,EACVs4B,YAAaA,EACb8W,QAASA,EACT/W,UAAWA,EACXsY,iBAAkBA,EAClBxP,UAAWA,EACXtiB,MAAOA,SC1MjB,IAuOeo+C,GAvOW,SAACzlE,GAAgB,IAAD,QACA2T,oBAAc,IADd,oBACjCgxC,EADiC,KACnBC,EADmB,OAGVjxC,qBAAS,GAHC,oBAGjC+wC,EAHiC,KAGxBpB,EAHwB,OAKhB3vC,oBAAS,IALO,oBAKjC2hB,EALiC,KAK3BuvB,EAL2B,OAUpC3wC,sBAAWgtD,IAVyB,IAQtC/5D,MAASqJ,EAR6B,EAQ7BA,YAAaD,EARgB,EAQhBA,gBAAiBD,EARD,EAQCA,iBACvC6D,EATsC,EAStCA,SAEImuB,EAAWC,aAAc,qBAXS,EAaRlB,aAAayjB,IAbL,oBAajCG,EAbiC,KAanBC,EAbmB,KAetC1iD,EASExC,EATFwC,MACA4R,EAQEpU,EARFoU,MACA6X,EAOEjsB,EAPFisB,MACAmX,EAMEpjC,EANFojC,SACAwU,EAKE53C,EALF43C,QACAjxC,EAIE3G,EAJF2G,SACAk6B,EAGE7gC,EAHF6gC,UACAC,EAEE9gC,EAFF8gC,YACA6I,EACE3pC,EADF2pC,UAGFhP,sBAAU,WACR,IAAMrb,EAAYZ,GACK,eAArBpO,EAAoCuwB,EAAY3xB,GAChDoB,EACA,OACA8D,GAEFwwC,EAAgBtlC,KACf,CAACuhB,IAEJlG,sBAAU,WAAO,IAAD,IACRwqB,GAAoB,OAAPD,QAAO,IAAPA,GAAA,UAAAA,EAASr0C,YAAT,mDAA8BA,OAAQ,GACnDsZ,EACJg7B,EAAWrrC,OAAS,EAChBqrC,EAAWtsC,KAAI,SAACusC,GACd,OAAO,6BACFA,GADL,IAEEvlC,UAAW,IAAIpP,KAAK20C,EAAGvlC,WACvB1O,QAAS,IAAIV,KAAK20C,EAAGj0C,SACrBtK,MAAOu+C,EAAGvlC,UACV/Y,IAAKs+C,EAAGj0C,aAGZ,GAEN0zC,EAAQ16B,KACP,CAAC+6B,IAEJ,IAAM9iB,EAAU,YACd,OAAI8iB,QAAJ,IAAIA,OAAJ,EAAIA,EAAShjB,UACXgjB,EAAQhjB,WAINgzB,EAAW,CACf,CACEwQ,aAAcp1D,IAWlBqqB,sBAAU,WACR,IAAM0qB,EAAgB18B,GAAqB,CACzClF,KAAMjT,EACNoY,KAAMrY,IAEFqE,EAAY,CAChB/N,MAAOw+C,EAASx+C,MAChBC,IAAKu+C,EAASv+C,KAEhBm+C,EAAa,CACXrwC,gBAED,CAACpE,EAAaD,IAEjB,IAWMiqB,EAAwB,SAACllB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAEk6B,OAAOvpC,SAErD+zB,EAAoB,SAACurB,GACzBpxC,EAAS,CAAE9M,KAAM,iBAAkBC,QAASi+C,KAI9C,OAFA55B,QAAQC,MAGLiV,GACoB,IAArBA,EAAU/mB,QACT6qC,IACD,OAACA,QAAD,IAACA,GAAD,UAACA,EAAe,UAAhB,aAAC,EAAmBzlC,YACqB,KAA7B,OAAZylC,QAAY,IAAZA,GAAA,UAAAA,EAAe,UAAf,mBAAmBzlC,iBAAnB,eAA8BpF,QAM9B,gBAACpD,GAAA,EAAD,CACEF,MAAO,CAAExT,gBAAiB,OAAQN,UAAW4/B,EAAW,QAAKhsB,GAD/D,UAGE,gBAAC6iB,GAAA,EAAD,CAAMrB,WAAS,EAACn1B,QAAS,EAAzB,UACE,eAACw2B,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,eAACyQ,GAAD,CACEC,SAAU,kBAAM,MAChBC,OAAQ,kBAAM,MACdnmB,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPg4B,sBAAuBA,EACvBR,kBAAmBA,EACnBzpB,gBAAiBA,EACjBC,YAAaA,EACbupB,MAAO,CAAC,EAAG,OAGf,eAACZ,GAAA,EAAD,CAAM7hB,MAAI,EAAC8hB,GAAI,GAAIxP,GAAI,EAAvB,SACE,gBAACqO,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,UACE,gBAACsZ,GAAA,EAAD,CACEnZ,aAAW,QACXtyB,KAAK,QACLkd,KAAG,EACHjd,MAAOqK,EACPoW,SAAU,SAACpR,GAAD,OAvDc,SAACrP,GACnCkO,EAAS,CAAE9M,KAAM,sBAAuBC,QAASrB,IAEjD,IAAMqZ,EAAYZ,GACN,eAAVzY,EAAyB46B,EAAY3xB,GACrCjJ,EACA,QAEF2+C,EAAgBtlC,GA+CgBqmD,CAA4BrwD,EAAEk6B,OAAOvpC,QAL7D,UAOE,eAAC4uB,GAAA,EAAD,CACE5uB,MAAO,aACP6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,uCAAW,aAG5B,eAACygB,GAAA,EAAD,CACE5uB,MAAM,SACN6uB,QAAS,eAAC4c,GAAA,EAAD,CAAO1mC,MAAM,YACtBiL,MAAO7B,EAAQ,uCAAW,cAG7BguB,GACC,eAACpU,GAAA,EAAD,CACExX,MAAO,CACLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQG,UAAUD,KAAM,IACpDZ,QAAS,GAEXmV,QAAS2rB,EALX,SAOE,eAAC,KAAD,CACE5rB,MAAO,CAAE7U,SAAU,IACnBqJ,MAAM,sBAQlB,gBAAC,KAAD,CACE6F,KAAMykB,EACNzxB,OAAQy+B,EAAWptB,OAAOu4B,YAAcv4B,OAAOu4B,YAAc,GAC7D+X,eAAgB,EAChB5pB,OAAQxnB,EAAQ,KAAO,KAJzB,UAME,eAAC,KAAD,CAAe8gD,SAAUA,IACzB,eAAC,KAAD,CACE3kD,gBAAiBA,EACjBs1C,wBAAyBrrB,EACzBhqB,YAAaA,EACbs1C,oBAAqB9rB,IAEvB,eAAC,KAAD,CACEh0B,KAAK,MACLkgD,YAAY,MACZH,aAAcp/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9Co/C,aAAcr/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3Co/C,WAAYt/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CACEd,KAAK,QACLkgD,YAAY,SACZC,cAAe,EACfJ,aAAcp/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9Co/C,aAAcr/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3Co/C,WAAYt/C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAGzC,eAAC,KAAD,CAAcs/C,4BAA6BnC,KAC3C,eAAC,KAAD,CAAWpzC,KAAM8zC,EAAcr0C,iBAAkBA,IACjD,eAAC,KAAD,IACA,eAAC,KAAD,CACE+1C,iBAAe,EACf3B,QAASA,EACT6B,mBAAoB,kBAAMjD,GAAYoB,IACtC8B,iBAAkB,gBAAGhF,EAAH,EAAGA,gBAAH,OAChB,eAAC,GAAD,CACEA,gBAAiBA,EACjB8B,WAAYA,EACZxiB,YAAaA,EACbD,UAAWA,EACX8I,UAAWA,EACXvG,SAAUA,EACV9c,UAAW,kBAAM,MACjBsxB,QAASA,EACT2L,UAAQ,OAId,eAAC,KAAD,IACA,eAAC,KAAD,CAAsBwD,oBAAkB,UAhHrC,eAAC,GAAD,KChII6e,GAvBW,SAAC5lE,GAAgB,IAAD,EACd2T,oBAAS,IADK,oBACjCxM,EADiC,KAC1B0+D,EAD0B,KAEhChlC,EAAc+J,KAAd/J,UACAC,EAAgB6J,KAAhB7J,YACA6I,EAAcgR,KAAdhR,UASR,OAPAhP,sBAAU,WACR,GAAIkG,GAAaA,EAAU/mB,OAAS,EAAG,CACrC,IAAMgsD,EAAOjlC,EAAUxmB,QAAO,SAACwiC,GAAD,OAA4B,IAAfA,EAAGnP,WAC9Cm4B,EAASC,MAEV,CAACjlC,IAGF,eAAC,GAAD,6BACM7gC,GADN,IAEE6gC,UAAW15B,EACX25B,YAAaA,EACb6I,UAAWA,MC2sBFo8B,GAtnBC,WAId,IAAMryD,EAAUtQ,KAJI,EAKYuQ,oBAAS7K,GAAS,IAL9B,oBAKb2O,EALa,KAKHD,EALG,OAMY7D,qBAAS,GANrB,oBAMbnL,EANa,KAMHg7C,EANG,KAQdhhD,EAAQm1B,eAENlD,EAAakqB,KAAblqB,SAVY,EAW0C+e,KAAtDpQ,EAXY,EAWZA,SAAU6F,EAXE,EAWFA,eAAgBL,EAXd,EAWcA,WAAYE,EAX1B,EAW0BA,YAX1B,EAY6BmR,KAAzCrC,EAZY,EAYZA,QAASkB,EAZG,EAYHA,YAAaE,EAZV,EAYUA,eACtBqoB,EC3GK,WAAO,IAAD,IAGbjtD,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIe66B,aAAa2kC,GAAc,CAC3DpxD,UAAW,CAAER,WALI,oBAIZ+0B,EAJY,KAIFC,EAJE,OAQG90B,aAAY2xD,GAAgB,CAChDvkC,eAAgB,CAAC,CAAEC,MAAOqkC,GAAcpxD,UAAW,CAAER,aADhD8xD,EARY,uBAWI5xD,aAAY6xD,GAAgB,CACjDzkC,eAAgB,CAAC,CAAEC,MAAOqkC,GAAcpxD,UAAW,CAAER,aADhDgyD,EAXY,uBAcM9xD,aAAY+xD,GAAgB,CACnD3kC,eAAgB,CAAC,CAAEC,MAAOqkC,GAAcpxD,UAAW,CAAER,aADhDkyD,EAdY,qBAwBnB,OANA3rC,sBAAU,WACRwO,MACC,CAACA,IAIG,CACLk4B,WAHwB,OAARj4B,QAAQ,IAARA,GAAA,UAAAA,EAAUv4B,YAAV,sDAAkCA,OAAQ,GAI1D01D,gBAHsB,yBAAMn9B,QAAN,IAAMA,OAAN,EAAMA,EAAUlH,WAItCgkC,cACAE,eACAE,kBD8EoBE,GAAdnF,UAbY,EAciBxI,KAA7Bj8C,EAdY,EAcZA,SAAUu7C,EAdE,EAcFA,eAdE,EAoBDjkD,sBAAWtB,IApBV,IAiBlBlO,MAASgC,EAjBS,EAiBTA,KAAMC,EAjBG,EAiBHA,SAAUI,EAjBP,EAiBOA,QACzBoN,EAlBkB,EAkBlBA,SAlBkB,IAmBlBE,UAAa4X,EAnBK,EAmBLA,MAAO7X,EAnBF,EAmBEA,MAMtBumB,sBAAU,WACR,IAAM8oB,EAAiBx7C,MAAuBA,KAC9Cu7C,EAAYC,KACX,IA5BiB,IA6FhBj8C,EAE6B,EA/Fb,EA8BsBi/D,sBACxCz1D,GACAX,IAhCkB,oBA8Bbq2D,EA9Ba,KA8BEC,EA9BF,OAmCkBF,sBACpCr1D,GACAF,IArCkB,oBAmCb01D,EAnCa,KAmCAC,EAnCA,OAuCwBJ,sBAC1CxB,GACAD,IAzCkB,oBAuCb8B,EAvCa,KAuCGC,EAvCH,OA2CsBN,sBACxCnB,GACAD,IA7CkB,oBA2Cb2B,EA3Ca,KA2CEC,EA3CF,OA+CgBR,sBAClC9B,GACAD,IAjDkB,oBA+CbwC,EA/Ca,KA+CDC,GA/CC,QAmDgBV,sBAClC1zD,GACAD,IArDkB,sBAmDbs0D,GAnDa,MAmDDC,GAnDC,SAuD4BZ,sBAC9CtzD,GACAF,IAzDkB,sBAuDbq0D,GAvDa,MAuDKC,GAvDL,SA2DkCd,sBACpDjzD,GACAH,IA7DkB,sBA2Dbm0D,GA3Da,MA2DQC,GA3DR,SA+D8BhB,sBAChD7F,GACAD,IAjEkB,sBA+Db+G,GA/Da,MA+DMC,GA/DN,SAoEoBlB,sBACtC10D,GACAT,IAtEkB,sBAoEbs2D,GApEa,MAoECC,GApED,SAwEoBpB,sBACtCv0D,GACAD,IA1EkB,sBAwEb61D,GAxEa,MAwECC,GAxED,SA4EsBtB,sBACxC9zD,GACAD,IA9EkB,sBA4Ebs1D,GA5Ea,MA4EEC,GA5EF,SAgFkCxB,sBACpDp0D,GACAD,IAlFkB,sBAgFb81D,GAhFa,MAgFQC,GAhFR,SAoFkC1B,sBACpDj0D,GACAD,IAtFkB,sBAoFb61D,GApFa,MAoFQC,GApFR,SAwFkC5B,sBACpDxF,GACAD,IA1FkB,sBAwFbsH,GAxFa,MAwFQC,GAxFR,MA8FdC,GAAS/zC,EAASpa,QAAO,SAAC8jD,GAAD,OAAaA,EAAGzsC,WAAahrB,EAAK0B,UAC7DogE,IAAUA,GAAO1uD,OAAS,IAC5BtS,EAAO,OAAGghE,SAAH,IAAGA,IAAH,UAAGA,GAAS,UAAZ,aAAG,EAAahhE,SAGzB,IAAM8R,GAAO9R,E5LtIW,SAACA,GAoBzB,OAnBcsB,GAAS+P,KAAI,SAAC4vD,GAE1B,GADoBlpD,GAAYkpD,EAAKjhE,GACpB,CACf,GAAIihE,EAAIp/D,QAAS,CACf,IAMMq/D,EANOD,EAAIp/D,QAAQwP,KAAI,SAACw0B,GAE5B,GADgB9tB,GAAY8tB,EAAI7lC,GAE9B,OAAO6lC,KAGWhzB,QAAO,SAAC63C,GAAD,OAAYA,KAEzC,OADAuW,EAAIp/D,QAAUq/D,EACPD,EAEP,OAAOA,MAIWpuD,QAAO,SAAC63C,GAAD,OAAYA,K4LmHpByW,CAAWnhE,GAAW,GACvCohE,GAAOliE,EAAKwB,aACd0U,EACAA,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAII,SAAW1B,EAAK0B,UAChD+3D,G5LnHyB,SAAC34D,GAChC,IAAMqhE,EAAQxsD,GACRipB,GAAe,OAAP99B,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAC5BqC,GACA,GACEwsD,GAAkB,OAAPthE,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAC/BsC,GACA,GACEW,GAAmB,OAAP1V,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAChCwC,GACA,GACE3P,GAAkB,OAAPtF,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAC/BuC,GACA,GACEusD,GAAiB,OAAPvhE,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,IAAmBA,KACjDyC,GACA,GAUJ,MATW,uBACNmsD,GADM,aAENvjC,GAFM,aAGNwjC,GAHM,aAIN5rD,GAJM,aAKNpQ,GALM,aAMNi8D,IAEoBlwD,KAAI,SAACmwD,GAAD,OAAaA,EAAG/tD,c4L0FxBguD,CAAkBzhE,GACjC0hE,IACA,OAAJN,SAAI,IAAJA,QAAA,EAAAA,GAAM9uD,QAAS,EACX8uD,GAAKvuD,QAAO,SAACrS,GAAD,OAAcm4D,GAAa3gD,SAASxX,EAAIiT,eACpD,GAEN,OADAiuD,GAAiBp4D,MAAK,SAAC6D,EAAQymC,GAAT,OAAoBzmC,EAAEmI,KAAOs+B,EAAEt+B,QAEnD,gBAACpG,GAAA,EAAD,CACEf,UAAWjC,EAAQpQ,KACnB0U,IAAK5D,EAAQ,WAAQkC,EACrB1T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNV,gBAAiBmU,aAAK3U,EAAMR,QAAQ+kC,KAAK3P,MAAO,MANpD,UASE,eAAC1hB,GAAA,EAAD,IACA,eAAC,GAAD,CACEtB,MAAOA,EACPoD,YAAaA,EACbC,SAAUA,EACV/Q,KAAMA,EACN+tB,SAAUA,EACVnb,KAAMA,GACNC,OA1GS,WACbpF,EAAS,CAAE9M,KAAM,YA0GbN,QAASA,IAEX,uBAAM4O,UAAWjC,EAAQjQ,QAAzB,SACE,iCACE,eAAC,KAAD,CACE2kD,KAAK,IACL+gB,OAAK,EACL1zD,UAAW,kBACT,eAACi1B,GAAD,CACEjzB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPvlB,KAAMA,EACNlE,MAAOA,OAIb,eAAC,KAAD,CACE4lD,KAAK,YACL3yC,UAAW,kBACT,eAACtF,GAAgBi5D,SAAjB,CACEnjE,MAAO,CAAEkB,MAAOu/D,EAAevyD,SAAUwyD,GAD3C,SAGE,eAAC,GAAD,CACElvD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPgG,SAAUA,EACV7B,SAAUA,EACVixC,QAASA,EACTxU,SAAUA,EACVwF,WAAYA,EACZE,YAAaA,SAKrB,eAAC,KAAD,CACEsf,KAAK,gBACL3yC,UAAW,kBACT,eAAC,GAAsB2zD,SAAvB,CACEnjE,MAAO,CACLkB,MAAOmhE,GACPn0D,SAAUo0D,IAHd,SAME,eAAC,GAAD,CACE9wD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPgG,SAAUA,EACV7B,SAAUA,EACVy8B,SAAUA,EACVwU,QAASA,SAKjB,eAAC,KAAD,CACEwQ,KAAK,SACL3yC,UAAW,kBACT,eAAC,GAAa2zD,SAAd,CACEnjE,MAAO,CAAEkB,MAAOigE,GAAYjzD,SAAUkzD,IADxC,SAGE,eAACpJ,GAAD,CACExmD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPo1C,QAASA,EACTuB,iBAAkB/V,SAK1B,eAAC,KAAD,CACEglB,KAAK,SACL3yC,UAAW,kBACT,eAAC,GAAa2zD,SAAd,CACEnjE,MAAO,CAAEkB,MAAO+/D,EAAY/yD,SAAUgzD,IADxC,SAGE,eAAC5C,GAAD,CACE9sD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPo1C,QAASA,EACTuB,iBAAkB/V,SAK1B,eAAC,KAAD,CACEglB,KAAK,gBACL3yC,UAAW,kBACT,eAAC,GAAc2zD,SAAf,CACEnjE,MAAO,CAAEkB,MAAOy/D,EAAazyD,SAAU0yD,GADzC,SAGE,eAAC/H,GAAD,CACErnD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACPo1C,QAASA,EACTuB,iBAAkB/V,SAM1B,eAAC,KAAD,CACEglB,KAAK,QACL3yC,UAAW,kBACT,eAAC,GAAe2zD,SAAhB,CACEnjE,MAAO,CAAEkB,MAAOygE,GAAczzD,SAAU0zD,IAD1C,SAGE,eAACtJ,GAAD,CACE9mD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE4lD,KAAK,YACL3yC,UAAW,kBACT,eAAC,GAAe2zD,SAAhB,CACEnjE,MAAO,CAAEkB,MAAO2gE,GAAc3zD,SAAU4zD,IAD1C,SAGE,eAAC,GAAD,CACEtwD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE4lD,KAAK,YACL3yC,UAAW,kBACT,eAAC,GAAgB2zD,SAAjB,CACEnjE,MAAO,CAAEkB,MAAO6gE,GAAe7zD,SAAU8zD,IAD3C,SAGE,eAAC9G,GAAD,CACE1pD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE4lD,KAAK,cACL3yC,UAAW,kBACT,eAAC,GAAe2zD,SAAhB,CACEnjE,MAAO,CAAEkB,MAAOygE,GAAczzD,SAAU0zD,IAD1C,SAGE,eAACjF,GAAD,CACEnrD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE4lD,KAAK,aACL3yC,UAAW,kBACT,eAACsoD,GAAD,CACE3pD,MAAOA,EACP6X,MAAOA,EACPzpB,MAAOA,EACPiV,SAAUA,EACVjP,SAAUA,EACVovC,QAASA,EACTuB,iBAAkB/V,OAIxB,eAAC,KAAD,CACEglB,KAAK,SACL3yC,UAAW,kBACT,eAAC42C,GAAD,CACEpgC,MAAOA,EACPzjB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACP4R,MAAOA,OAIb,eAAC,KAAD,CACEg0C,KAAK,YACL3yC,UAAW,kBACT,eAAC0sB,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAAS+1B,EANX,SAQE,eAAC+F,GAAD,CAAUthD,SAAUgsD,UAI1B,eAAC,KAAD,CACExgB,KAAK,WACL3yC,UAAW,kBACT,eAAC0sB,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAAS4W,EACTF,YAAaA,EACblB,QAASA,EARX,SAUE,eAAC,GAAD,SAIN,eAAC,KAAD,CACEwQ,KAAK,eACL3yC,UAAW,kBACT,eAAC83C,GAAD,CACE91C,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,OAIb,eAAC,KAAD,CACE4lD,KAAK,qBACL3yC,UAAW,kBACT,eAAC+vD,GAAD,CACE/tD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP22C,iBAAkB/V,EAClBwU,QAASA,OAIf,eAAC,KAAD,CACEwQ,KAAK,aACL3yC,UAAW,kBACT,eAACg4C,GAAD,CACEh2C,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,OAIb,eAAC,KAAD,CACE4lD,KAAK,mBACL3yC,UAAW,kBACT,eAAC8vD,GAAD,CACE9tD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP22C,iBAAkB/V,EAClBwU,QAASA,OAIf,eAAC,KAAD,CACEwQ,KAAK,aACL3yC,UAAW,kBACT,eAACosD,GAAD,CACEpqD,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,OAIb,eAAC,KAAD,CACE4lD,KAAK,YACL3yC,UAAW,kBACT,eAAC0sB,GAAD,CACE1qB,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACVhG,MAAOA,EACP4/B,QAAS6G,EANX,SAQE,eAAC+0B,GAAD,SAKN,eAAC,KAAD,CACE5V,KAAK,cACL3yC,UAAW,kBACT,eAAC,GAAoB2zD,SAArB,CACEnjE,MAAO,CACLkB,MAAOugE,GACPvzD,SAAUwzD,IAHd,SAME,eAAC,GAAD,CACEn/D,SAAUA,EACViP,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPmX,SAAUA,EACVk+B,WAAY,GACZ1pB,QAASA,EACTp1C,MAAOA,SAKf,eAAC,KAAD,CACE4lD,KAAK,cACL3yC,UAAW,kBACT,eAAC,GAAuB2zD,SAAxB,CACEnjE,MAAO,CACLkB,MAAO2/D,EACP3yD,SAAU4yD,GAHd,SAME,eAAClC,GAAD,CACEr8D,SAAUA,EACViP,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPmX,SAAUA,EACVk+B,WAAY,GACZ1pB,QAASA,EACTp1C,MAAOA,SAKf,eAAC,KAAD,CACE4lD,KAAK,mBACL3yC,UAAW,kBACT,eAAC,GAAsB2zD,SAAvB,CACEnjE,MAAO,CACLkB,MAAO6/D,EACP7yD,SAAU8yD,GAHd,SAME,eAAC9B,GAAD,CACE38D,SAAUA,EACViP,SAAUA,EACVrD,MAAOA,EACP6X,MAAOA,EACPmX,SAAUA,EACVk+B,WAAY,GACZ1pB,QAASA,EACTp1C,MAAOA,SAKf,eAAC,KAAD,CACE4lD,KAAK,eACL3yC,UAAW,kBACT,eAAC,GAAmB2zD,SAApB,CACEnjE,MAAO,CACLkB,MAAOmgE,GACPnzD,SAAUozD,IAHd,SAME,eAACxU,GAAD,CACE3+C,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACP4gC,SAAUA,EACVk+B,WAAY,GACZ1pB,QAASA,SAKjB,eAAC,KAAD,CACEwQ,KAAK,kBACL3yC,UAAW,kBACT,eAAC,GAAsB2zD,SAAvB,CACEnjE,MAAO,CACLkB,MAAOqgE,GACPrzD,SAAUszD,IAHd,SAME,eAACrG,GAAD,CACEhtD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACP4gC,SAAUA,EACVi+B,UAAWA,EACXC,WAAY,GACZ1pB,QAASA,SAKjB,eAAC,KAAD,CACEwQ,KAAK,iBACL3yC,UAAW,kBACT,eAAC,GAAe2zD,SAAhB,CACEnjE,MAAO,CACLkB,MAAOygE,GACPzzD,SAAU0zD,IAHd,SAME,eAAC3H,GAAD,CACE9rD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACP4gC,SAAUA,EACVk+B,WAAY,GACZ1pB,QAASA,EACTuoB,aAAc+I,UAKtB,eAAC,KAAD,CACE9gB,KAAK,kBACL3yC,UAAW,kBACT,eAAC,GAAsB2zD,SAAvB,CACEnjE,MAAO,CACLkB,MAAO+gE,GACP/zD,SAAUg0D,IAHd,SAME,eAACzG,GAAD,CACEttD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACP4gC,SAAUA,EACVk+B,WAAY,GACZ1pB,QAASA,EACTuoB,aAAc+I,UAKtB,eAAC,KAAD,CACE9gB,KAAK,kBACL3yC,UAAW,kBACT,eAAC,GAAsB2zD,SAAvB,CACEnjE,MAAO,CACLkB,MAAOihE,GACPj0D,SAAUk0D,IAHd,SAME,eAACtH,GAAD,CACE3sD,MAAOA,EACP6X,MAAOA,EACPzjB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACP4gC,SAAUA,EACVk+B,WAAY,GACZ1pB,QAASA,EACTuoB,aAAc+I,mBEjsBjBG,GAdA,WAAO,IACZ3kE,EAAUwP,sBAAWtB,IAArBlO,MACFgC,EAAI,OAAGhC,QAAH,IAAGA,OAAH,EAAGA,EAAOgC,KACdF,EAAI,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAO8B,KAIpB,OACE,gBAAC,KAAD,YACIE,GAAQ,eAAC,GAAD,CAAOF,KAAMA,IACtBE,GAAQ,eAAC,GAAD,QCffmhC,EAAQ,KAAUyhC,SAelB,IAAMC,GAAMC,aAAO,CAAEC,QAAQ,GAAD,oBAAMC,eAAYD,SAAlB,CAA2BE,WA2BxCC,OAzBf,WACE,IAAMC,EAAaxjE,GAAa,QAASE,IAD5B,EAEakgE,sBACxBv/D,GACA2iE,GAA0BtjE,IAJf,oBAEN7B,EAFM,KAECyP,EAFD,KAMP3R,ECpBkB,SAAC,GAA4B,IAA1BgE,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAC3BqjE,EAAqB,OAATtjE,EAAgBjF,GAAcxB,GAC1CgqE,EAAchoE,GAAS2pB,OAAOjlB,IAOpC,OAJmBujE,aAAe,6BAC7BD,GACAD,IDaSG,CAAW,CAAEzjE,KAAM9B,EAAM8B,KAAMC,QAAS/B,EAAM+B,UACtD4N,EEpBO,SAAC7N,GACd,IAAM0jE,EAAyBpnC,GAAP,OAATt8B,EAA4BshC,GAAkB9G,IADjC,EAEMrtB,oBAASu2D,GAFf,oBAErB71D,EAFqB,KAEV81D,EAFU,KAQ5B,OAJAxvC,sBAAU,WACRwvC,EAAaD,KACZ,CAAC1jE,IAEG6N,EFYW+1D,CAAa1lE,EAAM8B,MAKrC,OAJAm0B,sBAAU,WACR50B,GAAa,QAASrB,KACrB,CAACA,IAGF,eAAC2lE,GAAA,EAAD,CAAgB7kE,OAAQA,GAAxB,SACE,eAAC8kE,GAAA,EAAD,CAAgBf,IAAKA,GAArB,SACE,eAACgB,GAAA,EAAD,CAAe/nE,MAAOA,EAAtB,SACE,eAAC,GAAc4mE,SAAf,CAAwBnjE,MAAO,CAAEvB,QAAOyP,WAAUE,aAAlD,SACE,eAAC,GAAD,aGzBNm2D,GAAcC,QACW,cAA7Bv1D,OAAOC,SAASu1D,UAEe,UAA7Bx1D,OAAOC,SAASu1D,UAEhBx1D,OAAOC,SAASu1D,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAevB,GACtC3qD,UAAUmsD,cACP/2D,SAAS82D,GACT/T,MAAK,SAACiU,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9jE,QACfwX,UAAUmsD,cAAcM,YAI1Bz/C,QAAQC,IACN,+GAKE09C,GAAUA,EAAO+B,UACnB/B,EAAO+B,SAASN,KAMlBp/C,QAAQC,IAAI,sCAGR09C,GAAUA,EAAOgC,WACnBhC,EAAOgC,UAAUP,WAO5BQ,OAAM,SAAC33D,GACN+X,QAAQ/X,MAAM,4CAA6CA,MCjGjE,IAYe43D,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5U,MAAK,YAAkD,IAA/C6U,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,KAASC,OACP,eAAC,KAAMC,WAAP,UACE,eAAC,GAAD,MAEFn0C,SAASo0C,eAAe,SFcnB,SAAkB7C,GACvB,GAA6C,kBAAmB3qD,UAAW,CAGzE,GADkB,IAAI4qC,IAAItkD,GAAwBiQ,OAAOC,SAAS2B,MACpDs1D,SAAWl3D,OAAOC,SAASi3D,OAIvC,OAGFl3D,OAAOm3D,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAM5lE,GAAN,sBAEPulE,KAgEV,SAAiCK,EAAevB,GAE9Cpf,MAAM2gB,EAAO,CACXvlE,QAAS,CAAE,iBAAkB,YAE5BwxD,MAAK,SAACwV,GAEL,IAAMC,EAAcD,EAAShnE,QAAQknE,IAAI,gBAEnB,MAApBF,EAAS17D,QACO,MAAf27D,IAA8D,IAAvCA,EAAYztD,QAAQ,cAG5CH,UAAUmsD,cAAc2B,MAAM3V,MAAK,SAACiU,GAClCA,EAAa2B,aAAa5V,MAAK,WAC7B5hD,OAAOC,SAASC,eAKpBw1D,GAAgBC,EAAOvB,MAG1BiC,OAAM,WACL5/C,QAAQC,IAAI,oEAtFV+gD,CAAwB9B,EAAOvB,GAI/B3qD,UAAUmsD,cAAc2B,MAAM3V,MAAK,WACjCnrC,QAAQC,IACN,+GAMJg/C,GAAgBC,EAAOvB,OEpC/BsD,GAKApB,O","file":"static/js/main.acf8d1df.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// local\r\n// uri: \"http://jadwal-server:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean) {\r\n    getDepartments(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        depType\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGroups($isRTL: Boolean) {\r\n    getGroups(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n        tasks\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resTypes: [Int]) {\r\n    getEmployees(isRTL: $isRTL, resTypes: $resTypes) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resType\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        documentNo\r\n        startDate\r\n        endDate\r\n        cost\r\n        model\r\n        type\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n    $taskId: Int\r\n    $due: Boolean\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n      taskId: $taskId\r\n      due: $due\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoices(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        eventId\r\n        taskId\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n        desc\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getExpenses(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGroup(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    createGroup(branch: $branch, name: $name, nameAr: $nameAr, tasks: $tasks) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGroup($_id: String) {\r\n    deleteGroup(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGroup(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    updateGroup(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tasks: $tasks\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      refNo: $refNo\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      refNo: $refNo\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  localuri: \"jadwal-server:4000\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\n\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 0.5,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: \"المهام\",\r\n    titleEn: \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.7,\r\n    name: \"customers\",\r\n    uri: \"customers\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n    icon: \"business\",\r\n    req: \"pos\",\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1.8,\r\n    name: \"manageemployees\",\r\n    uri: \"manageemployees\",\r\n    titleAr: \"الموظفين\",\r\n    titleEn: \"Employees\",\r\n    icon: \"group\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1.9,\r\n    name: \"managedepartments\",\r\n    uri: \"managedepartments\",\r\n    titleAr: \"الأقسام\",\r\n    titleEn: \"Departments\",\r\n    icon: \"depart\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"الوثائق\",\r\n    titleEn: \"Finance\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"sales\",\r\n        uri: \"sales\",\r\n        titleAr: \"ادارة الفواتير\",\r\n        titleEn: \"Sales\",\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      // {\r\n      //   id: 42,\r\n      //   name: \"cash\",\r\n      //   uri: \"cash\",\r\n      //   titleAr: \"ادارة النقدية\",\r\n      //   titleEn: \"Cash\",\r\n      //   icon: \"finance\",\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      {\r\n        id: 43,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"ادارة المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"ادارة المصاريف\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 45,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"ادارة القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 62,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: \"الأقسام\",\r\n        titleEn: \"Departments\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 63,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: \"الموظفين\",\r\n        titleEn: \"Employees\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 64,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 65,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n\r\n      // {\r\n      //   id: 65,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 66,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 67,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n\r\n      {\r\n        id: 69,\r\n        name: \"accounts\",\r\n        uri: \"accounts\",\r\n        titleAr: \"الحسابات\",\r\n        titleEn: \"Accounts\",\r\n        icon: \"account\",\r\n        mainId: 6,\r\n        role: menuRoles.branchAdmin,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.5,\r\n        name: \"docreports\",\r\n        uri: \"docreports\",\r\n        titleAr: \"تقرير الوثائق\",\r\n        titleEn: \"Documents Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.7,\r\n        name: \"servicesreports\",\r\n        uri: \"servicesreports\",\r\n        titleAr: \"تقرير الخدمات\",\r\n        titleEn: \"Services Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصاريف\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير الحسابات\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصاريف\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصاريف\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصاريف\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n\r\nexport const isProd = process.env.NODE_ENV === \"production\";\r\n\r\nexport const UPLOAD_PRESET = \"sfnboslv\";\r\nexport const CLOUD_NAME = \"fivegstore\";\r\nexport const imageUploadOptions = {\r\n  maxSizeMB: 1,\r\n  maxWidthOrHeight: 1280,\r\n  useWebWorker: true,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(0).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"3Days\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Business from \"@material-ui/icons/Business\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"business\":\r\n      return <Business style={style}></Business>;\r\n    case \"group\":\r\n      return <GroupIcon style={style}></GroupIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"depart\":\r\n      return <Dashboard style={style}></Dashboard>;\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصاريف\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as Tafgeet from \"tafgeetjs\";\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist, isRTL }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n    const dates = rrule.all;\r\n    const ritems = JSON.parse(event.items);\r\n    const isTitle = event?.title && event?.title?.trim()?.length > 0;\r\n    const title = isTitle\r\n      ? event?.title\r\n      : isRTL\r\n      ? ritems[0]?.nameAr\r\n      : ritems[0]?.name;\r\n    const list = dates.map((da: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        title,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : 0;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n\r\nexport const tafkeet = (number: any) => {\r\n  const stringText = new Tafgeet(number, \"QAR\").parse();\r\n  return stringText;\r\n};\r\n","import { operationTypes } from \".\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"taskId\",\r\n    name: isRTL ? \"تجميع بحسب المهمة\" : \"Group By Operation\",\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"opType\",\r\n    name: isRTL ? \"تجميع بحسب الوثيقة\" : \"Group By Document\",\r\n  },\r\n];\r\n\r\nexport const documentTypes = [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: \"All\",\r\n    nameAr: \"الكل\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: operationTypes.event,\r\n    name: \"Appointment\",\r\n    nameAr: \"المواعيد\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: operationTypes.salesInvoice,\r\n    name: \"Invoice\",\r\n    nameAr: \"الفواتير\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: operationTypes.customerReceipt,\r\n    name: \"Receipt\",\r\n    nameAr: \"المقبوض\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: operationTypes.expenses,\r\n    name: \"Expenses\",\r\n    nameAr: \"المصروف\",\r\n  },\r\n];\r\n\r\nexport const sectionTypes = [\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    name: \"Managment\",\r\n    nameAr: \"اداري\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    name: \"Operational\",\r\n    nameAr: \"فني\",\r\n  },\r\n];\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  CircularProgress,\r\n  colors,\r\n  fade,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const sectionsTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const nameObj = sectionTypes.filter((st: any) => st.value === value)?.[0];\r\n  const name = nameObj ? (lang === \"ar\" ? nameObj.nameAr : nameObj.name) : \"\";\r\n\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\nexport const documentTimeFormatter = ({ row }: any) => {\r\n  const { time, startDate } = row;\r\n  const value = row.opType === 80 ? startDate : time;\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const fromToFormatter = ({ row }: any) => {\r\n  const start = covertToTimeOnly(row.startDate);\r\n  const end = covertToTimeOnly(row.endDate);\r\n  return (\r\n    <div>\r\n      {start} {end}\r\n    </div>\r\n  );\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\nexport const departmentFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL\r\n        ? row?.department?.departmentNameAr\r\n        : row?.department?.departmentName}\r\n    </div>\r\n  );\r\n};\r\nexport const employeeFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL ? row?.employee?.employeeNameAr : row?.employee?.employeeName}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const taskStatusFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 18,\r\n        height: 18,\r\n        borderRadius: 9,\r\n        backgroundColor: value === 10 ? \"#39a539a0\" : \"#ffffff0\",\r\n      }}\r\n    >\r\n      {value === 1 && (\r\n        <CircularProgress style={{ color: \"#9958ac9b\" }} size={16} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\nexport const moneyFormatEmpty = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const currencyFormatterEmpty = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormatEmpty(value)}</span>;\r\n};\r\n\r\nexport const dueAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row.totalpaid ? row.totalpaid : 0;\r\n  const due = totalinvoiced - totalpaid;\r\n  if (due) {\r\n    return (\r\n      <span style={{ color: colors.red[400] }}>{moneyFormatEmpty(due)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const incomeAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const toatlExpenses = row.toatlExpenses ? row.toatlExpenses : 0;\r\n  const inc = totalinvoiced - toatlExpenses;\r\n  if (inc) {\r\n    return (\r\n      <span style={{ color: colors.green[800] }}>{moneyFormatEmpty(inc)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const doneFormatter = ({ row, editEvent }: any) => {\r\n  const status = row.status === 10 ? 2 : 10;\r\n  const id = row.id;\r\n  const variables = { id, status };\r\n  return (\r\n    <span>\r\n      <Checkbox\r\n        style={{ padding: 5, color: colors.blue[500] }}\r\n        checked={row.status === 10}\r\n        onChange={async (e: any) => {\r\n          await editEvent({\r\n            variables,\r\n            optimisticResponse: {\r\n              __typename: \"updateEvent\",\r\n              updateEvent: {\r\n                __typename: \"Operation\",\r\n                id,\r\n                ...row,\r\n                ...variables,\r\n              },\r\n            },\r\n          });\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\nexport const invoiceReceiptFormatter = ({ value, row }: any) => {\r\n  const { amount } = row;\r\n  const valuePercent = (value / amount) * 100;\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: valuePercent,\r\n          height: 15,\r\n          backgroundColor: fade(colors.green[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 30 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? moneyFormat(value) : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\n\r\nexport const nameLinkFormat = ({ row, value, setItem, setOpenItem }: any) => {\r\n  return (\r\n    <Box\r\n      onClick={() => {\r\n        setItem(row);\r\n        setOpenItem(true);\r\n      }}\r\n      style={{\r\n        cursor: \"pointer\",\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Typography\r\n        style={{\r\n          fontSize: 13,\r\n          textAlign: \"start\",\r\n          color: colors.deepPurple[500],\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdLinkFormat = ({\r\n  value,\r\n  tasks,\r\n  setItem,\r\n  setOpenItem,\r\n  setName,\r\n}: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value)?.[0];\r\n  if (task) {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setItem(task);\r\n          setName(\"task\");\r\n          setOpenItem(true);\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 13,\r\n            textAlign: \"start\",\r\n            color: colors.deepPurple[500],\r\n          }}\r\n        >\r\n          {task.title}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\n\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: fade(colors.blue[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? `${parseInt(value)}%` : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const compressEvents = (events: any) => {\r\n  if (events && events.length > 0) {\r\n    const event = events[0];\r\n    const times = events.map((ev: any) => {\r\n      return {\r\n        startDate: ev.startDate,\r\n        endDate: ev.endDate,\r\n      };\r\n    });\r\n    return JSON.stringify({ event, times });\r\n  } else {\r\n    return JSON.stringify([]);\r\n  }\r\n};\r\n\r\nexport const decompressEvents = (events: any) => {\r\n  if (events) {\r\n    const data = JSON.parse(events);\r\n    const { event, times } = data;\r\n    if (event && times) {\r\n      const readyEvents = times.map((evt: any) => {\r\n        return {\r\n          ...event,\r\n          startDate: evt.startDate,\r\n          endDate: evt.endDate,\r\n        };\r\n      });\r\n      return readyEvents;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    id: {\r\n      id: 25,\r\n      ref: \"id\",\r\n      name: \"id\",\r\n      title: isRTL ? \"الرقم\" : \"No\",\r\n    },\r\n    fromto: {\r\n      id: 25,\r\n      ref: \"fromto\",\r\n      name: \"fromto\",\r\n      title: isRTL ? \"الوقت\" : \"Time\",\r\n    },\r\n    done: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    invo: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    totalinvoiced: {\r\n      id: 26,\r\n      ref: \"totalinvoiced\",\r\n      name: \"totalinvoiced\",\r\n      title: isRTL ? \"الفواتير\" : \"Invoices\",\r\n    },\r\n    totalpaid: {\r\n      id: 27,\r\n      ref: \"totalpaid\",\r\n      name: \"totalpaid\",\r\n      title: isRTL ? \"المقبوضات\" : \"Receipts\",\r\n    },\r\n    toatlExpenses: {\r\n      id: 28,\r\n      ref: \"toatlExpenses\",\r\n      name: \"toatlExpenses\",\r\n      title: isRTL ? \"المصاريف\" : \"Expenses\",\r\n    },\r\n    desc: {\r\n      id: 29,\r\n      ref: \"desc\",\r\n      name: \"desc\",\r\n      title: isRTL ? \"البيان\" : \"Description\",\r\n    },\r\n    item: {\r\n      id: 30,\r\n      ref: \"item\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    amountdebit: {\r\n      id: 31,\r\n      ref: \"debit\",\r\n      name: \"debit\",\r\n      title: isRTL ? \"مدين\" : \"Debit\",\r\n    },\r\n    amountcredit: {\r\n      id: 32,\r\n      ref: \"credit\",\r\n      name: \"credit\",\r\n      title: isRTL ? \"دائن\" : \"Credit\",\r\n    },\r\n    createdAt: {\r\n      id: 33,\r\n      ref: \"createdAt\",\r\n      name: \"createdAt\",\r\n      title: isRTL ? \"تاريخ الانشاء\" : \"Created Date\",\r\n    },\r\n  };\r\n};\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      style={{ padding: 5, marginTop: 3, marginBottom: 3 }}\r\n      onClick={onExecute}\r\n      title=\"Edit row\"\r\n    >\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف المدخل ؟\"\r\n              : \"Are you sure you want to delete this row?\"\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 20,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\n// import { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n  ...rest\r\n}: any) => {\r\n  // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n      {...rest}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const {\r\n    children,\r\n    menuitem,\r\n    isRTL,\r\n    refresh,\r\n    theme,\r\n    bgcolor = theme.palette.primary.light,\r\n  } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(bgcolor, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(bgcolor, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24, color: \"#eee\" }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, theme, menuitem } = props;\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box\r\n        style={{\r\n          height: window.innerHeight - 90,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Box style={{ margin: 20, marginBottom: 20 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              {raseeds && salesMonthTotal && eventsMonthCount && (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                      value={moneyFormat(raseeds?.cash)}\r\n                      icon=\"cash\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={words.card}\r\n                      value={moneyFormat(raseeds?.card)}\r\n                      icon=\"card\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormat(salesTodayTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormat(salesMonthTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormatSimple(eventsTodayCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormatSimple(eventsMonthCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={\r\n                        isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                      }\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            {todayEvents && (\r\n              <Grid item xs={12} md={4}>\r\n                <PercentChart\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  data={todayEvents}\r\n                  height={300}\r\n                  prim={prim}\r\n                  isRTL={isRTL}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {salesDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <SalesDaysChart\r\n                  dataKey=\"total\"\r\n                  isRTL={isRTL}\r\n                  data={salesDays}\r\n                  color={salesColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></SalesDaysChart>\r\n              </Grid>\r\n            )}\r\n            {nextEventDays && (\r\n              <Grid item xs={12} md={4}>\r\n                <DaysEvents\r\n                  dataKey=\"count\"\r\n                  theme={theme}\r\n                  isRTL={isRTL}\r\n                  data={nextEventDays}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></DaysEvents>\r\n              </Grid>\r\n            )}\r\n            {eventDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <EventsDaysChart\r\n                  dataKey=\"count\"\r\n                  isRTL={isRTL}\r\n                  data={eventDays}\r\n                  color={eventColor}\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></EventsDaysChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                      : \"Month Sales - Employee\"\r\n                  }\r\n                  employees={employees.filter((emp: any) => emp.resType === 1)}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                      : \"Month Sales - Department\"\r\n                  }\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  height={400}\r\n                  prim={prim}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={salesMonths}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  prim={prim}\r\n                  dataKey=\"total\"\r\n                  title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n            {eventMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={eventMonths}\r\n                  isRTL={isRTL}\r\n                  color={eventColor}\r\n                  dataKey=\"count\"\r\n                  title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n    savetitle = isRTL ? \"حفظ\" : \"Save\",\r\n    taskvalue,\r\n    preventclose = false,\r\n    saving,\r\n    bgcolor,\r\n  } = props;\r\n  const bgc = bgcolor ? fade(bgcolor, 0.1) : \"#eee\";\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={preventclose ? () => null : onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: bgc,\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title} {taskvalue ? ` - ${taskvalue?.title}` : \"\"}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n            disabled={saving}\r\n          >\r\n            <Typography\r\n              style={{ marginLeft: 5, marginRight: 5 }}\r\n              variant=\"subtitle2\"\r\n            >\r\n              {savetitle}\r\n            </Typography>\r\n            {saving && <CircularProgress color=\"primary\" size={16} />}\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocalNoby = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\nimport { SelectLocalNoby } from \"../pages/calendar/common/SelectLocalNoby\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [depType, setDepType] = useState(1);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#AAAAAA\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n      setDepType(row.depType);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      depType,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#AAAAAA\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#AAAAAA\");\r\n    setSaving(false);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <SelectLocalNoby\r\n                options={sectionTypes}\r\n                value={depType}\r\n                onChange={(e: any) => setDepType(Number(e.target.value))}\r\n                isRTL={isRTL}\r\n              ></SelectLocalNoby>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else if (option.title && !option.name) {\r\n              nm = option?.title;\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { SelectLocalNoby } from \"../pages/calendar/common/SelectLocalNoby\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n  const [resType, setResType] = useState(1);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n      setResType(row.resType);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      resType,\r\n      email,\r\n      color,\r\n      info,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n    setSaving(false);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <SelectLocalNoby\r\n                options={sectionTypes}\r\n                value={resType}\r\n                onChange={(e: any) => setResType(Number(e.target.value))}\r\n                isRTL={isRTL}\r\n                width={230}\r\n              ></SelectLocalNoby>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === resType)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResType(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === 2)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resType}\r\n            onChange={(e: any) => {\r\n              setResType(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={3}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resType === 3 ? words.resourses : words.employee}\r\n            disabled={!resType}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n    setDepartvalue(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <Box>\r\n          <Box style={{ marginRight: 10, marginTop: -20 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resType}\r\n              onChange={(e: any) => {\r\n                setResType(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={3}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            // title={words.employee}\r\n            words={words}\r\n            disabled={!resType}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={180}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n        </Box>\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments.filter((dep: any) => dep.depType === 2)}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"lg\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={true}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n\r\n          <Box style={{ position: \"absolute\", marginTop: -80, right: 480 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resType}\r\n              onChange={(e: any) => {\r\n                setResType(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={1}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 15 }}></div>\r\n        </Grid>\r\n        <Grid item xs={7}></Grid>\r\n        <Grid item xs={3}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemprice)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.itemqty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemtotal)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    const { company } = this.props;\r\n\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={5}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderLeftWidth: 1,\r\n                borderTopColor: \"#ccc\",\r\n                borderBottomColor: \"#ccc\",\r\n                borderLeftColor: \"#ccc\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n                borderTopLeftRadius: 15,\r\n                height: 90,\r\n              }}\r\n            >\r\n              <img\r\n                src={company?.logo}\r\n                alt={company?.name}\r\n                height={100}\r\n                style={{\r\n                  objectFit: \"contain\",\r\n                  borderRadius: 10,\r\n                  marginTop: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                backgroundColor: \"#eee\",\r\n                borderTopRightRadius: 15,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderRightWidth: 1,\r\n                borderBottomColor: \"#ccc\",\r\n                borderTopColor: \"#ccc\",\r\n                borderRightColor: \"#ccc\",\r\n                height: 90,\r\n              }}\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Contact</div>\r\n                  <div style={contItem}>{company.tel1}</div>\r\n                  <div style={contItem}>{company?.email}</div>\r\n                  <div style={contItem}>{company?.website}</div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Address</div>\r\n                  <div style={contItem}>{company?.address}</div>\r\n                  {/* <div style={contItem}>Doha, Qatar</div> */}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 80, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Name</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 40, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\", color: \"#999\", fontSize: 11 }}>\r\n            Thank you for your business.\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        status\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  task,\r\n  value,\r\n  name,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n  const { tasks } = useTasks();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const { company } = useCompany();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n\r\n      if (!task && row.taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === row.taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleReactPrint();\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n            disabled={name === \"customerId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            disabled={name === \"taskId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n            disabled={name === \"employeeId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n            disabled={name === \"departmentId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      setSaving(false);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n\r\nexport const manamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: 4,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const customerTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n];\r\nexport const employeeTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const taskManamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [type, setType] = useState(1);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    setSaving(true);\r\n\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    reset();\r\n    setSaving(false);\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(1);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(row?.title);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      if (row.taskId) {\r\n        const tks = tasks.filter((t: any) => t.id === row.taskId)?.[0];\r\n        setTaskvalue(tks);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onFieldChange({ amount });\r\n    onFieldChange({ items: JSON.stringify(itemsList) });\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n    setEmplvalue(newValue);\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (taskvalue?.employeeId) {\r\n        const empl = employees.filter(\r\n          (em: any) => em._id === taskvalue?.employeeId\r\n        )?.[0];\r\n        onNewFieldChange(empl, \"employee\");\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                autoFocus={true}\r\n                name=\"tasktitle\"\r\n                label={words.title}\r\n                value={tasktitle}\r\n                onChange={(e: any) => {\r\n                  setTasktitle(e.target.value);\r\n                  onNewFieldChange(e.target.value, \"title\");\r\n                }}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees.filter((em: any) => em.resType === 1)}\r\n                value={emplvalue}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments.filter((dep: any) => dep.depType === 1)}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport {\r\n  useCustomers,\r\n  useDepartments,\r\n  useEmployees,\r\n  useLastNos,\r\n} from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n  onCloseAppoint = () => null,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { company } = useCompany();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    const depId = appoint.departmentId;\r\n    const empId = appoint.employeeId;\r\n    if (depId) {\r\n      const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n      setDepartvalue(depart);\r\n    }\r\n    if (empId) {\r\n      const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n      setEmplvalue(empl);\r\n    }\r\n    if (appoint.taskId) {\r\n      const empl = tasks.filter((emp: any) => emp.id === appoint.taskId)[0];\r\n      setTaskvalue(empl);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n      onCloseAppoint();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const date = appoint?.startDate ? new Date(appoint?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n    taskId,\r\n    title,\r\n  } = appointmentData;\r\n\r\n  const task = tasks.filter((t: any) => t.id === taskId)?.[0];\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ alignItems: \"center\", justifyContent: \"flex-start\" }}>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {task?.title}\r\n          </Typography>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList?.[0] && (\r\n            <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n              {isRTL ? itemsList?.[0].nameAr : itemsList?.[0].name}\r\n            </Typography>\r\n          )}\r\n\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginTop: -25, marginRight: 60 }}>\r\n          <Typography gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      mainResourceName,\r\n      departvalue,\r\n      emplvalue,\r\n      status,\r\n    },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\"\r\n        ? employees\r\n        : mainResourceName === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      mainResourceName,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees, mainResourceName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\"\r\n        ? employees\r\n        : value === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        marginTop: isMobile ? 47 : undefined,\r\n        height: window.innerHeight - 10,\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Box style={{ margin: 10 }}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={4}>\r\n            <DateNavigator\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              currentViewNameChange={currentViewNameChange}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentDate={currentDate}\r\n              views={[1, 3, 7, 30]}\r\n            ></DateNavigator>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Box style={{ marginBottom: 3 }}>\r\n                <EventsCalFilter\r\n                  count={rows.length}\r\n                  departvalue={departvalue}\r\n                  setDepartvalue={setDepartvalueDispatch}\r\n                  emplvalue={emplvalue}\r\n                  setEmplvalue={setEmplvalueDispatch}\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  employees={employees.filter((dep: any) => dep.resType === 1)}\r\n                  status={status}\r\n                  setStatus={setStatusDispatch}\r\n                  setMainResourceName={setMainResourceNameDispatch}\r\n                  mainResourceName={mainResourceName}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  refresh={refresh}\r\n                ></EventsCalFilter>\r\n              </Box>\r\n            </Hidden>\r\n          </Grid>\r\n        </Grid>\r\n        <Box style={{ margin: 0 }}>\r\n          <Scheduler\r\n            data={rows}\r\n            height={\r\n              isMonth\r\n                ? \"auto\"\r\n                : isMobile\r\n                ? window.innerHeight\r\n                : window.innerHeight - 90\r\n            }\r\n            firstDayOfWeek={6}\r\n            locale={isRTL ? \"ar\" : \"en\"}\r\n          >\r\n            {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n            {!isMonth && (\r\n              <EditRecurrenceMenu\r\n                messages={{\r\n                  current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n                  currentAndFollowing: isRTL\r\n                    ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                    : \"This and following appointments\",\r\n                  all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n                  menuEditingTitle: isRTL\r\n                    ? \"تعديل موعد متكرر\"\r\n                    : \"Edit recurring appointment\",\r\n                  menuDeletingTitle: isRTL\r\n                    ? \"حذف موعد متكرر\"\r\n                    : \"Delete recurring appointment\",\r\n                  cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n                  commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n                }}\r\n              />\r\n            )}\r\n            {/* {!isMonth && <IntegratedEditing />} */}\r\n            <ViewState\r\n              currentViewName={currentViewName}\r\n              onCurrentViewNameChange={currentViewNameChange}\r\n              currentDate={currentDate}\r\n              onCurrentDateChange={currentDateChange}\r\n            />\r\n            <DayView\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <DayView\r\n              name=\"3Days\"\r\n              displayName=\"3 Days\"\r\n              intervalCount={3}\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <WeekView\r\n              name=\"Week\"\r\n              displayName=\"Week\"\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <MonthView intervalCount={1} />\r\n            {/* <Toolbar /> */}\r\n            <Appointments appointmentContentComponent={AppointmentContent} />\r\n            <Resources\r\n              data={resourseData}\r\n              mainResourceName={mainResourceName}\r\n            />\r\n            <AppointmentTooltip\r\n              showCloseButton\r\n              showOpenButton={isEditor ? true : false}\r\n              // showDeleteButton\r\n              visible={visible}\r\n              onVisibilityChange={() => setVisible(!visible)}\r\n              contentComponent={({ appointmentData }) => (\r\n                <RenderToolTip\r\n                  appointmentData={appointmentData}\r\n                  setVisible={setVisible}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  editEvent={editEvent}\r\n                  company={company}\r\n                  theme={theme}\r\n                  viewonly={isMobile}\r\n                  tasks={tasks}\r\n                ></RenderToolTip>\r\n              )}\r\n            />\r\n            {/* {!isMonth && <AppointmentForm />} */}\r\n            {!isMonth && (\r\n              <AppointmentForm\r\n                overlayComponent={(args: any) => (\r\n                  <PopupLayoutBox\r\n                    isRTL={isRTL}\r\n                    theme={theme}\r\n                    alrt={{}}\r\n                    open={args.visible || false}\r\n                    title={title}\r\n                    onSubmit={commitChanges}\r\n                    mt={0}\r\n                    mb={50}\r\n                    {...args}\r\n                    onClose={args.onHide}\r\n                    isMobile={isMobile}\r\n                  ></PopupLayoutBox>\r\n                )}\r\n                basicLayoutComponent={(pr: any) => (\r\n                  <AppointForm\r\n                    departments={departments}\r\n                    employees={employees}\r\n                    servicesproducts={services}\r\n                    theme={theme}\r\n                    tasks={tasks}\r\n                    isMobile={isMobile}\r\n                    {...pr}\r\n                  ></AppointForm>\r\n                )}\r\n                commandButtonComponent={CommandAppointment}\r\n              />\r\n            )}\r\n            <AllDayPanel />\r\n            {!isMonth && <DragDropProvider></DragDropProvider>}\r\n            <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n          </Scheduler>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useDepartments, useEmployees } from \"../../hooks\";\r\nimport Main from \"./Main\";\r\n\r\nconst MainCalendar = (props: any) => {\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  return (\r\n    <Main {...props} employees={employees} departments={departments}></Main>\r\n  );\r\n};\r\n\r\nexport default MainCalendar;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  CLOUD_NAME,\r\n  imageUploadOptions,\r\n  UPLOAD_PRESET,\r\n} from \"../constants/sizes\";\r\n\r\nconst serverURL = \"http://jadwal-server:4000\";\r\n\r\nexport const FileUpload = () => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadfile`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderFile = () => {\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <p>file location {data.path}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input type=\"file\" name=\"file\" onChange={handleChange} />\r\n        {data.path && renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageOnlineUpload = ({\r\n  url,\r\n  setUrl,\r\n  image,\r\n  setImage,\r\n  width,\r\n  height,\r\n  size,\r\n}) => {\r\n  const [localimage, setLocalImage]: any = useState(null);\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  const selectImage = (e: any) => {\r\n    const img = e.target?.files?.[0];\r\n    if (img) {\r\n      setImage(img);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setUrl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setLocalImage(URL.createObjectURL(image));\r\n    } else {\r\n      setLocalImage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        ref={fileInput}\r\n        style={{\r\n          width: 0.1,\r\n          height: 0.1,\r\n          opacity: 0,\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n        }}\r\n        type=\"file\"\r\n        onChange={selectImage}\r\n      />\r\n      {localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={localimage}\r\n          />\r\n        </Box>\r\n      )}\r\n      {url && !localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={url}\r\n          />\r\n        </Box>\r\n      )}\r\n      {!localimage && !url && (\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            overflow: \"hidden\",\r\n            width: width,\r\n            height: height,\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#eaeaea\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => fileInput.current.click()}\r\n        >\r\n          <Typography style={{ color: \"#bbb\", fontSize: 14 }}>\r\n            {size}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const uploadPhotoOnline = async (image: any) => {\r\n  try {\r\n    const compressedImage = await imageCompression(image, imageUploadOptions);\r\n    const d = new FormData();\r\n    d.append(\"file\", compressedImage);\r\n    d.append(\"upload_preset\", UPLOAD_PRESET);\r\n    d.append(\"cloud_name\", CLOUD_NAME);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/fivegstore/image/upload\",\r\n      {\r\n        method: \"post\",\r\n        body: d,\r\n      }\r\n    );\r\n    const json = await res.json();\r\n    return json.url;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  ImageOnlineUpload,\r\n  ImageUpload,\r\n  uploadPhotoOnline,\r\n} from \"../../common/upload\";\r\nimport { isProd } from \"../../constants/sizes\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [iconimage, setIconimage] = useState(null);\r\n  const [iconurl, setIconurl] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n      setIconurl(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n    let icon: any;\r\n    if (iconimage) {\r\n      icon = await uploadPhotoOnline(iconimage);\r\n      icon = icon.replace(\"http://\", \"https://\");\r\n    }\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo: icon ? icon : logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            {!isProd && (\r\n              <>\r\n                <img\r\n                  src={logo}\r\n                  alt={company?.name}\r\n                  height={100}\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    borderRadius: 10,\r\n                    marginTop: 5,\r\n                  }}\r\n                />\r\n                <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n              </>\r\n            )}\r\n            <Box style={{ marginBottom: 20 }}></Box>\r\n            {isProd && (\r\n              <ImageOnlineUpload\r\n                url={iconurl}\r\n                setUrl={setIconurl}\r\n                image={iconimage}\r\n                setImage={setIconimage}\r\n                width={300}\r\n                height={150}\r\n                size=\"400x200\"\r\n              ></ImageOnlineUpload>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flexDirection: \"row\",\r\n              direction: \"ltr\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ flexDirection: \"row\", direction: \"ltr\" }}\r\n            >\r\n              <Box\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 11,\r\n                  color: \"#ccc\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                App ID:\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 11,\r\n                  color: \"#ccc\",\r\n                }}\r\n              >\r\n                {company?.appid}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 11,\r\n                color: \"#ccc\",\r\n                marginLeft: 10,\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              {company?.appversion}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    setSaving(true);\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setSaving(false);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useDepartments } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Departments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"depType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartments();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"depType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resTypes: [1, 2] },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Employees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"resType\", title: isRTL ? \"القطاع\" : \"Section\" },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"resType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getObjectEvents(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $taskId: Int\r\n  ) {\r\n    getObjectEvents(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    setSaving(true);\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    setSaving(false);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n    setSaving(false);\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={240}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      setTasktitle(row?.title);\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      bgcolor={colors.blue[500]}\r\n      mb={20}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                      disabled={name === \"customerId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"taskId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                      disabled={name === \"employeeId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"departmentId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Box>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAddMultiEvents\r\n          open={openMulti}\r\n          onClose={() => setOpenMulti(false)}\r\n          onSubmit={setRrule}\r\n          theme={theme}\r\n          isRTL={isRTL}\r\n          words={words}\r\n        ></PopupAddMultiEvents>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  updateEvent,\r\n} from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport getObjectEvents from \"../graphql/query/getObjectEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport LoadingInline from \"./LoadingInline\";\r\nimport PopupAppointmentCustomer from \"../pubups/PopupAppointmentCustomer\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  id,\r\n  name,\r\n  isNew,\r\n  company,\r\n  value,\r\n}: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    col.docNo,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n  const { tasks } = useTasks();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getObjectEvents,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getObjectEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n    getEvents({ variables });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const data = eventsData?.data?.[\"getObjectEvents\"]?.data;\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    const events = data || [];\r\n    setRows(events);\r\n  }, [eventsData]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      {loading && <LoadingInline></LoadingInline>}\r\n\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n\r\n          <VirtualTable\r\n            height={600}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentCustomer\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              company={company}\r\n              isEditor={isEditor}\r\n              tasks={tasks}\r\n              name={name}\r\n              value={value}\r\n            ></PopupAppointmentCustomer>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  tasks,\r\n  taskvalue,\r\n  setTaskvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  total,\r\n  words,\r\n  isRTL,\r\n  documentTypes,\r\n  types,\r\n  setTypes,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [taskvalueLocal, setTaskvalueLocal] = React.useState([]);\r\n  const [typesvalueLocal, setTypesvalueLocal] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setTaskvalueLocal(taskvalue);\r\n      setTypesvalueLocal(types);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setTaskvalueLocal([]);\r\n    setTypesvalueLocal([]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setTaskvalue([]);\r\n    setTypes([]);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setTaskvalue(taskvalueLocal);\r\n    setTypes(typesvalueLocal);\r\n    setOpen(false);\r\n  };\r\n  const tt = types ? types : [];\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...taskvalue,\r\n    ...tt,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              {documentTypes && (\r\n                <FilterSelectMulti\r\n                  options={documentTypes}\r\n                  value={typesvalueLocal}\r\n                  setValue={setTypesvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"type\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {tasks && tasks.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={tasks}\r\n                  value={taskvalueLocal}\r\n                  setValue={setTaskvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"task\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              {servicevalue && servicevalue.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={services}\r\n                  value={servicevalueLocal}\r\n                  setValue={setServicevalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"serviceproduct\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n  color = theme.palette.primary.main,\r\n  bgcolor = fade(theme.palette.primary.dark, 0.12),\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n        minWidth: 450,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: bgcolor,\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#bbb\" : color,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{}}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services} // items\r\n              itemType={itemType}\r\n              setItemType={setsetItemTypeDispatch}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { PopupInvoice } from \"../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { getColumns } from \"../common/columns\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { TableComponent } from \"../pages/reports/SalesReport\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function InvoicesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={amountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"total\", \"discount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n          <PopupInvoice\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            tasks={tasks}\r\n          ></PopupInvoice>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getReceipts(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoicesList(\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoicesList(\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getInvoicesList from \"../graphql/query/getInvoicesList\";\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [invoices, setInvoices] = useState<any>([]);\r\n  const [invoicevalue, setInvoicevalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  const [loadInvoices, invoicesData]: any = useLazyQuery(getInvoicesList, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  useEffect(() => {\r\n    if (custvalue) {\r\n      const variables = { customerId: custvalue._id };\r\n      loadInvoices({ variables });\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [custvalue, open]);\r\n\r\n  useEffect(() => {\r\n    if (invoicesData?.data?.getInvoicesList?.data) {\r\n      const { data } = invoicesData.data.getInvoicesList;\r\n      if (data?.length > 0) {\r\n        const ndata = data.map((d: any) => {\r\n          const title = `${d.docNo} - ${d.amount}QR`;\r\n          return {\r\n            ...d,\r\n            name: title,\r\n            nameAr: title,\r\n          };\r\n        });\r\n        setInvoices(ndata);\r\n        if (row.refNo) {\r\n          const inv = ndata.filter((ts: any) => ts.docNo === row.refNo)?.[0];\r\n          setInvoicevalue(inv);\r\n        }\r\n      }\r\n    }\r\n  }, [invoicesData]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const department = invoicevalue\r\n      ? {\r\n          departmentId: invoicevalue.departmentId,\r\n          departmentName: invoicevalue.departmentName,\r\n          departmentNameAr: invoicevalue.departmentNameAr,\r\n          departmentColor: invoicevalue.departmentColor,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = invoicevalue\r\n      ? {\r\n          employeeId: invoicevalue.employeeId,\r\n          employeeName: invoicevalue.employeeName,\r\n          employeeNameAr: invoicevalue.employeeNameAr,\r\n          employeeColor: invoicevalue.employeeColor,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: invoicevalue ? invoicevalue.taskId : undefined,\r\n      refNo: invoicevalue ? invoicevalue.docNo : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    console.log(variables);\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setInvoices([]);\r\n    setCustvalue(null);\r\n    setInvoicevalue(null);\r\n    setCustError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n                disabled={name === \"customerId\"}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب القبض\" : \"Receipt Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"invoice\"\r\n                title={isRTL ? \"الفواتير\" : \"Invoices\"}\r\n                words={words}\r\n                options={invoices}\r\n                value={invoicevalue}\r\n                setSelectValue={setInvoicevalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                disabled={!custvalue}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\n\r\nimport getReceipts from \"../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../pubups/PopupReceipt\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ReceiptCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            customerAccountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addFinance}\r\n          editAction={editFinance}\r\n        >\r\n          <PopupReceipt name={name} value={value} tasks={tasks}></PopupReceipt>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const customer = taskvalue\r\n      ? {\r\n          customerId: taskvalue.customerId,\r\n          customerName: taskvalue.customerName,\r\n          customerNameAr: taskvalue.customerNameAr,\r\n          customerPhone: taskvalue.customerPhone,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب المصروف\" : \"Expenses Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={isRTL ? \"حساب الدفع\" : \"Payment Acc\"}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                disabled={name === \"taskId\"}\r\n              ></AutoFieldLocal>\r\n\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اداري\" : \"Managment\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                />\r\n                <FormControlLabel\r\n                  value={3}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 3 ? words.resourses : words.employee}\r\n                disabled={!resType || name === \"employeeId\"}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n                disabled={name === \"departmentId\"}\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport PopupExpenses from \"../pubups/PopupExpenses\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ExpensesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addExpenses}\r\n          editAction={editExpenses}\r\n        >\r\n          <PopupExpenses\r\n            name={name}\r\n            value={value}\r\n            tasks={tasks}\r\n          ></PopupExpenses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  addEventsToList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const start = new Date();\r\n    const end = new Date();\r\n    start.setMinutes(0);\r\n    end.setHours(end.getHours() + 1);\r\n    end.setMinutes(0);\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n    setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    setCustvalue(customer);\r\n    setDepartvalue(department);\r\n    setEmplvalue(employee);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setSaving(false);\r\n    setTasktitle(null);\r\n  };\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const event = {\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      user: user._id,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist, isRTL });\r\n    addEventsToList(eventlist);\r\n    setSaving(false);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n      bgcolor={colors.blue[500]}\r\n      savetitle={isRTL ? \"متابعة\" : \"Proceed\"}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  height={200}\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  departmentFormatter,\r\n  employeeFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { Command } from \"./Command\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  rows,\r\n  removeEventFromList,\r\n  isRTL,\r\n  words,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 1, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    {\r\n      id: 4,\r\n      ref: \"department\",\r\n      name: \"departmentname\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      id: 5,\r\n      ref: \"employee\",\r\n      name: \"employeename\",\r\n      title: words.employee,\r\n    },\r\n\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeEventFromList(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 500,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 500,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <VirtualTable\r\n            height={500}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentname\"]}\r\n            formatterComponent={(props: any) =>\r\n              departmentFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeename\"]}\r\n            formatterComponent={(props: any) =>\r\n              employeeFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <TableEditColumn\r\n            showDeleteCommand={rows && rows.length > 1}\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, colors, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { compressEvents } from \"../common/time\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n  refresh,\r\n  startrange,\r\n  endrange,\r\n  value = null,\r\n  name = null,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const addEventsToList = (events: any) => {\r\n    const newArray = [...evList, ...events];\r\n    const sorted = _.sortBy(newArray, \"startDate\");\r\n    const listwithindex = indexTheList(sorted);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  const removeEventFromList = (index: any) => {\r\n    const newList = [...evList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue && name !== \"departmentId\") {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setHours(23, 59, 59, 999);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 1)?.[0]);\r\n      setEvList([]);\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setSaving(false);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!tasktitle) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة اسم للمهمة\" : \"Please add Task title\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && (!evList || evList.length === 0)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة موعد\" : \"Please add Appointment\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const events =\r\n      evList && evList.length > 0 ? compressEvents(evList) : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 1,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      evQty: evList ? evList.length : undefined,\r\n      evDone: isNew ? 0 : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setTimeout(() => {\r\n        refresh();\r\n        onCloseForm();\r\n      }, 1000);\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      saving={saving}\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={4}>\r\n            <TextFieldLocal\r\n              required\r\n              autoFocus={true}\r\n              name=\"tasktitle\"\r\n              label={words.title}\r\n              value={tasktitle}\r\n              onChange={(e: any) => setTasktitle(e.target.value)}\r\n              row={row}\r\n              fullWidth\r\n              mb={0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"customer\"\r\n              title={words.customer}\r\n              words={words}\r\n              options={customers}\r\n              value={custvalue}\r\n              setSelectValue={setCustvalue}\r\n              setSelectError={setCustError}\r\n              selectError={custError}\r\n              refernce={custRef}\r\n              register={register}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              showphone\r\n              disabled={name === \"customerId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"employee\"\r\n              title={words.employee}\r\n              words={words}\r\n              options={employees.filter((em: any) => em.resType === 1)}\r\n              value={emplvalue}\r\n              setSelectValue={setEmplvalue}\r\n              setSelectError={setEmplError}\r\n              selectError={emplError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              day={day}\r\n              disabled={name === \"employeeId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter((dep: any) => dep.depType === 1)}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepartError}\r\n              selectError={departError}\r\n              refernce={departRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              disabled={name === \"departmentId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={10}>\r\n            {isNew && (\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#F3F3F3\",\r\n                  marginTop: 15,\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\",\r\n                    marginInlineStart: 10,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    {isRTL ? \"اضافة مواعيد\" : \"Add Appointments\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    isTaskNew={isNew}\r\n                    rows={evList}\r\n                    removeEventFromList={removeEventFromList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                    start={startrange}\r\n                    end={endrange}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          addEventsToList={addEventsToList}\r\n        ></PopupTaskAppointment>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { VirtualTable } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { colors, fade, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\nconst stylesBlue = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.blue[500], 0.13),\r\n    },\r\n  },\r\n});\r\nconst stylesGreen = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.green[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesRed = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.red[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesOrange = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.orange[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesPurple = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.deepPurple[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesGrey = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.grey[400], 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponentBlue = withStyles(stylesBlue, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGreen = withStyles(stylesGreen, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentRed = withStyles(stylesRed, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentOrange = withStyles(stylesOrange, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentPurple = withStyles(stylesPurple, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGrey = withStyles(stylesGrey, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n      const depId = task.departmentId;\r\n      const empId = task.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      // handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={null}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport _ from \"lodash\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\nimport { taskManamentTabs } from \"../constants/rrule\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 224,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskView = ({\r\n  open,\r\n  onClose,\r\n  item,\r\n  tasks,\r\n  isNew,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n  const [row, setRow] = useState(item);\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (item?.id && tasks && tasks.length > 0) {\r\n      const opened = tasks.filter((ts: any) => ts.id === item.id)?.[0];\r\n      setRow(opened);\r\n    }\r\n  }, [tasks]);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n      if (items && items.length > 0) {\r\n        const ids = items.map((it: any) => it.itemId);\r\n        const servlist = servicesproducts.filter((ser: any) =>\r\n          ids.includes(ser._id)\r\n        );\r\n\r\n        const itemsWqtyprice = items.map((item: any, index: any) => {\r\n          const {\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n          } = item;\r\n          const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n          return {\r\n            ...serv,\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n            index,\r\n            itemprice: item.itemPrice,\r\n            itemqty: item.qty,\r\n            itemtotal: item.total,\r\n            // itemtotalcost: item.qty * serv.cost,\r\n          };\r\n        });\r\n        const finalItems = _(itemsWqtyprice)\r\n          .groupBy(\"_id\")\r\n          .map((array, key) => ({\r\n            _id: array[0]._id,\r\n            name: array[0].name,\r\n            nameAr: array[0].nameAr,\r\n            categoryId: array[0].categoryId,\r\n            categoryName: array[0].categoryName,\r\n            categoryNameAr: array[0].categoryNameAr,\r\n            departmentId: array[0].departmentId,\r\n            departmentName: array[0].departmentName,\r\n            departmentNameAr: array[0].departmentNameAr,\r\n            departmentColor: array[0].departmentColor,\r\n            employeeId: array[0].employeeId,\r\n            employeeName: array[0].employeeName,\r\n            employeeNameAr: array[0].employeeNameAr,\r\n            employeeColor: array[0].employeeColor,\r\n            autoNo: array[0].autoNo,\r\n            docNo: array[0].docNo,\r\n            cost: array[0].cost,\r\n            itemType: array[0].itemType,\r\n            index: array[0].index,\r\n            itemprice: array[0].itemprice,\r\n            itemqty: _.sumBy(array, \"itemqty\"),\r\n            itemtotal: _.sumBy(array, \"itemtotal\"),\r\n          }))\r\n          .orderBy(\"index\")\r\n          .value();\r\n        setItemsList(finalItems);\r\n      }\r\n    }\r\n  }, [itemsData, open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const variables = { taskId: row.id };\r\n      getItems({ variables });\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setEvList([]);\r\n    setValue(0);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const viewtotal = total ? total : amount;\r\n  const title = `${words.task} : ${row?.title}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      alrt={{}}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      onlyclose\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n              }}\r\n            >\r\n              <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n\r\n              {row && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <TabPanel value={value} index={0}>\r\n                    <EventsCustomer\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      customers={customers}\r\n                      servicesproducts={servicesproducts}\r\n                      isEditor={isEditor}\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      theme={theme}\r\n                      isNew={isNew}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></EventsCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                    <InvoicesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      company={company}\r\n                      servicesproducts={servicesproducts}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></InvoicesCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                    <ReceiptCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ReceiptCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={3}>\r\n                    <ExpensesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ExpensesCustomer>\r\n                  </TabPanel>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      marginLeft: 20,\r\n                      marginRight: 20,\r\n                    }}\r\n                  >\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(viewtotal)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {progress}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalinvoiced)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalpaid)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.red[500] }}\r\n                      >\r\n                        {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.red[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(totalinvoiced - totalpaid)}\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(toatlExpenses)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.blue[500] }}\r\n                      >\r\n                        {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.blue[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          {row && (\r\n            <Grid item xs={1}>\r\n              <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n                <Tabs\r\n                  orientation=\"vertical\"\r\n                  variant=\"scrollable\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"items\"\r\n                  className={classes.tabs}\r\n                >\r\n                  {taskManamentTabs.map((item: any) => {\r\n                    return (\r\n                      <Tab\r\n                        style={{\r\n                          backgroundColor:\r\n                            value === item.id ? \"#eee\" : undefined,\r\n                        }}\r\n                        label={isRTL ? item.nameAr : item.name}\r\n                        {...a11yProps(item.id)}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Tabs>\r\n              </Box>\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  margin: 7,\r\n                  padding: 8,\r\n                  borderRadius: 5,\r\n                  alignItems: \"flex-start\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    marginTop: 10,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  {row.title}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.customer}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.customerNameAr : row.customerName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.employee}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.employeeNameAr : row.employeeName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.department}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.departmentNameAr : row.departmentName}\r\n                </Typography>\r\n              </Box>\r\n              <Box style={{ padding: 10, marginTop: 20 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.newInvoice}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {row && (\r\n          <PopupTaskAppointment\r\n            open={openEvent}\r\n            onClose={() => setOpenEvent(false)}\r\n            row={null}\r\n            isNew={true}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            setEvList={setEvList}\r\n          ></PopupTaskAppointment>\r\n        )}\r\n        {row && (\r\n          <PopupTaskInvoice\r\n            open={openInvoice}\r\n            onClose={() => setOpenInvoice(false)}\r\n            task={row}\r\n            customers={customers}\r\n            services={servicesproducts}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            theme={theme}\r\n            items={itemsList}\r\n          ></PopupTaskInvoice>\r\n        )}\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  TableColumnVisibility,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \".\";\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"./colorFormat\";\r\nimport { AlertLocal } from \"../components\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport PopupTask from \"../pubups/PopupTask\";\r\nimport createTask from \"../graphql/mutation/createTask\";\r\nimport updateTask from \"../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../hooks\";\r\nimport { errorAlert, errorDeleteAlert } from \"./helpers\";\r\nimport { TableComponent } from \"./TableComponent\";\r\nimport PopupTaskView from \"../pubups/PopupTaskView\";\r\nimport useTasks from \"../hooks/useTasks\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function TasksCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n  value,\r\n  name,\r\n  id,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const { tasks } = useTasks();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getTasks\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <TableColumnVisibility\r\n          columnExtensions={tableColumnVisibilityColumnExtensions}\r\n          defaultHiddenColumnNames={[\r\n            col.department.name,\r\n            col.evQty.name,\r\n            col.toatlExpenses.name,\r\n            col.start.name,\r\n            col.end.name,\r\n          ]}\r\n        />\r\n        <DataTypeProvider\r\n          for={[\"title\"]}\r\n          formatterComponent={(props: any) =>\r\n            nameLinkFormat({ ...props, setItem, setOpenItem })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"start\", \"end\"]}\r\n          formatterComponent={createdAtFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"due\"]}\r\n          formatterComponent={dueAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n          formatterComponent={currencyFormatterEmpty}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"totalinvoiced\"]}\r\n          formatterComponent={invoiceReceiptFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"income\"]}\r\n          formatterComponent={incomeAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"tasktype\"]}\r\n          formatterComponent={taskNameFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"progress\"]}\r\n          formatterComponent={progressFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addTask} editAction={editTask}>\r\n          <PopupTask\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            addCustomer={addCustomer}\r\n            editCustomer={editCustomer}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            isEditor={isEditor}\r\n            refresh={refresh}\r\n          ></PopupTask>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n      {item && (\r\n        <PopupTaskView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n          refresh={refresh}\r\n          addAction={addTask}\r\n          editAction={editTask}\r\n        ></PopupTaskView>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupCustomerView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.customer} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomerView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport {\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Customers(props: any) {\r\n  const { isRTL, words, menuitem, isEditor, theme, company, servicesproducts } =\r\n    props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [rows, setRows] = useState([]);\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.address },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getCustomers, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getCustomers,\r\n        variables: { isRTL },\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getCustomers\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    loadTasks({ isRTL });\r\n  }, []);\r\n\r\n  const [addCustomer] = useMutation(createCustomer, refresQuery);\r\n  const [editCustomer] = useMutation(updateCustomer, refresQuery);\r\n  const [removeCustomer] = useMutation(deleteCustomer, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getCustomers?.data) {\r\n      const { data } = tasksData.data.getCustomers;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"email\", \"address\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupCustomerView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { TableComponent } from \"../reports/SalesReport\";\r\nimport { colors } from \"@material-ui/core\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert, Loading } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  fade,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { tafkeet } from \"../common/helpers\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n      setTasktitle(row?.title);\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n      taskvalue={taskvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (dep: any) => dep.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  marginTop: 5,\r\n                  backgroundColor: fade(colors.grey[400], 0.2),\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 180, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: fade(colors.grey[400], 0.2),\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <Typography\r\n                style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n              >\r\n                {words.total} : {moneyFormat(totals.amount)}\r\n              </Typography>\r\n              {totals?.amount && (\r\n                <Typography style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                  {tafkeet(totals.amount)}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          onCloseAppoint={onClose}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupDepartmentView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.department} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDepartmentView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupEmployeeView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.employee} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployeeView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n  nameLinkFormat,\r\n  taskIdLinkFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  colors,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [due, setDue] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.createdAt,\r\n    col.startDate,\r\n    col.fromto,\r\n    col.customer,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [openTaskItem, setOpenTaskItem] = useState(false);\r\n  const [openCustomerItem, setOpenCustomerItem] = useState(false);\r\n  const [openEmployeeItem, setOpenEmployeeItem] = useState(false);\r\n  const [openDepartmentItem, setOpenDepartmentItem] = useState(false);\r\n\r\n  const onCloseTaskItem = () => {\r\n    setOpenTaskItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseCustomerItem = () => {\r\n    setOpenCustomerItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseEmployeeItem = () => {\r\n    setOpenEmployeeItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseDepartmentItem = () => {\r\n    setOpenDepartmentItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n\r\n  const setEmployeeItem = (data: any) => {\r\n    const empl = employees.filter((em: any) => em._id === data.employeeId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"employee\");\r\n    }\r\n  };\r\n  const setDepartmentItem = (data: any) => {\r\n    const empl = departments.filter(\r\n      (em: any) => em._id === data.departmentId\r\n    )?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"department\");\r\n    }\r\n  };\r\n  const setCustomerItem = (data: any) => {\r\n    const empl = customers.filter((em: any) => em._id === data.customerId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"customer\");\r\n    }\r\n  };\r\n\r\n  const { tasks } = useTasks();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n  const { employees, addEmployee, editEmployee } = useEmployees();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n      due,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end, due]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  useEffect(() => {\r\n    if (name === \"department\") {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"employee\") {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"customer\") {\r\n      console.log(\"customer\", item);\r\n\r\n      if (customers && customers.length > 0) {\r\n        const opened = customers.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments, employees, customers]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.startDate.name, togglingEnabled: false },\r\n    { columnName: col.fromto.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              opacity: due ? 0.5 : undefined,\r\n              pointerEvents: due ? \"none\" : undefined,\r\n            }}\r\n          >\r\n            <DateNavigatorReports\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              currentDate={currentDate}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentViewNameChange={currentViewNameChange}\r\n              endDate={endDate}\r\n              endDateChange={endDateChange}\r\n              views={[1, 7, 30, 365, 1000]}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              color={colors.blue[700]}\r\n              bgcolor={colors.blue[50]}\r\n            ></DateNavigatorReports>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              padding: 0,\r\n              margin: 0,\r\n              backgroundColor: colors.blue[50],\r\n              paddingRight: 10,\r\n              marginLeft: 40,\r\n              marginRight: 40,\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={{ padding: 7 }}\r\n                  checked={due}\r\n                  onChange={() => setDue(!due)}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography\r\n                  style={{ color: colors.blue[700] }}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {isRTL ? \"المواعيد المتأخرة\" : \"Due Appointments\"}\r\n                </Typography>\r\n              }\r\n              style={{ fontSize: 14 }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            columnExtensions={tableColumnVisibilityColumnExtensions}\r\n            defaultHiddenColumnNames={[\r\n              col.createdAt.name,\r\n              col.status.name,\r\n              col.docNo.name,\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"startDate\", \"createdAt\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdLinkFormat({\r\n                ...props,\r\n                tasks,\r\n                setItem,\r\n                setOpenItem: setOpenTaskItem,\r\n                setName,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeeNameAr\", \"employeeName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setEmployeeItem,\r\n                setOpenItem: setOpenEmployeeItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentNameAr\", \"departmentName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setDepartmentItem,\r\n                setOpenItem: setOpenDepartmentItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"customerNameAr\", \"customerName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setCustomerItem,\r\n                setOpenItem: setOpenCustomerItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 110,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n        <PopupDepartmentView\r\n          open={openDepartmentItem}\r\n          onClose={onCloseDepartmentItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n        <PopupEmployeeView\r\n          open={openEmployeeItem}\r\n          onClose={onCloseEmployeeItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n        <PopupTaskView\r\n          open={openTaskItem}\r\n          onClose={onCloseTaskItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n        ></PopupTaskView>\r\n        <PopupCustomerView\r\n          open={openCustomerItem}\r\n          onClose={onCloseCustomerItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    console.log(variables);\r\n\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n            }}\r\n          >\r\n            <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n              <FilterSelectCkeckBox\r\n                options={tasks}\r\n                value={taskvalue?.[0]}\r\n                setValue={setTaskvalueDispatch}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"task\"\r\n                nomulti\r\n                width={250}\r\n              ></FilterSelectCkeckBox>\r\n            </Box>\r\n            <FilterSelectCkeckBox\r\n              options={mainaccounts}\r\n              value={accvalue?.[0]}\r\n              setValue={setAccvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"account\"\r\n              nomulti\r\n              width={250}\r\n            ></FilterSelectCkeckBox>\r\n            {/* <Box\r\n              style={{\r\n                minWidth: 120,\r\n                marginRight: isRTL ? 40 : undefined,\r\n                marginLeft: isRTL ? undefined : 40,\r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n                {currencyFormatter({ value: total })}\r\n              </Typography>\r\n            </Box> */}\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 9\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={customers}\r\n              value={custvalue?.[0]}\r\n              setValue={setCustvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"customer\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              minWidth: 120,\r\n              marginRight: 90,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <FilterSelectCkeckBox\r\n              options={tasks}\r\n              value={taskvalue?.[0]}\r\n              setValue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"task\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resTypes: [3] },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      color,\r\n      info,\r\n      resType: 3,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter((dep: any) => dep.depType === 2)}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Resourses({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useOResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupResourses></PopupResourses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={8}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginBottom: -15 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اداري\" : \"Managment\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={3}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}></Grid>\r\n                <Grid item xs={8}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport {\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, colors } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    col.createdAt,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n  const {\r\n    state: { currentDate, currentViewName, endDate },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.deepPurple[400]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            color={colors.deepPurple[700]}\r\n            bgcolor={colors.deepPurple[50]}\r\n          ></DateNavigatorReports>\r\n          <Box style={{}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setOpenGantt(true)}\r\n            >\r\n              {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            <SearchState />\r\n\r\n            <IntegratedSorting />\r\n            <IntegratedFiltering />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n              tableComponent={TableComponent}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              defaultHiddenColumnNames={[\r\n                col.createdAt.name,\r\n                col.department.name,\r\n                col.evQty.name,\r\n                col.toatlExpenses.name,\r\n                col.start.name,\r\n                col.end.name,\r\n              ]}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"title\"]}\r\n              formatterComponent={(props: any) =>\r\n                nameLinkFormat({ ...props, setItem, setOpenItem })\r\n              }\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\", \"createdAt\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"due\"]}\r\n              formatterComponent={dueAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"totalinvoiced\"]}\r\n              formatterComponent={invoiceReceiptFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"income\"]}\r\n              formatterComponent={incomeAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n                refresh={refresh}\r\n                startrange={start}\r\n                endrange={end}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n          {alrt.show && (\r\n            <AlertLocal\r\n              isRTL={isRTL}\r\n              type={alrt?.type}\r\n              msg={alrt?.msg}\r\n              top\r\n            ></AlertLocal>\r\n          )}\r\n          {item && (\r\n            <PopupTaskView\r\n              open={openItem}\r\n              onClose={onCloseItem}\r\n              item={item}\r\n              tasks={rows}\r\n              isNew={false}\r\n              theme={theme}\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              addCustomer={addCustomer}\r\n              editCustomer={editCustomer}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              isEditor={isEditor}\r\n              refresh={refresh}\r\n              startrange={start}\r\n              endrange={end}\r\n              addAction={addTask}\r\n              editAction={editTask}\r\n            ></PopupTaskView>\r\n          )}\r\n        </Paper>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportDocuments(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportDocuments(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        opType\r\n        taskId\r\n        branch\r\n        time\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const DocumentsReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default DocumentsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  documentTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportDocuments from \"../../graphql/query/getReportDocuments\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function DocumentsReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportDocuments, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(DocumentsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportDocuments\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          types: inActiveColumns(\"types\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={[]}\r\n              setServicevalue={() => null}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n              zIndex: 115,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={documentTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initDocumentsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const documentsReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const ServicesReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default ServicesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportServices(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportServices(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportServices from \"../../graphql/query/getReportServices\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function ServicesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportServices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(ServicesReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportServices\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"total\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"total\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initServicesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const servicesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  daysoffFormatter,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { useCustomers, useDepartments } from \"../../hooks\";\r\n\r\nexport default function ManageEmployees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  servicesproducts,\r\n  company,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResourses();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [employees]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid\r\n          rows={employees.filter((em: any) => em.resType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\r\n              \"email\",\r\n              \"info\",\r\n              \"phone\",\r\n              \"daysoff\",\r\n              \"avatar\",\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupEmployeeView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\n\r\nexport default function ManageDepartments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  company,\r\n  servicesproducts,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { customers } = useCustomers();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"depType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid\r\n          rows={departments.filter((em: any) => em.depType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"avatar\", \"depType\", \"desc\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"depType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupDepartmentView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n    employees,\r\n    departments,\r\n    customers,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport EmployeesAppoints from \"./Employees\";\r\n\r\nconst EmployeesCalendar = (props: any) => {\r\n  const [state, setstate] = useState([]);\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const emps = employees.filter((em: any) => em.resType === 1);\r\n      setstate(emps);\r\n    }\r\n  }, [employees]);\r\n\r\n  return (\r\n    <EmployeesAppoints\r\n      {...props}\r\n      employees={state}\r\n      departments={departments}\r\n      customers={customers}\r\n    ></EmployeesAppoints>\r\n  );\r\n};\r\n\r\nexport default EmployeesCalendar;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport MainCalendar from \"../calendar/MainCalendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport { useBranches, useServices, useSuppliers } from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport DocumentsReport from \"../reports/DocumentsReport\";\r\nimport {\r\n  documentsReportReducer,\r\n  initDocumentsReportContext,\r\n} from \"../../contexts/documentsReport/documentsReducer\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\nimport ServicesReport from \"../reports/ServicesReport\";\r\nimport {\r\n  initServicesReportContext,\r\n  servicesReportReducer,\r\n} from \"../../contexts/servicesReport/servicesReducer\";\r\nimport ManageEmployees from \"../adds/ManageEmployees\";\r\nimport ManageDepartments from \"../adds/ManageDepartments\";\r\nimport EmployeesCalendar from \"../calendar/EmployeesCalendar\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [documentsStore, documentsDispatch] = useReducer(\r\n    documentsReportReducer,\r\n    initDocumentsReportContext\r\n  );\r\n  const [servicesStore, servicesDispatch] = useReducer(\r\n    servicesReportReducer,\r\n    initServicesReportContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesCalendar>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n                isEditor={isEditor}\r\n                company={company}\r\n                servicesproducts={services}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <Departments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Departments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/managedepartments\"\r\n            component={() => (\r\n              <ManageDepartments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageDepartments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <Employees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Employees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/manageemployees\"\r\n            component={() => (\r\n              <ManageEmployees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageEmployees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <Resourses\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Resourses>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/docreports\"\r\n            component={() => (\r\n              <DocumentsReportContext.Provider\r\n                value={{\r\n                  state: documentsStore,\r\n                  dispatch: documentsDispatch,\r\n                }}\r\n              >\r\n                <DocumentsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></DocumentsReport>\r\n              </DocumentsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/servicesreports\"\r\n            component={() => (\r\n              <ServicesReportContext.Provider\r\n                value={{\r\n                  state: servicesStore,\r\n                  dispatch: servicesDispatch,\r\n                }}\r\n              >\r\n                <ServicesReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></ServicesReport>\r\n              </ServicesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable import/first */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nrequire(\"dotenv\").config();\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/first */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}