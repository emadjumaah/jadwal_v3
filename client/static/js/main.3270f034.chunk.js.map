{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pubups/PopupDeprtment.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","pages/calendar/Main.tsx","contexts/calendarReport/index.ts","pages/calendar/Employees.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/upload.tsx","pages/options/Company.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","pages/adds/Employees.tsx","hooks/useHResourses.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","components/filters/DateNavigatorReports.tsx","pages/adds/Invoices.tsx","hooks/useAccounts.ts","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","hooks/useCompany.ts","pubups/PopupAppointment.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","constants/reports.ts","pages/reports/SalesReport.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","pubups/PopupExpenses.tsx","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","hooks/useOResourses.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","graphql/query/getReceipts.ts","graphql/query/getInvoicesList.ts","pubups/PopupReceipt.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupTaskAppointment.tsx","pubups/PopupAppointmentTask.tsx","graphql/query/getTaskEvents.ts","Shared/EventsTable.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","systemsNames","nameAr","colors","drawerWidth","isProd","imageUploadOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","resourses","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","all","da","index","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","bc","bg","uname","names","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","createdAtFormatter","fromToFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","taskStatusFormatter","CircularProgress","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","currencyFormatterEmpty","doneFormatter","editEvent","Checkbox","checked","onChange","invoiceReceiptFormatter","valuePercent","position","bottom","right","fontWeight","taskIdFormatter","tasks","tsk","taskNameFormatter","progressFormatter","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","compressEvents","events","times","ev","commitAppointmentChanges","added","changed","deleted","addEvent","removeEvent","items","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","optimisticResponse","__typename","updateEvent","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","opType","refNo","eventNo","progress","evQty","taskId","fromto","done","invo","totalinvoiced","totalpaid","toatlExpenses","check","commandComponents","add","onExecute","textAlign","m","Fab","edit","IconButton","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","marginBottom","categoryName","categoryNameAr","brandName","brandNameAr","Loading","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","desc","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDate","maxDate","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","employees","departments","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","Landing","getLandingChartData","freshChartData","chartData","useDepartments","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","PaperComponent","handle","cancel","PopupLayout","alrt","onlyclose","print","savetitle","taskvalue","preventclose","saving","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","PopupDeprtment","setNewValue","reset","trim","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","nameEn","description","multiline","rowsMax","InputProps","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","close","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","printsave","from","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","customers","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","setDepartvalue","depError","setDepError","setDaysoff","emplRef","useRef","depart","resType","closeModal","resetAll","target","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","setResType","emplslist","setEmplslist","useEmployees","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","useServices","servId","serv","se","onFormClose","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","src","textTransform","letterSpacing","invoiceNo","PureComponent","indexTheList","PopupInvoice","servicesproducts","company","loading","setLoading","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","setCustvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","getActions","loadActions","actionsData","eventId","onSelectServiceChange","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","refresQuery","getInvoices","createInvoice","payment","paymentAr","toLocaleTimeString","language","toLocaleDateString","logo","tel1","mob","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","getTasks","getfins","finData","bt","Main","visible","resourseData","setResourseData","setRows","useTasks","getEvents","refreshCharts","createEvent","deleteEvent","getCalEvents","evnData","eventsData","ap","startend","isMonth","curDate","innerHeight","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","CalendarReportContext","EmployeesAppoints","grouping","resourceName","setMainResourceNameDispatch","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","ImageOnlineUpload","url","setUrl","image","setImage","localimage","setLocalImage","fileInput","removeImage","URL","createObjectURL","opacity","img","files","click","objectFit","uploadPhotoOnline","imageCompression","compressedImage","FormData","append","fetch","method","json","Company","editCompany","setLogo","active","setActive","iconimage","setIconimage","iconurl","setIconurl","tel2","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showEditCommand","showAddCommand","inputComponent","Departments","Employees","useHResourses","Customers","Services","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","Invoices","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","defaultSorting","onSortingChange","srt","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","Accounts","useAccounts","br","CashTransfareSelect","PopupFinance","debaccounts","setDebaccounts","cridaccounts","setCridaccounts","setDebitAcc","setCreditAcc","ca","ot","filtereddebits","filteredcredit","fullwidth","Finance","getFinances","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupAppointment","openInvoice","setOpenInvoice","tasktitle","setTasktitle","setMinutes","custId","statNo","cu","stat","Appointments","periodvalue","setPeriodvalue","loadEvents","deleteEventById","removeEventById","checkedIcon","FilterSelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","limitTags","SalesFilter","setServicevalue","setItemType","setCatvalue","categories","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","catvalueLocal","setCatvalueLocal","itemTypeLocal","setItemTypeLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","groupList","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","categoryIds","departmentIds","employeeIds","customerIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","then","buffer","saveAs","Blob","FilterSelect","FinanceReport","mainaccounts","balance","unshift","accNameAr","accName","accountIds","showInGroupFooter","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","initCalendarReportContext","calendarReportReducer","PopupExpenses","fullwidtth","Expenses","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PurchaseReport","suppliers","brands","supplierIds","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResourses","PopupReceipt","custError","setCustError","invoices","setInvoices","invoicevalue","setInvoicevalue","getInvoicesList","invoicesData","ndata","Receipt","getReceipts","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","UTC","SelectMulti","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","PopupTaskAppointment","setEvList","setRrule","openMulti","setOpenMulti","rRule","eventlist","PopupAppointmentTask","custRef","EventsTable","isTaskNew","setColumns","getTaskEvents","PopupTaskInvoice","handlePrint","PopupTask","setSaving","openEvent","setOpenEvent","evList","getTaskItems","finalItems","autoNo","evssum","evDone","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","loadTasks","tasksData","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","initTasksContext","tasksReducer","Content","getCompany","getComp","compData","updateCompany","comp1","refreshcompany","useCompany","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"2/cAAaA,GAAc,CACzBC,MAAO,CACLC,UAAW,CACTC,KAAM,SAERC,eAAgB,CACdC,OAAQ,SAEVC,eAAgB,CACdD,OAAQ,SAEVE,kBAAmB,CACjBF,OAAQ,SAEVG,cAAe,CACbL,KAAM,SAERM,aAAc,CACZJ,OAAQ,SAEVK,cAAe,CACbL,OAAQ,SAEVM,YAAa,CACXC,OAAO,GAETC,iBAAkB,CAChBR,OAAQ,SAEVS,OAAQ,CACNX,KAAM,SAERY,SAAU,CACRZ,KAAM,SAERa,aAAc,CACZX,OAAQ,SAEVY,WAAY,CACVC,QAAS,UAGbC,UAAW,CACTX,cAAe,CACbY,UAAW,CAETC,WAAY,EACZC,YAAa,EACbC,QAAS,OAMJC,GAAc,CACzBC,UAAW,MACXC,WAAY,CACVC,WAAW,8HACXC,SAAU,GACVC,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,KAEpB9B,MAAO,CACLC,UAAW,CACTC,KAAM,SAERC,eAAgB,CACdC,OAAQ,SAEVC,eAAgB,CACdD,OAAQ,SAEVE,kBAAmB,CACjBF,OAAQ,SAEVG,cAAe,CACbL,KAAM,SAERM,aAAc,CACZJ,OAAQ,SAEVK,cAAe,CACbL,OAAQ,SAEVM,YAAa,CACXC,OAAO,GAETC,iBAAkB,CAChBR,OAAQ,SAEVS,OAAQ,CACNX,KAAM,SAERY,SAAU,CACRZ,KAAM,SAERa,aAAc,CACZX,OAAQ,SAEVY,WAAY,CACVC,QAAS,UAGbC,UAAW,CACTX,cAAe,CACbY,UAAW,CAETC,WAAY,EACZC,YAAa,EACbC,QAAS,OC9GJS,GAAW,CACtB,CACEC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,aAIf,CACEL,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,c,sCC5DJC,GAAeC,cAAW,SAACC,GAAD,MAAY,CACjDC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,UAAWF,EAAMG,QAAQ,GACzBvC,OAAQoC,EAAMG,QAAQ,GACtBK,gBAAiBR,EAAMR,QAAQG,UAAUD,MAE3Ce,KAAM,CACJC,MAAO,OACPR,UAAWF,EAAMG,QAAQ,IAE3BQ,OAAQ,CACN/C,OAAQoC,EAAMG,QAAQ,EAAG,EAAG,QAGnBS,GAAgBb,cAAW,SAACC,GAAD,OACtCa,aAAa,CACXC,KAAM,CACJV,QAAS,QAGXW,QAASf,EAAMgB,OAAOD,QACtBE,QAAS,CACPC,KAAM,QAiCCC,IA5BkBpB,cAAW,SAACC,GAAD,OACxCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLV,MAAO,OACPW,OAAQ,QAEVzD,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKcX,aAAW,CACpCe,KAAM,CACJQ,SAAU,KAEZC,MAAO,CACLF,OAAQ,QAICG,GAAmBzB,cAAW,SAACC,GAAD,OACzCa,aAAa,CACXY,YAAa,CACX7D,OAAQoC,EAAMG,QAAQ,IAExBuB,YAAa,CACXxB,UAAWF,EAAMG,QAAQ,SAKlBwB,GAAiB5B,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,QACRX,MAAO,QACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETkB,UAAW,CACTzC,SAAU,SA4BH0C,IAxBoB9B,cAAW,SAACC,GAAD,OAC1Ca,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,OACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETkB,UAAW,CACTzC,SAAU,SAKWY,cAAW,SAACC,GAAD,OACpCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETkB,UAAW,CACTzC,SAAU,U,IAKiBY,cAAW,SAACC,GAAD,OAC1Ca,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKkBX,cAAW,SAACC,GAAD,OACxCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAIiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAIiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAIcX,cAAW,SAACC,GAAD,OACpCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,UAKiBX,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNsC,UAAW,GACXmB,OAAQ,GACRX,MAAO,KAETI,KAAM,CACJJ,MAAO,aAIqBX,cAAW,SAACC,GAAD,OAC3Ca,aAAa,CACXiB,SAAU,CACRT,OAAQ,OACRX,MAAO,QACP,aAAc,WAEhBI,KAAM,CACJ,uBAAwB,CACtBlD,OAAQoC,EAAMG,QAAQ,GACtBO,MAAO,SAGX9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,U,sCC1PPqB,GAAcC,aAAaC,QAAQ,SACnCC,GAAQH,GAAcI,KAAKC,MAAML,IAAe,KAEhDM,GAAQH,GAAQA,GAAMG,MAAQ,KAI9BC,GAAWC,aAAe,CAC9BC,IAAKC,mIAAYC,cAGbC,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAChC,MAAO,CACLA,QAAQ,6BACHA,GADE,IAELC,cAAeV,GAAK,iBAAaA,IAAU,SAKpCW,GAAS,IAAIC,KAAa,CACrCC,KAAMP,GAASQ,OAAOb,IACtBc,MAAO,IAAIC,O,mBCvBEC,ICAAA,aAAf,wUCAeA,aAAf,gUFAeA,aAAf,uVGAeA,gBAAf,2iBCAeA,gBAAf,weCAeA,ICAAA,aAAf,+uBDAeA,aAAf,uvBEAeA,ICAAA,aAAf,qvBCAeA,aAAf,mwBFAeA,aAAf,gnCGAeA,gBAAf,yqBCDeA,gBAAf,4mCCCeA,gBAAf,oHCAeA,gBAAf,ohBCAeA,gBAAf,8YCAeA,gBAAf,usBCAeA,gBAAf,06BCAeA,ICAAA,aAAf,mIDAeA,aAAf,21CEAeA,ICAAA,aAAf,8jCCAeA,aAAf,0HCAeA,aAAf,0hBHAeA,aAAf,oIIDeA,gBAAf,8hCCCeA,ICAAA,aAAf,47CDAeA,aAAf,w7CEAeA,ICAAA,aAAf,42BCAeA,aAAf,k1BCAeA,aAAf,40BCAeA,aAAf,kUCAeA,aAAf,4QCAeA,aAAf,6fCAeA,aAAf,+fCAeA,aAAf,iJRAeA,aAAf,sJSAeA,ICDAA,aAAf,4mCDCeA,aAAf,0cEAeA,gBAAf,u4BCAeA,ICAAA,aAAf,gxBDAeA,aAAf,gnBEAeA,ICAAA,aAAf,sUCAeA,aAAf,2JCAeA,aAAf,yWCAeA,aAAf,q0BCAeA,aAAf,uJCAeA,aAAf,w2BCAeA,aAAf,wOCAeA,aAAf,qJCAeA,aAAf,uRTAeA,aAAf,gXUAeA,gBAAf,iKCAeA,gBAAf,kZCAeA,gBAAf,gpBCAeA,gBAAf,6JCAeA,gBAAf,mrBCAeA,gBAAf,kgBCAeA,gBAAf,6JCAeA,gBAAf,qiBCAeA,gBAAf,oxBCAeA,gBAAf,qJCAeA,gBAAf,uzBCAeA,gBAAf,6/CCAeA,gBAAf,iJCAeA,gBAAf,0hDCAeA,gBAAf,o4CCAeA,gBAAf,2JCAeA,gBAAf,w3CCAeA,gBAAf,6zBCAeA,gBAAf,2JCAeA,gBAAf,g2BCAeA,gBAAf,o4BCAeA,gBAAf,yKCAeA,gBAAf,u6BCAeA,gBAAf,krBCAeA,gBAAf,2JCAeA,gBAAf,qqBCAeA,gBAAf,8yBCAeA,gBAAf,+uCCAeA,gBAAf,kmBCAeA,gBAAf,qJCAeA,gBAAf,o9BCAeA,gBAAf,wHCAeA,gBAAf,sJCAeA,ICAAA,aAAf,4HDAeA,aAAf,8iBEAeA,gBAAf,+JCAeA,ICAAA,aAAf,4wCCAeA,aAAf,mzCCAeA,aAAf,2KHAeA,aAAf,waIAeA,gBAAf,0cCAeA,gBAAf,6JCAeA,gBAAf,6uBCAeA,gBAAf,gxBCAeA,gBAAf,6JCAeA,gBAAf,oRCAeA,gBAAf,+LCDaC,GAAe,SAACC,EAAcC,GACzC,QAAKD,IAGS,OAAVC,GACFzB,aAAa0B,WAAWF,IACjB,IAETxB,aAAa2B,QAAQH,EAAMrB,KAAKyB,UAAUH,KACnC,KAGII,GAAe,SAACL,EAAcM,GACzC,IAAKN,EACH,OAAO,KAET,IAAMC,EAAQzB,aAAaC,QAAQuB,GACnC,OAAIC,EACKtB,KAAKC,MAAMqB,GAEdK,IAEsB,IADAP,GAAaC,EAAMM,GAElCA,EAIN,MC5BIC,GAAY,CACvBC,KAAM,KACNC,QAAS,IACTC,KAAM,KACN7B,MAAO,KACP8B,SAAU,CACRC,SAAU,GACVC,MAAO,IACPC,IAAK,MAEPC,QAAS,KACTC,OAAQ,KACRC,SAAU,sBCTCC,GAAe,SAACC,EAAmBC,GAC9C,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,6BAAKF,GAAZ,IAAmBX,KAAMY,EAAOE,UAClC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBR,SAAUS,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBV,QAASW,EAAOE,UACrC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBJ,QAASK,EAAOE,UACrC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmBH,OAAQI,EAAOE,UACpC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBF,SAAUG,EAAOE,UACtC,IAAK,QACH,OAAO,6BACFH,GADL,IAEET,KAAMU,EAAOE,QAAQZ,KACrB7B,MAAOuC,EAAOE,QAAQzC,QAE1B,IAAK,SACH,OAAO,6BAAKsC,GAAZ,IAAmBT,KAAM,KAAM7B,MAAO,OAExC,QACE,MAAM,IAAI0C,MAAM,uB,+JCxBTC,GAAU,CACrBC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,GAAI,KACJC,IAAK,MACLC,IAAK,OAGMC,GACL,OADKA,GAEN,MAFMA,GAGL,OAHKA,GAKH,SA8FGC,GAAe,SAACxB,GAC3B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAMwB,cAGFC,GAAgB,SAACzB,GAAe,IAAD,IAC1C,OAAW,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OAAsBxB,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAMuB,aAA5B,iBAAsB,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAA1C,aAAsB,EAA6BC,QAG/CC,GAAgB,SAAC5B,EAAW6B,GAAoB,IAAD,UAC1D,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,EAAcvB,EAAK0B,eAFnB,iBAEA,EAA6BG,UAF7B,aAEA,EAAsCF,QAa7BG,GAAW,SAAC9B,EAAW6B,GAAoB,IAAD,sBACrD,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAFpB,iBAEA,EAA8BG,UAF9B,aAEA,EAAuCF,SAFvC,OAGA3B,QAHA,IAGAA,GAHA,UAGAA,EAAMuB,aAHN,iBAGA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAHpB,iBAGA,EAA8BG,UAH9B,aAGA,EAAwCN,OAHxC,OAIAvB,QAJA,IAIAA,GAJA,UAIAA,EAAMuB,aAJN,iBAIA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAJpB,iBAIA,EAA8BG,UAJ9B,aAIA,EAAwCN,MAG/BQ,GAAiB,SAAC/B,EAAW6B,GAAoB,IAAD,sBAC3D,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAFpB,iBAEA,EAA8BG,UAF9B,aAEA,EAAuCF,SAFvC,OAGA3B,QAHA,IAGAA,GAHA,UAGAA,EAAMuB,aAHN,iBAGA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAHpB,iBAGA,EAA8BG,UAH9B,aAGA,EAAwCN,OAHxC,OAIAvB,QAJA,IAIAA,GAJA,UAIAA,EAAMuB,aAJN,iBAIA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAJpB,iBAIA,EAA8BG,UAJ9B,aAIA,EAAwCN,MAe/BS,GAAW,SAAChC,EAAW6B,GAAoB,IAAD,kCACrD,OACM,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,gBAAN,OACAxB,QADA,IACAA,GADA,UACAA,EAAMuB,aADN,iBACA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eADpB,aACA,EAA6BC,SAD7B,OAEA3B,QAFA,IAEAA,GAFA,UAEAA,EAAMuB,aAFN,iBAEA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAFpB,iBAEA,EAA8BG,UAF9B,aAEA,EAAuCF,SAFvC,OAGA3B,QAHA,IAGAA,GAHA,UAGAA,EAAMuB,aAHN,iBAGA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAHpB,iBAGA,EAA8BG,UAH9B,aAGA,EAAwCN,OAHxC,OAIAvB,QAJA,IAIAA,GAJA,UAIAA,EAAMuB,aAJN,iBAIA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eAJpB,iBAIA,EAA8BG,UAJ9B,aAIA,EAAwCN,OAJxC,OAKAvB,QALA,IAKAA,GALA,UAKAA,EAAMuB,aALN,iBAKA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eALpB,iBAKA,EAA8BG,UAL9B,aAKA,EAAwCN,OALxC,OAMAvB,QANA,IAMAA,GANA,UAMAA,EAAMuB,aANN,iBAMA,SAAcvB,QAAd,IAAcA,OAAd,EAAcA,EAAM0B,eANpB,iBAMA,EAA8BG,UAN9B,aAMA,EAAwCN,MA8B/BU,GACC,aADDA,GAEE,cAFFA,GAGD,WAHCA,GAID,WAGCC,GAAY,SAACC,EAAcnC,GACtC,OAAQmC,GACN,KAAKF,GACH,OAAOT,GAAaxB,GACtB,KAAKiC,GACH,OAAOR,GAAczB,GACvB,KAAKiC,GACH,OAAOL,GAAc5B,EAAMc,GAAQC,KACrC,KAAKkB,GACH,OAAOL,GAAc5B,EAAMc,GAAQE,KAErC,QACE,OAAO,kBAAM,QC/NNoB,GAAW,CACtB,CACEC,GAAI,EACJ/C,KAAM,OACNhB,IAAK,IACLgE,QAAS,mDACTC,QAAS,OACTC,KAAM,OACNC,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,EACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,6CACTC,QAAS,WACTC,KAAM,WACNC,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,EACJ/C,KAAM,eACNhB,IAAK,eACLgE,QAAS,kFACTC,QAAS,eACTC,KAAM,QACNC,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,IACJ/C,KAAM,QACNhB,IAAK,QACLgE,QAAS,sEACTC,QAAS,aACTC,KAAM,OACNC,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,EACJ/C,KAAM,QACNhB,IAAK,QACLgE,QAAS,kFACTC,QAAS,QACTC,KAAM,QACNC,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,EACJ/C,KAAM,UACNhB,IAAK,UACLgE,QAAS,4EACTC,QAAS,UACTC,KAAM,UACNC,IAAK,MACLC,IAAK,KACLC,QAAS,CACP,CACEN,GAAI,GACJ/C,KAAM,OACNhB,IAAK,OACLgE,QAAS,4EACTC,QAAS,OACTC,KAAM,UACNC,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,wFACTC,QAAS,WACTC,KAAM,UACNC,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,wFACTC,QAAS,WACTC,KAAM,WACNC,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,aACNhB,IAAK,aACLgE,QAAS,2GACTC,QAAS,qBACTC,KAAM,UACNC,IAAK,KACLC,IAAK,QAKX,CACEL,GAAI,EACJ/C,KAAM,UACNhB,IAAK,UACLgE,QAAS,mDACTC,QAAS,UACTC,KAAM,SACNC,IAAK,KACLC,IAAK,KACLC,QAAS,CACP,CACEN,GAAI,GACJ/C,KAAM,eACNhB,IAAK,eACLgE,QAAS,4EACTC,QAAS,qBACTK,OAAQ,EACRH,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,GACJ/C,KAAM,aACNhB,IAAK,aACLgE,QAAS,kFACTC,QAAS,kBACTE,IAAK,MACLC,IAAK,OAEP,CACEL,GAAI,GACJ/C,KAAM,cACNhB,IAAK,cACLgE,QAAS,wFACTC,QAAS,eACTJ,KAAMF,GACNW,OAAQ,EACRH,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,iBACNhB,IAAK,iBACLgE,QAAS,4EACTC,QAAS,kBACTJ,KAAMF,GACNW,OAAQ,EACRH,IAAK,MACLC,IAAK,MAGP,CACEL,GAAI,GACJ/C,KAAM,iBACNhB,IAAK,iBACLgE,QAAS,wFACTC,QAAS,kBACTK,OAAQ,EACRH,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,gBACNhB,IAAK,gBACLgE,QAAS,kFACTC,QAAS,iBACTJ,KAAMF,GACNW,OAAQ,EACRH,IAAK,KACLC,IAAK,QAKX,CACEL,GAAI,EACJ/C,KAAM,OACNhB,IAAK,OACLgE,QAAS,mDACTC,QAAS,YACTC,KAAM,MACNC,IAAK,KACLC,IAAK,KACLC,QAAS,CACP,CACEN,GAAI,GACJ/C,KAAM,YACNhB,IAAK,YACLgE,QAAS,6CACTC,QAAS,YACTK,OAAQ,EACRH,IAAK,MACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,cACNhB,IAAK,cACLgE,QAAS,6CACTC,QAAS,cACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,YACNhB,IAAK,YACLgE,QAAS,mDACTC,QAAS,YACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,YACNhB,IAAK,YACLgE,QAAS,6CACTC,QAAS,YACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAEP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,6CACTC,QAAS,WACTK,OAAQ,EACRH,IAAK,KACLC,IAAK,MAkCP,CACEL,GAAI,GACJ/C,KAAM,WACNhB,IAAK,WACLgE,QAAS,mDACTC,QAAS,WACTC,KAAM,UACNI,OAAQ,EACRT,KAAMF,GACNQ,IAAK,KACLC,IAAK,QAIX,CACEL,GAAI,EACJ/C,KAAM,QACNhB,IAAK,QACLgE,QAAS,+DACTC,QAAS,QACTJ,KAAMF,GACNO,KAAM,OACNC,IAAK,KACLC,IAAK,MAGP,CACEL,GAAI,GACJ/C,KAAM,UACNhB,IAAK,UACLgE,QAAS,yDACTC,QAAS,UACTC,KAAM,UACNC,IAAK,KACLC,IAAK,OAylBIG,GAAe,CAC1B9B,IAAK,CACHzB,KAAM,WACNwD,OAAQ,6EAEV9B,IAAK,CACH1B,KAAM,QACNwD,OAAQ,6EAEV7B,IAAK,CACH3B,KAAM,WACNwD,OAAQ,mFAEV5B,IAAK,CACH5B,KAAM,WACNwD,OAAQ,mFAEV3B,IAAK,CACH7B,KAAM,YACNwD,OAAQ,uEAEV1B,GAAI,CACF9B,KAAM,kBACNwD,OAAQ,kHAEVzB,IAAK,CACH/B,KAAM,oBACNwD,OAAQ,sGAEVxB,IAAK,CACHhC,KAAM,qBACNwD,OAAQ,mHCr1BCC,GAAS,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCnIWC,GAAc,IAEdC,IAAS1E,EAIT2E,GAAqB,CAChCC,UAAW,EACXC,iBAAkB,KAClBC,cAAc,G,kBCNVC,GAAc,0GAEdC,GAAcC,OAAaC,MAAM,CACrCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,aAEVG,GAAgB,CAAEC,SAAUC,aAAYR,KAE/CS,GAAcR,OAAaC,MAAM,CACrCQ,SAAUT,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7CM,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAElCO,GAAgB,CAAEL,SAAUC,aAAYC,KAE/CI,GAAYZ,OAAaC,MAAM,CACnCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,aAEVW,GAAc,CAAEP,SAAUC,aAAYK,KAE7CE,GAAed,OAAaC,MAAM,CACtCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WACrBa,MAAOf,OAAaE,aAETc,GAAiB,CAAEV,SAAUC,aAAYO,KAEhDG,GAAajB,OAAaC,MAAM,CACpCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WACrBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,WACHkB,MAAOpB,OAAaoB,UAETC,GAAe,CAAEf,SAAUC,aAAYU,KAC9CK,GAAYtB,OAAaC,MAAM,CACnCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WACrBqB,MAAOvB,OAAaG,IAAI,GAAGD,aAEhBsB,GAAc,CAAElB,SAAUC,aAAYe,KAE7CG,GAAazB,OAAaC,MAAM,CACpCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WACrBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,WACHa,MAAOf,OAAaE,aAETwB,GAAe,CAAEpB,SAAUC,aAAYkB,KAE9CE,GAAgB3B,OAAaC,MAAM,CACvCsB,MAAOvB,OAAaG,IAAI,GAAGD,WAC3B0B,IAAK5B,OAAaG,IAAI,GAAGD,aAEd2B,GAAkB,CAAEvB,SAAUC,aAAYoB,K,SC3D1CG,GAAiB,CAE5BC,aAAc,GACdC,eAAgB,GAChBC,cAAe,GACfC,YAAa,GACbC,gBAAiB,GACjBC,iBAAkB,GAElBC,gBAAiB,GACjBC,cAAe,GACfC,iBAAkB,GAClBC,eAAgB,GAChBC,gBAAiB,GACjBC,iBAAkB,GAElBC,gBAAiB,GACjBC,iBAAkB,GAElBC,SAAU,GAIVC,QAAS,GACTC,UAAW,GACXC,aAAc,GAEdC,MAAO,GACPC,KAAM,GACNC,QAAS,GAGTC,KAAM,IAGKC,GAAe,CAC1BC,GAAI,CACFxH,KAAM,UACNwD,OAAQ,uCACRiE,IAAK,gBAEPC,GAAI,CACF1H,KAAM,YACNwD,OAAQ,wCACRiE,IAAK,kBAEPE,GAAI,CACF3H,KAAM,iBACNwD,OAAQ,oDACRiE,IAAK,iBAEPG,GAAI,CACF5H,KAAM,eACNwD,OAAQ,sEACRiE,IAAK,eAEPI,GAAI,CACF7H,KAAM,UACNwD,OAAQ,wCACRiE,IAAK,mBAEPK,GAAI,CACF9H,KAAM,iBACNwD,OAAQ,0DACRiE,IAAK,oBAEPM,GAAI,CACF/H,KAAM,mBACNwD,OAAQ,gEACRiE,IAAK,mBAEPO,GAAI,CACFhI,KAAM,iBACNwD,OAAQ,8CACRiE,IAAK,iBAEPQ,GAAI,CACFjI,KAAM,oBACNwD,OAAQ,0DACRiE,IAAK,oBAEPS,GAAI,CACFlI,KAAM,kBACNwD,OAAQ,4EACRiE,IAAK,kBAEPU,GAAI,CACFnI,KAAM,UACNwD,OAAQ,wCACRiE,IAAK,mBAEPW,GAAI,CACFpI,KAAM,oBACNwD,OAAQ,gEACRiE,IAAK,oBAEPY,GAAI,CACFrI,KAAM,WACNwD,OAAQ,oDACRiE,IAAK,mBAEPa,GAAI,CACFtI,KAAM,YACNwD,OAAQ,oDACRiE,IAAK,oBAEPc,GAAI,CACFvI,KAAM,WACNwD,OAAQ,uCACRiE,IAAK,YAEPe,GAAI,CACFxI,KAAM,UACNwD,OAAQ,iCACRiE,IAAK,WAEPgB,GAAI,CACFzI,KAAM,iBACNwD,OAAQ,gDACRiE,IAAK,aAEPiB,GAAI,CACF1I,KAAM,oBACNwD,OAAQ,4DACRiE,IAAK,gBAEPkB,GAAI,CACF3I,KAAM,cACNwD,OAAQ,2BACRiE,IAAK,SAEPmB,GAAI,CACF5I,KAAM,iBACNwD,OAAQ,oDACRiE,IAAK,SAsDIoB,GAAgB,CAC3BC,EAAG,YACHC,EAAG,YACHC,EAAG,UACHC,EAAG,WACHzB,GAAI,aAEO0B,GAAgB,CAC3BJ,EAAG,uEACHC,EAAG,oDACHC,EAAG,oDACHC,EAAG,oDACHzB,GAAI,qDAEO2B,GAAc,CACzB,CAAEpG,GAAI,EAAG/C,KAAM,YAAawD,OAAQ,uEAAiByB,MAAO,WAC5D,CAAElC,GAAI,EAAG/C,KAAM,YAAawD,OAAQ,oDAAayB,MAAO,WACxD,CAAElC,GAAI,EAAG/C,KAAM,UAAWwD,OAAQ,oDAAayB,MAAO,WACtD,CAAElC,GAAI,EAAG/C,KAAM,WAAYwD,OAAQ,oDAAayB,MAAO,WACvD,CAAElC,GAAI,GAAI/C,KAAM,YAAawD,OAAQ,oDAAayB,MAAO,YAyD9CmE,GAAc,CACzBN,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHzB,GAAI,WAGO6B,GAAW,CACtBC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,GAEMC,GAAc,CACzBC,EAAG,MACHC,EAAG,MACHjB,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHe,EAAG,OAGQC,GAAc,CACzBX,IAAK,CACHvG,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,iCACR0G,MAAO,OAETX,IAAK,CACHxG,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,iCACR0G,MAAO,OAETV,IAAK,CACHzG,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,6CACR0G,MAAO,OAETT,IAAK,CACH1G,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,mDACR0G,MAAO,OAETR,IAAK,CACH3G,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,mDACR0G,MAAO,OAETP,IAAK,CACH5G,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,uCACR0G,MAAO,OAETN,IAAK,CACH7G,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACR0G,MAAO,QAIEC,GAAW,CACtB,CACEpH,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,iCACR0G,MAAO,OAET,CACEnH,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,iCACR0G,MAAO,OAET,CACEnH,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,6CACR0G,MAAO,OAET,CACEnH,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,mDACR0G,MAAO,OAET,CACEnH,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,mDACR0G,MAAO,OAET,CACEnH,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,uCACR0G,MAAO,OAET,CACEnH,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACR0G,MAAO,QCzXEE,GAAkBC,yBAAmC,IAEnDD,MCFFE,GAAe,CAC1BC,iBAAkB,SAClBC,gBAAiB,OACjBC,YAAa,IAAIC,KACjBC,YAAa,KACbC,UAAW,KACXC,OAAQ,KACRC,KAAM,KACNC,KAAM,CAAC,CAAEC,WAAY,YAAaxP,UAAW,UAGlCyP,GAAkB,SAAC9J,EAAsBC,GACpD,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,iBAAkBnJ,EAAOE,UAC9C,IAAK,qBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmB0J,OAAQzJ,EAAOE,UACpC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB2J,KAAM1J,EAAOE,UAClC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAElC,QACE,MAAM,IAAIC,MAAM,uBC7BP2J,GAFcb,yBAAwC,ICAxDc,GAAoB,CAC/BX,gBAAiB,OACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,YAAaxP,UAAW,UAGlC6P,GAAgB,SAAClK,EAA2BC,GACvD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBChBP+J,GAFejB,yBAAwC,ICAzDkB,GAAqB,CAChCf,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,QAAS,OACTC,OAAO,EACPC,UAAW,WACXf,KAAM,CAAC,CAAEC,WAAY,OAAQxP,UAAW,UAG7BuQ,GAAiB,SAAC5K,EAA2BC,GACxD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBqK,aAAcpK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBsK,UAAWrK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBwK,SAAUvK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBC3CPyK,GAFe3B,yBAAwC,ICAzD4B,GAAqB,CAChCzB,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,QAAS,OACTC,OAAO,EACPC,UAAW,WACXf,KAAM,CAAC,CAAEC,WAAY,OAAQxP,UAAW,UAG7B0Q,GAAiB,SAAC/K,EAA2BC,GACxD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBqK,aAAcpK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBsK,UAAWrK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBwK,SAAUvK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCzCP4K,GAJsB9B,yBACnC,ICDW+B,GAA4B,CACvC5B,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,QAAS,OACTC,OAAO,EACPC,UAAW,WACXf,KAAM,CAAC,CAAEC,WAAY,OAAQxP,UAAW,UAG7B6Q,GAAwB,SACnClL,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBqK,aAAcpK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBsK,UAAWrK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBwK,SAAUvK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBC5CP+K,GAJsBjC,yBACnC,ICDWkC,GAA4B,CACvC/B,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,QAAS,OACTC,OAAO,EACPC,UAAW,WACXf,KAAM,CAAC,CAAEC,WAAY,OAAQxP,UAAW,UAG7BgR,GAAwB,SACnCrL,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBqK,aAAcpK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBsK,UAAWrK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBwK,SAAUvK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBC9CPkL,GAFgBpC,yBAAwC,ICA1DqC,GAAsB,CACjClC,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,OAAQxP,UAAW,UAG7BmR,GAAkB,SAACxL,EAA2BC,GACzD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBChBPqL,GAFcvC,yBAAmC,ICEjDwC,GAFaxC,yBAAwC,ICAvDyC,GAAmB,CAC9BtC,gBAAiB,MACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,OAAQxP,UAAW,UAG7BuR,GAAe,SAAC5L,EAA2BC,GACtD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCdPyL,ICFA,IAAItC,KACR,IAAIA,KDHmBL,yBAChC,KEDW4C,GAAyB,CACpCzC,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVE,QAAS,OACTC,OAAO,EACPC,UAAW,OACXf,KAAM,CAAC,CAAEC,WAAY,SAAUxP,UAAW,SAC1C0R,SAAU,MAGCC,GAAqB,SAAChM,EAA2BC,GAC5D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBqK,aAAcpK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBsK,UAAWrK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmB+L,SAAU9L,EAAOE,UACtC,QACE,MAAM,IAAIC,MAAM,uBCzCP6L,GAJsB/C,yBAEnC,ICFWgD,GAA4B,CACvC7C,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACX0C,UAAW,GACX5B,SAAU,GACV6B,WAAY,GACZ3B,QAAS,OACTC,OAAO,EACPC,UAAW,OACXf,KAAM,CAAC,CAAEC,WAAY,SAAUxP,UAAW,UAG/BgS,GAAwB,SACnCrM,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBqK,aAAcpK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,gBACH,OAAO,6BAAKH,GAAZ,IAAmBmM,UAAWlM,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,gBACH,OAAO,6BAAKH,GAAZ,IAAmBoM,WAAYnM,EAAOE,UACxC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uB,QCyEPkM,GArGD,SAACzT,GACb,IAAM0T,EAAUpR,KADiB,EAGPqR,oBAAS,MAHF,oBAG1BC,EAH0B,KAGnBC,EAHmB,OAKeC,aAAQ5J,EAAIW,eAApDkJ,EALyB,EAKzBA,SAAUC,EALe,EAKfA,aAAcC,EALC,EAKDA,OALC,EASdC,sBAAWtB,IAF5BuB,EAP+B,EAO/BA,SACaC,EARkB,EAQ/BC,UAAaD,MARkB,EAUfE,aAAYC,IAAvBC,EAV0B,qBAY3BC,EAAQ,yCAAG,WAAOC,GAAP,wCAAAC,EAAA,6DACPhK,EAAuB+J,EAAvB/J,SAAUC,EAAa8J,EAAb9J,SADH,SAEQ4J,EAAQ,CAAEI,UAAW,CAAEjK,WAAUC,cAFzC,WAGmB,KAAtB,QADNiK,EAFS,cAGH,IAARA,GAAA,UAAAA,EAAU/D,YAAV,mBAAgByD,aAAhB,eAAuBO,IAHZ,0BAI+BD,EAAS/D,KAAKyD,MAAlDzD,EAJK,EAILA,KAAMiE,EAJD,EAICA,YAAaC,EAJd,EAIcA,aACrBtO,EALO,6BAMRoK,GANQ,IAOX7I,MAAOtD,KAAKC,MAAMkM,EAAK7I,SAPZ,SASPzC,GAAOyP,aATA,OAUPpQ,EAAQF,KAAKyB,UAAU,CAAE2O,cAAaC,iBAC5Cb,EAAS,CAAE9M,KAAM,QAASC,QAAS,CAAEZ,OAAM7B,WAC3CqQ,OAAOC,SAASC,SAChBvB,EAAS,MAbI,yBAc0B,KAAtB,OAARgB,QAAQ,IAARA,GAAA,UAAAA,EAAU/D,YAAV,mBAAgByD,aAAhB,eAAuBO,KAChCjB,EAASgB,EAAS/D,KAAKyD,MAAMX,OAfhB,4CAAH,sDAmBRyB,EAAW,SAACC,GACE,KAAdA,EAAEC,SACJvB,EAAaS,EAAbT,IAIJ,OACE,qCACE,gBAACwB,GAAA,EAAD,CAAWC,UAAU,OAAO3R,SAAS,KAArC,UACE,eAAC4R,GAAA,EAAD,IACA,uBAAKC,UAAWjC,EAAQjR,MAAxB,UACE,eAACmT,GAAA,EAAD,CAAQD,UAAWjC,EAAQ3Q,OAA3B,SACE,eAAC,KAAD,MAEF,eAAC8S,GAAA,EAAD,CAAYJ,UAAU,KAAKxU,QAAQ,KAAnC,SACGmT,EAAQ,sEAAiB,YAG5B,wBAAMuB,UAAWjC,EAAQzQ,KAAM6S,YAAU,EAAzC,UACE,eAACC,GAAA,EAAD,CACEC,WAAS,EACTC,MAAO7B,EAAQ,sEAAiB,WAChCpO,KAAK,WACL/E,QAAQ,WACRiV,SAAUnC,EACVH,QAAOK,EAAOtJ,SACdwL,UAAWd,EACXjL,UAAQ,EACRgM,WAAS,IAEX,eAACL,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAO7B,EAAQ,gEAAgB,WAC/B/M,KAAK,WACLpG,QAAQ,WACRiV,SAAUnC,EACVH,QAAOK,EAAOrJ,SACduL,UAAWd,EACXgB,WAAYzC,QAAgB0C,EAC5BlM,UAAQ,EACRgM,WAAS,IAGX,eAACG,GAAA,EAAD,CACElP,KAAK,SACL+O,WAAS,EACTnV,QAAQ,YACRgK,MAAM,UACN0K,UAAWjC,EAAQvQ,OACnBqT,MAAO,CAAE3S,OAAQ,IACjB4S,QAASzC,EAAaS,GAPxB,SASGL,EAAQ,sEAAiB,gBAIhC,eAACsC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,gBAACd,GAAA,EAAD,CAAY5U,QAAQ,QAAQgK,MAAM,gBAAgB2L,MAAM,SAAxD,UACG,kBACD,eAACC,GAAA,EAAD,CAAM5L,MAAM,UAAU6L,KAAK,yBAA3B,wBAEQ,KACP,IAAIpG,MAAOqG,cACX,e,sjBC9FE,SAASC,GAAT,GAA6C,IAA3B9N,EAA0B,EAA1BA,KAAM+B,EAAoB,EAApBA,MAAO/K,EAAa,EAAbA,KACtCsW,EAAQ,CAAEvL,QAAOtJ,SAAUzB,QAAcoW,GAC/C,OAAQpN,GACN,IAAK,OACH,OAAO,eAAC,KAAD,CAAsBsN,MAAOA,IACtC,IAAK,WACH,OAAO,eAAC,KAAD,CAAmBA,MAAOA,IACnC,IAAK,QACH,OAAO,eAAC,KAAD,CAAyBA,MAAOA,IACzC,IAAK,WACH,OAAO,eAAC,KAAD,CAAkBA,MAAOA,IAClC,IAAK,WACH,OAAO,eAAC,KAAD,CAAaA,MAAOA,IAC7B,IAAK,YACH,OAAO,eAAC,KAAD,CAAwBA,MAAOA,IACxC,IAAK,UACH,OAAO,eAAC,KAAD,CAAaA,MAAOA,IAC7B,IAAK,MACH,OAAO,eAAC,KAAD,CAAQA,MAAOA,IACxB,IAAK,OACH,OAAO,eAAC,KAAD,CAAYA,MAAOA,IAC5B,IAAK,UACH,OAAO,eAAC,KAAD,CAAcA,MAAOA,IAC9B,IAAK,OACH,OAAO,eAAC,KAAD,CAAyBA,MAAOA,IACzC,IAAK,OACH,OAAO,eAAC,KAAD,CAAqBA,MAAOA,IACrC,IAAK,OACH,OACE,eAAC,KAAD,CAA4BA,MAAOA,IAEvC,IAAK,UACH,OACE,eAAC,KAAD,CAA2BA,MAAOA,IAEtC,IAAK,WACH,OACE,eAAC,KAAD,CAA2BA,MAAOA,IAEtC,IAAK,QACH,OAAO,eAAC,KAAD,CAAmBA,MAAOA,IACnC,IAAK,SACH,OAAO,eAAC,KAAD,CAAgBA,MAAOA,IAChC,IAAK,UACH,OAAO,eAAC,KAAD,CAAoBA,MAAOA,IACpC,IAAK,SACH,OAAO,eAAC,KAAD,CAAeA,MAAOA,IAC/B,IAAK,OACH,OAAO,eAAC,KAAD,CAAUA,MAAOA,IAE1B,QACE,OAAO,0BC/DN,IAAMS,GAAa,SAAC/N,EAAW1G,EAAY0U,GAChD,IAAMjM,EAAQiM,EACVC,aAAK3U,EAAMR,QAAQG,UAAUD,KAAM,IACnCiV,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,IAC3C,OACE,eAAC+U,GAAA,EAAD,UACE,eAACJ,GAAD,CAAQ9N,KAAMA,EAAM+B,MAAOA,EAAO/K,KAAM,Q,oDCmD/BmX,GA1DE,SAAC,GAWN,IAVVC,EAUS,EAVTA,KACA5D,EASS,EATTA,QACAU,EAQS,EARTA,MACA5R,EAOS,EAPTA,MACA+U,EAMS,EANTA,QACAC,EAKS,EALTA,YACAC,EAIS,EAJTA,SAEA/Q,GAES,EAHTgR,EAGS,EAFThR,MACAiR,EACS,EADTA,cACS,EACeC,KAAMjE,UAAS,GAD9B,oBACFkE,EADE,KACIC,EADJ,KAMT,OACE,iCACE,gBAACC,GAAA,EAAD,CACEhP,GAAIuO,EAAKvO,GACTiP,IAAK5D,EAAQ,WAAQkC,EACrBX,UAAWjC,EAAQuE,MACnBxB,QAVc,WAClBqB,GAASD,IAULrB,MAAO,CAAE0B,OAAQ,WALnB,UAOGjB,GAAWK,EAAKpO,KAAM1G,GAAO,GAC9B,eAAC2V,GAAA,EAAD,CACElW,QAASmS,EAAQkD,EAAKtO,QAAUsO,EAAKrO,QACrC0M,UAAWvB,EAAQV,EAAQ0E,OAAS1E,EAAQ2E,OAC5C7B,MAAO,CAAEpV,YAAa,GAAIkX,WAAY,KAEvCT,EACC,eAAC,KAAD,CAAYrB,MAAO,CAAEvL,MAAO,OAAQtJ,SAAU,MAE9C,eAAC,KAAD,CAAY6U,MAAO,CAAEvL,MAAO,OAAQtJ,SAAU,SAGlD,eAAC4W,GAAA,EAAD,CAAUC,GAAIX,EAAMY,QAAQ,OAAOC,eAAa,EAAhD,SACE,eAACC,GAAA,EAAD,CAAMC,gBAAc,EAApB,SACGrB,EAAQsB,KAAI,SAACC,GAAD,OD5BI,SAAC,GAShB,IARV1E,EAQS,EARTA,MACAV,EAOS,EAPTA,QACA8D,EAMS,EANTA,YACAC,EAKS,EALTA,SACAH,EAIS,EAJTA,KACA9U,EAGS,EAHTA,MACAkE,EAES,EAFTA,KACAiR,EACS,EADTA,cAEMT,EAAaI,EAAKtR,OAASyR,EAASzR,KAE1C,OADasR,EAAKzO,MAAOD,GAAU0O,EAAKzO,KAAMnC,GAM5C,eAAC,KAAD,CACE8P,MAAO,CACLuC,eAAgB,OAChB9N,MAAOiM,EACH,OACAC,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,KAE7C2W,GAAE,UAAK1B,EAAKtS,KACZyR,QAAS,WACPe,EAAYF,GACRK,GACFA,GAAc,IAXpB,SAgBE,eAACI,GAAA,EAAD,CACEkB,QAAM,EACNtD,UAAWjC,EAAQwF,OACnB1C,MAAO,CACLxT,gBAAiBkU,EAAa1U,EAAMR,QAAQC,QAAQkX,UAAO7C,GAJ/D,SAOE,eAAC6B,GAAA,EAAD,CACElW,QAASmS,EAAQkD,EAAKtO,QAAUsO,EAAKrO,QACrCuN,MAAO,CACLvL,MAAOiM,EAAa1U,EAAMR,QAAQG,UAAUD,UAAOoU,QAZpDgB,EAAKvO,IAlBL,wBAAUuO,EAAKvO,ICgBdqQ,CAAY,CACVhF,QACAkD,KAAMwB,EACNpF,UACA8D,cACAC,WACAjV,QACAkE,OACAiR,6BCyCC0B,GA3FF,SAAC,GAYF,IAXVjF,EAWS,EAXTA,MACAqD,EAUS,EAVTA,SACAD,EASS,EATTA,YACA9D,EAQS,EARTA,QACAlR,EAOS,EAPTA,MACAkE,EAMS,EANTA,KACA4S,EAKS,EALTA,KACA3B,EAIS,EAJTA,cACA4B,EAGS,EAHTA,OACA/T,EAES,EAFTA,OACAgU,EACS,EADTA,QAEA,OACE,eAACb,GAAA,EAAD,UACGW,EAAKT,KAAI,SAACvB,EAAWI,GACpB,IAAMH,EAAUD,EAAKjO,QACf6N,EAAaI,EAAKtR,OAASyR,EAASzR,KAE1C,OADasR,EAAKzO,MAAOD,GAAU0O,EAAKzO,KAAMnC,GAK5C,kCACI6Q,GACA,eAAC,KAAD,CACEf,MAAO,CACLuC,eAAgB,OAChB9N,MAAOiM,EAAa,OAAS,QAE/B8B,GAAE,UAAK1B,EAAKtS,KACZyR,QAAO,wBAAE,uBAAA9B,EAAA,yDACS,KAAZ2C,EAAKvO,GADF,uBAELwQ,IAFK,SAGC/T,EAAOyP,aAHR,OAILuE,EAAQC,KAAK,KAJR,sBAMLjC,EAAYF,GACRK,GACFA,GAAc,GARX,2CANX,SAmBE,gBAACI,GAAA,EAAD,CACEC,IAAK5D,EAAQ,WAAQkC,EACrBX,UAAWjC,EAAQuE,MACnBzB,MAAO,CACL0B,OAAQ,UACRlV,gBAAiBkU,EACb1U,EAAMR,QAAQC,QAAQkX,UACtB7C,GAPR,UAUGW,GAAWK,EAAKpO,KAAM1G,EAAO0U,GAE9B,eAACiB,GAAA,EAAD,CACElW,QAASmS,EAAQkD,EAAKtO,QAAUsO,EAAKrO,QACrC0M,UAAWvB,EAAQV,EAAQ0E,OAAS1E,EAAQ2E,OAC5C7B,MAAO,CACL8B,WAAY,EACZrN,MAAOiM,EACH1U,EAAMR,QAAQG,UAAUD,UACxBoU,UAMbiB,GACC,eAAC,GAAD,CACED,KAAMA,EACN5D,QAASA,EACTwD,WAAYA,EACZ9C,MAAOA,EACP5R,MAAOA,EACP+U,QAASA,EACTG,EAAGA,EACHF,YAAaA,EACbC,SAAUA,EACV/Q,KAAMA,EACNiR,cAAeA,MA1DXL,EAAKvO,IAHR,wBAAUuO,EAAKvO,U,wEC1BnB2Q,GAAc,SAAC1T,GAAkD,IAApC2T,EAAmC,uDAAvB,GAAIC,EAAmB,uDAAP,GACpE,IAAK5T,EAAM,MAAO,OAElB,IADA,IAAI6T,EAAO,EACFnC,EAAI,EAAGA,EAAI1R,EAAK8T,OAAQpC,IAC/BmC,EAAO7T,EAAK+T,WAAWrC,KAAOmC,GAAQ,GAAKA,GAG7C,IAAMG,EAAIH,EAAO,IACjB,MAAO,OAASG,EAAI,KAAOL,EAAI,MAAQC,EAAI,MCAhCK,GAEN,MAFMA,GAGN,MAHMA,GAIN,MAJMA,GAKN,MALMA,GAON,MAPMA,GAQN,MAGMC,GAAY,CACvB,CACEnR,GAAI,EACJ/C,KAAM,kBACNwD,OAAQ,qDAEV,CACET,GAAI,EACJ/C,KAAM,qBACNwD,OAAQ,6EAEV,CACET,GAAI,EACJ/C,KAAM,kBACNwD,OAAQ,wEAIC2Q,GAAc,SAAC,GAAmB,IAAjBpR,EAAgB,EAAhBA,GAAIqL,EAAY,EAAZA,MAC1BgG,EAAWF,GAAUG,QAAO,SAACC,GAAD,OAAaA,EAAGvR,KAAOA,KACzD,OAAIqR,GAAYA,EAASN,OAAS,EACzB1F,EAAQgG,EAAS,GAAG5Q,OAAS4Q,EAAS,GAAGpU,KAEzC,IC7CEuU,GACJ,EADIA,GAEH,EAEGC,GACJ,EADIA,GAEH,EAGGC,GACG,EADHA,GAEO,EAGPC,GACL,EADKA,GAEU,EAFVA,GAQgB,EARhBA,GAeD,GAECC,GAAe,CAC1B7L,EAAG,CAAEzE,IAAK,IAAMC,IAAK,MACrByE,EAAG,CAAE1E,IAAK,KAAMC,IAAK,MACrB0E,EAAG,CAAE3E,IAAK,KAAMC,IAAK,MACrB2E,EAAG,CAAE5E,IAAK,KAAMC,IAAK,MACrB0F,EAAG,CAAE3F,IAAK,KAAMC,IAAK,MACrBwF,EAAG,CAAEzF,IAAK,KAAMC,IAAK,MACrBsQ,EAAG,CAAEvQ,IAAK,IAAMC,IAAK,MACrBuQ,EAAG,CAAExQ,IAAK,KAAMC,IAAK,MACrBwQ,EAAG,CAAEzQ,IAAK,KAAMC,IAAK,MACrBkD,GAAI,CAAEnD,IAAK,IAAMC,IAAK,MACtBoD,GAAI,CAAErD,IAAK,KAAMC,IAAK,MACtBqD,GAAI,CAAEtD,IAAK,KAAMC,IAAK,MACtBsD,GAAI,CAAEvD,IAAK,IAAMC,IAAK,MACtBuD,GAAI,CAAExD,IAAK,IAAMC,IAAK,MACtBwD,GAAI,CAAEzD,IAAK,IAAMC,IAAK,OAGXyQ,GAAkB,CAC7BC,KAAM,CACJC,WAAYP,GACZQ,OAAQ,OACRC,SAAU,6CACVC,QAASZ,GACTa,UAAWZ,IAEba,oBAAqB,CACnBL,WAAYP,GACZQ,OAAQ,sBACRC,SAAU,mDACVC,QAASZ,GACTa,UAAWZ,IAEbc,UAAW,CACTN,WAhDS,EAiDTC,OAAQ,YACRC,SAAU,6CACVC,QAASZ,GACTa,UAAWZ,IAEbe,qBAAsB,CACpBP,WAtDoB,EAuDpBC,OAAQ,uBACRC,SAAU,+FACVC,QAASZ,GACTa,UAAWZ,IAEbgB,aAAc,CACZR,WA5DY,EA6DZC,OAAQ,eACRC,SAAU,kFACVC,QAASZ,GACTa,UAAWZ,IAEbiB,yBAA0B,CACxBT,WAlEwB,EAmExBC,OAAQ,2BACRC,SAAU,kFACVC,QAASZ,GACTa,UAAWZ,IAEbkB,iBAAkB,CAChBV,WAxEgB,EAyEhBC,OAAQ,mBACRC,SAAU,mDACVC,QAASZ,GACTa,UAAWZ,IAEbmB,0BAA2B,CACzBX,WAAYP,GACZQ,OAAQ,4BACRC,SAAU,+FACVC,QAASZ,GACTa,UAAWZ,IAEboB,sBAAuB,CACrBZ,WApFqB,EAqFrBC,OAAQ,wBACRC,SAAU,yFACVC,QAASZ,GACTa,UAAWZ,IAEbqB,yBAA0B,CACxBb,WA1FwB,GA2FxBC,OAAQ,2BACRC,SAAU,oKACVC,QAASZ,GACTa,UAAWZ,IAEbsB,oBAAqB,CACnBd,WAhGmB,GAiGnBC,OAAQ,sBACRC,SAAU,sIACVC,QAASZ,GACTa,UAAWZ,IAEbuB,mBAAoB,CAClBf,WAtGkB,GAuGlBC,OAAQ,qBACRC,SAAU,mHACVC,QAASZ,GACTa,UAAWZ,IAEbwB,OAAQ,CACNhB,WA5GM,GA6GNC,OAAQ,SACRC,SAAU,yDACVC,QAASZ,GACTa,UAAWZ,IAEbyB,cAAe,CACbjB,WAlHa,GAmHbC,OAAQ,gBACRC,SAAU,kFACVC,QAASZ,GACTa,UAAWZ,IAEb0B,SAAU,CACRlB,WAAYP,GACZQ,OAAQ,WACRC,SAAU,mDACVC,QAASZ,GACTa,UAAWZ,KAIF2B,GAAsB,CAAC,gBAC7BrB,GAAgBC,MADY,gBAE5BD,GAAgBO,qBAFY,gBAG5BP,GAAgBQ,WAHY,gBAI5BR,GAAgBS,sBAJY,gBAK5BT,GAAgBU,cALY,gBAM5BV,GAAgBW,0BANY,gBAO5BX,GAAgBY,kBAPY,gBAQ5BZ,GAAgBa,2BARY,gBAS5Bb,GAAgBc,uBATY,gBAU5Bd,GAAgBe,0BAVY,gBAW5Bf,GAAgBgB,qBAXY,gBAY5BhB,GAAgBiB,oBAZY,gBAa5BjB,GAAgBkB,QAbY,gBAc5BlB,GAAgBmB,eAdY,gBAe5BnB,GAAgBoB,WAGVE,GAA2B,CAAC,gBAClCtB,GAAgBC,MADiB,gBAEjCD,GAAgBa,4BAEVU,GAA2B,CAAC,gBAClCvB,GAAgBO,qBADiB,gBAEjCP,GAAgBmB,eAFiB,gBAGjCnB,GAAgBkB,SAGVM,GAAyB,CAAC,gBAAKxB,GAAgBY,mBAC/Ca,GAAyB,CAAC,gBAAKzB,GAAgBoB,WAC/CM,GAAyB,CAAC,gBAAK1B,GAAgBQ,YAE/CmB,GAA6B,CAAC,gBACpC3B,GAAgBS,sBADmB,gBAEnCT,GAAgBU,cAFmB,gBAGnCV,GAAgBW,0BAHmB,gBAInCX,GAAgBc,uBAJmB,gBAKnCd,GAAgBe,0BALmB,gBAMnCf,GAAgBgB,qBANmB,gBAOnChB,GAAgBiB,qBAGVW,GACG,IADHA,GAEL,KAFKA,GAGL,KAHKA,GAIU,KAJVA,GAKA,KALAA,GAMO,IANPA,GAQG,IARHA,GASQ,KATRA,GAUO,KAVPA,GAWS,KAXTA,GAaO,KAbPA,GAcU,KAdVA,GAeI,IAfJA,GAgBQ,KAhBRA,GAiBK,KAjBLA,GAkBI,KAlBJA,GAmBU,KAnBVA,GAqBK,IArBLA,GAsBM,KAtBNA,GAuBI,KAvBJA,GAwBK,KAxBLA,GA0BW,KA1BXA,GA2BG,KA3BHA,GA4Be,KA5BfA,GA6BY,KA7BZA,GA8BQ,IA9BRA,GA+BM,KA/BNA,GAgCK,KAGLC,GAAW,CACtBC,KAAK,cACHC,KAAMH,GACN3W,KAAM,OACNwD,OAAQ,8CACLuR,GAAgBC,MAErB+B,KAAK,cACHD,KAAMH,GACN3W,KAAM,OACNwD,OAAQ,kCACLuR,GAAgBC,MAErBgC,KAAK,cACHF,KAAMH,GACN3W,KAAM,OACNwD,OAAQ,kCACLuR,GAAgBC,MAErBiC,oBAAoB,cAClBH,KAAMH,GACN3W,KAAM,sBACNwD,OAAQ,oDACLuR,GAAgBO,qBAErB4B,UAAU,cACRJ,KAAMH,GACN3W,KAAM,YACNwD,OAAQ,8CACLuR,GAAgBQ,WAErB4B,iBAAiB,cACfL,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,oDACLuR,GAAgBY,kBAErByB,aAAa,cACXN,KAAMH,GACN3W,KAAM,eACNwD,OAAQ,mFACLuR,GAAgBkB,QAErBoB,kBAAkB,cAChBP,KAAMH,GACN3W,KAAM,oBACNwD,OAAQ,6EACLuR,GAAgBkB,QAErBqB,iBAAiB,cACfR,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,qGACLuR,GAAgBkB,QAErBsB,mBAAmB,cACjBT,KAAMH,GACN3W,KAAM,qBACNwD,OAAQ,uEACLuR,GAAgBkB,QAErBuB,oBAAoB,cAClBV,KAAMH,GACN3W,KAAM,0BACNwD,OAAQ,4FACLuR,GAAgBa,2BAErB6B,iBAAiB,cACfX,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,+FACLuR,GAAgBa,2BAErB8B,cAAc,cACZZ,KAAMH,GACN3W,KAAM,gBACNwD,OAAQ,mFACLuR,GAAgBmB,eAErByB,kBAAkB,cAChBb,KAAMH,GACN3W,KAAM,WACNwD,OAAQ,0DACLuR,GAAgBmB,eAErB0B,eAAe,cACbd,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,uEACLuR,GAAgBmB,eAErB2B,cAAc,cACZf,KAAMH,GACN3W,KAAM,gBACNwD,OAAQ,+FACLuR,GAAgBmB,eAErB4B,oBAAoB,cAClBhB,KAAMH,GACN3W,KAAM,sBACNwD,OAAQ,sGACLuR,GAAgBmB,eAErB6B,eAAe,cACbjB,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,mFACLuR,GAAgBoB,UAErB6B,gBAAgB,cACdlB,KAAMH,GACN3W,KAAM,kBACNwD,OAAQ,mFACLuR,GAAgBoB,UAErB8B,cAAc,cACZnB,KAAMH,GACN3W,KAAM,gBACNwD,OAAQ,mFACLuR,GAAgBoB,UAErB+B,eAAe,cACbpB,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,iEACLuR,GAAgBoB,UAErBgC,qBAAqB,cACnBrB,KAAMH,GACN3W,KAAM,mBACNwD,OAAQ,uEACLuR,GAAgBS,sBAErB4C,aAAa,cACXtB,KAAMH,GACN3W,KAAM,yBACNwD,OAAQ,mFACLuR,GAAgBU,cAErB4C,yBAAyB,cACvBvB,KAAMH,GACN3W,KAAM,wCACNwD,OAAQ,6JACLuR,GAAgBW,0BAErB4C,sBAAsB,cACpBxB,KAAMH,GACN3W,KAAM,wBACNwD,OAAQ,0FACLuR,GAAgBc,uBAErB0C,kBAAkB,cAChBzB,KAAMH,GACN3W,KAAM,oBACNwD,OAAQ,+FACLuR,GAAgBe,0BAErB0C,gBAAgB,cACd1B,KAAMH,GACN3W,KAAM,kBACNwD,OAAQ,gGACLuR,GAAgBgB,qBAErB0C,eAAe,cACb3B,KAAMH,GACN3W,KAAM,iBACNwD,OAAQ,yFACLuR,GAAgBiB,qBC9XV0C,IDkYgB,gBACtB9B,GAASC,MADY,gBAErBD,GAASG,MAFY,gBAGrBH,GAASI,MAHY,gBAIrBJ,GAASK,qBAJY,gBAKrBL,GAASM,WALY,gBAMrBN,GAASO,kBANY,gBAOrBP,GAASQ,cAPY,gBAQrBR,GAASgB,gBARY,gBASrBhB,GAASiB,eATY,gBAUrBjB,GAASW,oBAVY,gBAWrBX,GAASa,kBAXY,gBAYrBb,GAASY,qBAZY,gBAarBZ,GAASc,eAbY,gBAcrBd,GAASe,mBAdY,gBAerBf,GAASS,mBAfY,gBAgBrBT,GAASU,kBAhBY,gBAiBrBV,GAASkB,qBAjBY,gBAkBrBlB,GAASmB,gBAlBY,gBAmBrBnB,GAASoB,iBAnBY,gBAoBrBpB,GAASqB,eApBY,gBAqBrBrB,GAASsB,gBArBY,gBAsBrBtB,GAASuB,sBAtBY,gBAuBrBvB,GAASwB,cAvBY,gBAwBrBxB,GAASyB,0BAxBY,gBAyBrBzB,GAAS0B,uBAzBY,gBA0BrB1B,GAAS2B,mBA1BY,gBA2BrB3B,GAAS4B,iBA3BY,gBA4BrB5B,GAAS6B,gBAIkB,gBAC3B7B,GAASC,MADiB,gBAE1BD,GAASG,MAFiB,gBAG1BH,GAASI,MAHiB,gBAI1BJ,GAASY,qBAIkB,gBAC3BZ,GAASK,qBADiB,gBAE1BL,GAASQ,cAFiB,gBAG1BR,GAASgB,gBAHiB,gBAI1BhB,GAASiB,eAJiB,gBAK1BjB,GAASW,oBAIgB,gBACzBX,GAASO,kBADe,gBAExBP,GAASc,eAFe,gBAGxBd,GAASe,mBAHe,gBAIxBf,GAASS,mBAJe,gBAKxBT,GAASU,kBALe,gBAMxBV,GAASkB,qBAIgB,gBACzBlB,GAASmB,gBADe,gBAExBnB,GAASoB,iBAFe,gBAGxBpB,GAASqB,eAHe,gBAIxBrB,GAASsB,gBAIgB,gBAAKtB,GAASM,WAGV,gBAC7BN,GAASa,kBADmB,gBAE5Bb,GAASuB,sBAFmB,gBAG5BvB,GAASwB,cAHmB,gBAI5BxB,GAASyB,0BAJmB,gBAK5BzB,GAAS0B,uBALmB,gBAM5B1B,GAAS2B,mBANmB,gBAO5B3B,GAAS4B,iBAPmB,gBAQ5B5B,GAAS6B,gBCvdEE,UAAUC,UAAUC,cAEFC,QAAQ,cAKhB,SAC1BC,EACAC,EACAC,GAEI,IADJ7K,IACG,yDACG8K,EAAYH,EAASlG,KAAI,SAACsG,GAC9B,MAAO,CACLC,KAAMhL,EAAQ+K,EAAI3V,OAAS2V,EAAInZ,KAC/B+C,GAAIoW,EAAIE,IAAMF,EAAIE,IAAMF,EAAIpW,GAC5BkC,MAAOkU,EAAIlU,UAGTqU,EAAY,CAChB,CACEN,YACAC,QACAC,cAGJ,OAAOI,IAwBHC,GAAc,SAACjG,EAAW9R,GAC9B,QAAiB,OAAb8R,EAAKnQ,MAAgB3B,EAAQgY,SAASlG,EAAKnQ,OA2DpCsW,GAAgB,SAAC,GAAmC,IAAjCtS,EAAgC,EAAhCA,MAAOuS,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC5C,GAAKD,EAEE,CACL,IAAME,EAAYzS,EAAM0S,UAAUC,WAC5BC,EAAc5S,EAAM0S,UAAUG,aAC9BC,EAAU9S,EAAMiE,QAAQ0O,WACxBI,EAAY/S,EAAMiE,QAAQ4O,aAiChC,OA/BcN,EAAMS,IACDtH,KAAI,SAACuH,EAASC,GAC/B,IAAMC,EAAOF,EAAGrJ,cACVwJ,EAAQH,EAAGI,WACXC,EAAML,EAAGM,UACTb,EAAY,IAAInP,KAAK4P,EAAMC,EAAOE,EAAKb,EAAWG,GAClD3O,EAAU,IAAIV,KAAK4P,EAAMC,EAAOE,EAAKR,EAASC,EAAW,EAAG,GAE5DS,EAAWhB,EAAY9G,KAAI,SAAC+H,GAAa,IACrCC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,WAAYhV,EAAQ8U,EAAR9U,IACxBiV,EAAWC,GAAY,CAC3BnB,YACAzO,UACAyP,WACAC,aACAhV,QAEF,OAAO,6BACF8U,GADL,IAEEG,gBAIJ,OAAO,6BACF5T,GADL,IAEE8T,QAAStc,KAAKyB,UAAUua,GACxBd,YACAzO,UACAiP,aAnCJ,MAAO,CAAClT,IA0CC6T,GAAc,SAAC,GAMhB,IALVnB,EAKS,EALTA,UACAzO,EAIS,EAJTA,QACAyP,EAGS,EAHTA,SACAC,EAES,EAFTA,WACAhV,EACS,EADTA,IAKMoV,EACS,WAAbL,EACI,IACa,SAAbA,EACA,KACa,QAAbA,EACA,MACA,KACAM,EATwB,WAAfL,EASMI,EAASpV,GAAQoV,EAASpV,EACzCsV,EAAQ,IAAI1Q,KAXD,WAAfoQ,GAA0C,WAAfA,EAA0BjB,EAAYzO,GAWlCiQ,UAAYF,EAC7C,OAAO,IAAIzQ,KAAK0Q,I,uCCrLH,SAASxL,GAAT,GAMN,IALP5P,EAKM,EALNA,KACA2E,EAIM,EAJNA,SAIM,IAHNzK,YAGM,MAHC,GAGD,MAFNohB,UAEM,MAFD,OAEC,EADNC,EACM,EADNA,GAEMC,EAAQxb,GAAc2E,EACtBM,EAAQsW,IAAUC,EAAQ9H,GAAY,GAAD,OAAI8H,EAAJ,WAAqB,IAC1DC,EAAQD,EAAQA,EAAME,MAAM,KAAO,GACrCC,EAAU,GAWd,OAROA,EAFHF,EAAM3H,OAAS,EACjB0H,EACY,UAAMC,EAAM,GACjBG,UAAU,EAAG,GACbC,eAFK,OAEWJ,EAAM,GAAGG,UAAU,EAAG,GAAGC,eACjC,GAEfL,EAAmBA,EAAMI,UAAU,EAAG,GAAGC,cAA4B,GAIrE,eAACC,GAAA,EAAD,CAAS7C,MAAOuC,GAAgB,GAAhC,SACE,eAAC9K,GAAA,EAAD,CACEqL,OAAQ,EACRnf,QAAQ,OACRE,WAAW,SACXkf,eAAe,SACfxL,MAAO,CACLtT,MAAOhD,EACP2D,OAAQ3D,EACR+hB,aAAc/hB,EAAO,EACrB8C,gBAAiBiI,EACjBiX,YAAaZ,GAVjB,SAaE,eAACzL,GAAA,EAAD,CACEW,MAAO,CACLvL,MAAO,OACPvJ,WAAY,aACZC,SAAUzB,EAAO,EAAIA,EAAO,GAJhC,SAOGyhB,QC3CI,SAASQ,GAAT,GAMN,IALPnc,EAKM,EALNA,KACA2E,EAIM,EAJNA,SAIM,IAHNzK,YAGM,MAHC,GAGD,MAFNohB,UAEM,MAFD,OAEC,EADNC,EACM,EADNA,GAEMC,EAAQxb,GAAc2E,EACtBM,EAAQsW,IAAUC,EAAQ9H,GAAY8H,GAAS,IAErD,OACE,eAACM,GAAA,EAAD,CAAS7C,MAAOuC,GAAgB,GAAhC,SACE,eAAC9K,GAAA,EAAD,CACEqL,OAAQ,EACRnf,QAAQ,OACRE,WAAW,SACXkf,eAAe,SACfxL,MAAO,CACLtT,MAAOhD,EACP2D,OAAQ3D,EACR+hB,aAAc/hB,EAAO,EACrB8C,gBAAiBiI,EACjBiX,YAAaZ,OCHhB,IAUMc,GAAiB,SAAC,GAAD,IAAGnc,EAAH,EAAGA,MAAH,OAC5B,eAACyQ,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,IACPW,OAAQ,GACRb,gBAAiBiD,MAIVoc,GAAmB,SAAC,GAA2B,IACtDC,EAD6Brc,EAAwB,EAAxBA,MAAOmO,EAAiB,EAAjBA,MAExC,GAAInO,EAAO,CACT,IAAMsc,EAAM5d,KAAKC,MAAMqB,GACvBqc,EAAOE,OAAOC,KAAKF,GAAKlI,QAAO,SAACqI,GAAD,OAAkB,IAAXH,EAAIG,MAE5C,OAAIJ,EAEA,eAAC5L,GAAA,EAAD,UACG4L,EAAKzJ,KAAI,SAAC4H,GAAc,IAAD,IACtB,OACE,wBAAgBjK,MAAO,CAAEnV,YAAa,EAAGD,WAAY,GAArD,UACGgT,EAAK,UAAGnE,GAAYwQ,UAAf,aAAG,EAAkBjX,OAArB,UAA8ByG,GAAYwQ,UAA1C,aAA8B,EAAkBza,KAAM,MADnDya,SAQlB/J,GAAA,EAEI,eAACA,GAAA,EAAD,MAwBIiM,GAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,IAC/B5c,EAAgB4c,EAAhB5c,KAAMiF,EAAU2X,EAAV3X,MAEd,OACE,eAACyL,GAAA,EAAD,UACE,eAACyL,GAAD,CAAanc,KAAMA,EAAMub,GAAItW,OAItB4X,GAAkB,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,IACxB5c,EAA0B4c,EAA1B5c,KAAM2E,EAAoBiY,EAApBjY,SAAUM,EAAU2X,EAAV3X,MAExB,OACE,eAACyL,GAAA,EAAD,UACE,eAAC,GAAD,CAAQ/L,SAAUA,EAAU3E,KAAMA,EAAMub,GAAItW,OAYrC6X,GAAkB,SAAC,GAAoB,IAAlB7c,EAAiB,EAAjBA,MAExBO,EADMH,GAAa,SACnBG,KACR,OACE,eAACqP,GAAA,EAAD,CAAYW,MAAO,CAAEvL,MAAQhF,EAAkB,MAAV,SAArC,SACIA,EAIW,OAATO,EACA,2BACA,WALS,OAATA,EACE,2BACA,YAOCuc,GAAe,SAACC,GAC3B,OAAIA,EACW,IAAItS,KAAKsS,GACVC,eAAe,QAAS,CAClCxC,IAAK,UACLF,MAAO,UACPD,KAAM,YAGD,IAiBE4C,GAAwB,SAACF,GACpC,OAAIA,EACW,IAAItS,KAAKsS,GACVC,eAAe,QAAS,CAClCxC,IAAK,UACLF,MAAO,UACPD,KAAM,UACN6C,KAAM,UACNC,OAAQ,YAGH,IAGEC,GAAmB,SAACL,GAC/B,OAAIA,EACW,IAAItS,KAAKsS,GACVC,eAAe,QAAS,CAClCE,KAAM,UACNC,OAAQ,UACRE,QAAQ,IAGH,IAgBEC,GAAuB,SAACP,EAAW5O,GAC9C,OAAI4O,EACW,IAAItS,KAAKsS,GACVC,eAAe7O,EAAQ,QAAU,QAAS,CACpDoP,QAAS,OACT/C,IAAK,UACLF,MAAO,OACPD,KAAM,UACN6C,KAAM,UACNC,OAAQ,YAGH,IAGEK,GAAa,SAACT,EAAW5O,GACpC,OAAI4O,EACW,IAAItS,KAAKsS,GACVC,eAAe7O,EAAQ,QAAU,QAAS,CACpDqM,IAAK,UACLF,MAAO,OACPD,KAAM,YAGD,IAGEoD,GAAiB,SAACV,EAAW5O,GACxC,OAAI4O,EACW,IAAItS,KAAKsS,GACVC,eAAe7O,EAAQ,QAAU,QAAS,CACpDoP,QAAS,QACT/C,IAAK,UACLF,MAAO,OACPD,KAAM,YAGD,IAIEqD,GAAgB,SAACX,EAAW5O,GACvC,OAAI4O,EACW,IAAItS,KAAKsS,GACVC,eAAe7O,EAAQ,QAAU,QAAS,CACpDqM,IAAK,UACLF,MAAO,SAGF,IAGEqD,GAAqB,SAACZ,EAAW5O,GAC5C,OAAI4O,EACW,IAAItS,KAAKsS,GACVC,eAAe7O,EAAQ,QAAU,QAAS,CACpDmM,MAAO,OACPD,KAAM,YAGD,IAIEuD,GAAgB,SAAC,GAAkB,IACtCb,EADqC,EAAfJ,IACtBI,KACR,OAAO,+BAAMD,GAAaC,MAGfc,GAAqB,SAAC,GAAoB,IAAlB7d,EAAiB,EAAjBA,MACnC,OAAO,+BAAM8c,GAAa9c,MAEf8d,GAAkB,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,IAC1B/b,EAAQwc,GAAiBT,EAAI/C,WAC7B/Y,EAAMuc,GAAiBT,EAAIxR,SACjC,OACE,iCACGvK,EADH,IACWC,MAiCFkd,GAAiB,SAAC,GAAoB,IAAlB/d,EAAiB,EAAjBA,MAC/B,OAAO,sBAAKuQ,MAAO,CAAE7U,SAAU,IAAxB,SAA+BsE,KAG3Bge,GAAoB,SAAC,GAAkB,IAC1CpE,EADyC,EAAf+C,IAC1B/C,UACR,OAAO,+BAAMwD,GAAiBxD,MAMnBqE,GAAuB,SAAC,GAAoB,IAAlBje,EAAiB,EAAjBA,MAE7BO,EADMH,GAAa,SACnBG,KACF8Q,EAAOnI,GAAYkL,QAAO,SAAC8J,GAAD,OAAaA,EAAGpb,KAAO9C,KACvD,OAAIqR,GAAQA,EAAKwC,OAAS,EAEtB,uBAAMtD,MAAO,CAAEvL,MAAOmE,GAAYnJ,IAAlC,SACY,OAATO,EAAgB8Q,EAAK,GAAG9N,OAAS8N,EAAK,GAAGtR,OAIvC,0BAGEoe,GAAsB,SAAC,GAClC,OAAc,IADuC,EAAjBne,MAE3B,eAACoe,GAAA,EAAD,CAAkB7N,MAAO,CAAEvL,MAAO,WAAa/K,KAAM,KAG1D,eAACwW,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRoe,aAAc,EACdjf,gBAAiB,cAMdshB,GAAgC,SAACre,GAC5C,IACQO,EADMH,GAAa,SACnBG,KACF8Q,EAAOnI,GAAYkL,QAAO,SAAC8J,GAAD,OAAaA,EAAGpb,KAAO9C,KACvD,OAAIqR,GAAQA,EAAKwC,OAAS,EACR,OAATtT,EAAgB8Q,EAAK,GAAG9N,OAAS8N,EAAK,GAAGtR,KAEzC,IAIEue,GAAc,SAACC,GAC1B,OAAIA,IACGC,MAAMD,GACFA,EAAOE,QAAQ,GAAGC,QAAQ,oBAAqB,OAGnD,QAuBIC,GAAoB,SAACJ,GAChC,OAAIA,EACKA,EAAOE,QAAQ,GAAGC,QAAQ,oBAAqB,OAE/C,KAIEE,GAAkB,SAAC,GAAkB,IAAhBjC,EAAe,EAAfA,IAE1B4B,EADsB5B,EAApBkC,MAAoBlC,EAAbmC,SAGf,OAAO,sBAAKvO,MAAO,CAAEvL,MAAO,WAArB,SAAmCsZ,GAAYC,MAE3CQ,GAAoB,SAAC,GAAoB,IAAlB/e,EAAiB,EAAjBA,MAClC,OAAO,uBAAMuQ,MAAO,CAAEvL,MAAO,WAAtB,SAAoCsZ,GAAYte,MAE5Cgf,GAAyB,SAAC,GAAoB,IAtC1BT,EAsCQve,EAAiB,EAAjBA,MACvC,OAAO,uBAAMuQ,MAAO,CAAEvL,MAAO,WAAtB,UAvCwBuZ,EAuC6Bve,EAtCxDue,IACGC,MAAMD,GACFA,EAAOE,QAAQ,GAAGC,QAAQ,oBAAqB,OAGnD,OAmCIO,GAAgB,SAAC,GAA6B,IAA3BtC,EAA0B,EAA1BA,IAAKuC,EAAqB,EAArBA,UAC7BtU,EAAwB,KAAf+R,EAAI/R,OAAgB,EAAI,GACvC,OACE,gCACE,eAACuU,GAAA,EAAD,CACE5O,MAAO,CAAElV,QAAS,EAAGlB,OAAQ,GAC7BilB,QAAwB,KAAfzC,EAAI/R,OACbyU,SAAQ,yCAAE,WAAOhQ,GAAP,UAAAX,EAAA,sEACFwQ,EAAU,CAAEvQ,UAAW,CAAE7L,GAAI6Z,EAAI7Z,GAAI8H,YADnC,mFAAF,sDAGR5F,MAAM,eAKDsa,GAA0B,SAAC,GAAyB,IAAvBtf,EAAsB,EAAtBA,MAElCuf,EAAgBvf,EAFwC,EAAf2c,IACvC4B,OACgC,IACxC,OACE,gBAAC9N,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,IACPW,OAAQ,GACRb,gBAAiB,QAJrB,UAOE,eAAC0T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAOsiB,EACP3hB,OAAQ,GACRb,gBAAiB,aAGrB,eAAC0T,GAAA,EAAD,CAAKF,MAAO,CAAEiP,SAAU,WAAYC,OAAQ,GAAIC,MAAO,IAAvD,SACE,eAAC9P,GAAA,EAAD,CACEW,MAAO,CAAEhV,UAAW,MAAOokB,WAAY,QACvC3kB,QAAQ,UAFV,SAIGgF,EAAQse,GAAYte,GAAS,WAM3B4f,GAAkB,SAAC,GAA2B,IAAzB5f,EAAwB,EAAxBA,MAC1BmH,EADkD,EAAjB0Y,MACpBzL,QAAO,SAAC0L,GAAD,OAAcA,EAAIhd,KAAO9C,KACnD,OAAImH,GAAQA,EAAK0M,OAAS,EACjB,uBAAMtD,MAAO,CAAEvL,MAAO,WAAtB,SAAoCmC,EAAK,GAAG6R,QAE5C,uBAAMzI,MAAO,CAAEvL,MAAO,cAGpB+a,GAAoB,SAAC,GAAoB,IAAlB/f,EAAiB,EAAjBA,MAG5BmO,EAAiB,OAFT/N,GAAa,SACnBG,KAER,OACE,uBAAMgQ,MAAO,CAAEvL,MAAO,WAAtB,SACGkP,GAAY,CAAEpR,GAAI9C,EAAOmO,aAInB6R,GAAoB,SAAC,GAAoB,IAAlBhgB,EAAiB,EAAjBA,MAClC,OACE,gBAACyQ,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,IACPW,OAAQ,GACRb,gBAAiB,QAJrB,UAOE,eAAC0T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO+C,EACPpC,OAAQ,GACRb,gBAAiB,aAGrB,eAAC0T,GAAA,EAAD,CAAKF,MAAO,CAAEiP,SAAU,WAAYC,OAAQ,GAAIC,MAAO,IAAvD,SACE,eAAC9P,GAAA,EAAD,CACEW,MAAO,CAAEhV,UAAW,MAAOokB,WAAY,QACvC3kB,QAAQ,UAFV,SAIGgF,EAAK,UAAMigB,SAASjgB,GAAf,KAA2B,WAgB9BkgB,GAAkB,SAAC,GAAoB,IAAD,IAAjBlgB,EAAiB,EAAjBA,MAG1BD,EACK,OAHGK,GAAa,SACnBG,KAEN,OAAgB+G,SAAhB,IAAgBA,IAAhB,UAAgBA,GAAetH,UAA/B,aAAgB,EAAuBuD,OAAvC,OAAgD+D,SAAhD,IAAgDA,IAAhD,UAAgDA,GAAetH,UAA/D,aAAgD,EAAuBD,KACzE,OAAO,gCAAOA,KAEHogB,GAAsB,SAAC,GAAkB,IAAhBxD,EAAe,EAAfA,IAC9B5c,EACS,IAAb4c,EAAIvb,KAAaub,EAAIxX,MAAqB,IAAbwX,EAAIvb,KAAaub,EAAItX,MAAQ,eAC5D,OAAO,gCAAOtF,KAGHqgB,GAAkB,SAAC/O,GAC9B,IAAMgP,EAAM,OAAGhP,QAAH,IAAGA,OAAH,EAAGA,EAAMgP,OACfC,EAAK,OAAGjP,QAAH,IAAGA,OAAH,EAAGA,EAAMiP,MACdnL,EAAO,OAAG9D,QAAH,IAAGA,OAAH,EAAGA,EAAM8D,QAWtB,OATEA,IAAYb,IAAoBgM,EAAQ,EACpCA,EACAnL,IAAYb,IAAoB+L,EAAS,GACxCA,EACDlL,IAAYb,IAAqB+L,EAAS,EAC1CA,EACAlL,IAAYb,IAAqBgM,EAAQ,GACxCA,EACD,GAyCKC,GAAmB,SAACxmB,EAAY4c,EAAexI,GAC1D,IAAMqS,EAAU7J,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAI8U,OAAS9c,EAAMiG,SACjE,OACE,sBAAKuQ,MAAO,CAAE7U,SAAU,IAAxB,SACG8kB,GAAWA,EAAQ3M,OAAS,EACzB1F,EACEqS,EAAQ,GAAGjd,OACXid,EAAQ,GAAGzgB,KACb,MAKG0gB,GAA2B,SACtC1mB,EACA4c,EACAxI,GACI,IAAD,QACGuS,GACC,OAAL3mB,QAAK,IAALA,GAAA,UAAAA,EAAO4iB,WAAP,eAAYgE,aAAwC,QAArB,OAAL5mB,QAAK,IAALA,GAAA,UAAAA,EAAO4iB,WAAP,eAAYiE,WAClCzS,EAAK,OACHpU,QADG,IACHA,GADG,UACHA,EAAO4iB,WADJ,aACH,EAAYkE,eADT,OAEH9mB,QAFG,IAEHA,GAFG,UAEHA,EAAO4iB,WAFJ,aAEH,EAAYmE,kBACdzQ,EACN,GAAIqQ,EACF,OAAO,sBAAKnQ,MAAO,CAAE7U,SAAU,IAAxB,SAA+BglB,IAEtC,IAAMF,EAAU7J,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAI8U,OAAS9c,EAAMiG,SAEjE,OACE,sBAAKuQ,MAAO,CAAE7U,SAAU,IAAxB,SACG8kB,GAAWA,EAAQ3M,OAAS,EACzB1F,EACEqS,EAAQ,GAAGjd,OACXid,EAAQ,GAAGzgB,KACb,MCxTCghB,GAAuB,SAAC,GAAyC,IAAvChE,EAAsC,EAAtCA,KAAMiE,EAAgC,EAAhCA,KAAM7S,EAA0B,EAA1BA,MAAOhD,EAAmB,EAAnBA,QACxD,GAAa,QAAT6V,EAAgB,CAClB,IAAMpgB,EAAQ,IAAI6J,KAAKsS,GACvBnc,EAAMqgB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMpgB,EAAM,IAAI4J,KAAKsS,GAGrB,OAFAlc,EAAIogB,SAAS,GAAI,GAAI,GAAI,KAElB,CAAErgB,QAAOC,MAAKqgB,ODzHO,SAACnE,EAAW5O,GAC1C,OAAI4O,EACW,IAAItS,KAAKsS,GACVC,eAAe7O,EAAQ,QAAU,QAAS,CACpDoP,QAAS,OACT/C,IAAK,UACLF,MAAO,OACPD,KAAM,YAGD,GC8GQ8G,CAAiBpE,EAAM5O,IAGxC,GAAa,UAAT6S,EAAkB,CACpB,IAAMpgB,EAAQ,IAAI6J,KAAKsS,GACvBnc,EAAMqgB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMpgB,EAAM,IAAI4J,KAAKsS,GACrBlc,EAAIugB,QAAQvgB,EAAI4Z,UAAY,GAC5B5Z,EAAIogB,SAAS,GAAI,GAAI,GAAI,KACzB,IAAM5G,EAAOzZ,EAAMkQ,cAKnB,MAAO,CAAElQ,QAAOC,MAAKqgB,OAJT,UAAMxD,GAAc9c,EAAOuN,GAA3B,cAAuCuP,GACjD7c,EACAsN,GAFU,YAGPkM,IAGP,GAAa,SAAT2G,EAAiB,CACnB,IAAMpgB,EAAQ,IAAI6J,KAAKsS,GACjBsE,EAAQzgB,EAAM0gB,SACdC,EAAmB,IAAVF,EAAc,EAAIA,EAAQ,EACnCG,EAAiB,IAAVH,EAAc,EAAc,IAAVA,EAAc,EAAI,EAAIA,EAErDzgB,EAAMwgB,QAAQxgB,EAAM6Z,UAAY8G,GAChC3gB,EAAMqgB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMpgB,EAAM,IAAI4J,KAAKsS,GACrBlc,EAAIugB,QAAQvgB,EAAI4Z,UAAY+G,GAC5B3gB,EAAIogB,SAAS,GAAI,GAAI,GAAI,KACzB,IAAM5G,EAAOzZ,EAAMkQ,cAKnB,MAAO,CAAElQ,QAAOC,MAAKqgB,OAJT,UAAMxD,GAAc9c,EAAOuN,GAA3B,cAAuCuP,GACjD7c,EACAsN,GAFU,YAGPkM,IAGP,GAAa,UAAT2G,EAAkB,CACpB,IAAMS,EAAO,IAAIhX,KAAKsS,GAChBzC,EAAQmH,EAAKlH,WACbF,EAAOoH,EAAK3Q,cACZlQ,EAAQ,IAAI6J,KAAK4P,EAAMC,EAAO,EAAG,EAAG,EAAG,EAAG,GAGhD,MAAO,CAAE1Z,QAAOC,IAFJ,IAAI4J,KAAK4P,EAAMC,EAAQ,EAAG,EAAG,GAAI,GAAI,GAAI,KAEhC4G,OADNvD,GAAmB/c,EAAOuN,IAG3C,GAAa,SAAT6S,EAAiB,CACnB,IACM3G,EADO,IAAI5P,KAAKsS,GACJjM,cAIlB,MAAO,CAAElQ,MAHK,IAAI6J,KAAK4P,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAG5BxZ,IAFJ,IAAI4J,KAAK4P,EAAM,GAAI,GAAI,GAAI,GAAI,GAAI,KAE1B6G,OADT,UAAM/S,EAAQ,qBAAQ,OAAtB,YAAgCkM,IAG9C,GAAa,WAAT2G,EAAmB,CACrB,IAAMpgB,EAAQ,IAAI6J,KAAKsS,GACvBnc,EAAMqgB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMpgB,EAAMsK,EAAU,IAAIV,KAAKU,GAAW,IAAIV,KAK9C,OAJA5J,EAAIogB,SAAS,GAAI,GAAI,GAAI,KAIlB,CAAErgB,QAAOC,MAAKqgB,OAHN1D,GAAWT,EAAM5O,GAGHuT,UAFXlE,GAAWrS,EAASgD,MAoE7BwT,GAAuB,WAClC,IACMtH,GADO,IAAI5P,MACCqG,cAGlB,MAAO,CAAE8Q,YAFW,IAAInX,KAAK4P,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhCwH,UADJ,IAAIpX,KAAK4P,EAAO,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,OAI9CyH,GAAc,SAACzF,EAAWlO,GAAoC,IAAxBe,EAAuB,uDAAZ,QACtD6S,EAAY,GAClB,GAAiB,QAAb7S,EAAoB,CACtB,IAAM6N,EAAO,IAAItS,KACXuX,EAAKC,KAAKC,KAAK7F,EAAO,GAE5BU,EAAKqE,QAAQrE,EAAKtC,UAAYuH,GAE9B,IAAK,IAAIvQ,EAAI,EAAGA,EAAI4K,EAAM5K,IACxBsL,EAAKqE,QAAQrE,EAAKtC,UAAY,GAC9BsH,EAAKvO,KAAKkK,GAAc,IAAIjT,KAAKsS,GAAO5O,IAE1C,OAAO4T,EAEP,IAAMhF,EAAO,IAAItS,KACjBsS,EAAKqE,QAAQrE,EAAKtC,UAAY4B,GAE9B,IAAK,IAAI5K,EAAI,EAAGA,EAAI4K,EAAM5K,IACxBsL,EAAKqE,QAAQrE,EAAKtC,UAAY,GAC9BsH,EAAKvO,KAAKkK,GAAc,IAAIjT,KAAKsS,GAAO5O,IAE1C,OAAO4T,GAGEI,GAAgB,SAACC,EAAUjU,GACtC,IAAM4T,EAAY,GAEZhF,EAAO,IAAItS,KACjBsS,EAAKsF,SAAStF,EAAKxC,WAAa6H,GAEhC,IAAK,IAAI3Q,EAAI,EAAGA,EAAI2Q,EAAK3Q,IACvBsL,EAAKsF,SAAStF,EAAKxC,WAAa,GAChCwH,EAAKvO,KAAKmK,GAAmB,IAAIlT,KAAKsS,GAAO5O,IAE/C,OAAO4T,GAGIO,GAAiB,SAACC,GAC7B,GAAIA,GAAUA,EAAO1O,OAAS,EAAG,CAC/B,IAAM3M,EAAQqb,EAAO,GACfC,EAAQD,EAAO3P,KAAI,SAAC6P,GACxB,MAAO,CACL7I,UAAW6I,EAAG7I,UACdzO,QAASsX,EAAGtX,YAGhB,OAAOzM,KAAKyB,UAAU,CAAE+G,QAAOsb,UAE/B,OAAO9jB,KAAKyB,UAAU,KChebuiB,GAAwB,yCAAG,kFAAAhU,EAAA,yDACtCiU,EADsC,EACtCA,MACAC,EAFsC,EAEtCA,QACAC,EAHsC,EAGtCA,QACAC,EAJsC,EAItCA,SACA5D,EALsC,EAKtCA,UACA6D,EANsC,EAMtCA,YACA5U,EAPsC,EAOtCA,MAPsC,UAUhCwU,EAVgC,oBAYhC3J,EAQE2J,EARF3J,MACAY,EAOE+I,EAPF/I,UACAzO,EAMEwX,EANFxX,QACA6X,EAKEL,EALFK,MACAtC,EAIEiC,EAJFjC,SACAuC,EAGEN,EAHFM,WACAC,EAEEP,EAFFO,SACGC,EAnB6B,aAoB9BR,EApB8B,8EAqBChB,KAA3BC,EArB0B,EAqB1BA,YAAaC,EArBa,EAqBbA,YAEnBjI,EAAYgI,GACZhI,EAAYiI,GACZ1W,EAAUyW,GACVzW,EAAU0W,GACVjI,EAAYzO,GACZyO,EAAUa,YAActP,EAAQsP,WA5BA,gBA8BhCxL,OAAOmU,MAAMjV,EAAQ,+FAAsB,yBA9BX,8BAgC1BQ,EAhC0B,cAiC9BqK,QACAY,YACAzO,UACA6X,QACAtC,SAAUA,EACN,CACEC,WAAYD,EAAStH,IACrB0H,aAAcJ,EAAS3gB,KACvB8gB,eAAgBH,EAASnd,OACzB8f,cAAe3C,EAASvb,YAE1BkL,EACJ4S,WAAYA,EACR,CACEK,aAAcL,EAAW7J,IACzBmK,eAAgBN,EAAWljB,KAC3ByjB,iBAAkBP,EAAW1f,OAC7BkgB,gBAAiBR,EAAWje,YAE9BqL,EACJ6S,SAAUA,EACN,CACEQ,WAAYR,EAAS9J,IACrBuK,aAAcT,EAASnjB,KACvB6jB,eAAgBV,EAAS3f,OACzBsgB,cAAeX,EAASle,MACxB8e,cAAeZ,EAAS/d,YAE1BkL,GACD8S,GA9D2B,UAgE1BL,EAAS,CAAEnU,cAhEe,YAmEhCiU,EAnEgC,wBAoE5B9f,EAAKyZ,OAAOC,KAAKoG,GAAS,GAC1B/X,EAAO+X,EAAQ9f,GACbkgB,EAAmDnY,EAAnDmY,MAAOtC,EAA4C7V,EAA5C6V,SAAUuC,EAAkCpY,EAAlCoY,WAAYC,EAAsBrY,EAAtBqY,SAAaC,EAtEhB,aAsEyBtY,EAtEzB,8CAwE5B8D,EAxE4B,cAyEhC7L,GAAIihB,OAAOjhB,GACXkgB,QACAE,SAAUA,EACN,CACEQ,WAAYR,EAAS9J,IACrBuK,aAAcT,EAASnjB,KACvB6jB,eAAgBV,EAAS3f,OACzBsgB,cAAeX,EAASle,MACxB8e,cAAeZ,EAAS/d,YAE1BkL,EACJ4S,WAAYA,EACR,CACEK,aAAcL,EAAW7J,IACzBmK,eAAgBN,EAAWljB,KAC3ByjB,iBAAkBP,EAAW1f,OAC7BkgB,gBAAiBR,EAAWje,YAE9BqL,EACJqQ,SAAUA,EACN,CACEC,WAAYD,EAAStH,IACrB0H,aAAcJ,EAAS3gB,KACvB8gB,eAAgBH,EAASnd,OACzB8f,cAAe3C,EAASvb,YAE1BkL,GACD8S,GApG6B,UAsG5BjE,EAAU,CACdvQ,YACAqV,mBAAoB,CAClBC,WAAY,cACZC,YAAY,cACVD,WAAY,YACZnhB,MACG6L,MA7GyB,gBAkHpB0B,IAAZwS,EAlHgC,kCAmH5BE,EAAY,CAAEpU,UAAW,CAAE7L,GAAIihB,OAAOlB,MAnHV,0DAsHpCsB,QAAQC,IAAR,MAtHoC,0DAAH,sDA4QxBC,GAAmB,SAACtH,GAA+B,IAApBuH,EAAmB,uDAAZ,QACjD,OAAOvH,EAAKC,eAAesH,EAAM,CAC/BpH,KAAM,UACNC,OAAQ,UACRE,QAAQ,KClRCkH,GAAW,SAAC5H,GAAD,OAAuBA,EAAIvD,KAEtCoL,GAAa,SAAC,GAA2B,IAAzBrW,EAAwB,EAAxBA,MAAOsW,EAAiB,EAAjBA,MAClC,MAAO,CACLC,GAAI,CAAE5hB,GAAI,EAAG0E,IAAK,KAAMzH,KAAM,KAAMiZ,MAAOyL,EAAMC,IACjD9K,UAAW,CAAE9W,GAAI,IAAK0E,IAAK,OAAQzH,KAAM,YAAaiZ,MAAOyL,EAAM1H,MACnEnc,MAAO,CAAEkC,GAAI,IAAK0E,IAAK,OAAQzH,KAAM,QAASiZ,MAAOyL,EAAM7jB,OAC3DC,IAAK,CAAEiC,GAAI,IAAK0E,IAAK,OAAQzH,KAAM,MAAOiZ,MAAOyL,EAAM5jB,KACvD8jB,SAAU,CAAE7hB,GAAI,IAAK0E,IAAK,WAAYzH,KAAM,WAAYiZ,MAAOyL,EAAMrjB,MACrE2b,KAAM,CAAEja,GAAI,EAAG0E,IAAK,OAAQzH,KAAM,OAAQiZ,MAAOyL,EAAMG,UACvDC,OAAQ,CAAE/hB,GAAI,EAAG0E,IAAK,SAAUzH,KAAM,SAAUiZ,MAAOyL,EAAM1H,MAC7D+H,MAAO,CAAEhiB,GAAI,EAAG0E,IAAK,QAASzH,KAAM,QAASiZ,MAAOyL,EAAMC,IAC1D1L,MAAO,CAAElW,GAAI,EAAG0E,IAAK,QAASzH,KAAM,QAASiZ,MAAOyL,EAAM1kB,MAC1DglB,QAAS,CAAEjiB,GAAI,EAAG0E,IAAK,UAAWzH,KAAM,UAAWiZ,MAAOyL,EAAMC,IAChExB,SAAU,CACRpgB,GAAI,EACJ0E,IAAK,WACLzH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOyL,EAAMvB,UAEf8B,QAAS,CACPliB,GAAI,EACJ0E,IAAK,UACLzH,KAAMoO,EAAQ,aAAe,WAC7B6K,MAAOyL,EAAMO,SAEf/B,WAAY,CACVngB,GAAI,EACJ0E,IAAK,aACLzH,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOyL,EAAMxB,YAEfgC,SAAU,CACRniB,GAAI,EACJ0E,IAAK,WACLzH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOyL,EAAMQ,UAEfvE,SAAU,CACR5d,GAAI,GACJ0E,IAAK,WACLzH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOyL,EAAM/D,UAEfwE,SAAU,CACRpiB,GAAI,GACJ0E,IAAK,WACLzH,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAOyL,EAAMS,UAEfta,OAAQ,CAAE9H,GAAI,GAAI0E,IAAK,SAAUzH,KAAM,SAAUiZ,MAAOyL,EAAM7Z,QAC9D2T,OAAQ,CAAEzb,GAAI,GAAI0E,IAAK,SAAUzH,KAAM,SAAUiZ,MAAOyL,EAAMlG,QAC9Dxc,IAAK,CACHe,GAAI,GACJ0E,IAAK,MACLzH,KAAMoO,EAAQ,YAAc,UAC5B6K,MAAOyL,EAAMjE,SAEf2E,MAAO,CACLriB,GAAI,GACJ0E,IAAK,QACLzH,KAAMoO,EAAQ,cAAgB,YAC9B6K,MAAO7K,EAAQ,kFAAmB,sBAEpCmS,MAAO,CAAExd,GAAI,GAAI0E,IAAK,QAASzH,KAAM,QAASiZ,MAAOyL,EAAMnE,OAC3DD,OAAQ,CAAEvd,GAAI,GAAI0E,IAAK,SAAUzH,KAAM,SAAUiZ,MAAOyL,EAAMpE,QAC9DlL,QAAS,CAAErS,GAAI,GAAI0E,IAAK,UAAWzH,KAAM,UAAWiZ,MAAO,WAC3DoM,SAAU,CAAEtiB,GAAI,GAAI0E,IAAK,WAAYzH,KAAM,WAAYiZ,MAAO,YAC9DqM,OAAQ,CACNviB,GAAI,GACJ0E,IAAK,SACLzH,KAAM,SACNiZ,MAAO7K,EAAQ,6CAAY,YAE7BmX,MAAO,CACLxiB,GAAI,GACJ0E,IAAK,QACLzH,KAAM,QACNiZ,MAAO7K,EAAQ,0DAAe,OAEhCoX,QAAS,CACPziB,GAAI,GACJ0E,IAAK,UACLzH,KAAM,UACNiZ,MAAO7K,EAAQ,0DAAe,OAEhCqX,SAAU,CACR1iB,GAAI,GACJ0E,IAAK,WACLzH,KAAM,WACNiZ,MAAO7K,EAAQ,sEAAiB,YAElCsX,MAAO,CACL3iB,GAAI,GACJ0E,IAAK,QACLzH,KAAM,QACNiZ,MAAO7K,EAAQ,sEAAiB,gBAElCuX,OAAQ,CACN5iB,GAAI,GACJ0E,IAAK,SACLzH,KAAM,SACNiZ,MAAO7K,EAAQ,uCAAW,QAE5BrL,GAAI,CACFA,GAAI,GACJ0E,IAAK,KACLzH,KAAM,KACNiZ,MAAO7K,EAAQ,iCAAU,MAE3BwX,OAAQ,CACN7iB,GAAI,GACJ0E,IAAK,SACLzH,KAAM,SACNiZ,MAAO7K,EAAQ,iCAAU,QAE3ByX,KAAM,CACJ9iB,GAAI,GACJ0E,IAAK,OACLzH,KAAM,OACNiZ,MAAO7K,EAAQ,6CAAY,QAE7B0X,KAAM,CACJ/iB,GAAI,GACJ0E,IAAK,OACLzH,KAAM,OACNiZ,MAAO7K,EAAQ,6CAAY,QAE7B2X,cAAe,CACbhjB,GAAI,GACJ0E,IAAK,gBACLzH,KAAM,gBACNiZ,MAAO7K,EAAQ,uCAAW,YAE5B4X,UAAW,CACTjjB,GAAI,GACJ0E,IAAK,YACLzH,KAAM,YACNiZ,MAAO7K,EAAQ,iCAAU,YAE3B6X,cAAe,CACbljB,GAAI,GACJ0E,IAAK,gBACLzH,KAAM,gBACNiZ,MAAO7K,EAAQ,iCAAU,cC3IlB3M,GACTykB,GADSzkB,IAAKC,GACdwkB,GADcxkB,IAEZhD,GAAQ2B,GAAa,SACrBK,GAAI,OAAGhC,SAAH,IAAGA,QAAH,EAAGA,GAAOgC,KAQPuB,GAEE,kBAAMikB,GAAqBxlB,GAAMe,KAFnCQ,GAME,kBAAMikB,GAAqBxlB,GAAMgB,KC2C1CykB,GAAoB,CACxBC,IAzDgB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEnB,OADiBpkB,MAAuBA,KAKtC,sBAAKuO,MAAO,CAAE8V,UAAW,UAAzB,SACE,eAAC5V,GAAA,EAAD,CAAK6V,EAAG,EAAR,SACE,eAACC,GAAA,EAAD,CAAKvhB,MAAM,UAAUwL,QAAS4V,EAAWpN,MAAM,iBAA/C,SACE,eAAC,KAAD,CAASzI,MAAO,CAAE7U,SAAU,YAN3B,0BAuDT8qB,KA1CiB,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAEpB,OADiBpkB,MAAuBA,KAKtC,eAACykB,GAAA,EAAD,CAAYlW,MAAO,CAAElV,QAAS,GAAKmV,QAAS4V,EAAWpN,MAAM,WAA7D,SACE,eAAC,KAAD,CAAkBzI,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAJ3C,0BAwCT0hB,OA/BmB,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UAEd7lB,EADMH,GAAa,SACnBG,KAER,OADiByB,MAAuBA,KAKtC,eAACykB,GAAA,EAAD,CACEjW,QAAS,WAELvB,OAAO0X,QACI,OAATpmB,EACI,6IACA,8CAGN6lB,KAGJpN,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAbpB,SAeE,eAAC,KAAD,CAAoBkV,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAlB7C,2BA6BE4hB,GAAU,SAAC,GAAuB,IAArB9jB,EAAoB,EAApBA,GAAIsjB,EAAgB,EAAhBA,UACtBS,EAAgBX,GAAkBpjB,GACxC,OAAO,eAAC+jB,EAAD,CAAeT,UAAWA,K,qBCX7BF,GAAyB,CAC7BY,WAvDiB,SAAC,GAAwB,IAAtBV,EAAqB,EAArBA,UAEZ7lB,EADMH,GAAa,SACnBG,KAER,OADoByB,KAMlB,sBAAKuO,MAAO,CAAE8V,UAAW,UAAzB,SACE,eAAC5V,GAAA,EAAD,CAAK6V,EAAG,EAAR,SACE,eAAChW,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,GAAIW,OAAQ,IAC5B5C,QAAQ,YACRwV,QAAS4V,EACTphB,MAAM,UAJR,SAME,eAAC4K,GAAA,EAAD,UAAsB,OAATrP,EAAgB,qBAAQ,eAZpC,0BAmDTwmB,aA9BmB,SAAC,GAAwB,IAAtBX,EAAqB,EAArBA,UAEd7lB,EADMH,GAAa,SACnBG,KAER,OADoByB,KAMlB,eAACykB,GAAA,EAAD,CACEjW,QAAS,WAELvB,OAAO0X,QACI,OAATpmB,EACI,6IACA,8CAGN6lB,KAGJpN,MAAM,aAZR,SAcE,eAAC,KAAD,MAlBK,0BA0BTgO,aAjCmB,SAAC,GAAD,EAAGZ,UAAH,OAAwB,2BA6C9Ba,GATY,SAAC,GAA4B,IAA1BnkB,EAAyB,EAAzBA,GAAIsjB,EAAqB,EAArBA,UAC1BS,EAAgBX,GAAkBpjB,GACxC,OACE,eAAC2N,GAAA,EAAD,UACE,eAACoW,EAAD,CAAeT,UAAWA,OCnEhC,I,UCFe,SAASc,GAAT,GAAmD,IAA/B9lB,EAA8B,EAA9BA,KAAM+lB,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAK1H,EAAc,EAAdA,MACjD,OACE,eAAC2H,GAAA,EAAD,CACE9W,MAAO,CACLiP,SAAU,WACVC,OAAQ2H,OAAM/W,EAAY,EAC1B+W,IAAKA,EAAM,QAAK/W,EAChBiX,KAAM5H,OAAQrP,EAAY,EAC1BqP,MAAOA,EAAQ,OAAIrP,EACnBpT,MAAO,OACPJ,WAAY,SACZkf,eAAgB,UAElBwL,SAAUnmB,EAXZ,SAaG+lB,IChBA,SAASK,GAAMC,GACpB,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAAc,IAALF,MAW/C,IAAMI,GAAS,yCAAG,sCAAAnZ,EAAA,6DAASoZ,EAAT,EAASA,QAASX,EAAlB,EAAkBA,IAAK/lB,EAAvB,EAAuBA,KAAvB,IAA6BsS,SAA7B,MAAiC,EAAjC,EACvBoU,EAAQ,CAAEC,MAAM,EAAMZ,MAAK/lB,SADJ,SAEjBomB,GAAM9T,GAFW,OAGvBoU,EAAQ,CAAEC,MAAM,EAAOZ,IAAK,GAAI/lB,KAAM,SAHf,2CAAH,sDAMT4mB,GAAY,yCAAG,WAAOF,EAAc3Z,GAArB,UAAAO,EAAA,sEACpBmZ,GAAU,CACdC,UACAX,IAAKhZ,EAAQ,+FAAsB,yBACnC/M,KAAM,UACNsS,EAAG,MALqB,2CAAH,wDASZuU,GAAc,yCAAG,WAAOH,EAAc3Z,GAArB,UAAAO,EAAA,sDAC5BmZ,GAAU,CACRC,UACAX,IAAKhZ,EAAQ,8IAAkC,4BAC/C/M,KAAM,UAJoB,2CAAH,wDAQd8mB,GAAU,yCAAG,WAAOJ,EAAc3Z,GAArB,UAAAO,EAAA,sEAClBmZ,GAAU,CACdC,UACAX,IAAKhZ,EAAQ,qHAA6B,qBAC1C/M,KAAM,QACNsS,EAAG,IALmB,2CAAH,wDAQVyU,GAAa,yCAAG,WAAOL,EAAcX,GAArB,UAAAzY,EAAA,sEACrBmZ,GAAU,CACdC,UACAX,MACA/lB,KAAM,QACNsS,EAAG,IALsB,2CAAH,wDASb0U,GAAiB,yCAAG,WAAON,EAAc3Z,GAArB,UAAAO,EAAA,sEACzBmZ,GAAU,CACdC,UACAX,IAAKhZ,EAAQ,wIAAiC,qBAC9C/M,KAAM,QACNsS,EAAG,IAL0B,2CAAH,wDASjB2U,GAAgB,yCAAG,WAAOP,EAAc3Z,GAArB,UAAAO,EAAA,sEACxBmZ,GAAU,CACdC,UACAX,IAAKhZ,EACD,+LACA,yCACJ/M,KAAM,QACNsS,EAAG,IAPyB,2CAAH,wDAWhB4U,GAAY,yCAAG,WAAOR,EAAcX,GAArB,UAAAzY,EAAA,sEACpBmZ,GAAU,CACdC,UACAX,MACA/lB,KAAM,QACNsS,EAAG,IALqB,2CAAH,wDAQZ6U,GAAW,yCAAG,WAAOT,EAAcX,GAArB,UAAAzY,EAAA,sEACnBmZ,GAAU,CACdC,UACAX,MACA/lB,KAAM,UACNsS,EAAG,IALoB,2CAAH,wDASX8U,GAAgB,SAACtP,EAAUuP,GAAsB,IAAD,IAC3D,OAAU,OAAHvP,QAAG,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAY4d,UAAZ,eAAuB5Z,IAAKnQ,KAAKC,MAAMua,EAAIrO,KAAK4d,GAAU5d,MAAQ,MC1FrE9G,GACJ,0GAEIC,GAAcC,OAAaC,MAAM,CACrCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,aAEVG,GAAgB,CAAEC,SAAUC,aAAYR,KAE/CS,GAAcR,OAAaC,MAAM,CACrCQ,SAAUT,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7CM,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAElCO,GAAgB,CAAEL,SAAUC,aAAYC,KAE/CikB,GAAgBzkB,OAAaC,MAAM,CACvCQ,SAAUT,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7CM,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAElCskB,GAAkB,CAAEpkB,SAAUC,aAAYkkB,KACjDE,GAAiB3kB,OAAaC,MAAM,CACxCQ,SAAUT,SAEC4kB,GAAmB,CAAEtkB,SAAUC,aAAYokB,KAElD/jB,GAAYZ,OAAaC,MAAM,CACnCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAGhCS,GAAc,CAAEP,SAAUC,aAAYK,KAC7CikB,GAAa7kB,OAAaC,MAAM,CACpCS,SAAUV,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC7C0kB,YAAa9kB,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAChD2kB,aAAc/kB,OAAaE,WAAWC,IAAI,GAAGC,IAAI,OAGtC4kB,GAAe,CAAE1kB,SAAUC,aAAYskB,KAE9C/jB,GAAed,OAAaC,MAAM,CACtCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC3CW,MAAOf,SAEIgB,GAAiB,CAAEV,SAAUC,aAAYO,KAEhDG,GAAajB,OAAaC,MAAM,CACpCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WACrBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,WACHkB,MAAOpB,OAAaoB,UAETC,GAAe,CAAEf,SAAUC,aAAYU,KAC9CK,GAAYtB,OAAaC,MAAM,CACnCglB,QAASjlB,OACTlE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WACrBqB,MAAOvB,OAAaG,IAAI,GAAGD,aAEhBsB,GAAc,CAAElB,SAAUC,aAAYe,KAE7CG,GAAazB,OAAaC,MAAM,CACpCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KAC3Cc,MAAOlB,SAEI0B,GAAe,CAAEpB,SAAUC,aAAYkB,KAC9CyjB,GAAgBllB,OAAaC,MAAM,CACvCqa,OAAQta,OAAaG,IAAI,GAAGD,WAAWilB,WAEvCC,KAAMplB,SAEKqlB,GAAkB,CAAE/kB,SAAUC,aAAY2kB,KAEjDI,GAActlB,OAAaC,MAAM,CACrCwc,SAAUzc,OAAaE,WACvBgB,MAAOlB,OAEJmB,QAAQrB,GAAa,6BACrBI,aAEQqlB,GAAkB,CAAEjlB,SAAUC,aAAY+kB,K,wBCnFxC,SAASE,GAAT,GAMN,IALP7X,EAKM,EALNA,KACAnE,EAIM,EAJNA,QACAic,EAGM,EAHNA,QACAC,EAEM,EAFNA,SACA9rB,EACM,EADNA,SAEA,OACE,eAAC+rB,GAAA,EAAD,CACEhY,KAAMA,EACN8X,QAASA,EACT7rB,SAAUA,EACV4P,QAAS,CAAEjR,MAAOiR,EAAQ9P,OAJ5B,SAMGgsB,I,cCZQ,SAASE,GAAT,GAWN,IAVP/b,EAUM,EAVNA,SACAE,EASM,EATNA,OACAjO,EAQM,EARNA,KACAiQ,EAOM,EAPNA,MACA2M,EAMM,EANNA,IAMM,IALNxY,gBAKM,aAJN4L,iBAIM,SAHN+Z,EAGM,EAHNA,QACA3vB,EAEM,EAFNA,OACG+e,EACG,qGACN,OACE,eAACpJ,GAAA,EAAD,cACEC,UAAWA,EACXga,aAAa,MACb5lB,SAAUA,EACVpE,KAAMA,EACNoQ,WAAS,EAET9P,cAAiB,OAAHsc,QAAG,IAAHA,OAAA,EAAAA,EAAM5c,KAAS+pB,GAAW,GACxC9Z,MAAOA,EACPrC,QAAOK,EAAOjO,GACdkQ,SAAUnC,EACV9S,QAAQ,WACRuV,MAAO,CAAEpW,OAAQA,QAAkBkW,GACnClW,OAAO,SACH+e,I,gDC7BK,SAAS8Q,GAAT,GAON,IAWHjqB,EAjBJsR,EAMM,EANNA,KACA4Y,EAKM,EALNA,IACA9b,EAIM,EAJNA,MACAqM,EAGM,EAHNA,IACA0P,EAEM,EAFNA,SACAC,EACM,EADNA,UAOQnlB,EAAmBqM,EAAnBrM,MAAOolB,EAAY/Y,EAAZ+Y,QACT/N,EAAO+N,EAAU1rB,KAAKC,MAAMyrB,GAAW,KACvCC,KAAQhO,IAAQ7B,IAAM6B,EAAK7B,GAE3BrV,GAAY,OAAJkM,QAAI,IAAJA,OAAA,EAAAA,EAAMlM,OAAN,OAAckM,QAAd,IAAcA,OAAd,EAAcA,EAAMlM,MAAQ,KAO1C,OAJEpF,EADEmqB,EACK/b,EAAK,OAAGkD,QAAH,IAAGA,OAAH,EAAGA,EAAI,UAAM6Y,EAAN,OAAP,OAA6B7Y,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAO6Y,GAEzC/b,EAAK,OAAGkD,QAAH,IAAGA,OAAH,EAAGA,EAAM9N,OAAT,OAAkB8N,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMtR,KAGpC,gBAAC0Q,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZtB,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiBstB,EAAQ,eAAYha,EACrC0L,eAAgB,iBARpB,UAWG1K,EAAKrM,QAAUilB,GACd,gBAACxZ,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAAC8T,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRoe,aAAc,EACdjf,gBAAiBiI,GAAgB,OACjCvI,UAAW,KAGf,eAACmT,GAAA,EAAD,CACEW,MAAOvL,EAzCC,CAChB7J,WAAY,GACZC,YAAa,IAuCsB,GAC3BJ,QAASmT,EAAQ,YAAc,YAFjC,SAIGpO,QAILiF,GACA,eAAC4K,GAAA,EAAD,CAAY5U,QAASmT,EAAQ,YAAc,YAA3C,SACGpO,IAGJoqB,GACC,eAACva,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVsJ,MAAO,OACPslB,YAAa,GACbC,aAAc,IALlB,SAQGplB,OCtEX,SAASqlB,GAAUpI,GACjB,GAAIA,EAAM,EACR,OAAOA,EAAI3D,QAAQ,GAAGC,QAAQ,oBAAqB,OAIvD,IA2De+L,GA3DQ,SAAC,GAA0B,IAAxBpZ,EAAuB,EAAvBA,KAAMlD,EAAiB,EAAjBA,MAC9B,OACE,eAACsC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNlC,UAAW4S,EAAQ,MAAQ,OAJ/B,SAOE,gBAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEiP,SAAU,WAAY4H,IAAK,GAAzC,UACE,eAAC3W,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CACEW,MAAO,CACL8V,UAAWlY,EAAQ,QAAU,QAFjC,SAKGA,EAAQkD,EAAK9N,OAAS8N,EAAKtR,SAGhC,gBAAC0Q,GAAA,EAAD,CAAK9T,QAAQ,OAAOC,cAAc,MAAM2T,MAAO,CAAEma,aAAc,GAA/D,UACGrZ,EAAKsZ,cACJ,eAAC/a,GAAA,EAAD,CACEW,MAAO,CACLvL,MAAO,UACP/H,MAAO,IACPvB,SAAU,GACV6uB,aAAc,GACdD,YAAa,GACbjE,UAAWlY,EAAQ,QAAU,QAE/BnT,QAASmT,EAAQ,YAAc,UATjC,SAWGA,EAAQkD,EAAKuZ,eAAiBvZ,EAAKsZ,eAGvCtZ,EAAKwZ,WACJ,eAACjb,GAAA,EAAD,CACEW,MAAO,CACLnV,YAAa,GACb4J,MAAO,UACP/H,MAAO,IACPvB,SAAU,IAEZV,QAASmT,EAAQ,YAAc,UAPjC,SASGA,EAAQkD,EAAKyZ,YAAczZ,EAAKwZ,YAGrC,eAACjb,GAAA,EAAD,CACEW,MAAO,CAAEvL,MAAO,UAAW/H,MAAO,IAAKvB,SAAU,IACjDV,QAASmT,EAAQ,YAAc,UAFjC,SAIGkD,EAAK7L,MAAQglB,GAAUnZ,EAAK7L,OAAS,eC1DlD,IAmBeulB,GAnBC,SAAC,GAAe,IAAb5c,EAAY,EAAZA,MACjB,OACE,eAACsC,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,WACV4H,IAAK,GACL1H,MAAOvR,OAAQkC,EAAY,GAC3BiX,KAAMnZ,EAAQ,QAAKkC,GAErB1T,QAAQ,OACRc,KAAK,IACLse,eAAe,SACflf,WAAW,SAVb,SAYE,eAACuhB,GAAA,EAAD,OCXS,SAAS4M,GAAQjxB,GAAa,IACnCwC,EAA0DxC,EAA1DwC,MAAOkE,EAAmD1G,EAAnD0G,KAAewqB,GAAoClxB,EAA7C+G,QAA6C/G,EAApCkxB,QAAQ3X,EAA4BvZ,EAA5BuZ,OAAQ/T,EAAoBxF,EAApBwF,OAAQgU,EAAYxZ,EAAZwZ,QAEhDvO,EACFzI,EAAMR,QAAQI,WAAWC,QAG7B,OACE,eAACqU,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,QAFb,SAKG8D,GACC,eAAC,KAAMyqB,SAAP,UACE,gBAACza,GAAA,EAAD,CACE9T,QAAQ,OACRE,WAAW,SACX0T,MAAO,CACLwL,eAAgBkP,EAAS,aAAe,gBACxCxtB,KAAM,EACN8sB,aAAcU,OAAS5a,EAAY,GACnCia,YAAaW,OAAS5a,EAAY,GAClC5T,UAAWwuB,OAAS5a,EAAY,IARpC,UAWE,gBAACI,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAAC,GAAD,CACE+H,SAAUjE,EAAKiE,SACf3E,KAAMU,EAAKV,KACX9F,KAAM,KAER,eAACwW,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,SAChB5gB,WAAY,GACZC,YAAa,GACbqB,UAAW,GAPf,SAUE,eAACmT,GAAA,EAAD,CAAYW,MAAO,CAAEvL,SAArB,SACGvE,EAAKV,KAAOU,EAAKV,KAAOU,EAAKiE,gBAIpC,eAAC+L,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZkf,eAAgB,SAChB9J,OAAQ,WAEVzB,QAAO,wBAAE,uBAAA9B,EAAA,6DACP4E,IADO,SAED/T,EAAOyP,aAFN,OAGPuE,EAAQC,KAAK,KAHN,2CATX,SAeE,eAACzC,GAAD,CAAQ9W,KAAM,GAAI+K,MAAO,OAAQ/B,KAAM,oBC7DtC,SAASkoB,GAAT,GA2BT,IA1BJ1G,EA0BG,EA1BHA,MACA1kB,EAyBG,EAzBHA,KACAqrB,EAwBG,EAxBHA,QACAprB,EAuBG,EAvBHA,MACAqrB,EAsBG,EAtBHA,eACAC,EAqBG,EArBHA,eACAC,EAoBG,EApBHA,YACAC,EAmBG,EAnBHA,SACA1d,EAkBG,EAlBHA,SACA2d,EAiBG,EAjBHA,QACAzS,EAgBG,EAhBHA,MAgBG,IAfH/b,aAeG,MAfK,IAeL,MAdHkI,aAcG,aAbHumB,eAaG,aAZHC,cAYG,SAXHlE,EAWG,EAXHA,GAEAmE,GASG,EAVHC,WAUG,EATHD,aAEAne,GAOG,EARHqe,aAQG,EAPHre,SACAyc,EAMG,EANHA,SACA6B,EAKG,EALHA,aACAC,EAIG,EAJHA,SACA7xB,EAGG,EAHHA,OACAgU,EAEG,EAFHA,MAGA,OACE,gBAACsC,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTC,cAAe,MACfC,WAAY,SACZ1C,OAAQA,QAAkBkW,GAL9B,WASIqb,GACA,eAACjb,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTM,MAAO,IACPJ,WAAY,SACZe,OAAQ,GACRvC,QAAS,IANb,SASE,eAACuU,GAAA,EAAD,UAAaoJ,MAGjB,eAACiT,GAAA,EAAD,CACEL,YAAaA,EACbC,YAAU,EACVT,QAASA,EACTc,eAAgB,SAACC,GAAD,OACR,OAANA,QAAM,IAANA,OAAA,EAAAA,EAASjC,IACLiC,EAAOjC,GACP/b,EAAK,OACLge,QADK,IACLA,OADK,EACLA,EAAQ5oB,QACF,OAAN4oB,QAAM,IAANA,OAAA,EAAAA,EAAQpsB,MACRosB,EAAOpsB,KACP,IAENqsB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAO/S,MAAQiT,EAAOjT,KAC7DkT,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CACEhe,MAAOA,EACPkD,KAAM8a,EACNjC,SAAUA,KAGdlqB,MAAOA,EACPgsB,SAAUA,EACV3M,SAAU,SAACjgB,EAAGmtB,GACZlB,EAAekB,GACfjB,GAAe,GACXS,GACFA,EAAa,OAGjBxb,MAAO,CAAEic,kBAAmB/E,QAAUpX,GACtC5C,QAASA,EAAU,CAAEgf,MAAOhf,EAAQtP,gBAAckS,EAClDqc,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEE7pB,GAAI/C,EACJA,KAAMA,EACNiQ,MAAO0b,EAAU1S,OAAQ3I,EACzBrV,QAAQ,WACR2S,MAAO4d,EACPhb,MAAO,CAAEtT,SACT2vB,gBAAiB,CACfrc,MAAO,CAAE7U,SAAU,KAErBuU,SAAU,SAACzI,GACTgkB,EAASqB,QAAUrlB,EACnBsG,EAAStG,UAKhBrC,GACC,eAAC8mB,GAAA,EAAD,CACEJ,YAAU,EACVT,QAASA,EACTQ,YAAaA,EACbM,eAAgB,SAACC,GAAD,OAAiBA,EAAOhnB,OACxCinB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAO/S,MAAQiT,EAAOjT,KAC7DkT,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAYhnB,OAAK,EAACkM,KAAM8a,KAE1BnsB,MAAOA,EACPqf,SAAU,SAACjgB,EAAGmtB,GACZlB,EAAekB,GACfjB,GAAe,IAEjB/a,MAAO,CAAEic,kBAAmB,IAC5BE,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEE7pB,GAAG,QACH/C,KAAK,QACL/E,QAAQ,WACRgV,MAAO0b,EAAUjH,EAAMqI,iBAAczc,EACrC1C,MAAO4d,EACPhb,MAAO,CAAEtT,MAAO,KAChB2vB,gBAAiB,CACfrc,MAAO,CAAE7U,SAAUyS,EAAQ,GAAK,YAMxCwd,GACA,eAAClF,GAAA,EAAD,CACEsG,oBAAkB,EAClBvc,QAAS,WACHib,GAASA,KAHjB,SAME,eAAC,KAAD,S,wBC3IK,SAASuB,GAAT,GAMX,IALFC,EAKC,EALDA,SACAjrB,EAIC,EAJDA,MACAkrB,EAGC,EAHDA,kBACAC,EAEC,EAFDA,KACAhf,EACC,EADDA,MAEMif,EAAUjf,EAAQ,sEAAiB,kBACzC,OACE,eAACsC,GAAA,EAAD,UACGwc,EAASra,KAAI,SAACzQ,GACb,IAC8B,EAA9B,OAAIA,EAAO+nB,WAAaiD,EAEpB,gBAAC1c,GAAA,EAAD,WACE,eAAC4c,GAAA,EAAD,CACEC,QACE,eAACnO,GAAA,EAAD,CACEC,SAAc,OAALpd,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,eAA0B9nB,SAAS,EAC5Cid,SAAU,kBACR6N,EAAkB,CAChB/qB,OAAQA,EAAO+nB,SACf5nB,OAAQ,KACRM,KAAM,WAGV7C,KAAMoC,EAAO+nB,SAAS9nB,MACtB4C,MAAM,YAGVgL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQuV,MAAO,CAAEoP,WAAY,QAAjD,SACGyN,MAIP,eAAC3c,GAAA,EAAD,UAzBU,CAAC,MAAO,MAAO,MAAO,OA0BrBmC,KAAI,SAAC2a,GAAa,IAAD,gDACxB,OACE,+BACE,gBAACC,GAAA,EAAD,CAAW7Q,KAAG,EAAd,UACE,eAAClM,GAAA,EAAD,CAAKF,MAAO,CAAEkd,SAAU,IAAKhxB,UAAW,IAAxC,SACE,eAACmT,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAEoP,WAAY,QAFvB,SAIGxR,EACG7K,GAAaiqB,GAAIhqB,OACjBD,GAAaiqB,GAAIxtB,SAGzB,eAACstB,GAAA,EAAD,CACEC,QACE,eAACnO,GAAA,EAAD,CACEC,SACO,OAALpd,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,mBAA2BqD,UAA3B,eAAgCnrB,SAAS,EAE3Cid,SAAU,kBACR6N,EAAkB,CAChB/qB,OAAQA,EAAO+nB,SACf5nB,OAAQirB,EACR3qB,KAAM,WAGV3I,KAAK,QACL+xB,SAAQ,OAAEhqB,QAAF,IAAEA,GAAF,UAAEA,EAAQG,EAAO+nB,iBAAjB,aAAE,EAA0B9nB,MACpCsrB,cAAa,OAAE1rB,QAAF,IAAEA,GAAF,UAAEA,EAAQG,EAAO+nB,iBAAjB,aAAE,EAA0B9nB,MACzCrC,KAAI,UAAKwtB,EAAL,SACJvoB,MAAM,YAGVgL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQgK,MAAM,gBAAlC,SACGmJ,EAAQ,2BAAS,YAIxB,eAACkf,GAAA,EAAD,CACEC,QACE,eAACnO,GAAA,EAAD,CACEC,SACO,OAALpd,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,mBAA2BqD,UAA3B,eAAgC/G,QAAQ,EAE1CnH,SAAU,kBACR6N,EAAkB,CAChB/qB,OAAQA,EAAO+nB,SACf5nB,OAAQirB,EACR3qB,KAAM,UAGV3I,KAAK,QACL+xB,UACO,OAALhqB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,eAA0B9nB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAO+nB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgCnrB,OAElCsrB,eACO,OAAL1rB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,eAA0B9nB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAO+nB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgCnrB,OAElCrC,KAAI,UAAKwtB,EAAL,QACJvoB,MAAM,YAGVgL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQgK,MAAM,gBAAlC,SACGmJ,EAAQ,2BAAS,aAIxB,eAACkf,GAAA,EAAD,CACEC,QACE,eAACnO,GAAA,EAAD,CACEC,SACO,OAALpd,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,mBAA2BqD,UAA3B,eAAgCvM,QAAQ,EAE1C3B,SAAU,kBACR6N,EAAkB,CAChB/qB,OAAQA,EAAO+nB,SACf5nB,OAAQirB,EACR3qB,KAAM,UAGV3I,KAAK,QACL+xB,UACO,OAALhqB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,eAA0B9nB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAO+nB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgCnrB,SADhC,OAEAJ,QAFA,IAEAA,GAFA,UAEAA,EAAQG,EAAO+nB,iBAFf,iBAEA,EAA2BqD,UAF3B,aAEA,EAAgC/G,MAElCkH,eACO,OAAL1rB,QAAK,IAALA,GAAA,UAAAA,EAAQG,EAAO+nB,iBAAf,eAA0B9nB,SAA1B,OACAJ,QADA,IACAA,GADA,UACAA,EAAQG,EAAO+nB,iBADf,iBACA,EAA2BqD,UAD3B,aACA,EAAgCnrB,SADhC,OAEAJ,QAFA,IAEAA,GAFA,UAEAA,EAAQG,EAAO+nB,iBAFf,iBAEA,EAA2BqD,UAF3B,aAEA,EAAgC/G,MAElCzmB,KAAI,UAAKwtB,EAAL,QACJvoB,MAAM,YAGVgL,MACE,eAACJ,GAAA,EAAD,CAAY5U,QAAQ,QAAQgK,MAAM,gBAAlC,SACGmJ,EAAQ,iCAAU,gBApGnBof,UAzBRprB,EAAO+nB,UAyIZ,wBAAU/nB,EAAO+nB,e,YChFnByD,GAxEM,SAAC5zB,GAAD,OACnB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAUgG,KAAK,eAAf,SACE,eAAC,KAAD,UACG,cASK,IAEA6tB,EACAC,EAXFC,EAQC,EARDA,KAAMvJ,EAQL,EARKA,SAAUwJ,EAQf,EAReA,UAAWC,EAQ1B,EAR0BA,cAAeC,EAQzC,EARyCA,WAE1CC,EAMC,EANDA,aACAC,EAKC,EALDA,gBACAC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,kBACAC,EAEC,EAFDA,gBAGIC,EAAQR,EAAUla,OAAS,EAGjC,GAAI0a,EAEFX,EAAYG,EADZF,EAAQ,OAEH,CAAC,IAAD,eACKG,EADL,GACJH,EADI,KAEL,IAAMW,EAAYV,EAAK1Z,QACrB,SAACuI,GAAD,OAAc4H,EAAS5H,KAASkR,KAChC,GACFD,EAAS,6BAAQY,GAAcP,EAAWJ,IAG5C,IAAMY,EAASF,EAAQ,CAAC,GAAKP,EAmBvBpc,EAAOoc,EAAcna,OAAS,GAAK0a,EACzC,OACE,+BACG5c,KAAM+c,aAAa30B,EAAM4vB,SAAzB,6BACI5vB,GADJ,IAEC6X,OACA2c,QACA5R,IAAKiR,EACLlE,QAjBgB,WAChB6E,EACFJ,EAAgB,CAAEM,YAElBP,EAAa,CAAEO,WACfL,EAAkB,CAAEK,aAalBE,UAAW50B,EAAM40B,UACjBC,WAAY70B,EAAM60B,WAClBC,aA5Be,WACfN,EACFD,EAAgB,CAAEG,YAElBP,EAAa,CAAEO,WACfJ,EAAkB,CAAEI,uBA8B9B,gBAAC,KAAD,CAAU1uB,KAAK,OAAf,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAqBA,KAAK,wB,qBCtCjB+uB,GA/BK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAU/pB,EAAiB,EAAjBA,MAAiB,EAC5B0I,oBAAS1I,GADmB,oBACzCsW,EADyC,KACrC0T,EADqC,KAUhD,OACE,eAACve,GAAA,EAAD,CACEF,MAAO,CACL+Z,YAAa,GACbjY,WAAY,EACZqY,aAAc,GACd7tB,WAAY,SACZkf,eAAgB,SAChBnf,cAAe,UAPnB,SAUE,eAAC,KAAD,CACE4G,OAAQA,GACRwB,MAAOsW,GAAM,QACbre,MAAO,IACPgyB,cAAY,EACZ5P,SAvBuB,SAAC4K,GAC5B+E,EAAM/E,EAAIiF,KACNH,GACFA,EAAS9E,EAAIiF,WCcbC,GAAgB7yB,cAAW,SAACC,GAAD,aAC/Ba,aAAa,CACX+U,OAAQ,CACNkU,UAAW,QACX,gBAAiB,CACf3qB,SAAU,QAGZsJ,MAAOkM,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,KAEhDgW,OAAQ,CACNiU,UAAW,QACX,gBAAiB,CACf3qB,SAAU,QAGZsJ,MAAOkM,aAAK3U,EAAMR,QAAQI,WAAWC,QAAS,KAEhDkB,QAASf,EAAMgB,OAAOD,QACtB8xB,YAAa,CACXnyB,MAAOwG,GACP1G,gBAAiBR,EAAMR,QAAQC,QAAQC,MAEzCozB,gBAAiB,CACfC,SAAU,QAEZC,QAAM,oBACHhzB,EAAMizB,YAAYC,GAAG,MAAQ,CAC5BxyB,MAAOwG,GACPisB,WAAY,IAHV,iCAKanzB,EAAMR,QAAQC,QAAQC,MALnC,GAON+V,MAAO,CACLtW,SAAU,QACV2W,WAAY,GACZsd,cAAe,GACf,UAAW,CACT5yB,gBAAiBR,EAAMR,QAAQC,QAAQ4zB,QAG3C3c,OAAQ,CACN5X,QAAS,GACTivB,YAAa,GACbvtB,gBAAiBR,EAAMR,QAAQC,QAAQC,KACvC,UAAW,CACTc,gBAAiBR,EAAMR,QAAQC,QAAQ4zB,QAG3CC,KAAM,CACJlzB,QAAS,QAEXsG,KAAM,CACJtG,QAAS,OACTE,WAAY,SACZkf,eAAgB,WAChBhf,gBAAiB,WAEnB+yB,OAAO,gBACJvzB,EAAMizB,YAAYC,GAAG,MAAQ,CAC5BxyB,MAAM,eAAD,OAAiBwG,GAAjB,OACLtI,WAAYsI,KAGhBssB,WAAW,cACT30B,YAAamB,EAAMG,QAAQ,IAC1BH,EAAMizB,YAAYC,GAAG,MAAQ,CAC5B9yB,QAAS,SAGba,QAAS,CACPwyB,SAAU,EACV30B,QAASkB,EAAMG,QAAQ,IAGzB,UAAW,CACT,uBAAwB,CACtBO,MAAO,SAET,6BAA8B,CAC5B,qBAAsB,iCAExB,6BAA8B,CAC5BF,gBAAiB,wBA0HVkzB,OAnHf,SAAmBl2B,GAAkB,IAC3BkV,EAAWlV,EAAXkV,OACFsE,EAAU2c,eAER1e,EAA8DzX,EAA9DyX,SAAUD,EAAoDxX,EAApDwX,YAAa8B,EAAuCtZ,EAAvCsZ,KAAMlF,EAAiCpU,EAAjCoU,MAAO1N,EAA0B1G,EAA1B0G,KAAMK,EAAoB/G,EAApB+G,QAASwS,EAAWvZ,EAAXuZ,OACrD7F,EAAU0hB,KACV5yB,EAAQ4zB,eANoB,EAOExe,KAAMjE,UAAS,GAPjB,oBAO3B0iB,EAP2B,KAOf1e,EAPe,KAS5B2e,EAAqB,WACzB3e,GAAe0e,IAEXE,OACOjgB,IAAXpB,EAAuB,kBAAMA,IAASshB,SAASC,WAAOngB,EAExD,OACE,uCACE,eAACogB,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,eAACC,GAAA,EAAD,CAAQpR,SAAS,QAAQ9P,UAAWjC,EAAQqiB,OAA5C,SACE,gBAACe,GAAA,EAAD,WACE,eAACpK,GAAA,EAAD,CACEzhB,MAAM,UACN8rB,aAAW,cACXC,KAAK,QACLvgB,QAAS6f,EACT3gB,UAAWjC,EAAQsiB,WALrB,SAOE,eAAC,KAAD,MAEF,eAACtf,GAAA,EAAD,CAAKF,MAAO,CAAE9S,KAAM,GAApB,SACE,eAACutB,GAAD,CACEC,QAAM,EACN9c,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACNK,QAASA,aAOnB,uBAAK4O,UAAWshB,aAAKvjB,EAAQ8hB,QAASuB,aAAW,kBAAjD,UACE,eAACL,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,eAACM,GAAA,EAAD,CACEX,UAAWA,EACXt1B,QAAQ,YACR4W,KAAMwe,EACN1G,QAAS2G,EACT5iB,QAAS,CACPjR,MAAOiR,EAAQ2hB,aAEjB8B,WAAY,CACVC,aAAa,GATjB,SAYE,eAAC,GAAD,CACE9d,KAAMA,EACN7B,SAAUA,EACVD,YAAaA,EACb9D,QAASA,EACTU,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACNiR,cAAeA,EACf4B,OAAQA,EACR/T,OAAQA,GACRgU,QAASA,QAIf,eAACkd,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,gBAACM,GAAA,EAAD,CACExjB,QAAS,CACPjR,MAAOiR,EAAQ2hB,aAEjBp0B,QAAQ,YACR4W,MAAI,EACJrB,MAAO,CAAE8B,WAAY,IANvB,UAQE,eAAC2Y,GAAD,CACE7c,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACNK,QAASA,EACTwS,OAAQA,EACR/T,OAAQA,GACRgU,QAASA,IAEX,eAAC9C,GAAA,EAAD,CACEF,MAAO,CACL3S,OAAQ,EACRnB,UAAW,GACXM,gBAAiB,UAGrB,eAAC,GAAD,CACEsW,KAAMA,EACN7B,SAAUA,EACVD,YAAaA,EACb9D,QAASA,EACTU,MAAOA,EACP5R,MAAOA,EACPkE,KAAMA,EACN6S,OAAQA,EACR/T,OAAQA,GACRgU,QAASA,gB,8BC1NV8d,GAAa,SAAC,GAA2B,IAAzBrxB,EAAwB,EAAxBA,MAAOgF,EAAiB,EAAjBA,MAClC,OACE,eAAC4K,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,GAAIikB,WAAY,OAAQ3a,SAAvD,SACGhF,KAWMsxB,GAAW,SAAC,GAAqB,IAAnBruB,EAAkB,EAAlBA,KAAM+B,EAAY,EAAZA,MAC/B,OACE,eAACyL,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRoe,aAAc,GACdnf,WAAY,SACZkf,eAAgB,UAPpB,SAUE,eAAChL,GAAD,CAAQ/L,MAAOA,EAAO/B,KAAMA,OAqBrBsuB,GAAY,SAAC,GAA2B,IAAzBvY,EAAwB,EAAxBA,MAAOhU,EAAiB,EAAjBA,MACjC,OACE,eAAC4K,GAAA,EAAD,CAAYW,MAAO,CAAE7U,SAAU,GAAIikB,WAAY,OAAQ3a,SAAvD,SACGgU,KChDQ,SAASwY,GAAT,GAA4D,IAAzCxY,EAAwC,EAAxCA,MAAOhZ,EAAiC,EAAjCA,MAAOiD,EAA0B,EAA1BA,KAAM+B,EAAoB,EAApBA,MAAOysB,EAAa,EAAbA,KAC3D,OACE,eAACC,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,KAAxB,SACE,eAAC6S,GAAA,EAAD,CAAKkhB,EAAG,EAAR,SACE,gBAACC,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,gBAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,UAFjD,UAIE,eAAC,GAAD,CAAU/W,MAAOA,EAAO/B,KAAMA,IAC9B,eAAC,GAAD,CAAW+B,MAAOA,EAAOgU,MAAOA,SAGpC,gBAAC4Y,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,UAFjD,SAIE,eAAC,GAAD,CAAY/W,MAAOA,EAAOhF,MAAOA,MAElCyxB,GACC,gBAAC,KAAMvG,SAAP,WACE,eAAC4G,GAAA,EAAD,IACA,eAACrhB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEpV,WAAY,GAAIC,YAAa,IAA1D,SACE,eAACwU,GAAA,EAAD,CACEW,MAAO,CAAEwhB,UAAW,SAAU/sB,MAAO,QACrChK,QAAQ,UAFV,SAIGy2B,mB,qCCKRO,GAAgB,SAAC,GAAyB,IAAvBjQ,EAAsB,EAAtBA,KAAMhiB,EAAgB,EAAhBA,KAWpC,MAAO,CACLijB,MAXY5jB,KAAE2iB,GACbkQ,QAAQlyB,GACR6S,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMoyB,EACNC,MAAOhzB,KAAEizB,OAAOH,EAAO,OAAOre,OAC9BgL,MAAOzf,KAAEkzB,MAAMJ,EAAO,cAEvBlyB,QAKDoyB,MAJYrQ,EAAKlO,OAKjBgL,MAJYzf,KAAEkzB,MAAMvQ,EAAM,Y,iCC9CjBwQ,GAAmB,SAAC,GAOrB,IANVhoB,EAMS,EANTA,gBACA8U,EAKS,EALTA,SACAlR,EAIS,EAJTA,MACAsW,EAGS,EAHTA,MACA+N,EAES,EAFTA,MACAC,EACS,EADTA,kBAEMhlB,EAAU1P,KAEhB,OACE,eAAC0S,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,OAH/B,SAME,eAACukB,GAAA,EAAD,CAAahjB,UAAWjC,EAAQzP,YAAhC,SACE,gBAAC20B,GAAA,EAAD,CACE7vB,GAAG,cACH9C,MAAOuK,EACP8U,SAAU,SAACrf,GACTqf,EAASrf,GACTyyB,EAAkB,IAAIhoB,OAExBzP,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRlC,SAAU,GACVikB,WAAY,OACZ3a,MAAO,QAZX,UAeGwtB,GAASA,EAAMjZ,SAAS,IACvB,eAAC,KAAD,CACEhJ,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAM,MAFR,SAIGykB,EAAMjK,MAGVgY,GAASA,EAAMjZ,SAAS,IACvB,eAAC,KAAD,CACEhJ,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAM,QAFR,SAIGykB,EAAMmO,QAGVJ,GAASA,EAAMjZ,SAAS,IACvB,eAAC,KAAD,CACEhJ,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAM,OAFR,SAIGykB,EAAMoO,OAGVL,GAASA,EAAMjZ,SAAS,KACvB,eAAC,KAAD,CACEhJ,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAM,QAFR,SAIGykB,EAAMnK,QAGVkY,GAASA,EAAMjZ,SAAS,MACvB,eAAC,KAAD,CACEhJ,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAM,OAFR,SAIGykB,EAAMpK,OAIVmY,GAASA,EAAMjZ,SAAS,MACvB,eAAC,KAAD,CACEhJ,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAM,SAFR,SAIGmO,EAAQ,2BAAS,wB,gFC/DjB,SAAS2kB,GAAT,GAWN,IAVP3kB,EAUM,EAVNA,MACAsW,EASM,EATNA,MACAsO,EAQM,EARNA,SACAC,EAOM,EAPNA,OACAz2B,EAMM,EANNA,MACAiO,EAKM,EALNA,YACAD,EAIM,EAJNA,gBACA0oB,EAGM,EAHNA,sBACAR,EAEM,EAFNA,kBACAD,EACM,EADNA,MACM,EAC8B9kB,oBAAS,iBADvC,oBACCwlB,EADD,KACaC,EADb,OAEuBzlB,qBAAS,GAFhC,oBAECkE,EAFD,KAEOC,EAFP,KAINuhB,sBAAU,WAAO,IAAD,EACsBrS,GAAqB,CACvDhE,KAAMvS,EACNwW,KAAMzW,EACN4D,UAHMvN,EADM,EACNA,MAAOC,EADD,EACCA,IAAKqgB,EADN,EACMA,OAKpB6R,EAASnyB,GACToyB,EAAOnyB,GACPsyB,EAAcjS,KACb,CAAC1W,EAAaD,IAEjB,IAAM8oB,EAAc,WAClB,GAAwB,QAApB9oB,EAA2B,CAC7B,IAAM+oB,EAAW,IAAI7oB,KAAKD,GAC1B8oB,EAASlS,QAAQkS,EAAS7Y,UAAY,GACtCgY,EAAkBa,QACb,GAAwB,UAApB/oB,EAA6B,CACtC,IAAMgpB,EAAY,IAAI9oB,KAAKD,GAC3B+oB,EAAUnS,QAAQmS,EAAU9Y,UAAY,GACxCgY,EAAkBc,QACb,GAAwB,SAApBhpB,EAA4B,CACrC,IAAMipB,EAAW,IAAI/oB,KAAKD,GAC1BgpB,EAASpS,QAAQoS,EAAS/Y,UAAY,GACtCgY,EAAkBe,QACb,GAAwB,UAApBjpB,EAA6B,CACtC,IAAMkpB,EAAY,IAAIhpB,KAAKD,GAC3BipB,EAAUpR,SAASoR,EAAUlZ,WAAa,GAC1CkY,EAAkBgB,QACb,GAAwB,SAApBlpB,EAA4B,CACrC,IAAMmpB,EAAW,IAAIjpB,KAAKD,GAC1BkpB,EAASC,YAAYD,EAAS5iB,cAAgB,GAC9C2hB,EAAkBiB,KAGhBE,EAAe,WACnB,GAAwB,QAApBrpB,EAA2B,CAC7B,IAAMspB,EAAY,IAAIppB,KAAKD,GAC3BqpB,EAAUzS,QAAQyS,EAAUpZ,UAAY,GACxCgY,EAAkBoB,QACb,GAAwB,UAApBtpB,EAA6B,CACtC,IAAMupB,EAAY,IAAIrpB,KAAKD,GAC3BspB,EAAU1S,QAAQ0S,EAAUrZ,UAAY,GACxCgY,EAAkBqB,QACb,GAAwB,SAApBvpB,EAA4B,CACrC,IAAMwpB,EAAW,IAAItpB,KAAKD,GAC1BupB,EAAS3S,QAAQ2S,EAAStZ,UAAY,GACtCgY,EAAkBsB,QACb,GAAwB,UAApBxpB,EAA6B,CACtC,IAAMypB,EAAY,IAAIvpB,KAAKD,GAC3BwpB,EAAU3R,SAAS2R,EAAUzZ,WAAa,GAC1CkY,EAAkBuB,QACb,GAAwB,SAApBzpB,EAA4B,CACrC,IAAM0pB,EAAW,IAAIxpB,KAAKD,GAC1BypB,EAASN,YAAYM,EAASnjB,cAAgB,GAC9C2hB,EAAkBwB,KAGhBjI,EAAWkI,KAAO,IAAIzpB,MAAQ0pB,OAAO3pB,EAAa,OAExD,OACE,gBAACiG,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,aAChB3gB,YAAa,GACbD,WAAY,IANhB,UASE,eAACs1B,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,eAACrgB,GAAA,EAAD,CACEC,MAAO,CACL9T,UAAW,EACXmB,OAAQ,GACRX,MAAO,GACP5B,QAAS,EACTlB,OAAQ,EACRgB,WAAY,EACZ4B,gBAAiBmU,aACf3U,EAAMR,QAAQC,QAAQkX,KACtB8Y,EAAW,GAAM,KAGrB/xB,KAAK,QACL+xB,SAAUA,EACVxb,QAAS,kBAAMiiB,EAAkB,IAAIhoB,OAfvC,SAiBE,eAACmF,GAAA,EAAD,CACEW,MAAO,CACLoP,WAAY,OACZjkB,SAAU,GACVsJ,MAAOgnB,EAAW,OAASzvB,EAAMR,QAAQC,QAAQC,MAJrD,SAOGkS,EAAQ,2BAAS,YAKxB,eAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC,GAAD,CACE4N,gBAAiBA,EACjB8U,SAAU4T,EACVR,kBAAmBA,EACnBtkB,MAAOA,EACPsW,MAAOA,EACP+N,MAAOA,MAGX,gBAAC/hB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,iBAJpB,UAOE,gBAAC0K,GAAA,EAAD,CACEzhB,MAAM,UACNuL,MAAO,CAAE9T,UAAW,GACpB+T,QAASrC,EAAQklB,EAAcO,EAHjC,UAKGzlB,GACC,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,WAGhCmJ,GACA,eAAC,KAAD,CAA0BoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,aAG5D,gBAACyhB,GAAA,EAAD,CACEzhB,MAAM,UACNuL,MAAO,CAAE9T,UAAW,EAAGtB,WAAY,GACnCqV,QAASrC,EAAQylB,EAAeP,EAHlC,UAKGllB,GACC,eAAC,KAAD,CAA0BoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,WAExDmJ,GACA,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,aAIpC,eAACsL,GAAA,EAAD,CACEC,MAAO,CACLiP,SAAU,WACV4U,OAAQ,GACRr3B,gBAAiB,OACjBa,OAAQ,IAEV4S,QAAS,kBAAMqB,GAAQ,IAPzB,SASE,eAACjC,GAAA,EAAD,CAAY5K,MAAM,UAAUhK,QAAQ,SAApC,SACGk4B,MAGL,eAAC,KAAD,CACEmB,OAAQlmB,EAAQmmB,KAAWC,KAC3BC,MAAOC,KAFT,SAIE,eAACC,GAAA,EAAD,CACEC,QAAM,EACN35B,QAAQ,SACR45B,aAAa,WACbC,OAAO,aACP16B,OAAO,QACP2I,GAAG,qBACH9C,MAAOwK,EACP6U,SAAUoT,EACV7gB,KAAMA,EACN8X,QAAS,kBAAM7X,GAAQ,IACvBijB,eACE3mB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJ4mB,cACE5mB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJoC,MAAO,CACLhV,UAAW,MACXikB,SAAU,WACV8H,KAAMnZ,EAAQ,QAAKkC,EACnBqP,MAAOvR,OAAQkC,EAAY,GAC3BoP,OAAQ,GACR2U,QAAS,GACT33B,UAAW,EACXmB,OAAQ,EACRvC,QAAS,EACTlB,OAAQ,EACR8C,MAAO,a,aCpON,SAAS+3B,GAAYj7B,GAClC,OACE,yBAAC,KAAYk7B,MAAb,6BACMl7B,GADN,IAGEm7B,YAAan7B,EAAMoU,MAAQ,qBAAQ,SACnCnT,QAAQ,WACRm3B,IAAK,YCRI,SAASgD,GAAT,GAAqD,IAA/B/zB,EAA8B,EAA9BA,KAAM+lB,EAAwB,EAAxBA,IAAKhZ,EAAmB,EAAnBA,MAAOiZ,EAAY,EAAZA,IACrD,OACE,eAACC,GAAA,EAAD,CACE9W,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BqR,SAAU,WACVC,OAAQ2H,OAAM/W,EAAY,GAC1B+W,IAAKA,EAAM,QAAK/W,EAChBpT,MAAOmqB,EAAMnY,OAAOmmB,WAAa,IAAM,OACvCx3B,OAAQwpB,EAAM,QAAK/W,EACnBxT,WAAY,SACZytB,YAAa,GACbC,aAAc,IAEhBhD,SAAUnmB,EAZZ,SAcG+lB,I,cCkGQkO,GArGO,SAAC,GAOX,IANVlnB,EAMS,EANTA,MACA6B,EAKS,EALTA,MACAhQ,EAIS,EAJTA,MACAqf,EAGS,EAHTA,SAGS,IAFTwV,cAES,MAFA,aAEA,EADT9X,EACS,EADTA,KACS,EAC0B4E,KAA3BC,EADC,EACDA,YAAaC,EADZ,EACYA,UACrB,OACE,gBAAC,KAAD,CACEwS,OAAQlmB,EAAQmmB,KAAWC,KAC3BC,MAAOC,KAFT,WAII1X,GACA,eAAC,KAAD,CACE4X,QAAM,EAENW,QAAS1T,EACT2T,QAAS1T,EACT2T,eAAgBrnB,EAAQ,yFAAqB,eAC7CsnB,eAAgBtnB,EAAQ,yFAAqB,eAC7CnT,QAAQ,SACR65B,OAAQA,EACR16B,OAAO,SACP2I,GAAG,qBACHkN,MAAOA,EACPhQ,MAAOA,EACPqf,SAAUA,EACVqW,oBAAqB,CACnB,aAAc,eAEhBnlB,MAAO,CAAEtT,MAAO,KAChB63B,eACE3mB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,MAIzBq5B,cACE5mB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,QAM5BqhB,GACC,eAAC4Y,GAAA,EAAD,CACEhB,QAAM,EACN35B,QAAQ,SACRs6B,QAAS1T,EACT2T,QAAS1T,EACT2T,eAAgBrnB,EAAQ,yFAAqB,eAC7CsnB,eAAgBtnB,EAAQ,yFAAqB,eAC7CrL,GAAG,mBACHkN,MAAOA,EACPjQ,KAAK,YACL60B,aAAa,WACbC,OAAO,mBACP70B,MAAOA,EACPqf,SAAUA,EACV9O,MAAO,CAAEtT,MAAO,KAChB63B,eACE3mB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,MAIzBq5B,cACE5mB,EACE,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,MAGrB,eAAC,KAAD,CACE6U,MAAO,CAAE7U,SAAU,YCtGpB,SAASk6B,GAAT,GAcN,IAbP9nB,EAaM,EAbNA,SACAE,EAYM,EAZNA,OACAjO,EAWM,EAXNA,KACAiQ,EAUM,EAVNA,MACA2M,EASM,EATNA,IASM,IARNxY,gBAQM,aAPN4L,iBAOM,SANN9S,EAMM,EANNA,MACA6sB,EAKM,EALNA,QAEA3Z,GAGM,EAJNhW,OAIM,EAHNgW,WAGM,IAFN0lB,UAEM,MAFD,GAEC,EADH3c,EACG,8HACN,OACE,eAACpJ,GAAA,EAAD,cACEC,UAAWA,EACXI,UAAWA,EACX4Z,aAAa,MACb5lB,SAAUA,EACVpE,KAAMA,EAENM,cAAiB,OAAHsc,QAAG,IAAHA,OAAA,EAAAA,EAAM5c,KAAS+pB,GAAW,GACxC9Z,MAAOA,EACPrC,QAAOK,KAAUA,EAAOjO,GACxBkQ,SAAUnC,EACV9S,QAAQ,WACRuV,MAAO,CAAEtT,QAAOytB,aAAcmL,GAC9B17B,OAAO,SACH+e,ICnBQ5c,cAAW,SAACC,GAAD,OAC3Ba,aAAa,CACX0yB,OAAQ,CACNsE,OAAQ73B,EAAM63B,OAAO7E,OAAS,EAC9B,qBAAsB,OACtBxyB,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQ4zB,MAAO,IAErDkG,QAAS,CACP9wB,MAAOzI,EAAMR,QAAQg6B,KAAK,KAC1Br6B,SAAU,IAEZs6B,aAAc,CACZhxB,MAAOzI,EAAMR,QAAQg6B,KAAK,KAC1B,qBAAsB,UACtB3O,KAAM,EACN,UAAW,CACTrqB,gBAAiB,gBAGrBk5B,iBAAkB,CAChBjxB,MAAOzI,EAAMR,QAAQg6B,KAAK,KAC1Br6B,SAAU,GACV,qBAAsB,UACtB0rB,KAAM,EACN,UAAW,CACTrqB,gBAAiB,qB,oFCnBVm5B,GAlBY,SAACn8B,GAAgB,IAClCiL,EAAiBjL,EAAjBiL,MAAOgU,EAAUjf,EAAVif,MACf,OACE,gBAACvI,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVikB,WAAY,OACZ3a,MAAOA,EACP3J,QAAS,IALb,SAQG2d,IAEH,eAAC8Y,GAAA,EAAD,QCkCSqE,GArCe,SAACp8B,GAAgB,IACrC8Q,EAA8C9Q,EAA9C8Q,KAAM7F,EAAwCjL,EAAxCiL,MAAOoxB,EAAiCr8B,EAAjCq8B,QAASx4B,EAAwB7D,EAAxB6D,OAAQuQ,EAAgBpU,EAAhBoU,MAAOkoB,EAASt8B,EAATs8B,KACvCrd,EAAQ7K,EAAQ,8FAAqB,aAC3C,OACE,gBAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOhU,MAAOqxB,IAClC,eAACC,GAAA,EAAD,CAAqBr5B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAAC24B,GAAA,EAAD,CACE34B,OAAQA,EACRzD,OAAQ,CACNitB,IAAK,GACL1H,MAAO,GACP4H,KAAMnZ,EAAQ,GAAK,GACnBsR,OAAQ,IAEV+W,OAAO,QACP3rB,KAAMA,EATR,UAWE,eAAC4rB,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQ7oB,EACR8oB,cAAe,SAACj3B,GAAD,OAAWA,EAAMgd,oBAElC,eAAC,KAAD,CAASka,UAAW,SAACl3B,GAAD,MAAW,CAACA,EAAMgd,qBACtC,eAACma,GAAA,EAAD,CACED,UAAW,kBAAO/oB,EAAQ,gGAAuB,gBAGnD,eAACipB,GAAA,EAAD,CAAMh2B,KAAK,WAAWg1B,QAASA,EAASiB,OAAQryB,EAAOsyB,KAAMtyB,a,oBCKxDuyB,GArCY,SAACx9B,GAAgB,IAClC8Q,EAAqD9Q,EAArD8Q,KAAM7F,EAA+CjL,EAA/CiL,MAAOoxB,EAAwCr8B,EAAxCq8B,QAASx4B,EAA+B7D,EAA/B6D,OAAQy4B,EAAuBt8B,EAAvBs8B,KAAMrd,EAAiBjf,EAAjBif,MAAO7K,EAAUpU,EAAVoU,MAC7CqpB,EAAStmB,aAAKlM,EAAO,IAC3B,OACE,gBAAC0sB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOhU,MAAOqxB,IAClC,eAACC,GAAA,EAAD,CAAqBr5B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAAC65B,GAAA,EAAD,CACE75B,OAAQA,EACRiN,KAAMA,EACN1Q,OAAQ,CACNitB,IAAK,GACL1H,MAAO,GACP4H,KAAMnZ,EAAQ,GAAK,GACnBsR,OAAQ,GAEV+W,OAAO,SATT,UAWE,eAACC,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQ7oB,EACR8oB,cAAe,SAACj3B,GAAD,OAAWA,EAAMgd,oBAElC,eAAC,KAAD,CACE/K,OAAQ,CAAEqlB,KAAM,eAChBJ,UAAW,SAACl3B,GAAD,MAAW,CAACA,EAAMgd,qBAE/B,eAAC0a,GAAA,EAAD,CAAKtB,QAASA,EAASkB,KAAME,IAvB/B,aC6COG,GAnDW,SAAC59B,GAAgB,IACjC8Q,EAAqC9Q,EAArC8Q,KAAMsD,EAA+BpU,EAA/BoU,MAAOvQ,EAAwB7D,EAAxB6D,OAAQy4B,EAAgBt8B,EAAhBs8B,KAAM95B,EAAUxC,EAAVwC,MAC7BwD,EAAOoO,EAAQ,SAAW,OAE1BypB,EAAQ/sB,EAAK+H,KAAI,SAACilB,GACtB,IAAMvb,EAAMub,EAMZ,OALIA,EAAEjtB,QAAUitB,EAAEjtB,OAAOiJ,OAAS,GAChCgkB,EAAEjtB,OAAOgI,KAAI,SAACklB,GACZxb,EAAIwb,EAAG/3B,MAAQ+3B,EAAG1F,SAGf9V,KAEHtD,EAAQ7K,EACV,4JACA,2BAEE4pB,ErE4LsB,SAACx7B,GAC7B,MAAO,CACL,CACEuG,GAAI,GACJ/C,KAAM,YACNwD,OAAQ,2BACRyB,MAAOkM,aAAK3U,EAAMR,QAAQC,QAAQ4zB,MAAO,KAE3C,CACE9sB,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,2BACRyB,MAAOkM,aAAK3U,EAAMR,QAAQG,UAAU0zB,MAAO,KAE7C,CACE9sB,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,8CACRyB,MAAOkM,aAAK3U,EAAMR,QAAQG,UAAU0zB,MAAO,KAE7C,CACE9sB,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,2BACRyB,MAAOkM,aAAK3U,EAAMR,QAAQG,UAAU0zB,MAAO,KAE7C,CACE9sB,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,2BACRyB,MAAOkM,aAAK3U,EAAMR,QAAQG,UAAU0zB,MAAO,MqE1NjCoI,CAAez7B,GAC7B,OACE,gBAACm1B,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOhU,MAAOqxB,IAClC,eAACC,GAAA,EAAD,CAAqBr5B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAAC65B,GAAA,EAAD,CACE75B,OAAQA,EACRiN,KAAM+sB,EACNz9B,OAAQ,CACNitB,IAAK,GACL1H,MAAO,GACP4H,KAAMnZ,EAAQ,GAAK,EACnBsR,OAAQ,GAPZ,UAUE,eAACgX,GAAA,EAAD,CAAeE,UAAU,EAAOD,gBAAgB,QAChD,eAACE,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACED,UAAU,EACVD,UAAU,EACVG,SAAQ7oB,IAEV,eAAC,KAAD,CAAS8D,OAAQ,CAAEqlB,KAAM,iBACxBS,EAAMnlB,KAAI,SAACsL,GACV,OACE,eAACwZ,GAAA,EAAD,CAAiBtB,QAASlY,EAAGne,GAAOk4B,QAAQ,IAAIX,KAAMpZ,EAAGlZ,OAA/CkZ,EAAGpb,gBCkBZo1B,GA5DgB,SAACn+B,GAAgB,IACtC8Q,EAA2D9Q,EAA3D8Q,KAAMstB,EAAqDp+B,EAArDo+B,SAAUC,EAA2Cr+B,EAA3Cq+B,SAAUhC,EAAiCr8B,EAAjCq8B,QAASx4B,EAAwB7D,EAAxB6D,OAAQuQ,EAAgBpU,EAAhBoU,MAAOkoB,EAASt8B,EAATs8B,KACpDrd,EAAQ7K,EAAQ,mIAA4B,qBAClD,OACE,gBAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOhU,MAAOqxB,IAClC,eAACC,GAAA,EAAD,CAAqBr5B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAAC24B,GAAA,EAAD,CACE34B,OAAQA,EACRzD,OAAQ,CACNitB,IAAK,GACL1H,MAAO,GACP4H,KAAMnZ,EAAQ,GAAK,GACnBsR,OAAQ,IAEV+W,OAAO,QACP3rB,KAAMA,EATR,UAWE,eAAC4rB,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQ7oB,IAEV,eAAC,KAAD,CACE+oB,UAAW,SAACl3B,EAAYD,GAAb,MAA8B,CACvCC,EACS,UAATD,EAAoBoO,EAAQ,2BAAS,MAASpO,MAGlD,eAACo3B,GAAA,EAAD,CACED,UAAW,SAACl3B,GACV,MAAiB,UAAVA,EACHmO,EACE,gEACA,mBACFA,EACA,8FACA,eAIR,eAACipB,GAAA,EAAD,CACEh2B,KAAK,WACLg1B,QAASA,EACTkB,KAAMc,EACNf,OAAQe,IAEV,eAAChB,GAAA,EAAD,CACEh2B,KAAK,WACLg1B,QAASjoB,EAAQ,2BAAS,YAC1BkpB,OAAQc,EACRb,KAAMa,a,6BCIHE,GAnEM,SAAC,GAAuD,IACvEC,EADkB16B,EAAoD,EAApDA,OAAQiN,EAA4C,EAA5CA,KAAMstB,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SAAUjqB,EAAkB,EAAlBA,MAAOkoB,EAAW,EAAXA,KAEzDkC,EAAY1tB,EAAKuJ,QAAO,SAACyjB,GAAD,OAAyB,KAAbA,EAAEjtB,UACtCsP,EAAMrP,EAAKgJ,OAMX+jB,EAAQ,CAAC,CAAE53B,MAJfs4B,GADW,OAATC,QAAS,IAATA,OAAA,EAAAA,EAAW1kB,QAAS,EACR0kB,EAAU1kB,OAASqG,EAEnB,IAIdse,EADoB,GACU,IAAMF,EAChCt4B,EAAQs4B,EACVrW,KAAKwW,MAAoB,IAAdH,GAAmBtb,iBAAmB,IACjD,KAEEhE,EAAQ7K,EAAQ,6HAA2B,qBACjD,OACE,gBAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOhU,MAAOqxB,IAClC,eAACC,GAAA,EAAD,CAAqBr5B,MAAM,OAAOW,OAAO,OAAzC,SACE,gBAAC,KAAD,CACEA,OAAQA,EAAS,GACjBzD,OAAQ,CACNitB,IAAK,GACL1H,MAAO,GACP4H,KAAM,GACN7H,OAAQ,IANZ,UASE,eAACiZ,GAAA,EAAD,CACE7tB,KAAM,CAAC,CAAE7K,MAAO,IAChB24B,YAAY,MACZC,YAAY,OACZC,WAxBY,GAyBZC,UAAUC,IACVC,mBAAmB,EACnBC,aAAc,EACd3B,KAAMpmB,aAAKknB,EAAU,IACrBhC,QAAQ,UAEV,eAACsC,GAAA,EAAD,CACE7tB,KAAM+sB,EACNe,YAAY,MACZC,YAAY,OACZC,WAnCY,GAoCZC,SAAUN,EACVU,aAAc,GACd5B,KAAMa,EACN/B,QAAQ,QACR+C,WAAW,EACXC,eAAgB,EAChBC,kBAAmB,IAXrB,SAaE,eAACC,GAAA,EAAD,CACE9Z,SAAS,SACTxf,MAAOA,EACPuQ,MAAO,CAAE7U,SAAU,GAAIikB,WAAY,QACnC2X,KAAMa,eC6BLoB,GA9Ee,SAACx/B,GAAgB,IAE3C8Q,EAQE9Q,EARF8Q,KACAsD,EAOEpU,EAPFoU,MACAnJ,EAMEjL,EANFiL,MACApH,EAKE7D,EALF6D,OACA47B,EAIEz/B,EAJFy/B,UACAC,EAGE1/B,EAHF0/B,YACAzgB,EAEEjf,EAFFif,MACAqd,EACEt8B,EADFs8B,KAEIuB,EAAa,GACf4B,IACF,OAAI3uB,QAAJ,IAAIA,OAAJ,EAAIA,EAAM2uB,YACRA,EAAU5mB,KAAI,SAAC8mB,GAAc,IAAD,IACpB35B,EAAOoO,EAAQurB,EAAIn2B,OAASm2B,EAAI35B,KAChCC,EAAK,UAAG6K,EAAK2uB,UAAUplB,QAAO,SAACulB,GAAD,OAAaA,EAAG55B,OAASA,YAAlD,iBAAG,EAAuD,UAA1D,aAAG,EACVwe,OAEJqZ,EAAMpkB,KAAK,CACTzT,OACAC,aAMJy5B,IACF,OAAI5uB,QAAJ,IAAIA,OAAJ,EAAIA,EAAM4uB,cACRA,EAAY7mB,KAAI,SAACzP,GAAc,IAAD,IACtBpD,EAAOoO,EAAQhL,EAAII,OAASJ,EAAIpD,KAChCC,EAAK,UAAG6K,EAAK4uB,YAAYrlB,QAC7B,SAACulB,GAAD,OAAaA,EAAG55B,OAASA,YADhB,iBAAG,EAEV,UAFO,aAAG,EAENwe,OAERqZ,EAAMpkB,KAAK,CACTzT,OACAC,aAMR,IAAMw3B,EAAStmB,aAAKlM,EAAO,IAE3B,OACE,gBAAC0sB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,UAAhB,UACE,eAAC,GAAD,CAAaob,MAAOA,EAAOhU,MAAOqxB,IAClC,eAACC,GAAA,EAAD,CAAqBr5B,MAAM,OAAOW,OAAQA,EAAS,GAAnD,SACE,gBAAC65B,GAAA,EAAD,CACE75B,OAAQA,EACRiN,KAAM+sB,EACNz9B,OAAQ,CACNitB,IAAK,GACL1H,MAAO,GACP4H,KAAMnZ,EAAQ,GAAK,GACnBsR,OAAQ,GAPZ,UAUE,eAACgX,GAAA,EAAD,CAAeC,gBAAgB,MAAMC,UAAU,IAC/C,eAACC,GAAA,EAAD,CAAOR,QAAQ,OAAOS,UAAU,EAAOC,UAAU,IACjD,eAACC,GAAA,EAAD,CACEF,UAAU,EACVC,UAAU,EACVE,SAAQ7oB,EACR8oB,cAAe,SAACj3B,GAAD,OAAWA,EAAMgd,oBAElC,eAAC,KAAD,CACE/K,OAAQ,CAAEqlB,KAAM,eAChBJ,UAAW,SAACl3B,GAAD,MAAW,CAACA,EAAMgd,qBAE/B,eAAC0a,GAAA,EAAD,CAAKtB,QAAQ,QAAQkB,KAAME,aC/EtB,SAASoC,GAAT,GAON,IANP5gB,EAMM,EANNA,MACAhZ,EAKM,EALNA,MACAiD,EAIM,EAJNA,KAEA42B,GAEM,EAHN70B,MAGM,EAFN60B,YACAC,EACM,EADNA,WAEMC,EAAK7oB,aAAK2oB,EAAY,IACjB3oB,aAAK4oB,EAAY,IAC5B,OACE,eAACpI,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,IAAKzB,WAAY49B,GAAzC,SACE,eAACtpB,GAAA,EAAD,CAAKkhB,EAAG,EAAR,SACE,gBAACC,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,gBAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,UAFjD,UAIE,eAAC,GAAD,CAAU/W,MAAM,UAAU/B,KAAMA,IAChC,eAAC,GAAD,CAAW+B,MAAM,UAAUgU,MAAOA,SAGtC,eAAC4Y,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,UAFjD,SAIE,eAAC,GAAD,CAAY/W,MAAM,UAAUhF,MAAOA,e,cCtBlC,cAAO,IAAD,IAGbmO,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgBy5B,aAAaC,GAAgB,CAC9DtrB,UAAW,CAAER,WALI,oBAIZ+rB,EAJY,KAIAC,EAJA,OAQK9rB,aAAY+rB,GAAkB,CACpDC,eAAgB,CAAC,CAAEC,MAAOL,GAAgBtrB,UAAW,CAAER,aADlDosB,EARY,uBAWMlsB,aAAYmsB,GAAkB,CACrDH,eAAgB,CAAC,CAAEC,MAAOL,GAAgBtrB,UAAW,CAAER,aADlDssB,EAXY,uBAcQpsB,aAAYqsB,GAAkB,CACvDL,eAAgB,CAAC,CAAEC,MAAOL,GAAgBtrB,UAAW,CAAER,aADlDwsB,EAdY,qBAkBnBvH,sBAAU,WACR8G,MACC,CAACA,IAIJ,MAAO,CACLT,aAHyB,OAAPU,QAAO,IAAPA,GAAA,UAAAA,EAAStvB,YAAT,wDAAmCA,OAAQ,GAI7D+vB,kBAHwB,yBAAMT,QAAN,IAAMA,OAAN,EAAMA,EAASU,WAIvCN,gBACAE,iBACAE,qB,+BC7BW,SAASG,GAAW/gC,GAAa,IACtC4vB,EAA8C5vB,EAA9C4vB,SAAUnY,EAAoCzX,EAApCyX,SAAUrD,EAA0BpU,EAA1BoU,MAAO4sB,EAAmBhhC,EAAnBghC,QAASx+B,EAAUxC,EAAVwC,MACtCy+B,EAAWC,aAAc,qBAE/B,OACE,gBAACxqB,GAAA,EAAD,CAAKkhB,EAAGqJ,EAAW,EAAI,EAAGE,GAAIF,EAAW,OAAI3qB,EAA7C,UACE,eAACogB,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,gBAACe,GAAA,EAAD,CACEyJ,UAAW,EACX5qB,MAAO,CACLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQ4zB,MAAO,IACnDtF,YAAa,GACbC,aAAc,GACd3sB,OAAQ,GACRjB,QAAS,OACTc,KAAM,EACNZ,WAAY,SACZkf,eAAgB,gBAChBqf,qBAAsB,GACtBC,oBAAqB,GACrBC,uBAAwB,EACxBC,wBAAyB,GAd7B,UAiBE,eAAC3rB,GAAA,EAAD,CACEW,MAAO,CACLvL,MAAOzI,EAAMR,QAAQC,QAAQC,KAC7BP,SAAU,IAHd,SAMGyS,EAAQqD,EAASzO,QAAUyO,EAASxO,UAEtC+3B,GACC,eAACtU,GAAA,EAAD,CACElW,MAAO,CACLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQG,UAAUD,KAAM,IACpDZ,QAAS,GAEXmV,QAASuqB,EALX,SAOE,eAAC,KAAD,CACExqB,MAAO,CAAE7U,SAAU,IACnBsJ,MAAM,mBAMhB,eAAC0sB,GAAA,EAAD,CACEnhB,MAAO,CAGLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQ4zB,MAAO,KAGnD0L,uBAAwBN,OAAW3qB,EAAY,GAC/CkrB,wBAAyBP,OAAW3qB,EAAY,IAElD8qB,UAAW,EAVb,SAYGxpB,KAAM+c,aAAa/E,EAAnB,gBAAkC5vB,SCzD5B,SAASyhC,GAAQzhC,GAAa,IACnC0qB,EAAgE1qB,EAAhE0qB,MAAOtW,EAAyDpU,EAAzDoU,MAAO1N,EAAkD1G,EAAlD0G,KAAM+4B,EAA4Cz/B,EAA5Cy/B,UAAWC,EAAiC1/B,EAAjC0/B,YAAal9B,EAAoBxC,EAApBwC,MAAOiV,EAAazX,EAAbyX,SADjB,ECD7B,WAAO,IAAD,IAGbrD,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAKsBy5B,aAAayB,IALnC,oBAKZC,EALY,KAKIC,EALJ,KAMXlC,EAAgBmC,KAAhBnC,YAERrG,sBAAU,WACRsI,MACC,CAACA,IAEJ,IAIIG,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EACAC,EAEAC,EApBE5xB,EAAI,OAAG8wB,QAAH,IAAGA,GAAH,UAAGA,EAAW9wB,YAAd,iBAAG,6BAAH,aAAG,EAA0CA,KAsBjD6xB,EAAQvuB,EAAQ,SAAW,OAC3BwuB,EAASxuB,EAAQ,mBAAqB,iBACtCyuB,EAASzuB,EAAQ,iBAAmB,eACpC0uB,EAAS1uB,EAAQ,WAAa,WAEpC,GAAItD,EAAM,CACR,IAAMiyB,EAASp+B,KAAKC,MAAMkM,GAGxB8L,EAOEmmB,EAPFnmB,SACAomB,EAMED,EANFC,WACAC,EAKEF,EALFE,UACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,gBACAC,EACEN,EADFM,eAGFX,EAAU9lB,EAEV,IAAM0mB,EAAWL,EAAUpqB,KAAI,SAACilB,GAAY,IAClCpW,EAAwBoW,EAAxBpW,KAAM2Q,EAAkByF,EAAlBzF,MAAO7T,EAAWsZ,EAAXtZ,OACrB,MAAO,CACLxe,KAAM2d,GAAc,IAAIjT,KAAKgX,GAAOtT,GACpCikB,QACAvT,MAAON,EACPkD,KAAM,IAAIhX,KAAKgX,OAIb6b,EAAWxb,GAAY,EAAG3T,GAEhC0tB,EAAYyB,EAAS1qB,KAAI,SAAC4H,GACxB,IAAM+iB,EAAKF,EAASjpB,QAAO,SAAC0jB,GAAD,OAAaA,EAAG/3B,OAASya,KACpD,OAAI+iB,GAAMA,EAAG1pB,OAAS,EACb0pB,EAAG,GAEH,CACLx9B,KAAMya,EACN4X,MAAO,EACPvT,MAAO,MAKb,IAAM2e,EAAep+B,KAAE6yB,QAAQ8K,EAAY,QAGrCU,EAFWlhB,OAAOC,KAAKghB,GAEF5qB,KAAI,SAAC4H,GAAc,IAAD,IACrC5P,EAASxL,KAAEo+B,EAAQhjB,IACtByX,QAAQ4K,GACRjqB,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMoyB,EACNC,MAAOhzB,KAAEkzB,MAAMJ,EAAO,SACtB3T,OAAQnf,KAAEkzB,MAAMJ,EAAO,cAExBwL,QAAQ,SACR19B,QAEG29B,EAAcv+B,KAAEw+B,UAAUx+B,KAAEy+B,MAAMjzB,EAAQ,QAAS,SAEnDmS,EAAS,UAAGygB,EAAQhjB,UAAX,iBAAG,EAAe,UAAlB,aAAG,EAAmBiH,KAC/B5C,EAAQzf,KAAEkzB,MAAMkL,EAAQhjB,GAAM,UAC9B4X,EAAQhzB,KAAEkzB,MAAMkL,EAAQhjB,GAAM,SAE9Bza,EAAO2d,GAAc,IAAIjT,KAAKsS,GAAO5O,GAC3C,OAAO,2BACLpO,OACA6K,UACG+yB,GAHL,IAIEvL,QACAvT,QACA4C,KAAM,IAAIhX,KAAK+P,QA4BnB,GAzBAshB,EAAYwB,EAAS1qB,KAAI,SAAC4H,GACxB,IAAM+iB,EAAKE,EAAUrpB,QAAO,SAAC0jB,GAAD,OAAaA,EAAG/3B,OAASya,KACrD,OAAI+iB,GAAMA,EAAG1pB,OAAS,EACb0pB,EAAG,GAEH,CACLx9B,KAAMya,EACN4X,MAAO,EACPvT,MAAO,MAKbmd,EADqBla,GAAY,EAAG3T,EAAO,OACdyE,KAAI,SAAC4H,GAChC,IAAM+iB,EAAKE,EAAUrpB,QAAO,SAAC0jB,GAAD,OAAaA,EAAG/3B,OAASya,KACrD,OAAI+iB,GAAMA,EAAG1pB,OAAS,EACb0pB,EAAG,GAEH,CACLx9B,KAAMya,EACN4X,MAAO,EACPvT,MAAO,MAITue,EAAgB,CAClB,IAAMU,EAAQ1+B,KAAE6yB,QAAQmL,EAAgBT,GAExCZ,EADkBxf,OAAOC,KAAKshB,GACPlrB,KAAI,SAACzP,GAAc,IAAD,EACjCnD,EAAQZ,KAAEkzB,MAAMwL,EAAM36B,GAAM,UAC5B6B,EACJy0B,GAAeA,EAAY5lB,OACvB4lB,EAAYrlB,QAAO,SAAC/C,GAAD,OAAeA,EAAKqrB,KAAWv5B,KAClD,KACN,MAAO,CACLpD,KAAMoD,EACNnD,QACAgF,MAAOA,EAAK,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAQ,UAAX,aAAG,EAAYA,MAAQ,OAGvCk3B,EAAkB98B,KAAEkzB,MAAMyJ,EAAY,SAOxC,GALIoB,IACFhB,EAAmBgB,EAAgBtpB,QAErCooB,EAAckB,EAEVD,EAAa,CAAC,IAAD,IACTY,EAAQ1+B,KAAE6yB,QAAQiL,EAAa,SAE/Ba,EADaxhB,OAAOC,KAAKshB,GACDlrB,KAAI,SAAC0H,GAAgB,IAAD,IAC1C0jB,EAAU5+B,KAAE0+B,EAAMxjB,IACrB2X,QAAQ0K,GACR/pB,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMoyB,EACNC,MAAOhzB,KAAEkzB,MAAMJ,EAAO,SACtB3T,OAAQnf,KAAEkzB,MAAMJ,EAAO,cAExBwL,QAAQ,QACR19B,QAEGw5B,EAAYp6B,KAAE0+B,EAAMxjB,IACvB2X,QAAQ2K,GACRhqB,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMoyB,EACNC,MAAOhzB,KAAEkzB,MAAMJ,EAAO,SACtB3T,OAAQnf,KAAEkzB,MAAMJ,EAAO,UACvBltB,MAAOktB,EAAM,GAAGltB,UAEjB04B,QAAQ,QACR19B,QACG+c,EAAS,UAAG+gB,EAAMxjB,UAAT,iBAAG,EAAe,UAAlB,aAAG,EAAmBmH,KAC/B5C,EAAQzf,KAAEkzB,MAAMwL,EAAMxjB,GAAQ,UAC9B8X,EAAQhzB,KAAEkzB,MAAMwL,EAAMxjB,GAAQ,SAEpC,MAAO,CACLva,KAFW4d,GAAmBZ,EAAM5O,GAGpCsrB,YAAauE,EACbxE,YACApH,QACAvT,QACA4C,KAAM,IAAIhX,KAAKsS,OAKnBqf,EADmBja,GAAc,EAAGhU,GACXyE,KAAI,SAACrJ,GAC5B,IAAMg0B,EAAKQ,EAAW3pB,QAAO,SAAC0jB,GAAD,OAAaA,EAAG/3B,OAASwJ,KACtD,OAAIg0B,GAAMA,EAAG1pB,OAAS,EACb0pB,EAAG,GAEH,CACLx9B,KAAMwJ,EACN6oB,MAAO,EACPvT,MAAO,MAIb,IAAMof,EAAQtgB,GAAmB,IAAIlT,KAAQ0D,GAE7CouB,EAAe,UADfD,EAAU,UAAGF,EAAYhoB,QAAO,SAAC8pB,GAAD,OAAaA,EAAGn+B,OAASk+B,YAA/C,aAAG,EAAqD,UACnD,aAAG,EAAYpf,MAEhC,GAAIoe,EAAc,CAAC,IAAD,EACVa,EAAQ1+B,KAAE6yB,QAAQgL,EAAc,SAGhCkB,EAFa5hB,OAAOC,KAAKshB,GAEAlrB,KAAI,SAAC0H,GAAgB,IAAD,IAC3C0jB,EAAU5+B,KAAE0+B,EAAMxjB,IACrB2X,QAAQ0K,GACR/pB,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMoyB,EACNC,MAAOhzB,KAAEkzB,MAAMJ,EAAO,SACtB3T,OAAQnf,KAAEkzB,MAAMJ,EAAO,cAExBwL,QAAQ,QACR19B,QAEGw5B,EAAYp6B,KAAE0+B,EAAMxjB,IACvB2X,QAAQ2K,GACRhqB,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMoyB,EACNC,MAAOhzB,KAAEkzB,MAAMJ,EAAO,SACtB3T,OAAQnf,KAAEkzB,MAAMJ,EAAO,cAExBwL,QAAQ,QACR19B,QACG4K,EAASxL,KAAE0+B,EAAMxjB,IACpB2X,QAAQ4K,GACRjqB,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMoyB,EACNC,MAAOhzB,KAAEkzB,MAAMJ,EAAO,SACtB3T,OAAQnf,KAAEkzB,MAAMJ,EAAO,cAExBwL,QAAQ,SACR19B,QACG+c,EAAS,UAAG+gB,EAAMxjB,UAAT,iBAAG,EAAe,UAAlB,aAAG,EAAmBmH,KAC/B5C,EAAQzf,KAAEkzB,MAAMwL,EAAMxjB,GAAQ,UAC9B8X,EAAQhzB,KAAEkzB,MAAMwL,EAAMxjB,GAAQ,SAEpC,MAAO,CACLva,KAFW4d,GAAmBZ,EAAM5O,GAGpCsrB,YAAauE,EACbxE,YACA5uB,SACAwnB,QACAvT,QACA4C,KAAM,IAAIhX,KAAKsS,OAKnBsf,EADmBla,GAAc,EAAGhU,GACXyE,KAAI,SAACrJ,GAC5B,IAAMg0B,EAAKY,EAAY/pB,QAAO,SAAC0jB,GAAD,OAAaA,EAAG/3B,OAASwJ,KACvD,OAAIg0B,GAAMA,EAAG1pB,OAAS,EACb0pB,EAAG,GAEH,CACLx9B,KAAMwJ,EACN6oB,MAAO,EACPvT,MAAO,MAIb,IAAMof,EAAQtgB,GAAmB,IAAIlT,KAAQ0D,GAE7CquB,GADW,UAAGH,EAAYjoB,QAAO,SAAC8pB,GAAD,OAAaA,EAAGn+B,OAASk+B,YAA/C,aAAG,EAAqD,IACpC7L,OAInC,MAAO,CACLyJ,YACAC,YACAE,gBACAD,aACAE,cACAC,kBACAC,mBACAC,cACAC,cACAC,aACAC,kBACAC,mBACAC,UACA2B,iBAtRuB,yBAAMzC,QAAN,IAAMA,OAAN,EAAMA,EAAWd,YDItCwD,GAbFxC,EAJwC,EAIxCA,UACAC,EALwC,EAKxCA,UACAE,EANwC,EAMxCA,cACAC,EAPwC,EAOxCA,YACAC,EARwC,EAQxCA,gBACAC,EATwC,EASxCA,iBACAC,EAVwC,EAUxCA,YACAC,EAXwC,EAWxCA,YACAC,EAZwC,EAYxCA,WACAC,EAbwC,EAaxCA,gBACAC,EAdwC,EAcxCA,iBACAC,EAfwC,EAexCA,QACA2B,EAhBwC,EAgBxCA,iBASIvE,EAAat9B,EAAMR,QAAQC,QAAQ4zB,MACnCkK,EAAav9B,EAAMR,QAAQG,UAAUD,KACrCo6B,EAAO95B,EAAMR,QAAQC,QAAQ4zB,MAEnC,OACE,eAACkL,GAAD,CACEtpB,SAAUA,EACVgoB,UAAWA,EACXC,YAAaA,EACbtrB,MAAOA,EACPsW,MAAOA,EACPhkB,KAAMA,EACNlE,MAAOA,EACPw+B,QAnBY,WACVqD,GACFA,KASF,SAUE,eAAC3tB,GAAA,EAAD,CAAKF,MAAO,CAAElV,QAAS,GAAvB,SACE,gBAACu2B,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACG4K,GAAWF,GAAmBC,GAC7B,gBAAC5K,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAG7P,GAAI,EAAtB,SACE,eAAC4X,GAAD,CACE5gB,MAAO7K,EAAQ,6CAAY,OAC3BnO,MAAOse,GAAW,OAACme,QAAD,IAACA,OAAD,EAACA,EAAS7lB,MAC5B3T,KAAK,OACL+B,MAAOqxB,EACPwD,WAAYA,EACZC,WAAYA,MAGhB,eAAClI,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAG7P,GAAI,EAAtB,SACE,eAAC4X,GAAD,CACE5gB,MAAOyL,EAAM3N,KACb9W,MAAOse,GAAW,OAACme,QAAD,IAACA,OAAD,EAACA,EAAS3lB,MAC5B7T,KAAK,OACL+B,MAAOqxB,EACPwD,WAAYA,EACZC,WAAYA,MAGhB,eAAClI,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAG7P,GAAI,EAAtB,SACE,eAACwP,GAAD,CACExY,MAAO7K,EAAQ,iCAAU,QACzBnO,MAAOse,GAAY4d,GACnBj5B,KAAK,QACL+B,MAAO60B,EACPpI,KAAMtjB,EAAQ,yFAAqB,kBAIvC,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAG7P,GAAI,EAAtB,SACE,eAACwP,GAAD,CACExY,MAAO7K,EAAQ,oDAAc,aAC7BnO,MAAOse,GAAYie,GACnBt5B,KAAK,QACL+B,MAAO60B,EACPpI,KAAMtjB,EAAQ,yFAAqB,uBAGvC,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAG7P,GAAI,EAAtB,SACE,eAACwP,GAAD,CACExY,MAAO7K,EAAQ,iCAAU,QACzBnO,MAAO2e,GAAkBwd,GACzBl5B,KAAK,QACL+B,MAAO80B,EACPrI,KAAMtjB,EAAQ,kFAAmB,yBAGrC,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAG7P,GAAI,EAAtB,SACE,eAACwP,GAAD,CACExY,MAAO7K,EAAQ,oDAAc,aAC7BnO,MAAO2e,GAAkB6d,GACzBv5B,KAAK,QACL+B,MAAO80B,EACPrI,KACEtjB,EAAQ,qGAAuB,mCAO1C8tB,GACC,eAACrK,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEmW,SAAU0B,EACVzB,SAAU0B,EACVjvB,KAAMoxB,EACNr+B,OAAQ,IACRy4B,KAAMA,EACNloB,MAAOA,MAIZ0tB,GACC,eAACjK,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEoU,QAAQ,QACRjoB,MAAOA,EACPtD,KAAMgxB,EACN72B,MAAO60B,EACPj8B,OAAQ,IACRy4B,KAAMA,MAIX2F,GACC,eAACpK,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEoU,QAAQ,QACR75B,MAAOA,EACP4R,MAAOA,EACPtD,KAAMmxB,EACNp+B,OAAQ,IACRy4B,KAAMA,MAIXyF,GACC,eAAClK,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEoU,QAAQ,QACRjoB,MAAOA,EACPtD,KAAMixB,EACN92B,MAAO80B,EACP3B,SAAU0B,EACVzB,SAAU0B,EACVl8B,OAAQ,IACRy4B,KAAMA,MAIXiG,GACC,eAAC1K,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEnX,KAAMyxB,EACNnuB,MAAOA,EACPnJ,MAAO60B,EACP7gB,MACE7K,EACI,uJACA,yBAENqrB,UAAWA,EACXnD,KAAMA,EACNz4B,OAAQ,QAIb0+B,GACC,eAAC1K,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEnX,KAAMyxB,EACNnuB,MAAOA,EACPnJ,MAAO60B,EACP7gB,MACE7K,EACI,iJACA,2BAENsrB,YAAaA,EACb77B,OAAQ,IACRy4B,KAAMA,MAIX+F,GACC,eAACxK,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEnX,KAAMuxB,EACNjuB,MAAOA,EACPnJ,MAAO60B,EACPxD,KAAMA,EACND,QAAQ,QACRpd,MAAO7K,EAAQ,iHAAyB,eACxCvQ,OAAQ,QAIby+B,GACC,eAACzK,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACEnX,KAAMwxB,EACNluB,MAAOA,EACPnJ,MAAO80B,EACP1D,QAAQ,QACRpd,MAAO7K,EAAQ,iHAAyB,qBACxCkoB,KAAMA,EACNz4B,OAAQ,e,0EErNxB,SAAS0gC,GAAevkC,GACtB,OACE,eAAC,KAAD,CACEwkC,OAAO,0BACPC,OAAQ,mCAFV,SAIE,eAAC9M,GAAA,EAAD,gBAAW33B,MAKF,SAAS0kC,GAAY1kC,GAAa,IAE7C4vB,EAmBE5vB,EAnBF4vB,SACAxb,EAkBEpU,EAlBFoU,MACA5R,EAiBExC,EAjBFwC,MACAqV,EAgBE7X,EAhBF6X,KACA8X,EAeE3vB,EAfF2vB,QACA1Q,EAcEjf,EAdFif,MACAxK,EAaEzU,EAbFyU,SACAvR,EAYElD,EAZFkD,MACAW,EAWE7D,EAXF6D,OACA8gC,EAUE3kC,EAVF2kC,KAX4C,EAqB1C3kC,EATF2W,UAZ4C,MAYvC,GAZuC,IAqB1C3W,EARF87B,UAb4C,MAavC,GAbuC,IAqB1C97B,EAPF8D,gBAd4C,MAcjC,KAdiC,IAqB1C9D,EANF4kC,iBAf4C,SAgB5CC,EAKE7kC,EALF6kC,MAhB4C,EAqB1C7kC,EAJF8kC,iBAjB4C,MAiBhC1wB,EAAQ,qBAAQ,OAjBgB,EAkB5C2wB,EAGE/kC,EAHF+kC,UAlB4C,EAqB1C/kC,EAFFglC,oBAnB4C,SAoB5CC,EACEjlC,EADFilC,OAEF,OACE,gBAACpV,GAAA,EAAD,CACEhY,KAAMA,EACN8X,QAASqV,EAAe,kBAAM,MAAOrV,EACrC4U,eAAgBA,GAChBW,mBAAiB,4BACjBC,kBAAgB,yBAChBrhC,SAAUA,EANZ,UAQE,gBAAC4S,GAAA,EAAD,CACE3N,GAAG,yBACHyN,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiBR,EACb2U,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,KACjC,OACJgW,OAAQ,OACRrU,OAAQ,GACRjB,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZkf,eAAgB,iBAbpB,UAgBE,gBAACnM,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVN,YAAa,GACbD,WAAY,IAJhB,UAOG6d,EAPH,IAOW8lB,EAAS,oBAASA,QAAT,IAASA,OAAT,EAASA,EAAW9lB,OAAU,MAElD,eAACyN,GAAA,EAAD,CAAYjW,QAASkZ,EAArB,SACE,eAAC,KAAD,CACEnZ,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAIpC,eAACm6B,GAAA,EAAD,CACE5uB,MAAO,CACLtT,MAAOA,QAAgBoT,EACvBzS,OAAQA,QAAkByS,EAC1B9U,UAAW4S,EAAQ,MAAQ,MAC3BkE,WAAY3B,EACZif,cAAekG,GAEjBuJ,UAAU,EARZ,SAUGztB,KAAM+c,aAAa/E,EAAnB,gBAAkC5vB,MAEpC2kC,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,MAIf,gBAACkY,GAAA,EAAD,CACE9uB,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiBR,EACb2U,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,KACjC,QACJ2B,OAAQ,GACRf,WAAY,SACZ0tB,aAAc,EACdD,YAAa,EACb1tB,cAAeuR,EAAQ,cAAgB,OAV3C,WAaIub,GACA,eAACpZ,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,GAAIxC,YAAa,GAAID,WAAY,IAC9DH,QAAQ,WACRwV,QAASkZ,EACT1kB,MAAM,UAJR,SAME,eAAC4K,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SACGmT,EAAQ,iCAAU,aAIxBywB,GACC,eAACtuB,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,GAAIxC,YAAa,GAAID,WAAY,IAC9DH,QAAQ,YACRwV,QAASouB,EACT55B,MAAM,UAJR,SAME,eAAC4K,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SACGmT,EAAQ,iCAAU,aAIvBwwB,GACA,gBAACruB,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,GAAIxC,YAAa,GAAID,WAAY,IAC9DH,QAAQ,YACRwV,QAAShC,EACTxJ,MAAM,UACNgnB,SAAUgT,EALZ,UAOE,eAACpvB,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiC6jC,IAChCD,GACC,eAAChvB,GAAA,EAAD,CACEW,MAAO,CACLpV,WAAY,EACZC,YAAa,EACbM,SAAU,GACVsJ,MAAO,QAEThK,QAAQ,YAPV,SASGmT,EAAK,kDAKbwwB,GACC,eAACruB,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,GAAIxC,YAAa,GAAID,WAAY,IAC9DH,QAAQ,YACRwV,QAASkZ,EACT1kB,MAAM,UAJR,SAME,eAAC4K,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SACGmT,EAAQ,iCAAU,kBChKjC,I,GAiKemxB,GAjKQ,SAAC,GAUZ,IATV1tB,EASS,EATTA,KACA8X,EAQS,EARTA,QACA/M,EAOS,EAPTA,IACA4R,EAMS,EANTA,MACAgR,EAKS,EALTA,YACA5Q,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACAvtB,EACS,EADTA,MACS,EACemR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAEyCja,aAAQ5J,EAAIgB,gBAAtD6I,EAFC,EAEDA,SAAUC,EAFT,EAESA,aAAcC,EAFvB,EAEuBA,OAAQwxB,EAF/B,EAE+BA,MAF/B,EAMUvxB,sBAAWtB,IANrB,IAIPyB,UAAaqW,EAJN,EAIMA,MAAOtW,EAJb,EAIaA,MACX1N,EALF,EAKPhC,MAASgC,KALF,EAQiBiN,oBAAc,WAR/B,oBAQF1I,EARE,KAQK+pB,EARL,KAUTqE,sBAAU,WACJzW,GAAOA,EAAIvD,KACb2V,EAASpS,EAAI3X,SAEd,CAAC2X,IAEJ,IAAMnO,EAAQ,yCAAG,WAAO3D,GAAP,sBAAA6D,EAAA,sDACT3O,EAAO8K,EAAK9K,KAAK0/B,OACjBl8B,EAASsH,EAAKtH,OAAOk8B,OACrBhO,EAAO5mB,EAAK4mB,KACZ9iB,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCtQ,OACAwD,SACAkuB,OACAzsB,QACA7C,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,KAIfumB,EAFepR,EAAQI,EAAYC,EAChBL,EAAQ,mBAAqB,mBACtB5f,GAfX,2CAAH,sDAkBRgxB,EAAK,yCAAG,WAAOC,EAAaC,EAAoBlxB,GAAxC,kBAAAD,EAAA,+EAEQkxB,EAAO,CAAEjxB,cAFjB,cAEJuK,EAFI,OAGJ4mB,EAAQtX,GAActP,EAAK2mB,GAC7BN,GAAeO,GAAOP,EAAYO,GAJ5B,SAKJ9X,GAAaF,EAAS3Z,GALlB,OAMV4xB,IANU,kDAQVC,EAAQ,EAAD,IARG,0DAAH,0DAYLA,EAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,8CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZqxB,IACAzQ,EAAS,WACT5K,QAAQC,IAAIzW,GAPA,4CAAH,sDAWPoyB,EAAc,WAClBrW,IACA8V,IACAzQ,EAAS,YAML/V,EAAQ7K,EACVogB,EACE,oDACA,yFACFA,EACA,iBACA,kBACJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASA,EACT1Q,MAAOA,EACPxK,SAhBmB,WACrBT,EAAaS,EAAbT,IAgBExR,MAAOA,EACPmiC,KAAMA,EAPR,SASE,gBAAC9M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACE7lB,WAAS,EACT5L,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMyb,OACbpyB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACT2Z,QAASA,SAIf,eAAC8L,GAAD,CACE71B,KAAK,OACLiQ,MAAOyU,EAAM0b,YACbryB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACTiwB,WAAS,EACTC,QAAS,EACTvS,KAAM,IAER,gBAAC8D,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC/hB,GAAA,EAAD,CACEkc,UAAQ,EACRjsB,KAAK,QACLC,OAAU,OAAH2c,QAAG,IAAHA,OAAA,EAAAA,EAAK3X,OAAQ2X,EAAI3X,MAAQA,EAChChK,QAAQ,WACRuV,MAAO,CACLxT,gBAAiBiI,EACjB/H,MAAO,KAETqjC,WAAY,CACV/vB,MAAO,CAAEyL,aAAc,EAAGhX,MAAO,SAEnC7K,OAAO,YAGX,eAACy3B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CAAa9C,SAAUA,EAAU/pB,MAAOA,YAI9C,eAAC4sB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UCzKV0O,GAAc,SAAChgC,GAC1B,IAAMkkB,EAAQ,CACZvK,IAAK3Z,EAAKkkB,MAAMvK,IAChBsmB,WAAYjgC,EAAKkkB,MAAM+b,WACvBC,WAAYlgC,EAAKkkB,MAAMgc,WACvBC,YAAangC,EAAKkkB,MAAMic,YACxB/V,aAAcpqB,EAAKkkB,MAAMkG,aACzBC,eAAgBrqB,EAAKkkB,MAAMmG,eAC3B2P,cAAeh6B,EAAKkkB,MAAM8V,cAC1BtX,WAAY1iB,EAAKkkB,MAAMxB,WACvBM,eAAgBhjB,EAAKkkB,MAAMlB,eAC3BC,iBAAkBjjB,EAAKkkB,MAAMjB,iBAC7BN,SAAU3iB,EAAKkkB,MAAMvB,SACrByd,YAAapgC,EAAKkkB,MAAMkc,YACxBhd,aAAcpjB,EAAKkkB,MAAMd,aACzBC,eAAgBrjB,EAAKkkB,MAAMb,eAC3BoB,QAASzkB,EAAKkkB,MAAMO,QACpB4b,QAASrgC,EAAKkkB,MAAMmc,QACpBC,SAAUtgC,EAAKkkB,MAAMoc,SACrBC,SAAUvgC,EAAKkkB,MAAMqc,SACrBC,eAAgBxgC,EAAKkkB,MAAMsc,eAC3BC,WAAYzgC,EAAKkkB,MAAMuc,WACvBC,YAAa1gC,EAAKkkB,MAAMwc,YACxBC,cAAe3gC,EAAKkkB,MAAMyc,cAC1BxgB,SAAUngB,EAAKkkB,MAAM/D,SACrBwE,SAAU3kB,EAAKkkB,MAAMS,SACrBic,YAAa5gC,EAAKkkB,MAAM0c,YACxBrgB,aAAcvgB,EAAKkkB,MAAM3D,aACzBD,eAAgBtgB,EAAKkkB,MAAM5D,eAC3BugB,SAAU7gC,EAAKkkB,MAAM2c,SACrBvW,UAAWtqB,EAAKkkB,MAAMoG,UACtBC,YAAavqB,EAAKkkB,MAAMqG,YACxBuW,YAAa9gC,EAAKkkB,MAAM4c,YACxBC,YAAa/gC,EAAKkkB,MAAM6c,YACxBC,mBAAoBhhC,EAAKkkB,MAAM8c,mBAC/BC,SAAUjhC,EAAKkkB,MAAM+c,SACrBC,aAAclhC,EAAKkkB,MAAM0c,YACzBO,YAAanhC,EAAKkkB,MAAMid,YACxBC,aAAcphC,EAAKkkB,MAAMkd,aACzB7U,YAAavsB,EAAKkkB,MAAMqI,YACxBznB,MAAO9E,EAAKkkB,MAAMpf,MAClB4f,SAAU1kB,EAAKkkB,MAAMQ,SACrB2c,MAAOrhC,EAAKkkB,MAAMmd,MAClBC,KAAMthC,EAAKkkB,MAAMod,KACjBr8B,MAAOjF,EAAKkkB,MAAMjf,MAClBs8B,KAAMvhC,EAAKkkB,MAAMqd,KACjBC,UAAWxhC,EAAKkkB,MAAMsd,UACtBC,KAAMzhC,EAAKkkB,MAAMud,KACjBxD,OAAQj+B,EAAKkkB,MAAM+Z,OACnByD,MAAO1hC,EAAKkkB,MAAMwd,MAClBj9B,MAAOzE,EAAKkkB,MAAMzf,MAClBjF,KAAMQ,EAAKkkB,MAAM1kB,KACjBwD,OAAQhD,EAAKkkB,MAAMlhB,OACnB28B,OAAQ3/B,EAAKkkB,MAAMyb,OACnBx7B,SAAUnE,EAAKkkB,MAAM/f,SACrBC,SAAUpE,EAAKkkB,MAAM9f,SACrB2J,MAAO/N,EAAKkkB,MAAMnW,MAClBgF,OAAQ/S,EAAKkkB,MAAMnR,OACnB4uB,OAAQ3hC,EAAKkkB,MAAMyd,OACnBC,SAAU5hC,EAAKkkB,MAAM0d,SACrBC,QAAS7hC,EAAKkkB,MAAM2d,QACpBC,WAAY9hC,EAAKkkB,MAAM4d,WACvB3b,OAAQnmB,EAAKkkB,MAAMiC,OACnB5H,SAAUve,EAAKkkB,MAAM3F,SACrBD,MAAOte,EAAKkkB,MAAM5F,MAClBN,OAAQhe,EAAKkkB,MAAMlG,OACnB+jB,WAAY/hC,EAAKkkB,MAAM6d,WACvBC,OAAQhiC,EAAKkkB,MAAM8d,OACnB/nB,IAAKja,EAAKkkB,MAAMjK,IAChBoY,MAAOryB,EAAKkkB,MAAMmO,MAClBC,KAAMtyB,EAAKkkB,MAAMoO,KACjBvY,MAAO/Z,EAAKkkB,MAAMnK,MAClBD,KAAM9Z,EAAKkkB,MAAMpK,KACjBzD,KAAMrW,EAAKkkB,MAAM7N,KACjB4rB,KAAMjiC,EAAKkkB,MAAM+d,KACjBniB,OAAQ9f,EAAKkkB,MAAMpE,OACnBoiB,QAASliC,EAAKkkB,MAAMge,QACpBC,QAASniC,EAAKkkB,MAAMie,QACpB5rB,KAAMvW,EAAKkkB,MAAM3N,KACjBC,KAAMxW,EAAKkkB,MAAM1N,KACjB4rB,QAASpiC,EAAKkkB,MAAMke,QACpBC,OAAQriC,EAAKkkB,MAAMme,OACnBC,MAAOtiC,EAAKkkB,MAAMoe,MAClBC,aAAcviC,EAAKkkB,MAAMqe,aACzBC,KAAMxiC,EAAKkkB,MAAMse,KACjBC,MAAOziC,EAAKkkB,MAAMue,MAClBC,OAAQ1iC,EAAKkkB,MAAMwe,OACnBC,UAAW3iC,EAAKkkB,MAAMye,UACtBt4B,OAAQrK,EAAKkkB,MAAM7Z,OACnBhK,MAAOL,EAAKkkB,MAAM7jB,MAClBC,IAAKN,EAAKkkB,MAAM5jB,IAChB6jB,GAAInkB,EAAKkkB,MAAMC,GACf7e,IAAKtF,EAAKkkB,MAAM5e,IAChB+4B,MAAOr+B,EAAKkkB,MAAMma,MAClBuE,UAAW5iC,EAAKkkB,MAAM0e,UACtBpmB,KAAMxc,EAAKkkB,MAAM1H,KACjB6H,SAAUrkB,EAAKkkB,MAAMG,SACrB7R,GAAIxS,EAAKkkB,MAAM1R,GACfqwB,KAAM7iC,EAAKkkB,MAAM2e,KACjBhiC,KAAMb,EAAKkkB,MAAMrjB,KACjB++B,YAAa5/B,EAAKkkB,MAAM0b,YACxB34B,IAAKjH,EAAKkkB,MAAMjd,IAChB67B,QAAS9iC,EAAKkkB,MAAM4e,QACpBC,YAAa/iC,EAAKkkB,MAAM6e,YACxBC,WAAYhjC,EAAKkkB,MAAM8e,WACvBC,YAAajjC,EAAKkkB,MAAM+e,YACxBC,YAAaljC,EAAKkkB,MAAMgf,YACxBC,SAAUnjC,EAAKkkB,MAAMif,SACrBC,OAAQpjC,EAAKkkB,MAAMkf,OACnBziB,OAAQ3gB,EAAKkkB,MAAMvD,OACnBpkB,OAAQyD,EAAKkkB,MAAM3nB,OACnBkF,MAAOzB,EAAKkkB,MAAMziB,MAClBrB,SAAUJ,EAAKkkB,MAAM9jB,SACrBijC,YAAarjC,EAAKkkB,MAAMmf,YACxBC,cAAetjC,EAAKkkB,MAAMof,cAC1B5Y,OAAQ1qB,EAAKkkB,MAAMwG,OACnB6Y,IAAKvjC,EAAKkkB,MAAMqf,IAChBC,OAAQxjC,EAAKkkB,MAAMsf,OACnBC,QAASzjC,EAAKkkB,MAAMuf,QACpBrtB,SAAUpW,EAAKkkB,MAAM9N,SACrB6J,QAASjgB,EAAKkkB,MAAMjE,QACpByjB,QAAS1jC,EAAKkkB,MAAMwf,QACpBC,WAAY3jC,EAAKkkB,MAAMyf,WACvBC,KAAM5jC,EAAKkkB,MAAM0f,KACjBC,KAAM7jC,EAAKkkB,MAAM2f,KACjBt9B,SAAUvG,EAAKkkB,MAAM3d,SACrBu9B,UAAW9jC,EAAKkkB,MAAM4f,UACtBC,UAAW/jC,EAAKkkB,MAAM6f,UACtBjrB,UAAW9Y,EAAKkkB,MAAMpL,UACtBkrB,YAAahkC,EAAKkkB,MAAM8f,YACxBC,SAAUjkC,EAAKkkB,MAAM+f,SACrBr9B,KAAM5G,EAAKkkB,MAAMtd,KACjBs9B,UAAWlkC,EAAKkkB,MAAMggB,UACtBzrB,MAAOzY,EAAKkkB,MAAMzL,MAClB0rB,SAAUnkC,EAAKkkB,MAAMigB,SACrBC,aAAcpkC,EAAKkkB,MAAMkgB,aACzBC,SAAUrkC,EAAKkkB,MAAMmgB,SACrBC,QAAStkC,EAAKkkB,MAAMogB,QACpBrU,KAAMjwB,EAAKkkB,MAAM+L,KACjBpnB,SAAU7I,EAAKkkB,MAAMrb,UAGjB07B,EAAW,CACfC,UAAWxkC,EAAKukC,SAASC,UACzBC,UAAWzkC,EAAKukC,SAASE,UACzBC,WAAY1kC,EAAKukC,SAASG,YAI5B,MAAO,CAAE92B,MADK5N,EAAK4N,MACHsW,QAAOqgB,aCxJnBnL,GAAKuL,EAAQ,KACbC,GAAKD,EAAQ,KCWJ,cAAO,IAAD,IAGb/2B,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgBy5B,aAAaoL,GAAc,CAC5Dz2B,UAAW,CAAER,WALI,oBAIZk3B,EAJY,KAIAC,EAJA,OAQGj3B,aAAYk3B,GAAgB,CAChDlL,eAAgB,CAAC,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,aADhDwyB,EARY,uBAWItyB,aAAYm3B,GAAgB,CACjDnL,eAAgB,CAAC,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,aADhDs3B,EAXY,uBAcMp3B,aAAYq3B,GAAgB,CACnDrL,eAAgB,CAAC,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,aADhDw3B,EAdY,qBAkBnBvS,sBAAU,WACRiS,MACC,CAACA,IAKJ,MAAO,CACL7L,WAJuB,OAAP8L,QAAO,IAAPA,GAAA,UAAAA,EAASz6B,YAAT,sDAAiCA,OAAQ,GAKzD+6B,gBAJsB,yBAAMN,QAAN,IAAMA,OAAN,EAAMA,EAASzK,WAKrC8F,cACA8E,eACAE,mBCnCW,cAAO,IAAD,IAGbx3B,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIay5B,aAAa6L,GAAa,CACxDl3B,UAAW,CAAER,WALI,oBAIZ23B,EAJY,KAIHC,EAJG,OAQE13B,aAAY23B,GAAY,CAC3C3L,eAAgB,CAAC,CAAEC,MAAOuL,GAAal3B,UAAW,CAAER,aAD/C83B,EARY,uBAWG53B,aAAY63B,GAAY,CAC5C7L,eAAgB,CAAC,CAAEC,MAAOuL,GAAal3B,UAAW,CAAER,aAD/Cg4B,EAXY,uBAcK93B,aAAY+3B,GAAY,CAC9C/L,eAAgB,CAAC,CAAEC,MAAOuL,GAAal3B,UAAW,CAAER,aAD/Ck4B,EAdY,qBAkBnBjT,sBAAU,WACR0S,MACC,CAACA,IAKJ,MAAO,CAAEjF,UAHe,OAAPkF,QAAO,IAAPA,GAAA,UAAAA,EAASl7B,YAAT,qDAAgCA,OAAQ,GAGtCo7B,aAAYE,cAAaE,gBAAeC,eAFpC,yBAAMP,QAAN,IAAMA,OAAN,EAAMA,EAASlL,aClBzB,cAAO,IAAD,IAGb1sB,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIey5B,aAAauM,GAAc,CAC3D53B,UAAW,CAAER,WALI,oBAIZq4B,EAJY,KAIFC,EAJE,OAQGp4B,aAAYq4B,GAAgB,CAChDrM,eAAgB,CAAC,CAAEC,MAAOiM,GAAc53B,UAAW,CAAER,aADhDw4B,EARY,uBAWIt4B,aAAYu4B,GAAgB,CACjDvM,eAAgB,CAAC,CAAEC,MAAOiM,GAAc53B,UAAW,CAAER,aADhD04B,EAXY,uBAcMx4B,aAAYy4B,GAAgB,CACnDzM,eAAgB,CAAC,CAAEC,MAAOiM,GAAc53B,UAAW,CAAER,aADhD44B,EAdY,qBAkBnB3T,sBAAU,WACRoT,MACC,CAACA,IAIJ,MAAO,CACLQ,WAHwB,OAARP,QAAQ,IAARA,GAAA,UAAAA,EAAU57B,YAAV,sDAAkCA,OAAQ,GAI1Do8B,gBAHsB,yBAAMR,QAAN,IAAMA,OAAN,EAAMA,EAAU5L,WAItC8L,cACAE,eACAE,mBCjCW,ICPAlnC,aAAf,uJDOe,WAAO,IAAD,MACgBm6B,aAAakN,GAAY,CAC1DC,YAAa,iBAFI,oBACZC,EADY,KACEC,EADF,KAKnBjU,sBAAU,WACRgU,MACC,CAACA,IAEJ,IAAME,EAAW,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAYx8B,YAAf,iBAAG,oBAAH,aAAG,EAAkCA,KAChD08B,EAAUD,EAAc5oC,KAAKC,MAAM2oC,GAAe,GAElDE,EAA6B,GAMnC,OALID,EAAQ1zB,OAAS,GACnB0zB,EAAQ30B,KAAI,SAAC8R,GACX8iB,EAAQ9iB,EAAGtL,KAAOsL,EAAG+iB,iBAGlB,CAAED,UAASJ,kBEpBL,cAAO,IAAD,MACWpN,aAAa0N,IADxB,oBACZC,EADY,KACHC,EADG,OAGEv5B,aAAYw5B,GAAc,CAC7CxN,eAAgB,CAAC,CAAEC,MAAOoN,OADrBI,EAHY,qBAanB,OANA1U,sBAAU,WACRuU,MACC,CAACA,IAIG,CAAE1a,UAFkB,OAAV2a,QAAU,IAAVA,GAAA,UAAAA,EAAY/8B,YAAZ,qDAAmCA,OAAQ,GAEzCi9B,eCXN,SAASC,GAAT,GAAyD,IAAlC55B,EAAiC,EAAjCA,MAAOic,EAA0B,EAA1BA,QAAS4d,EAAiB,EAAjBA,cACpD,OACE,gBAACtV,GAAA,EAAD,CAAaljB,UAAU,WAAvB,UACE,eAACI,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAEoP,WAAY,OAAQ+K,aAAc,IAF7C,SAIGvc,EAAQ,0DAAe,YAG1B,eAACqf,GAAA,EAAD,UACGtjB,GAAS0I,KAAI,SAAC4H,GACb,OACE,eAAC6S,GAAA,EAAD,CACE9c,MAAO,CAAEpW,OAAQ,EAAGkB,QAAS,EAAGs0B,cAAe,GAE/CrC,QACE,eAACnO,GAAA,EAAD,CACEC,QAASgL,EAAQ5P,EAAIvQ,OACrBoV,SAAU2oB,EACVhjC,MAAM,UACNjF,KAAMya,EAAIvQ,MACVsG,MAAO,CAAEpW,OAAQ,EAAGkB,QAAS,EAAGs0B,cAAe,KAGnD3f,MAAO7B,EAAQqM,EAAIjX,OAASiX,EAAIza,MAV3Bya,EAAI1X,YCdR,SAASmlC,GAAT,GAuBN,IAtBPloC,EAsBM,EAtBNA,KACAqrB,EAqBM,EArBNA,QACAprB,EAoBM,EApBNA,MACAqrB,EAmBM,EAnBNA,eACAC,EAkBM,EAlBNA,eACAC,EAiBM,EAjBNA,YACAC,EAgBM,EAhBNA,SACA1d,EAeM,EAfNA,SACA2d,EAcM,EAdNA,QACAzS,EAaM,EAbNA,MACAyO,EAYM,EAZNA,GACAmE,EAWM,EAXNA,YACAne,EAUM,EAVNA,QACAyc,EASM,EATNA,SACA6B,EAQM,EARNA,aACAC,EAOM,EAPNA,SACA7d,EAMM,EANNA,MACA+5B,EAKM,EALNA,cACArS,EAIM,EAJNA,GACArb,EAGM,EAHNA,IACAvd,EAEM,EAFNA,MACAktB,EACM,EADNA,UAEA,OACE,gBAACyH,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAIpG,EAAU,GAAK,GAA9B,SACE,eAACQ,GAAA,EAAD,CACEL,YAAaA,EACbC,YAAU,EACV1b,WAAS,EACTib,QAASA,EACTc,eAAgB,SAACC,GACf,IAAIgc,EAEFA,EADEje,EACG/b,EAAK,OAAGge,QAAH,IAAGA,OAAH,EAAGA,EAAM,UAAMjC,EAAN,OAAT,OAA+BiC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAASjC,GAE7C/b,EAAK,OAAGge,QAAH,IAAGA,OAAH,EAAGA,EAAQ5oB,OAAX,OAAoB4oB,QAApB,IAAoBA,OAApB,EAAoBA,EAAQpsB,KAExC,IAAMoF,GAAc,OAANgnB,QAAM,IAANA,OAAA,EAAAA,EAAQhnB,OAAR,OAAgBgnB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQhnB,MAAQ,GAC9C,OAAIA,GAASglB,EACL,GAAN,OAAUge,EAAV,cAAkBhjC,GAEXgjC,GAAU,IAGrB/b,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAO/S,MAAQiT,EAAOjT,KAC7DkT,aAAc,SAACH,GACb,MAAa,SAATpsB,EAEA,eAAC,GAAD,CAAgBoO,MAAOA,EAAOkD,KAAM8a,IAIpC,eAAC,GAAD,CACE3R,IAAKA,EACLrM,MAAOA,EACPkD,KAAM8a,EACNjC,SAAUA,EACVC,UAAWA,KAKnBnqB,MAAOA,EACPgsB,SAAUA,EACV3M,SAAU,SAACjgB,EAAGmtB,GACZlB,EAAekB,GACXjB,GACFA,GAAe,GAEbS,GACFA,EAAa,MAEXmc,GACFA,EAAa,OAAC3b,QAAD,IAACA,OAAD,EAACA,EAAU/mB,QAG5B+K,MAAO,CACLic,kBAAmB/E,QAAUpX,EAC7BpT,MAAOA,QAAgBoT,EACvB9U,UAAW4S,EAAQ,MAAQ,OAE7BV,QAASA,EAAU,CAAEgf,MAAOhf,EAAQtP,gBAAckS,EAClDqc,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEE7pB,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOgJ,EACPhe,QAAQ,WACR2S,MAAO4d,EACPhb,MAAO,CAAEma,aAAcmL,GACvB1lB,WAAS,EACTF,SAAU,SAACzI,GACLgkB,IACFA,EAASqB,QAAUrlB,EACfsG,GACFA,EAAStG,aAQtBikB,GACC,eAACmG,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACpL,GAAA,EAAD,CACEsG,oBAAkB,EAClBvc,QAAS,WACPib,KAEFlb,MAAO,CAAEtT,MAAO,GAAIW,OAAQ,GAAInB,UAAW,IAL7C,SAOE,eAAC,KAAD,CAAS8T,MAAO,CAAEvL,MAAO,iBCtGrC,IAuPeojC,GAvPO,SAAC,GAUX,IATVx2B,EASS,EATTA,KACA8X,EAQS,EARTA,QACA/M,EAOS,EAPTA,IACA4R,EAMS,EANTA,MACAgR,EAKS,EALTA,YACA5Q,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACAvtB,EACS,EADTA,MACS,EACemR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAE6Bpa,oBAAc,MAF3C,oBAEFhD,EAFE,KAEW29B,EAFX,OAGuB36B,qBAAc,GAHrC,oBAGF46B,EAHE,KAGQC,EAHR,OAIiB76B,oBAAc,WAJ/B,oBAIF1I,EAJE,KAIK+pB,EAJL,OAKqBpd,KAAMjE,SAAStE,IALpC,oBAKFghB,EALE,KAKOoe,EALP,KAWHC,EAAe92B,KAAM+2B,SAXlB,EAayC76B,aAAQ5J,EAAI0B,cAAtDmI,EAbC,EAaDA,SAAUC,EAbT,EAaSA,aAAcC,EAbvB,EAauBA,OAAQwxB,EAb/B,EAa+BA,MAb/B,EAiBUvxB,sBAAWtB,IAjBrB,IAePyB,UAAaqW,EAfN,EAeMA,MAAOtW,EAfb,EAeaA,MACX1N,EAhBF,EAgBPhC,MAASgC,KAEHg5B,EAAgBmC,KAAhBnC,YAERrG,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB,IAAMA,EAAMuD,EAAI2G,aACVqlB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQA,KAAK,GAC7DuD,EAAIyN,SACNoe,EAAW9pC,KAAKC,MAAMge,EAAIyN,UAE5Bie,EAAeM,GACf5Z,EAASpS,EAAI3X,UAEd,CAAC2X,IAEJ,IAAMnO,EAAQ,yCAAG,WAAO3D,GAAP,4BAAA6D,EAAA,sDACT3O,EAAO8K,EAAK9K,KAAK0/B,OACjBl8B,EAASsH,EAAKtH,OAAOk8B,OACrBt6B,EAAQ0F,EAAK1F,MACbE,EAAQwF,EAAKxF,MACb++B,EAAOv5B,EAAKu5B,KACZnhB,EAAavY,EACf,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEjB1B,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCtQ,OACAwD,SACA8B,QACAL,QACAo/B,OACAwE,QAAS,EACTxe,QAAS1rB,KAAKyB,UAAUiqB,GACxBjlB,QACA8d,aACA9gB,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,KAKfumB,EAFepR,EAAQI,EAAYC,EAChBL,EAAQ,iBAAmB,iBACpB5f,GApCX,4CAAH,sDAuCRgxB,EAAK,yCAAG,WAAOC,EAAaC,EAAoBlxB,GAAxC,kBAAAD,EAAA,+EAEQkxB,EAAO,CAAEjxB,cAFjB,cAEJuK,EAFI,OAGJ4mB,EAAQtX,GAActP,EAAK2mB,GAC7BN,GAAeO,GAAOP,EAAYO,EAAO,YAJnC,SAKJ9X,GAAaF,EAAS3Z,GALlB,OAMV06B,IANU,kDAQV7I,EAAQ,EAAD,IARG,0DAAH,0DAYLA,EAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZ26B,IACA3kB,QAAQC,IAAIzW,GANA,2CAAH,sDAUPm7B,EAAW,WACftJ,IACA6I,EAAe,MACftZ,EAAS,WACTyZ,EAAWp/B,KAEPy/B,EAAa,WACjBnf,IACAof,KAOI9vB,EAAQ7K,EACVogB,EACE,0DACA,+FACFA,EACA,eACA,gBAEJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASmf,EACT7vB,MAAOA,EACPxK,SAlBmB,WACrBT,EAAaS,EAAbT,IAkBExR,MAAOA,EACPmiC,KAAMA,EACN7I,GAAI,GARN,SAUE,gBAACjE,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACR4L,WAAS,EACThQ,KAAK,SACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACThW,OAAQ,GACR07B,GAAI,OAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMyb,OACbpyB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACT2Z,QAASA,EACT3vB,OAAQ,GACR07B,GAAI,UAKV,eAACD,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,QACLiQ,MAAOyU,EAAMqI,YACbhf,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACThW,OAAQ,GACR07B,GAAI,KAEN,eAACD,GAAD,CACE71B,KAAK,QACLiQ,MAAOyU,EAAMpf,MACbyI,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACThW,OAAQ,GACR07B,GAAI,KAEN,eAACoS,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,EAAMxB,WACbwB,MAAOA,EACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgBid,EAChBhd,YAAa+c,EACb9c,SAAUid,EACV36B,SAAUA,EAEVK,MAAOA,EACPgC,WAAS,EACT0lB,GAAI,KAEN,eAACD,GAAD,CACE71B,KAAK,OACLiQ,MAAOyU,EAAM2f,KACbt2B,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACTiwB,WAAS,EACTC,QAAS,EACTvS,KAAM,IAER,gBAAC8D,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACkW,GAAD,CACE55B,MAAOA,EACPic,QAASA,EACT4d,cA/MQ,SAAC9gC,GACrBshC,EAAW,6BAAKpe,GAAN,mBAAgBljB,EAAM6hC,OAAOhpC,KAAOmH,EAAM6hC,OAAO3pB,gBAiNnD,gBAACwS,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,eAAC/hB,GAAA,EAAD,CACEkc,UAAQ,EACRjsB,KAAK,QACLC,OAAU,OAAH2c,QAAG,IAAHA,OAAA,EAAAA,EAAK3X,OAAQ2X,EAAI3X,MAAQA,EAChChK,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,IAAKF,gBAAiBiI,GACtCs7B,WAAY,CAAE/vB,MAAO,CAAEyL,aAAc,EAAGhX,MAAO,SAC/C7K,OAAO,UAET,eAAC,GAAD,CAAa40B,SAAUA,EAAU/pB,MAAOA,aAI9C,eAAC4sB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UClFRmX,GArKO,SAAC,GAUX,IATVp3B,EASS,EATTA,KACA8X,EAQS,EARTA,QACA/M,EAOS,EAPTA,IACA4R,EAMS,EANTA,MACAgR,EAKS,EALTA,YACA5Q,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACAvtB,EACS,EADTA,MACS,EACemR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAEyCja,aAAQ5J,EAAIqB,cAAtDwI,EAFC,EAEDA,SAAUC,EAFT,EAESA,aAAcC,EAFvB,EAEuBA,OAAQwxB,EAF/B,EAE+BA,MAF/B,EAMUvxB,sBAAWtB,IANrB,IAIPyB,UAAaqW,EAJN,EAIMA,MAAOtW,EAJb,EAIaA,MACX1N,EALF,EAKPhC,MAASgC,KAGL+N,EAAQ,yCAAG,WAAO3D,GAAP,4BAAA6D,EAAA,sDACT3O,EAAO8K,EAAK9K,KAAK0/B,OACjBl8B,EAASsH,EAAKtH,OAAOk8B,OACnBt6B,EAAkC0F,EAAlC1F,MAAOE,EAA2BwF,EAA3BxF,MAAO4lB,EAAoBpgB,EAApBogB,OAAQgZ,EAAYp5B,EAAZo5B,QACxBt1B,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCtQ,OACAwD,SACA4B,QACAE,QACA4lB,SACAgZ,UACA9hC,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,KAIfumB,EAFepR,EAAQI,EAAYC,EAChBL,EAAQ,iBAAmB,iBACpB5f,GAjBX,2CAAH,sDAoBRgxB,EAAK,yCAAG,WAAOC,EAAaC,EAAoBlxB,GAAxC,kBAAAD,EAAA,+EAEQkxB,EAAO,CAAEjxB,cAFjB,cAEJuK,EAFI,OAGJ4mB,EAAQtX,GAActP,EAAK2mB,GAC7BN,GAAeO,GAAOP,EAAYO,EAAO,YAC7CN,IALU,SAMJxX,GAAaF,EAAS3Z,GANlB,OAOVub,IAPU,kDASVsW,EAAQ,EAAD,IATG,0DAAH,0DAaLA,EAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZqxB,IACArb,QAAQC,IAAIzW,GANA,2CAAH,sDAcPqL,EAAQ7K,EACVogB,EACE,0DACA,+FACFA,EACA,eACA,gBAGJ,OAFApK,QAAQC,IAAIzH,GAGV,eAAC8hB,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASA,EACT1Q,MAAOA,EACPxK,SAnBmB,WACrBT,EAAaS,EAAbT,IAmBExR,MAAOA,EACPmiC,KAAMA,EAPR,SAUE,gBAAC9M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACE7lB,WAAS,EACT5L,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMyb,OACbpyB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,QACLiQ,MAAOyU,EAAMqI,YACbhf,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLmN,QAASA,EACT3Z,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACE71B,KAAK,SACLiQ,MAAOyU,EAAMwG,OACbnd,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLmN,QAASA,EACT3Z,WAAS,SAKf,eAACylB,GAAD,CACE71B,KAAK,QACLiQ,MAAOyU,EAAMpf,MACbyI,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,IAEX,eAACylB,GAAD,CACE71B,KAAK,UACLiQ,MAAOyU,EAAMyf,WACbp2B,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACTiwB,WAAS,EACTC,QAAS,EACTvS,KAAM,OAGV,eAAC8D,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,U,oBCkIRoX,GA/RM,SAAC,GAUV,IATVr3B,EASS,EATTA,KACA8X,EAQS,EARTA,QACA/M,EAOS,EAPTA,IACA4R,EAMS,EANTA,MACAgR,EAKS,EALTA,YACA5Q,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACAvtB,EACS,EADTA,MACS,EACemR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAG6Bpa,oBAAc,MAH3C,oBAGFhD,EAHE,KAGW29B,EAHX,OAI6B36B,qBAAc,GAJ3C,oBAIFw7B,EAJE,KAIWC,EAJX,KAKHC,EAAiBz3B,KAAM+2B,SALpB,EAOyBh7B,oBAAc,MAPvC,oBAOF/C,EAPE,KAOSmhB,EAPT,OAQyBpe,qBAAc,GARvC,oBAQF27B,EARE,KAQSC,EART,KASHb,EAAe92B,KAAM+2B,SATlB,EAWqBh7B,oBAAc,MAXnC,oBAWFk7B,EAXE,KAWOW,EAXP,OAYyB77B,oBAAc,IAZvC,oBAYF87B,EAZE,KAYSC,EAZT,OAcyC57B,aAAQ5J,EAAIwB,aAAtDqI,EAdC,EAcDA,SAAUC,EAdT,EAcSA,aAAcC,EAdvB,EAcuBA,OAAQwxB,EAd/B,EAc+BA,MAd/B,EAkBUvxB,sBAAWtB,IAlBrB,IAgBPyB,UAAaqW,EAhBN,EAgBMA,MAAOtW,EAhBb,EAgBaA,MACX1N,EAjBF,EAiBPhC,MAASgC,KAGHg5B,EAAgBmC,KAAhBnC,YACAD,EAAckQ,KAAdlQ,UAERpG,sBAAU,WACR,GAAIoG,GAAaA,EAAU3lB,OAAS,EAAG,CACrC,IAAM81B,EAAWnQ,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAIkP,UAAYA,KAChEa,EAAaE,MAEd,CAACf,EAASpP,IAEbpG,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB,IAAMwwB,EAAQjtB,EAAI2G,aACZumB,EAAQltB,EAAI+G,WAGlB,GAFA6lB,EAAW,MAEPK,EAAO,CACT,IAAMjB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQwwB,KAAO,GACnEvB,EAAeM,GAEjB,GAAIkB,EAAO,CACT,IAAMC,EAAOtQ,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQywB,KAAO,GAC/D/d,EAAage,OAGhB,CAACntB,IAEJ,IAAMmsB,EAAW,WACftJ,IACA6I,EAAe,MACfc,GAAe,GACfrd,EAAa,MACbwd,GAAa,GACbC,EAAW,MACXE,EAAa,KAGTj7B,GAAQ,yCAAG,WAAO3D,GAAP,8BAAA6D,EAAA,sDACT3O,EAAO8K,EAAK9K,KAAK0/B,OACjBl8B,EAASsH,EAAKtH,OAAOk8B,OACnBj6B,EAAsBqF,EAAtBrF,MAAO2+B,EAAet5B,EAAfs5B,KAAM1S,EAAS5mB,EAAT4mB,KACfxO,EAAavY,EACf,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEjB6S,EAAWvY,EACb,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,OAE3B,CACE0e,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,GAEf1B,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCpD,SAAU,EACVlN,OACAwD,SACAiC,QACA2+B,OACA1S,OACAxO,aACAC,WACA/gB,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,KAIfumB,GAFepR,EAAQI,EAAYC,EAChBL,EAAQ,aAAe,aAChB5f,GA7CX,2CAAH,sDAgDRgxB,GAAK,yCAAG,WAAOC,EAAaC,EAAoBlxB,GAAxC,kBAAAD,EAAA,+EAEQkxB,EAAO,CAAEjxB,cAFjB,cAEJuK,EAFI,OAGJ4mB,EAAQtX,GAActP,EAAK2mB,GAC7BN,GAAeO,GAAOP,EAAYO,EAAO,QAJnC,SAKJ9X,GAAaF,EAAS3Z,GALlB,OAMV06B,KANU,kDAQV7I,GAAQ,EAAD,IARG,0DAAH,0DAYLA,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZ26B,IACA3kB,QAAQC,IAAIzW,GANA,2CAAH,sDAUPk7B,GAAa,WACjBC,IACApf,KAMI1Q,GAAQ7K,EACVogB,EACE,0DACA,0DACFA,EACA,cACA,eACJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASmf,GACT7vB,MAAOA,GACPxK,SAhBmB,WACrBT,EAAaS,GAAbT,IAgBExR,MAAOA,EACPmiC,KAAMA,EAPR,SASE,gBAAC9M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACR4L,WAAS,EACThQ,KAAK,SACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMyb,OACbpyB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLmN,QAASA,EACT3Z,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,QACLiQ,MAAOyU,EAAMjf,MACbsI,SAAUA,EACVE,OAAQA,EACR5M,KAAK,SACLub,IAAKA,EACLxM,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACE71B,KAAK,OACLiQ,MAAOyU,EAAM0f,KACbr2B,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLmN,QAASA,EACT3Z,WAAS,EACT0lB,GAAI,SAKV,eAACoS,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,EAAMxB,WACbwB,MAAOA,EACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgB6d,EAChB5d,YAAa2d,EACb1d,SAAU4d,EACVt7B,SAAUA,EACVK,MAAOA,EACP0nB,GAAI,KAEN,gBAACkU,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACH3c,MAAO4oC,EACPvpB,SAAU,SAAChQ,GACTk6B,EAAWxlB,OAAO1U,EAAE05B,OAAO/oC,QAC3B8rB,EAAa,OAPjB,UAUE,eAACuB,GAAA,EAAD,CACErtB,MAAO,EACPstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,mDAAa,cAG9B,eAACkf,GAAA,EAAD,CACErtB,MAAO,EACPstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,6CAAY,iBAG/B,eAAC85B,GAAD,CACEloC,KAAK,WACLiZ,MAAmB,IAAZ4vB,EAAgBnkB,EAAMvB,SAAWuB,EAAMpL,UAC9C2S,UAAW4c,EACXnkB,MAAOA,EACP2G,QAASoe,EACTxpC,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACb7d,SAAUid,EACV36B,SAAUA,EACVK,MAAOA,EACP0nB,GAAI,KAEN,eAACD,GAAD,CACE71B,KAAK,OACLiQ,MAAOyU,EAAM0b,YACbryB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACTiwB,WAAS,EACTC,QAAS,EACTvS,KAAM,OAGV,eAAC8D,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,U,UCzSjBoY,GAAc,iBAAO,CACzBC,OAAQ,CACNjtC,MAAO,iBAQIktC,GAJI,SAACpwC,GAClB,OAAO,eAACqwC,GAAA,EAAD,6BAAYrwC,GAAZ,IAAmBwW,MAAO05B,GAAOC,OAAQG,UAAU,mBCE7C,SAASC,GAAT,GASN,IARPlf,EAQM,EARNA,QACAmf,EAOM,EAPNA,QACA9lB,EAMM,EANNA,MACA+U,EAKM,EALNA,UACAC,EAIM,EAJNA,YACAhsB,EAGM,EAHNA,QACAhN,EAEM,EAFNA,KACA0N,EACM,EADNA,MACM,EAC4BT,qBAAc,GAD1C,oBACC88B,EADD,KACYC,EADZ,OAG4B/8B,oBAAc,MAH1C,oBAGCg9B,EAHD,KAGYC,EAHZ,OAIwBj9B,oBAAS,GAJjC,oBAICk9B,EAJD,KAIUC,EAJV,OAK4Bn9B,oBAAS,GALrC,oBAKCo9B,EALD,KAKYC,EALZ,OAO4Br9B,oBAAc,MAP1C,oBAOC/C,EAPD,KAOYmhB,EAPZ,OAQ4Bpe,qBAAc,GAR1C,oBAQC27B,EARD,KAQYC,EARZ,KASAb,EAAe92B,KAAM+2B,SATrB,EAWgCh7B,oBAAc,MAX9C,oBAWChD,EAXD,KAWc29B,EAXd,OAY0B36B,qBAAc,GAZxC,oBAYC46B,EAZD,KAYWC,EAZX,KAaAa,EAAiBz3B,KAAM+2B,SAbvB,EAeqC76B,aAAQ5J,EAAI6B,iBAA/CgI,EAfF,EAeEA,SAAUC,EAfZ,EAeYA,aAAcC,EAf1B,EAe0BA,OAE1Bg9B,EAAer5B,KAAM+2B,SAE3BtV,sBAAU,WACR,GAAIsX,EAAW,CACb,GAAIA,EAAUhnB,WAAY,CACxB,IAAMunB,EAAUzR,EAAUplB,QACxB,SAACslB,GAAD,OAAcA,EAAItgB,MAAQsxB,EAAUhnB,cACpC,GACFoI,EAAamf,GAEf,GAAIP,EAAUpnB,aAAc,CAC1B,IAAM4nB,EAAUzR,EAAYrlB,QAC1B,SAAC+2B,GAAD,OAAaA,EAAG/xB,MAAQsxB,EAAUpnB,gBAClC,GACF+kB,EAAe6C,OAGlB,CAAC1R,EAAWC,EAAaiR,IAgD5B,OACE,eAACj6B,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNhB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,GANlB,SASE,gBAACvL,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZkf,eAAgB,iBALpB,UAQE,eAACkQ,GAAA,EAAD,CAEEmf,gBAAiBjB,GACjBte,YAAU,EACV5xB,KAAK,QACLmxB,QAASA,EACTc,eAAgB,SAACC,GAAD,OACdhe,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,MAEjCqsB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAO/S,MAAQiT,EAAOjT,KAC7DkT,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAgBhe,MAAOA,EAAOkD,KAAM8a,KAEtCnsB,MAAO0qC,EACPrrB,SAAU,SAACjgB,EAAGmtB,GACZoe,EAAape,GACbwe,GAAqB,OAARxe,QAAQ,IAARA,OAAA,EAAAA,EAAU/mB,QAAS,GAC5B+mB,GACFke,GAAa,IAGjBh9B,QAAS,CAAEgf,MAAOhf,EAAQtP,WAC1BuuB,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEE7pB,GAAG,UACH/C,KAAK,UACLiQ,MAAK,UAAKyU,EAAMO,QAAX,YAAsBP,EAAMmc,SACjCjzB,MAAO68B,EACPxvC,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChBgT,SAAU,SAACzI,GACTwjC,EAAQne,QAAUrlB,GAEpBolB,gBAAiB,CACfrc,MAAO,CAAE7U,SAAUyS,EAAQ,GAAK,WAMxC,eAACgd,GAAD,CACEprB,KAAK,aACLiZ,MAAOyL,EAAMxB,WACbwB,MAAOA,EACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgBid,EAChBhd,YAAa+c,EACb9c,SAAU4d,EACVt7B,SAAUA,EACV7Q,MAAO,IACPwqB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNle,QAASA,EACTU,MAAOA,IAET,eAACgd,GAAD,CACEprB,KAAK,WACLiZ,MAAOyL,EAAMvB,SACbuB,MAAOA,EACP2G,QAASoO,EACTx5B,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACb7d,SAAUid,EACV36B,SAAUA,EACV7Q,MAAO,IACPwqB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNle,QAASA,EACTU,MAAOA,IAET,eAAC2B,GAAA,EAAD,CACE/P,KAAK,MACLsf,SAAU,SAAChQ,GAAD,OAAYw7B,EAAW9mB,OAAO1U,EAAE05B,OAAO/oC,SACjDA,MAAO4qC,EACP56B,MAAOyU,EAAM5e,IACb7K,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLuM,QAAOK,EAAOnI,IACd0K,MAAO,CAAEtT,MAAO,IAChB9C,OAAO,QACPkxC,QAAS,SAACh8B,GAAD,OAAOA,EAAE05B,OAAOuC,UACzBC,WAAY,CACVh7B,MAAO,CAAE8V,UAAW,QAAS3qB,SAAU,GAAIkC,OAAQ,OAGvD,eAACkS,GAAA,EAAD,CACE/P,KAAK,QACLsf,SAAU,SAAChQ,GAAD,OAAY07B,EAAahnB,OAAO1U,EAAE05B,OAAO/oC,SACnDA,MAAO8qC,EACP96B,MAAOyU,EAAMjf,MACbmI,QAAOK,EAAOxI,MACdxK,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLmP,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPkxC,QAAS,SAACh8B,GAAD,OAAOA,EAAE05B,OAAOuC,UACzBC,WAAY,CACVh7B,MAAO,CAAE8V,UAAW,QAAS3qB,SAAU,GAAIkC,OAAQ,OAGvD,eAAC2oB,GAAA,EAAD,CACEhW,MAAO,CAAEpV,WAAY,IACrB6J,MAAM,UACN/K,KAAK,QACLuW,QAASzC,GAzKI,WACnB,IAAK28B,EAGH,OAFAD,GAAa,QACbO,EAAQne,QAAQ2e,QAGlB,IAAMtoB,EAAWvY,EACb,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,YAE3BqL,EACE4S,EAAavY,EACf,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,YAE/BqL,EACEo7B,EAAQ,uDACTf,GACAxnB,GACAD,GAHS,IAIZ2nB,UACAE,YACAY,UAAWd,EAAUE,EACrBa,cAAef,EAAUF,EAAU7I,KACnC1/B,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,MAEfmxB,EAAQkB,GAxCRV,EAAa,GACbF,EAAW,GACXF,EAAa,MACb7e,EAAa,MACbuc,EAAe,MAsCf2C,EAAQne,QAAQ2e,WAuIVxyB,MAAM,iBALR,SAOE,eAAC,KAAD,W,0CCtMJkN,GAAoB,CACxBC,IA/BgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,sBAAK7V,MAAO,CAAE8V,UAAW,UAAzB,SACE,eAAC5V,GAAA,EAAD,CAAK6V,EAAG,EAAR,SACE,eAACC,GAAA,EAAD,CAAKvhB,MAAM,UAAUwL,QAAS4V,EAAWpN,MAAM,iBAA/C,SACE,eAAC,KAAD,WA4BNwN,KAtBiB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,UAAH,OACjB,eAACK,GAAA,EAAD,CACEjW,QAAS4V,EACT7V,MAAO,CAAE3S,OAAQ,GAAIX,MAAO,IAC5B+b,MAAM,WAHR,SAKE,eAAC,KAAD,CAAUzI,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,aAiB1C0hB,OAbmB,SAAC,GAAD,IAAGN,EAAH,EAAGA,UAAH,OACnB,eAACK,GAAA,EAAD,CACEjW,QAAS4V,EACT7V,MAAO,CAAE3S,OAAQ,GAAIX,MAAO,IAC5B+b,MAAM,aAHR,SAKE,eAAC,KAAD,CAAYzI,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,cAUjC4mC,GAAe,SAAC,GAAuB,IAArB9oC,EAAoB,EAApBA,GAAIsjB,EAAgB,EAAhBA,UAC3BS,EAAgBX,GAAkBpjB,GACxC,OAAO,eAAC+jB,EAAD,CAAeT,UAAWA,K,qBC6OpBylB,GArQG,SAAC,GASP,IARVj6B,EAQS,EARTA,KACA8X,EAOS,EAPTA,QACA/M,EAMS,EANTA,IACA4R,EAKS,EALTA,MACAK,EAIS,EAJTA,WACAzgB,EAGS,EAHTA,MACAsW,EAES,EAFTA,MACAhkB,EACS,EADTA,KAEMgN,EAAUrP,KADP,EAEyBsP,qBAAc,GAFvC,oBAEF88B,EAFE,KAESC,EAFT,OAIyB/8B,oBAAc,MAJvC,oBAIFg9B,EAJE,KAISC,EAJT,OAKqBj9B,oBAAS,GAL9B,oBAKFk9B,EALE,KAKOC,EALP,OAMyBn9B,oBAAS,GANlC,oBAMFo9B,EANE,KAMSC,EANT,OAQyBr9B,oBAAc,MARvC,oBAQF/C,EARE,KAQSmhB,EART,OASyBpe,qBAAc,GATvC,oBASF27B,EATE,KASSC,EATT,KAUHb,EAAe92B,KAAM+2B,SAVlB,EAY6Bh7B,oBAAc,MAZ3C,oBAYFhD,EAZE,KAYW29B,EAZX,OAauB36B,qBAAc,GAbrC,oBAaF46B,EAbE,KAaQC,EAbR,KAcHa,EAAiBz3B,KAAM+2B,SAdpB,EAgBkC76B,aAAQ5J,EAAI6B,iBAA/CgI,EAhBC,EAgBDA,SAAUC,EAhBT,EAgBSA,aAAcC,EAhBvB,EAgBuBA,OAExByrB,EAAgBmC,KAAhBnC,YACAoH,EAAaiL,KAAbjL,SACArH,EAAckQ,KAAdlQ,UAEFwR,EAAer5B,KAAM+2B,SAE3BtV,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB2xB,EAAapuB,EAAImuB,WACjBD,EAAWluB,EAAIiuB,SACf,IAAMmB,EAASpvB,EAAIvD,IACbwwB,EAAQjtB,EAAI2G,aACZumB,EAAQltB,EAAI+G,WAClB,GAAIkmB,EAAO,CACT,IAAMjB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQwwB,KAAO,GACnEvB,EAAeM,GAEjB,GAAIkB,EAAO,CACT,IAAMC,EAAOtQ,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQywB,KAAO,GAC/D/d,EAAage,GAEf,GAAIiC,EAAQ,CACV,IAAMC,EAAOnL,EAASzsB,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ2yB,KAAQ,GAC7DpB,EAAaqB,OAGhB,CAACp6B,IAEJ,IAqDMs6B,EAAc,WAClBxiB,IArDAqhB,EAAa,GACbF,EAAW,GACXF,EAAa,MACb7e,EAAa,OAsDf,OACE,eAACrC,GAAD,CACE7X,KAAMA,EACN8X,QAASwiB,EACTruC,SAAU,KACV4P,QAASA,EAJX,SAME,eAACgD,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNtD,OAAQ,GACRoB,UAAW4S,EAAQ,MAAQ,OAL/B,SAQE,gBAACsC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EAENZ,WAAY,SACZkf,eAAgB,iBANpB,UASE,eAACkQ,GAAA,EAAD,CAEEJ,YAAU,EACV5xB,KAAK,QACLmxB,QAASyV,EACT3U,eAAgB,SAACC,GAAD,OACdhe,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,MAEjCqsB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAO/S,MAAQiT,EAAOjT,KAC7DkT,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAgB9a,KAAM8a,KAExBH,UAAWuC,EACXvuB,MAAO0qC,EACPrrB,SAAU,SAACjgB,EAAGmtB,GACZoe,EAAape,GAETA,GACFke,GAAa,IAGjBh9B,QAAS,CAAEgf,MAAOhf,EAAQtP,WAC1BuuB,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEE7pB,GAAG,UACH/C,KAAK,UACLiQ,MAAOyU,EAAMO,QACbrX,MAAO68B,EACPxvC,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChBgT,SAAU,SAACzI,GACTwjC,EAAQne,QAAUrlB,GAEpBolB,gBAAiB,CACfrc,MAAO,CAAE7U,SAAU,WAM3B,eAACyvB,GAAD,CACEprB,KAAK,aACLiZ,MAAOyL,EAAMxB,WACbwB,MAAOA,EACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgBid,EAChBhd,YAAa+c,EACb9c,SAAU4d,EACVt7B,SAAUA,EACV7Q,MAAO,IACPwqB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNle,QAASA,EACTU,MAAOA,IAET,eAACgd,GAAD,CACEprB,KAAK,WACLiZ,MAAOyL,EAAMvB,SACbuB,MAAOA,EACP2G,QAASoO,EACTx5B,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACb7d,SAAUid,EACV36B,SAAUA,EACV7Q,MAAO,IACPwqB,GAAI,EACJiE,SAAO,EACPC,QAAM,EACNle,QAASA,EACTU,MAAOA,IAET,eAAC2B,GAAA,EAAD,CACE/P,KAAK,MACLsf,SAAU,SAAChQ,GAAD,OAAYw7B,EAAW9mB,OAAO1U,EAAE05B,OAAO/oC,SACjDA,MAAO4qC,EACP56B,MAAOyU,EAAM5e,IACb7K,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLuM,QAAOK,EAAOnI,IACd0K,MAAO,CAAEtT,MAAO,IAChB9C,OAAO,QACPkxC,QAAS,SAACh8B,GAAD,OAAOA,EAAE05B,OAAOuC,UACzBC,WAAY,CACVh7B,MAAO,CAAE8V,UAAW,QAAS3qB,SAAU,GAAIkC,OAAQ,OAGvD,eAACkS,GAAA,EAAD,CACE/P,KAAK,QACLsf,SAAU,SAAChQ,GAAD,OAAY07B,EAAahnB,OAAO1U,EAAE05B,OAAO/oC,SACnDA,MAAO8qC,EACP96B,MAAOyU,EAAMjf,MACbmI,QAAOK,EAAOxI,MACdxK,QAAQ,WACRiV,SAAUnC,EACV1M,KAAK,SACLmP,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPkxC,QAAS,SAACh8B,GAAD,OAAOA,EAAE05B,OAAOuC,UACzBC,WAAY,CACVh7B,MAAO,CAAE8V,UAAW,QAAS3qB,SAAU,GAAIkC,OAAQ,OAGvD,eAAC2oB,GAAA,EAAD,CACEhW,MAAO,CAAEpV,WAAY,IACrB6J,MAAM,UACN/K,KAAK,QACLuW,QAASzC,GA5LG,WACpB,IAAK28B,EAGH,OAFAD,GAAa,QACbO,EAAQne,QAAQ2e,QAGlB,IAAMtoB,EAAWvY,EACb,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,OAE3B,CACE0e,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,GAEf4S,EAAavY,EACf,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEjBo7B,EAAQ,uDACTf,GACAxnB,GACAD,GAHS,IAIZ2nB,UACAE,YACAY,UAAWd,EAAUE,EACrBa,cAAef,EAAUF,EAAU7I,KACnC1/B,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,MAEfwV,EAAW6c,GACXS,OAiJQlzB,MAAM,iBALR,SAOE,eAAC,KAAD,cCrQCuL,GAAW,SAAC5H,GAAD,OAAcA,EAAIvC,OAEpC+xB,GAAoB,SAAC,GAAD,IAAGnsC,EAAH,EAAGA,MAAH,OACxB,eAACyQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZkf,eAAgB,YALpB,SAQE,eAACnM,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SACGgF,EAAQA,EAAMgd,eAAe,SAAW,QAKzCovB,GAAuB,SAACryC,GAAD,OAC3B,eAAC,KAAD,cAAkBsyC,mBAAoBF,IAAuBpyC,KAEzDuyC,GAAqB,SAACvyC,GAAD,OACzB,eAAC,KAAD,cACEsyC,mBAAoB,gBAAGrsC,EAAH,EAAGA,MAAH,OAClB,eAAC4P,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiC+oB,OAAO/jB,GAAS,MAE/CjG,KAgBKwyC,GAAiBC,cAZf,SAACjwC,GAAD,MAAY,CACzBkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,SASP,CAAE8D,KAAM,kBAA3BysC,EAJH,SAAC,GAAD,IAAG/+B,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAMC,MAAP,6BAAiBD,GAAjB,IAA4Bh9B,UAAWjC,EAAQg/B,mBAOlC,SAASG,GAAT,GAQN,IAPP9e,EAOM,EAPNA,KACA7tB,EAMM,EANNA,WACA4sC,EAKM,EALNA,SACA1+B,EAIM,EAJNA,MACAsW,EAGM,EAHNA,MACAhkB,EAEM,EAFNA,KAEM,IADN7C,cACM,MADG,IACH,IACY8P,oBAAS,CACzB,CAAE3N,KAAM,QAASiZ,MAAOyL,EAAMC,IAC9B,CAAE3kB,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOyL,EAAMO,SAChD,CAAEjlB,KAAMoO,EAAQ,iBAAmB,eAAgB6K,MAAOyL,EAAMvB,UAChE,CAAEnjB,KAAM,UAAWiZ,MAAOyL,EAAM5e,KAChC,CAAE9F,KAAM,YAAaiZ,MAAOyL,EAAMjf,OAClC,CAAEzF,KAAM,YAAaiZ,MAAOyL,EAAM5F,SAN7BiuB,EADD,uBAU+Bp/B,oBAAS,CAC5C,CAAE3C,WAAY,QAAS9N,MAAO,MAAO0T,MAAO,QAC5C,CAAE5F,WAAY,OAAQ9N,MAAO,QAC7B,CAAE8N,WAAY,UAAW9N,MAAO,MAAO0T,MAAO,SAC9C,CAAE5F,WAAY,YAAa9N,MAAO,MAAO0T,MAAO,SAChD,CAAE5F,WAAY,YAAa9N,MAAO,MAAO0T,MAAO,WAL3Co8B,EAVD,qBAkBAC,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzI,EAAQyI,EAAQ,GACtB5iB,EAAWma,IAHO,2CAAH,sDAenB,OACE,eAACsX,GAAA,EAAD,CACEnhB,MAAO,CACL08B,UAAWrvC,EACX0xB,SAAU,OACVn1B,OAAQ,GACR+yC,UAAWtvC,GALf,SAQGkwB,GACC,gBAAC,KAAD,CAAMA,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CAAc4oB,gBAAiBH,IAE/B,eAAC,KAAD,CACEI,oBAtBU,WAClB,OAAO,eAAC38B,GAAA,EAAD,CAAK9T,QAAQ,UAsBZ0wC,iBAAkBN,EAClBO,eAAgBf,KAElB,eAAC,GAAD,CAAsBgB,IAAK,CAAC,YAAa,UAAW,eACpD,eAAC,GAAD,CAAoBA,IAAK,CAAC,WAC1B,eAAC,KAAD,IACA,eAAC,KAAD,CACEC,mBAAiB,EAEjBC,iBAAkB7B,KAEpB,eAAC,GAAD,CAAcjd,UA9BJ,aA8B0BC,WAAYie,EAAhD,SACE,eAAC,GAAD,CAAWpsC,KAAMA,EAAM0N,MAAOA,EAAOsW,MAAOA,MAE9C,eAAC,KAAD,CACE1kB,KAAK,eACL2tC,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aAWX,MAVY,CACV,CACExb,IAAK,cACL/wB,KAAMwsC,KAAgBC,YACtB5wC,MAAO,KAJC,oBAMP0wC,EAAav5B,QACd,SAAC05B,GAAD,OAAYA,EAAE1sC,OAASwsC,KAAgBC,yBCvIlD,IAAME,GAAa,SAAC,GAAyC,EAAvC/qB,MAAwC,IAAjCzE,EAAgC,EAAhCA,OAAQM,EAAwB,EAAxBA,MAAO4F,EAAiB,EAAjBA,MACjD,OACE,gBAAChU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAe,SACfC,WAAY,WACZkf,eAAgB,SAChBne,OAAQ,IAPZ,UAUE,gBAACgS,GAAA,EAAD,CAAYW,MAAO,GAAnB,UACGkU,EAAM5F,MADT,MACmBP,GAAYO,MAM/B,gBAACjP,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,OAAQjkB,SAAU,IAAnD,UACG+oB,EAAM6d,WADT,MACwBhkB,GAAYC,UC+E3ByvB,GAjGO,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,UAAW3pB,EAAY,EAAZA,MAc3D,OACE,eAAChU,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXuf,aAAc,GACd0O,aAAc,IANlB,SASE,gBAACkH,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACkY,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACLC,MAAOmuC,EAAS,OAAS,SACzB9uB,SA1BW,SAAChQ,GAEN,SADIA,EAAE05B,OAAZ/oC,OAENouC,GAAU,GACVF,EAAS,UAETE,GAAU,GACVF,EAAS,MAeL,UAME,eAACz9B,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,MAAOvB,QAAS,GAA5D,SACE,eAACgyB,GAAA,EAAD,CACErtB,MAAM,OACNuQ,MAAO,CACLkd,SAAU,IACV1wB,gBAAiBoxC,EAAS,UAAY,UACtC3hB,kBAAmB,EACnBxQ,aAAc,IAEhBsR,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAOyU,EAAM+d,SAGjB,eAAC/xB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,MAAOvB,QAAS,GAA5D,SACE,eAACgyB,GAAA,EAAD,CACErtB,MAAM,SACNuQ,MAAO,CACLkd,SAAU,IACV1wB,gBAAkBoxC,EAAqB,UAAZ,UAC3B3hB,kBAAmB,EACnBxQ,aAAc,IAEhBsR,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAOyU,EAAMpE,gBAKrB,eAACuR,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACGsc,GACC,gBAACpE,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACH3c,MAAOiuC,EACP5uB,SAlEK,SAAChQ,GAChB6+B,EAAS7+B,EAAE05B,OAAO/oC,QA4DV,UAOE,eAACyQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOH,UAAW,GAF5C,SAIE,eAAC4wB,GAAA,EAAD,CACErtB,MAAM,OACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,cACtBgL,MAAOyU,EAAM7N,SAGjB,eAACnG,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAOH,UAAW,GAF5C,SAIE,eAAC4wB,GAAA,EAAD,CACErtB,MAAM,OACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,cACtBgL,MAAOyU,EAAM3N,oBCzEhBu3B,GAhBO,WACpB,OACE,eAAC59B,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,YAEZ7iB,QAAQ,OACRc,KAAK,IACLse,eAAe,SACflf,WAAW,SAPb,SASE,eAACuhB,GAAA,EAAD,O,8CCVAkwB,GAAkB,CAAE5yC,SAAU,GAAIikB,WAAY,QAE9C4uB,GAAgB,CAAE7yC,SAAU,IAErB8yC,GAAb,+MACEC,kBAAoB,WAClB,OACE,gBAAC7c,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZ+uB,YAAa,EACbzyB,YAAa,OACboK,UAAW,SACXtpB,gBAAiB,OACjBa,OAAQ,IATZ,kBAeF,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZgvB,eAAgB,EAChBC,eAAgB,OAChBC,kBAAmB,EACnBC,kBAAmB,OACnBlxC,OAAQ,IATZ,gCAeF,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZ+uB,YAAa,EACbzyB,YAAa,OACboK,UAAW,SACXzoB,OAAQ,IARZ,qBAcF,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZgvB,eAAgB,EAChBC,eAAgB,OAChBC,kBAAmB,EACnBC,kBAAmB,OACnBzoB,UAAW,SACXzoB,OAAQ,IAVZ,mBAgBF,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZ+uB,YAAa,EACbzyB,YAAa,OACboK,UAAW,SACXzoB,OAAQ,IARZ,yBArEV,EAsFEmxC,iBAAmB,WAAO,IAAD,EACvB,OACE,gBAACnd,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,sBAAKthB,MAAO,CAAE3S,OAAQ,QAExB,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZ+uB,YAAa,EACbzyB,YAAa,OACboK,UAAW,UAPf,2BAaF,eAACuL,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZgvB,eAAgB,EAChBC,eAAgB,OAChBC,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClB5oB,UAAW,SAXf,SAcG/H,GAAW,UAAC,EAAKvkB,MAAMm1C,iBAAZ,aAAC,EAAsBrwB,eA1H/C,EAiIEswB,WAAa,SAAC99B,GACZ,IAAI+9B,EAAU/9B,EAAKtR,KAAK4b,UAAU,EAAG,IACrC,OACE,gBAACiW,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACV2zC,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClB5oB,UAAW,SACXzoB,OAAQ,IAXZ,SAcGyT,EAAK+I,MAAQ,MAGlB,eAACwX,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,uBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVmzC,kBAAmB,EACnBC,kBAAmB,OACnBlxC,OAAQ,IANZ,UASE,+BAAMwxC,IACL/9B,EAAKk+B,IAAM,wCAAUl+B,EAAKk+B,WAG/B,eAAC3d,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACV2zC,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClB5oB,UAAW,QACXzoB,OAAQ,IAXZ,SAcG0gB,GAAYjN,EAAK7L,WAGtB,eAACosB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVmzC,kBAAmB,EACnBC,kBAAmB,OACnBzoB,UAAW,SACXzoB,OAAQ,IAPZ,SAUGyT,EAAKxL,QAGV,eAAC+rB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,EACTK,SAAU,GACVikB,WAAY,OACZkvB,kBAAmB,EACnBC,kBAAmB,OACnBO,gBAAiB,EACjBC,gBAAiB,OACjBN,iBAAkB,EAClBC,iBAAkB,OAClB5oB,UAAW,QACXzoB,OAAQ,IAZZ,SAeG0gB,GAAYjN,EAAKwN,eArN9B,EA4NE2wB,gBAAkB,WAChB,OACE,gBAAC5d,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACV2zC,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClB5oB,UAAW,SACXzoB,OAAQ,QAId,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACVmzC,kBAAmB,EACnBC,kBAAmB,OACnBlxC,OAAQ,QAId,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACV2zC,gBAAiB,EACjBC,gBAAiB,OACjBT,kBAAmB,EACnBC,kBAAmB,OACnBE,iBAAkB,EAClBC,iBAAkB,OAClB5oB,UAAW,QACXzoB,OAAQ,QAId,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACVmzC,kBAAmB,EACnBC,kBAAmB,OACnBzoB,UAAW,SACXzoB,OAAQ,QAId,eAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBACEthB,MAAO,CACLlV,QAAS,GACTK,SAAU,GACVikB,WAAY,OACZkvB,kBAAmB,EACnBC,kBAAmB,OACnBO,gBAAiB,EACjBC,gBAAiB,OACjBN,iBAAkB,EAClBC,iBAAkB,OAClB5oB,UAAW,QACXzoB,OAAQ,YAnStB,EA2SE6xC,iBAAmB,WAAO,IAAD,MACjBC,EAAG,UAAG,EAAK31C,MAAMm1C,iBAAd,iBAAG,EAAsBlsB,aAAzB,aAAG,EAA6BnP,OACnC87B,EAAOC,MAAMxM,KAAKwM,MAAM,GAAKF,GAAKpY,KAAK,KACvCuY,EAAQ,iCAAO,EAAK91C,MAAMm1C,iBAAlB,aAAO,EAAsBlsB,OAA7B,aAAuC2sB,IACrD,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAUj9B,KAAI,SAACvB,GACpB,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM+H,KACD,EAAK+1B,WAAW99B,GAEhB,EAAKm+B,sBAnTpB,6CAwTE,WACE,InEqDgCzyB,EmErD1B+yB,EAAUC,KAAKh2C,MAAMm1C,UAC3B,OACE,gBAACz+B,GAAA,EAAD,CAAKF,MAAO,CAAE9U,WAAY,WAAa6qB,EAAG,EAA1C,UACE,gBAACsL,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBAAKme,IAAI,0IAEX,eAACpe,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,sBAAKthB,MAAO+9B,GAAZ,qBACA,sBAAK/9B,MAAOg+B,GAAZ,2BACA,sBAAKh+B,MAAOg+B,GAAZ,8BACA,sBAAKh+B,MAAOg+B,GAAZ,gCAEF,gBAAC3c,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,sBAAKthB,MAAO+9B,GAAZ,qBACA,sBAAK/9B,MAAOg+B,GAAZ,uCACA,sBAAKh+B,MAAOg+B,GAAZ,4BAEF,gBAAC3c,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,sBAAKthB,MAAO,CAAEoP,WAAY,OAAQ+K,aAAc,GAAIhvB,SAAU,IAA9D,iBAGA,sBACE6U,MAAO,CACL7U,SAAU,GACVikB,WAAY,OACZswB,cAAe,aAJnB,SAOGH,EAAQhvB,eAEX,iCACE,uBAAMvQ,MAAO,CAAEoP,WAAY,QAA3B,qBACCmwB,EAAQzsB,oBAGb,gBAACuO,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,sBAAKthB,MAAO,CAAE7U,SAAU,GAAIw0C,cAAe,GAA3C,qBACA,gBAACte,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBAAKthB,MAAO,CAAEoP,WAAY,QAA1B,2BAEF,eAACiS,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,+BAAMie,EAAQK,cAEhB,eAACve,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,sBAAKthB,MAAO,CAAEoP,WAAY,QAA1B,qBAEF,eAACiS,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gCnEEoB9U,EmEFK,OAAC+yB,QAAD,IAACA,OAAD,EAACA,EAAS/yB,KnEI/C,+BACG,IAAItS,KAAKsS,GAAMC,eAAe,QAAS,CACtCxC,IAAK,UACLF,MAAO,UACPD,KAAM,mBmENA,eAACuX,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UAGlBke,KAAKtB,oBACLsB,KAAKN,mBACLM,KAAKhB,sBAER,gBAACt+B,GAAA,EAAD,CAAKF,MAAO,CAAEiP,SAAU,WAAYC,OAAQ,GAAIC,MAAO,KAAvD,UACE,sBAAKnP,MAAO,CAAEoP,WAAY,QAA1B,wBACA,sDAEF,eAAClP,GAAA,EAAD,CAAKF,MAAO,CAAEiP,SAAU,WAAYC,OAAQ,GAAI6H,KAAM,IAAtD,SACE,sBAAK/W,MAAO,CAAEoP,WAAY,QAA1B,mDA1XV,GAAoChO,KAAMy+B,eCqB7BC,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cA8kBSk2B,GAzkBM,SAAC,GAaV,IAZV1+B,EAYS,EAZTA,KACA8X,EAWS,EAXTA,QACA/M,EAUS,EAVTA,IACA4R,EASS,EATTA,MACAI,EAQS,EARTA,UACAC,EAOS,EAPTA,WACA4K,EAMS,EANTA,UACAC,EAKS,EALTA,YAEA8W,GAGS,EAJTC,QAIS,EAHTD,kBACAh0C,EAES,EAFTA,MACAsjB,EACS,EADTA,MAEMpS,EAAUvP,KADP,EAEqBwP,qBAAS,GAF9B,oBAEF+iC,EAFE,KAEOC,EAFP,OAIehjC,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IAJtD,oBAIFquB,EAJE,KAII5W,EAJJ,OAK+BnW,KAAMjE,SAAS,IAAIjD,MALlD,oBAKFkmC,EALE,KAKYC,EALZ,OAMiBljC,oBAAc,IAN/B,oBAMFmjC,EANE,KAMKC,EANL,OAQyBpjC,oBAAc,IARvC,oBAQFqjC,EARE,KAQSC,EART,OASuBtjC,oBAAc,IATrC,oBASFiJ,EATE,KASQs6B,EATR,OAUiBvjC,oBAAc,IAV/B,oBAUFugC,EAVE,KAUKC,EAVL,OAYuBxgC,oBAAS,GAZhC,oBAYFoR,EAZE,KAYQoyB,EAZR,OAamBxjC,oBAAc,IAbjC,oBAaFyjC,EAbE,KAaMC,EAbN,OAeyB1jC,oBAAc,MAfvC,oBAeFlC,EAfE,KAeS6lC,EAfT,OAgByB3jC,oBAAc,MAhBvC,qBAgBFoxB,GAhBE,MAgBSwS,GAhBT,SAkBuB5jC,qBAAS,GAlBhC,sBAkBF6jC,GAlBE,MAkBQC,GAlBR,SAmBqB9jC,oBAAS,IAnB9B,sBAmBFoc,GAnBE,MAmBO2nB,GAnBP,SAqBmB/jC,qBAAS,GArB5B,sBAqBFygC,GArBE,MAqBMC,GArBN,SAuB0BpU,aAAa0X,GAAmB,CACjEvK,YAAa,sBAxBN,sBAuBFwK,GAvBE,MAuBQC,GAvBR,SA2ByBC,KAA1BrK,GA3BC,GA2BDA,QAASJ,GA3BR,GA2BQA,aA3BR,GA4BwC0K,KAAzC9K,GA5BC,GA4BDA,UAAWL,GA5BV,GA4BUA,YAAaE,GA5BvB,GA4BuBA,aAChCzT,sBAAU,WAAO,IAAD,IACRpQ,GAAiB,OAAT4uB,SAAS,IAATA,IAAA,UAAAA,GAAW/mC,YAAX,2DAAwCA,OAAQ,GAC9D,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMk+B,EAAM/uB,EAAMpQ,KAAI,SAACu4B,GAAD,OAAaA,EAAG6G,UAChCC,EAAW1B,EAAiBn8B,QAAO,SAAC89B,GAAD,OACvCH,EAAIx4B,SAAS24B,EAAI94B,QAGb+4B,EAAiBnvB,EAAMpQ,KAAI,SAACvB,EAAW+I,GAAgB,IAEzDg4B,EAWE/gC,EAXF+gC,WACAznB,EAUEtZ,EAVFsZ,aACAC,EASEvZ,EATFuZ,eACAtH,EAQEjS,EARFiS,aACAC,EAOElS,EAPFkS,eACAC,EAMEnS,EANFmS,iBACAC,EAKEpS,EALFoS,gBACAC,EAIErS,EAJFqS,WACAC,EAGEtS,EAHFsS,aACAC,EAEEvS,EAFFuS,eACAC,EACExS,EADFwS,cAEImoB,EAAOiG,EAAS79B,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ/H,EAAK2gC,UAAQ,GAClE,OAAO,6BACFhG,GADL,IAEEoG,aACAznB,eACAC,iBACAtH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAzJ,QACA0wB,UAAWz5B,EAAKghC,UAChBzH,QAASv5B,EAAKxL,IACd6lC,UAAWr6B,EAAKwN,WAGpBszB,EAAernC,MAAK,SAAC4D,EAAQ4jC,GAAT,OAClB5jC,EAAE6jC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO7jC,EAAE6jC,MAAQ,EAAI,KAE/CvB,EAAamB,GACbzB,GAAW,MAEZ,CAACkB,KA7EK,OA+EuB/jC,aAAQ,IAAhCE,GA/EC,GA+EDA,aAAcyxB,GA/Eb,GA+EaA,MA/Eb,GAmFUvxB,sBAAWtB,IAnFrB,MAiFPyB,UAAaqW,GAjFN,GAiFMA,MAAOtW,GAjFb,GAiFaA,MACX1N,GAlFF,GAkFPhC,MAASgC,KAiDL+xC,GAAmB,SAAC/wB,GACxBmvB,EAAgBnvB,IAGlB2R,sBAAU,WACJ7E,GAASiZ,IACXsJ,GAAgB,OAAPtJ,SAAO,IAAPA,QAAA,EAAAA,GAASxhC,cAAe+d,OAAM,OAACyjB,SAAD,IAACA,QAAD,EAACA,GAASxhC,cAAgB,EAAI,KAEtE,CAAC4L,IAEJwhB,sBAAU,WACRqf,OACC,CAAC1B,EAAWjyB,EAAUmvB,EAAOE,KAEhC/a,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClBs3B,GAAW,GACX,IAAM/hC,EAAY,CAAE+jC,KAAM/1B,EAAIvD,KAC9Bu4B,GAAS,CACPhjC,cAEF,IAAMyK,EAAMuD,EAAIgE,WACVgyB,EAAO3L,GAAU5yB,QAAO,SAAC+2B,GAAD,OAAaA,EAAG/xB,MAAQA,KAAK,GAErDsM,EAAS/I,EAAI+I,OACnB,GAAIA,EAAQ,CACV,IAAM5F,EAAMD,EAAMzL,QAAO,SAACw+B,GAAD,OAAaA,EAAG9vC,KAAO4iB,KAAQ,GACxD4rB,GAAaxxB,GAEfuxB,EAAasB,GACbvE,GAAUzxB,EAAIwxB,QACd+C,EAAYv0B,EAAImC,UAChBgyB,EAASn0B,EAAImI,OACb0tB,GAAiB71B,EAAII,MACrBmxB,EAASvxB,EAAIk2B,YAAcl2B,EAAIk2B,YAAc,OAE9C,CAACl2B,IAEJ,IAAM81B,GAAkB,WACtB,IACMK,EADW/B,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMrH,aAChCsH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAEvDwkC,EADanC,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMpH,iBAC5BqH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAC7D6P,EAASu0B,EAAMh0B,EAUrBsyB,EARa,CACX+B,SAAU50B,EACV60B,aAAcF,EACdG,WAAYH,EACZr0B,MAAOi0B,EACPv0B,SACAgkB,OAPauQ,EAAMh0B,EAAWo0B,IA+BhCjC,EArBa,CACX,CACEqC,SAAU58B,GACVkK,UAAWlK,GACX6H,OAAQu0B,EACR1xC,KAAM2E,GAAeC,cAEvB,CACEstC,SAAU58B,GACVkK,UAAWlK,GACX6H,OAAQO,EACR1d,KAAM2E,GAAeM,kBAEvB,CACEitC,SACY,SAAVrF,EAAmBv3B,GAA2BA,GAChDkK,UAAWlK,GACX6H,OAAQ4vB,GAAS2E,EAAMh0B,EAAW,EAClC1d,KAAM2E,GAAeK,oBAMrBoI,GAAQ,yCAAG,2CAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8uB,EAAe/uB,GAAe+uB,EAAe9uB,GAFlC,gCAGPyG,GACJR,EACA3Z,GAAQ,+FAAsB,yBALnB,6CASX2Q,EAAW,GATA,gCAUPwJ,GACJR,EACA3Z,GAAQ,sIAA+B,2BAZ5B,6CAgBX2Q,GAAQ,OAAGqyB,QAAH,IAAGA,OAAH,EAAGA,EAAQtyB,QAhBR,kCAiBPyJ,GACJR,EACA3Z,GACI,6NACA,sCArBO,6CAyBV3C,EAzBU,kCA0BP8c,GACJR,EACA3Z,GAAQ,oIAA6B,uBA5B1B,+CAiCXogB,GAASxK,OAAO8sB,IAAU9sB,OAAOyjB,GAAQxhC,eAjC9B,kCAkCPsiB,GACJR,EACA3Z,GAAK,6KACmCq5B,GAAQxhC,cAD3C,uCAE+BwhC,GAAQxhC,eAtCjC,6CA2CV+qC,GAAkC,IAArBA,EAAUl9B,OA3Cb,kCA4CPyU,GACJR,EACA3Z,GAAK,uTA9CM,0CAoDPoQ,EAAsC4yB,EAAtC5yB,OAAQ80B,EAA8BlC,EAA9BkC,WAAY9Q,EAAkB4O,EAAlB5O,OAAQ1jB,EAAUsyB,EAAVtyB,MAC9BlQ,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCyU,MAAO+rB,EAAQA,EAAM0C,gBAAaljC,EAClC0M,KAAM4zB,EACNjwB,SAAU,CACRC,WAAYnV,EAAU4N,IACtB0H,aAActV,EAAUzL,KACxB8gB,eAAgBrV,EAAUjI,OAC1B8f,cAAe7X,EAAUrG,OAE3B6d,MAAOtkB,KAAKyB,UAAU4wC,GACtBsC,aACAx0B,QACAC,WACAP,SACAgkB,SACAiR,OAAQrF,GACRA,UACAsF,WAAYtF,GAAS5vB,EAAS,EAC9B5H,WACAk8B,YAAa5E,EACbvoB,OAAQoZ,GAAYA,GAAUh8B,QAAKuN,EACnCqvB,OAAQj/B,GAAK2Y,KAIfumB,GAFepR,EAAQI,EAAYC,EAErBjgB,GA/EC,4CAAH,qDAkFRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,OAGNgO,GAAOA,EAAIvD,MACJ,OAATw4B,SAAS,IAATA,OAAW/W,WAGbuM,GAAa,IACbrH,KARU,gDAUVC,GAAQ,EAAD,IACP7b,QAAQC,IAAR,MAXU,yDAAH,wDAeL4b,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,IAFlB,6CAIN+Z,GAAWJ,EAAS3Z,IAJd,OAKZgW,QAAQC,IAAIzW,GALA,2CAAH,sDAwDPoyB,GAAc,WA5QlBP,KACAwR,EAAa,IACbE,EAAY,GACZE,EAAU,IACVC,EAAa,MACbP,EAAS,IACTG,EAAY,IACZ/C,EAAS,IACToD,GAAa,MACblD,IAAU,GACVwC,EAAgB,IAAInmC,MAoQpBif,KAOIgqB,GAAoBhL,oBACpBiL,GAAmBC,2BAAgB,CACvCp2C,QAAS,kBAAMk2C,GAAa7mB,SAC5BgnB,cAAc,YAAD,cAAcl3B,QAAd,IAAcA,OAAd,EAAcA,EAAKwzB,WAChC2D,kBAAkB,IAEd5E,GAAY,CAChBiB,UAAS,OAAExzB,QAAF,IAAEA,OAAF,EAAEA,EAAKwzB,UAChBpzB,KAAM4zB,EACN7vB,aAAY,OAAEtV,QAAF,IAAEA,OAAF,EAAEA,EAAWzL,KACzBsjB,cAAa,OAAE7X,QAAF,IAAEA,OAAF,EAAEA,EAAWrG,MAC1B0Z,MAAOsyB,EAAOtyB,MACdN,OAAQ4yB,EAAO5yB,OACfyE,MAAO+tB,GAGH/3B,GAAQ7K,GACVogB,EACE,sEACA,sEACFA,EACA,cACA,eACJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASqW,GACT/mB,MAAOA,GACPxK,SAjCmB,WACrBT,GAAaS,GAAbT,IAiCExR,MAAOA,EACPmiC,KAAMA,EAENE,MAAO+U,GACP91C,SAAS,KACT6S,GAAI,EACJmlB,GAAI,GAZN,SAcE,gBAACjE,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACE1jB,MAAOA,GACP6B,MAAOyU,GAAM1H,KACb/c,MAAO2wC,EACPtxB,SAAUmzB,OAGd,eAAC5gB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEpN,MAAOA,GACPwpB,MAAOA,EACPE,OAAQA,GACRC,UAAWA,GACXF,SAAUA,MAGd,eAACtc,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,GACThnC,MAAOwL,EACP6f,eAAgBgmB,EAChBljC,MAAOA,GACPgC,WAAS,EACTsb,QAhWW,WACnB+lB,IAAY,IAgWJrnB,WAAS,MAGb,eAACyH,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,OACLiZ,MAAOyL,GAAMtd,KACbsd,MAAOA,GACP2G,QAASvL,EACT7f,MAAO8+B,GACPzT,eAAgBimB,GAChBnjC,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAeuR,GAAQ,cAAgB,MACvCtR,WAAY,SACZkf,eAAgB,WAChB5gB,WAAYgT,QAAQkC,EAAY,GAChCjV,YAAa+S,GAAQ,QAAKkC,GAR9B,UAWGke,GACC,eAAC3e,GAAA,EAAD,CAAYW,MAAO,CAAEvL,MAAO,QAA5B,SAAuCyf,GAAMC,KAE/C,eAAC5U,GAAA,EAAD,CACE/P,KAAK,QACLisB,UAAWuC,EACXvuB,MAAO6wC,EACPxxB,SAAU,SAAChQ,GAAD,OAAYyhC,EAAS/sB,OAAO1U,EAAE05B,OAAO/oC,SAC/ChF,QAAQ,WACRuV,MAAO,CAAEtT,MAAOsxB,EAAQ,GAAK,IAAKpzB,WAAY,IAC9ChB,OAAO,QAEPoxC,WAAY,CACVh7B,MAAO,CACL8V,UAAW,SACX3qB,SAAU,GACVkC,OAAQ,YAMlB,gBAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACphB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE+Z,YAAa,GAAIC,aAAc,IAA5D,SACE,eAAC+f,GAAD,CACElf,QAASmlB,EACThG,QAzYQ,SAACl5B,GACrB,IAAM0iC,EAAQ,uBAAOhD,GAAP,8BAAuB1/B,GAAvB,IAA6BquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IAuYDvvB,MAAOA,GACP+U,UAAWA,EACXC,YAAaA,EACbhsB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTsiC,GACA,eAAChgC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,SACE,eAACkiB,GAAD,CACE9e,KAAMijB,EACNlE,SAjZO,SAACx7B,GACtB,IAAM0iC,EAAWhD,EAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IAyYC/zC,WAtYW,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,GACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,EAAagD,IAmYC7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,OAIXgwC,GAAW,eAAC,GAAD,OAEd,gBAAChgC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,gBAChB3gB,YAAa,GACbD,WAAY,IANhB,UASE,eAAC2U,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAOyU,GAAM3F,SACb9e,MAAO8e,EAASy0B,WAChBl0B,SAAU,SAAChQ,GAAD,OAAY6hC,EAAYntB,OAAO1U,EAAE05B,OAAO/oC,SAClDhF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPiH,KAAK,SACLiqC,QAAS,SAACh8B,GAAD,OAAOA,EAAE05B,OAAOuC,YAG3B,eAAC,GAAD,CACE/sB,OAAM,OAAE4yB,QAAF,IAAEA,OAAF,EAAEA,EAAQ5yB,OAChBM,MAAK,OAAEsyB,QAAF,IAAEA,OAAF,EAAEA,EAAQtyB,MACfC,SAAUA,EACV2F,MAAOA,QAGX,eAAC,GAAD,CACEqF,QAASA,GACTlY,KAAM2/B,GACN7nB,QAldc,WACtB8nB,IAAY,GACZC,GAAW,KAidHljB,OAAO,EACPgR,YAtMe,SAAC4U,GACxB9C,EAAa8C,IAsMLx3B,IAAK,KACLgS,UAAWgY,GACX/X,WAAYiY,KAEd,eAACp2B,GAAA,EAAD,UACE,sBAAKF,MAAO,CAAE5T,QAAS,QAAvB,SACE,eAAC,GAAD,CAAgBuyC,UAAWA,GAAW1nC,IAAKksC,kBC7kB5CU,GAAa,SAACC,EAAkB19B,EAAe29B,GAG1D,OAV0B,SAACC,EAAcD,GACzC,IAAM5E,EAAM4E,EAAMjwC,IAAM,EAAIiwC,EAAMlwC,IAGlC,OAFYwrC,MAAMxM,KAAKwM,MAAMF,IAAM,SAACtwC,EAAGqS,GAAJ,OAAUA,EAAI6iC,EAAMlwC,OACtCowC,MAAK,SAACnjC,GAAD,OAAgBkjC,EAAMh7B,SAASlI,MAMrCojC,CAlBgB,SAACJ,EAAkB19B,GAAmB,IAC9D3B,EAAeq/B,EAAfr/B,WAKR,OAJyB2B,EAASvC,QAChC,SAACrS,GAAD,OAAciT,IAAejT,EAAIiT,cAEJpC,KAAI,SAAC8hC,GAAD,OAAaA,EAAG79B,QAYrC89B,CAAmBN,EAAa19B,GACV29B,ICiBhCM,IArBwBt4C,cAAW,SAACC,GAAD,OACvCa,aAAa,CACXO,MAAO,CACLC,OAAQ,OACRX,MAAO,QAET9C,OAAQ,CACNA,OAAQ,EACRyD,OAAQ,GACRX,MAAO,KAETe,YAAa,CACX7D,OAAQoC,EAAMG,QAAQ,IAGxBm4C,QAAS,CACPp4C,UAAWF,EAAMG,QAAQ,SAKTuH,OAAaC,MAAM,CACvCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,UAEJ6wC,GAAoB7wC,OAAaC,MAAM,CAC3CnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,SAEG8wC,GAAkB,CAAExwC,SAAUC,aAAYowC,KAC1CI,GAAsB,CAAEzwC,SAAUC,aAAYswC,KAsP5CG,GApPM,SAAC,GASV,IARVrjC,EAQS,EARTA,KACA8X,EAOS,EAPTA,QACA/M,EAMS,EANTA,IACA4R,EAKS,EALTA,MACAI,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACAryB,EAES,EAFTA,MACAoa,EACS,EADTA,SACS,EACejJ,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAE6Bpa,oBAAc,MAF3C,oBAEF2mC,EAFE,KAEWa,EAFX,OAG6BxnC,qBAAc,GAH3C,oBAGFynC,EAHE,KAGWC,EAHX,KAIHC,EAAiB1jC,KAAM+2B,SAJpB,EAM6Bh7B,oBAAc,MAN3C,oBAMF4nC,EANE,KAMWC,EANX,OAQqC7nC,oBAAS,IAR9C,oBAQF8nC,EARE,KAQeC,EARf,OASiB/nC,oBAAc,IAT/B,oBASF4mC,EATE,KASKoB,EATL,OAUehoC,oBAAS,GAVxB,oBAUFmJ,EAVE,KAUI8+B,EAVJ,OAYyC9nC,aAChD0gB,EAAQwmB,GAAkBC,IADpBlnC,EAZC,EAYDA,SAAUC,EAZT,EAYSA,aAAcC,EAZvB,EAYuBA,OAAQwxB,EAZ/B,EAY+BA,MAZ/B,EAkBUvxB,sBAAWtB,IAD5ByB,UAAaqW,EAjBN,EAiBMA,MAAOtW,EAjBb,EAiBaA,MAGd8e,EAAa2oB,KAAb3oB,SAERmG,sBAAU,WACRmiB,EAAetoB,EAAS,MACvB,CAACrb,IAEJwhB,sBAAU,WACR,GAAIihB,EAAa,CACf,IAAMwB,ED1FuB,SAAC9zC,GAClC,IAAMiT,EAAajT,EAAIiT,WACvB,GAAIA,EACF,OAAON,GAAaM,GCuFN8gC,CAAoBzB,GAEhC,GADAqB,EAASG,GACLtnB,EAAO,CACT,IAAMwnB,EAAU3B,GAAWC,EAAa19B,EAAUk/B,GAClDF,EAAQI,SAGVJ,EAAQ,KAET,CAACtB,IAEJjhB,sBAAU,WACR,GAAIzW,GAAOA,EAAI3H,WAAY,CAAC,IAClBA,EAAe2H,EAAf3H,WACFC,EAASkB,GAAoB/B,QACjC,SAAC4hC,GAAD,OAAcA,EAAIhhC,aAAeA,KACjC,GACI7S,EAAS8qB,EAAS7Y,QACtB,SAAC6hC,GAAD,OAAcA,EAAI/rB,WAAavN,EAAIxa,UACnC,GACF+yC,EAAejgC,GACfsgC,EAAepzC,GACfwzC,EAAQh5B,EAAI9F,SAEb,CAAC8F,IAEJyW,sBAAU,WAENqiB,EADEH,EACiBn/B,GAEA,MAEpB,CAACm/B,IAEJ,IAAM9mC,EAAQ,yCAAG,WAAO3D,GAAP,sBAAA6D,EAAA,yDACV2lC,EADU,uBAEbe,GAAe,GACfC,EAAUxoB,QAAQ2e,QAHL,+BAMX30B,EAAOy9B,EAAMjwC,KAAOwS,EAAOy9B,EAAMlwC,KANtB,gCAOP+jB,GACJL,EACA3Z,EAAQ,wHAA2B,oBATxB,wCAaTpO,EAAO8K,EAAK9K,KAAK0/B,OACjBl8B,EAASsH,EAAKtH,OAAOk8B,OACrBt9B,EAASmzC,EAAYprB,SACrBvb,EAhBS,cAiBbyK,IAAKuD,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EACzBlO,SACA0U,OACA9W,OACAwD,SACA2yC,SAASv5B,EAAIvD,UAAM/I,GAChBgkC,GAGL1U,EADepR,EAAQI,EAAYC,EACrBjgB,GA1BC,4CAAH,sDA6BRgxB,EAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,uBAGJqZ,GAAaF,EAAS3Z,GAHlB,OAIVgoC,IAJU,gDAMVnW,EAAQ,EAAD,IANG,yDAAH,wDAULA,EAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZgW,QAAQC,IAAIzW,GALA,2CAAH,sDAkBPwoC,EAAY,WARhBjB,EAAe,MACfE,GAAe,GACfG,EAAe,MACfG,EAAS,IACTC,EAAQ,GACRnW,IAKA9V,KAMI1Q,EAAQ7K,EACVogB,EACE,0DACA,+FACFA,EACA,cACA,eAEJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASysB,EACTn9B,MAAOA,EACPxK,SAjBmB,WACrBT,EAAaS,EAAbT,IAiBExR,MAAOA,EACPmiC,KAAMA,EAPR,SASE,gBAAC9M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,eAACoW,GAAD,CACEloC,KAAK,SACL2rB,SAAO,EACP1S,MAAO7K,EAAQ,kFAAmB,eAClC+b,SAAS,SACTkB,QAASoqB,EACTx1C,MAAOq0C,EACPhpB,eAAgB6pB,EAChB5pB,eAAgB8pB,EAChB7pB,YAAa4pB,EACb3pB,SAAU6pB,EACVvnC,SAAUA,EACVke,YAAUrP,IAAOA,EAAI3H,YACrB7G,MAAOA,EACPgC,WAAS,IAEVmkC,IAAK,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOlwC,MAAOmqB,GACtB,gBAAC3e,GAAA,EAAD,WACG0kC,EAAMlwC,IADT,MACiBkwC,EAAMjwC,OAGzB,eAACuxB,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLiQ,MAAO7B,EAAQ,0DAAe,OAC9BnO,MAAO6W,EACPwI,SAAU,SAAChQ,GAAD,OAAYsmC,EAAQtmC,EAAE05B,OAAO/oC,QACvC2c,IAAKA,EACLqP,YAAUrP,IAAOA,EAAI3H,YACrB5T,KAAK,SACL+O,WAAS,IAEVhC,GACC,gBAAC,KAAM+c,SAAP,WACE,eAAC0K,GAAD,CACEzxB,UAAQ,EACR4L,WAAS,EACThQ,KAAK,SACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,IAEX,eAACylB,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMyb,OACbpyB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EAELxM,WAAS,QAIbhC,GACA,gBAAC,KAAM+c,SAAP,WACE,eAAC0K,GAAD,CACE7lB,WAAS,EACT5L,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EAELxM,WAAS,IAEX,eAACylB,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,EAAMlhB,OACbuK,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,UAKjB,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,U,yGC7RVukB,GAAmB,SAACxrC,GAA4C,IAA/B5F,EAA8B,uDAAtB,OAAQ/K,EAAc,uDAAP,GACnE,OAAQ2Q,GACN,KAAK,EACH,OACE,eAAC,KAAD,CACE2F,MAAO,CAAE7U,SAAUzB,EAAM+K,WAG/B,KAAK,EAEH,OACE,eAAC,KAAD,CACEuL,MAAO,CAAE7U,SAAUzB,EAAM+K,WAG/B,KAAK,EACH,OACE,eAAC,KAAD,CACEuL,MAAO,CAAE7U,SAAUzB,EAAM+K,WAG/B,KAAK,EACH,OACE,eAAC,KAAD,CACEuL,MAAO,CAAE7U,SAAUzB,EAAM+K,WAG/B,KAAK,GACH,OACE,eAAC,KAAD,CACEuL,MAAO,CAAE7U,SAAUzB,EAAM+K,WAI/B,QACE,OAAO,2BChCAqxC,GAAe,SAAC,GAMjB,IALVzrC,EAKS,EALTA,OACA0rC,EAIS,EAJTA,UACAC,EAGS,EAHTA,iBACAv9B,EAES,EAFTA,MACA7K,EACS,EADTA,MAEA,OACE,gBAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAAC+1B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACE6jB,QAAQ,2BACR1zC,GAAG,qBACH9C,MAAO4K,EACPyU,SAAU,SAAChQ,GACT,IAAMrP,EAAQ+jB,OAAO1U,EAAE05B,OAAO/oC,OAC9Bs2C,EAAUt2C,GACVu2C,EAAiBv2C,EAAO,WAE1BhF,QAAQ,WACRuV,MAAO,CAAE08B,UAAW,GAAIxf,SAAU,KAVpC,SAYGvkB,GAAY0J,KAAI,SAACsL,GAChB,OACE,eAAC,KAAD,CAAsBle,MAAOke,EAAGpb,GAAI2zC,SAAUv4B,EAAGpb,KAAO8H,EAAxD,SACGuD,EAAQ+P,EAAG3a,OAAS2a,EAAGne,MADXme,EAAGpb,WAO1B,gBAAC2N,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACT8wB,SAAU,GACV5wB,WAAY,SACZe,OAAQ,GACRvC,QAAS,GACToB,UAAW,GAPf,UAUE,eAACmT,GAAA,EAAD,UAAaoJ,IACZo9B,GAAiBxrC,EAAQ,OAAQ,WCnD7B8rC,GAAc,SAAC,GAOhB,IANVtrB,EAMS,EANTA,QACAprB,EAKS,EALTA,MACAqf,EAIS,EAJTA,SACAlR,EAGS,EAHTA,MAGS,IAFTlR,aAES,MAFD,IAEC,MADT+uB,gBACS,SACT,OACE,eAAC0G,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACE7vB,GAAG,cACH9C,MAAOA,EACPgsB,SAAUA,EACV3M,SAAUA,EACVrkB,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRX,MAAOA,EACP80B,UAAW,WACXr2B,SAAU,GACVikB,WAAY,OACZ3a,MAAO,QAZX,SAeGomB,EAAQxY,KAAI,SAACvB,GACZ,OACE,eAAC,KAAD,CAEEd,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAOqR,EAAKrR,MAHd,SAKGmO,EAAQkD,EAAK9N,OAAS8N,EAAKtR,MAJvBsR,EAAKvO,Y,SC7BX6zC,GAAc,CACzB,CACE7zC,GAAI,EACJ/C,KAAM,QACNwD,OAAQ,2BACRvD,MAAO42C,KAAMC,OAEf,CACE/zC,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACRvD,MAAO42C,KAAME,QAEf,CACEh0C,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,2BACRvD,MAAO42C,KAAMG,SAEf,CACEj0C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,2BACRvD,MAAO42C,KAAMI,SAGJC,GAAmB,CAC9B,CACEn0C,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,iCACRvD,MAAO42C,KAAMM,IAEf,CACEp0C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,iCACRvD,MAAO42C,KAAMO,IAEf,CACEr0C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,6CACRvD,MAAO42C,KAAMQ,IAEf,CACEt0C,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,mDACRvD,MAAO42C,KAAMS,IAEf,CACEv0C,GAAI,EACJ/C,KAAM,YACNwD,OAAQ,mDACRvD,MAAO42C,KAAMU,IAEf,CACEx0C,GAAI,EACJ/C,KAAM,WACNwD,OAAQ,uCACRvD,MAAO42C,KAAMW,IAEf,CACEz0C,GAAI,EACJ/C,KAAM,SACNwD,OAAQ,uCACRvD,MAAO42C,KAAMY,KAIJC,GAAgB,CAC3B,CACE30C,GAAI,EACJ/C,KAAM,MACNwD,OAAQ,qCACRvD,MAAO,GAET,CACE8C,GAAI,EACJ/C,KAAM,QACNwD,OAAQ,4EACRvD,MAAO,GAET,CACE8C,GAAI,EACJ/C,KAAM,eACNwD,OAAQ,iCACRvD,MAAO,IAGE03C,GAAsB,CACjC,CACE50C,GAAI,EACJ/C,KAAM,0BACNwD,OAAQ,0DACRvD,MAAO,UAET,CACE8C,GAAI,EACJ/C,KAAM,wBACNwD,OAAQ,yFACRvD,MAAO,QAET,CACE8C,GAAI,EACJ/C,KAAM,0BACNwD,OAAQ,yFACRvD,MAAO,WAGE23C,GAAkB,CAC7B,CACE70C,GAAI,EACJ/C,KAAM,UACNwD,OAAQ,iCACRvD,MAAO,UAET,CACE8C,GAAI,EACJ/C,KAAM,QACNwD,OAAQ,2BACRvD,MAAO,QAET,CACE8C,GAAI,EACJ/C,KAAM,OACNwD,OAAQ,qBACRvD,MAAO,QC+FI43C,GAhNK,SAAC,GAST,IARVhmC,EAQS,EARTA,KACA8X,EAOS,EAPTA,QACA/M,EAMS,EANTA,IACA4R,EAKS,EALTA,MACAI,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACAryB,EAES,EAFTA,MACA2K,EACS,EADTA,MACS,EACewG,oBAAS,GADxB,oBACFtM,EADE,KACIy2C,EADJ,OAEuBnqC,oBAAS,UAFhC,oBAEFkN,EAFE,KAEQk9B,EAFR,OAG2BpqC,oBAAS,UAHpC,oBAGFmN,EAHE,KAGUk9B,EAHV,OAIarqC,oBAAS,IAJtB,oBAIF7H,EAJE,KAIGmyC,EAJH,OAKetqC,oBAAS,IALxB,oBAKF8iB,EALE,KAKIynB,EALJ,OAMsBvqC,oBAAS,IAN/B,oBAMFu2B,EANE,KAMOiU,EANP,OAOuBxqC,oBAAS,MAPhC,oBAOFoN,EAPE,KAOQq9B,EAPR,OAYUlqC,sBAAWtB,IAZrB,IAUPyB,UAAaqW,EAVN,EAUMA,MAAOtW,EAVb,EAUaA,MACX1N,EAXF,EAWPhC,MAASgC,KAGX2yB,sBAAU,WACJzW,IACFs7B,EAAQt7B,EAAI6T,MACZqnB,EAAQl7B,EAAIvb,MACZ82C,EAAYv7B,EAAIsnB,SAChB4T,EAAQl7B,EAAIvb,MACZ02C,EAAYn7B,EAAI/B,UAChBo9B,EAAOr7B,EAAI9W,KACXkyC,EAAcp7B,EAAI9B,YAClBs9B,EAAYx7B,EAAI7B,aAEjB,CAAClJ,IAEJwhB,sBAAU,WAAO,IACPxZ,EAAuB1S,EAAvB0S,UAAWzO,EAAYjE,EAAZiE,QACb2P,EAAWC,GAAY,CAC3BnB,YACAzO,UACAyP,WACAC,aACAhV,QAEFsyC,EAAYr9B,KACX,CAACF,EAAUC,EAAYhV,IAE1B,IAAM2I,EAAQ,yCAAG,6BAAAE,EAAA,sDACTC,EAAiB,CACrBxM,OAAQ1B,EAAK0B,OACbf,OACA+D,MAAgB,IAAT/D,EAAa6iC,OAAU5zB,EAC9BhL,MAAgB,IAATjE,EAAa6iC,OAAU5zB,EAC9BqvB,OAAiB,IAATt+B,EAAaX,EAAK2Y,SAAM/I,EAChCyK,WACA0V,OACA5V,WACAC,aACAhV,MACAo+B,WAGF1V,EAAQI,EAAUhgB,GAAaigB,EAAWjgB,GACtC4f,EACFiR,KAEAA,IACA9V,KApBa,2CAAH,qDA4BR8V,EAAQ,WACZqY,EAAQ,GACRC,EAAY,UACZC,EAAc,UACdC,EAAO,IACPC,EAAQ,IACRC,EAAY,IACZC,EAAY,OAQRn/B,EAAQ7K,EACVogB,EACE,gEACA,gEACFA,EACA,aACA,cACE6pB,EACK,IAATh3C,EAAaqjB,EAAMwG,OAAkB,IAAT7pB,EAAaqjB,EAAMpf,MAAQof,EAAMkgB,aAE/D,OACE,eAAClG,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAnBiB,WACnB8V,IACA9V,KAkBE1Q,MAAOA,EACPxK,SAnCmB,WACrBA,KAmCEjS,MAAOA,EACPmiC,KAAM,GAPR,SASE,gBAAC9M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLqgC,WAAS,EACTtS,KAAM,EACN9d,MAAOyU,EAAM+L,KACbxwB,MAAOwwB,EACPnR,SAAU,SAAChQ,GAAD,OAAY4oC,EAAQ5oC,EAAE05B,OAAO/oC,QACvC2c,IAAKA,EACLxM,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEzG,QAASqsB,GACTz3C,MAAOoB,EACPie,SAAU,SAAChQ,GAAD,OAAYwoC,EAAQxoC,EAAE05B,OAAO/oC,QACvCmO,MAAOA,EACPlR,MAAO,QAGX,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACY,IAATzwB,GACC,eAACw0B,GAAD,CACE71B,KAAK,UACLiQ,MAAOooC,EACPp4C,MAAOikC,EACP5kB,SAAU,SAAChQ,GAAD,OAAY6oC,EAAY7oC,EAAE05B,OAAO/oC,QAC3CmQ,WAAS,EACT0lB,GAAI,MAIV,gBAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEzG,QAASssB,GACT13C,MAAO6a,EACPwE,SAAU,SAAChQ,GAAD,OAAY0oC,EAAc1oC,EAAE05B,OAAO/oC,QAC7CmO,MAAOA,EACPlR,MAAO,QAGX,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,MACLiQ,MAAOyU,EAAM5e,IACb7F,MAAO6F,EACPwZ,SAAU,SAAChQ,GAAD,OAAY2oC,EAAOj0B,OAAO1U,EAAE05B,OAAO/oC,SAC7CoB,KAAK,SACLnE,MAAO,QAGX,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEzG,QAASusB,GACT33C,MAAO4a,EACPyE,SAAU,SAAChQ,GAAD,OAAYyoC,EAAYzoC,EAAE05B,OAAO/oC,QAC3CmO,MAAOA,EACPlR,MAAO,WAIb,eAAC20B,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,SACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNlC,UAAW,MACXG,SAAU,GACVmB,WAAY,SACZkf,eAAgB,UAPpB,SAUGuB,GAAqBxC,EAAU3M,iBAQ5C,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UCtLVwe,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cAKOi+B,GAAc,SAACt+C,GAAgB,IAExCu+C,EAOEv+C,EAPFu+C,cACAC,EAMEx+C,EANFw+C,gBACA9e,EAKE1/B,EALF0/B,YACA5Z,EAIE9lB,EAJF8lB,MACA2Z,EAGEz/B,EAHFy/B,UACAj9B,EAEExC,EAFFwC,MACAg0C,EACEx2C,EADFw2C,iBAGI5zB,E1E+G6B,SAACA,GAkBhCA,EAhBF2G,aAgBE3G,EAfF4G,eAeE5G,EAdF6G,iBAcE7G,EAbF8G,gBALgD,IAMhDC,EAYE/G,EAZF+G,WAIAsuB,GAQEr1B,EAXFgH,aAWEhH,EAVFiH,eAUEjH,EATFkH,cASElH,EARFq1B,QAGArxB,GAKEhE,EAPF67B,SAOE77B,EANF87B,WAME97B,EALFgE,YAIGwC,GACDxG,EAJFmE,aAIEnE,EAHFkE,eAGElE,EAFF0G,cAhB+C,aAkB7C1G,EAlB6C,oOAoB3C+7B,EAAM,gBAAQv1B,GAwCpB,OAtCAu1B,EAAOz1B,WAAatG,EAAIsG,WACpBtG,EAAIsG,WACJ,CACE7J,IAAKuD,EAAI2G,aACTvjB,KAAM4c,EAAI4G,eACVhgB,OAAQoZ,EAAI6G,iBACZxe,MAAO2X,EAAI8G,iBAGbC,IACFg1B,EAAOx1B,SAAWvG,EAAIuG,SAClBvG,EAAIuG,SACJ,CACE9J,IAAKuD,EAAI+G,WACT3jB,KAAM4c,EAAIgH,aACVpgB,OAAQoZ,EAAIiH,eACZ5e,MAAO2X,EAAIkH,gBAGfmuB,IACF0G,EAAOrnC,KAAOsL,EAAItL,KACdsL,EAAItL,KACJ,CACE+H,IAAKuD,EAAIq1B,OACTjyC,KAAM4c,EAAI67B,SACVj1C,OAAQoZ,EAAI87B,aAGhB93B,IACF+3B,EAAOh4B,SAAW/D,EAAI+D,SAClB/D,EAAI+D,SACJ,CACEtH,IAAKuD,EAAIgE,WACT5gB,KAAM4c,EAAImE,aACVvd,OAAQoZ,EAAIkE,eACZ1b,MAAOwX,EAAI0G,gBAGZq1B,E0E3KKC,CAAsBJ,GAE5B9qC,EAAUvP,KAbyB,EAeTwP,qBAAS,GAfA,oBAelC6jC,EAfkC,KAexBC,EAfwB,OAiBF9jC,oBAAQ,OAACiP,QAAD,IAACA,OAAD,EAACA,EAAK/C,WAjBZ,oBAiBlCA,EAjBkC,KAiBvBg/B,EAjBuB,OAkBNlrC,oBAAQ,OAACiP,QAAD,IAACA,OAAD,EAACA,EAAKxR,SAlBR,oBAkBlCA,EAlBkC,KAkBzB0tC,EAlByB,OAoBbnrC,qBAAY,OAAHiP,QAAG,IAAHA,OAAA,EAAAA,EAAK/R,SAAU,GApBX,oBAoBlCA,EApBkC,KAoB1B0rC,EApB0B,OAsBX5oC,qBAAS,GAtBE,oBAsBlC+iC,EAtBkC,KAsBzBC,EAtByB,OAuBbhjC,oBAAc,IAvBD,oBAuBlCyjC,EAvBkC,KAuB1BC,EAvB0B,OAwBP1jC,oBAAc,IAxBP,oBAwBlCqjC,EAxBkC,KAwBvBC,EAxBuB,OA0BPtjC,oBAAc,MA1BP,oBA0BlCoxB,EA1BkC,KA0BvBwS,EA1BuB,OA4BL5jC,qBAAS,GA5BJ,oBA4BlCorC,EA5BkC,KA4BtBC,EA5BsB,OA6BHrrC,oBAAS,IA7BN,oBA6BlCgM,EA7BkC,KA6BrBs/B,EA7BqB,OA8BTtrC,oBAAS,MA9BA,oBA8BlC+oC,EA9BkC,KA8BxBwC,EA9BwB,QAgCQnH,KAAzC9K,GAhCiC,GAgCjCA,UAAWL,GAhCsB,GAgCtBA,YAAaE,GAhCS,GAgCTA,aAhCS,GAqCtB54B,sBAAWtB,IArCW,MAmCvCyB,UAAaqW,GAnC0B,GAmC1BA,MAAOtW,GAnCmB,GAmCnBA,MACX1N,GApC8B,GAoCvChC,MAASgC,KApC8B,GAsCXiN,oBAAS,IAtCE,sBAsClCoc,GAtCkC,MAsCzB2nB,GAtCyB,SAwCNzX,aAAa0X,GAAmB,CACjEvK,YAAa,sBAzC0B,sBAwClCwK,GAxCkC,MAwCxBC,GAxCwB,SA4CD5X,aAAakf,GAAY,CAC/D/R,YAAa,sBA7C0B,sBA4ClCgS,GA5CkC,MA4CrBC,GA5CqB,MAgDzChmB,sBAAU,WAAO,IAAD,QACRpQ,GAAiB,OAAT4uB,SAAS,IAATA,IAAA,UAAAA,GAAW/mC,YAAX,2DAAwCA,OAAQ,GACxDmQ,GAAqB,OAAXo+B,SAAW,IAAXA,IAAA,UAAAA,GAAavuC,YAAb,oDAAmCA,OAAQ,GAE3D,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMk+B,EAAM/uB,EAAMpQ,KAAI,SAACu4B,GAAD,OAAaA,EAAG6G,UAChCC,EAAW1B,EAAiBn8B,QAAO,SAAC89B,GAAD,OACvCH,EAAIx4B,SAAS24B,EAAI94B,QAGb+4B,EAAiBnvB,EAAMpQ,KAAI,SAACvB,EAAW+I,GAAgB,IAEzDg4B,EAWE/gC,EAXF+gC,WACAznB,EAUEtZ,EAVFsZ,aACAC,EASEvZ,EATFuZ,eACAtH,EAQEjS,EARFiS,aACAC,EAOElS,EAPFkS,eACAC,EAMEnS,EANFmS,iBACAC,EAKEpS,EALFoS,gBACAC,EAIErS,EAJFqS,WACAC,EAGEtS,EAHFsS,aACAC,EAEEvS,EAFFuS,eACAC,EACExS,EADFwS,cAEImoB,EAAOiG,EAAS79B,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ/H,EAAK2gC,UAAQ,GAClE,OAAO,6BACFhG,GADL,IAEEoG,aACAznB,eACAC,iBACAtH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAzJ,QACA0wB,UAAWz5B,EAAKghC,UAChBzH,QAASv5B,EAAKxL,IACd6lC,UAAWr6B,EAAKwN,MAChB8sB,cAAet6B,EAAKxL,IAAMmmC,EAAKnK,UAGnCsQ,EAAernC,MAAK,SAAC4D,EAAQ4jC,GAAT,OAClB5jC,EAAE6jC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO7jC,EAAE6jC,MAAQ,EAAI,KAE/CvB,EAAamB,GAEb,IAAM6B,EAAgB3D,GAAar1B,GACnCg+B,EAAehF,GACftD,GAAW,MAEZ,CAACkB,GAAWwH,KAEfhmB,sBAAU,WACRqf,OACC,CAAC1B,IAEJ3d,sBAAU,WACJzW,GAAOA,EAAIvD,MACbs3B,GAAW,GACXiB,GAAS,CAAEhjC,UAAW,CAAE+jC,KAAM/1B,EAAIvD,OAClC+/B,GAAY,CAAExqC,UAAW,CAAE0qC,QAAS18B,EAAI7Z,SAEzC,IAEH,IAwBM2vC,GAAkB,WACtB,IACMK,EADW/B,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMrH,aAChCsH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAEvDwkC,EADanC,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMpH,iBAC5BqH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAC7D6P,EAASu0B,EAUf1B,EARa,CACX+B,SAAU50B,EACV60B,aAAcF,EACdG,WAAYH,EACZr0B,MAAOi0B,EACPv0B,SACAgkB,OAPauQ,EAAMI,IAUrBoG,GAAsB/6B,EAAQ,UAC9B+6B,GAAsB56C,KAAKyB,UAAU4wC,GAAY,UAW7CwF,GAAmB,SAACpC,EAAgBp0C,GACxCu4C,EAAc,gBAAGv4C,EAAOo0C,KAG1B/gB,sBAAU,WACHzW,EAAI/R,QACP2rC,GAAiB,EAAG,YAErB,CAAC55B,EAAI/R,SAER,IAsDM0uC,GAAwB,SAACnF,EAAgBp0C,GAE7C,GADAu4C,EAAc,gBAAGv4C,EAAOo0C,IACxB,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWzwB,WAAY,CACzB,IAAMunB,EAAUzR,EAAUplB,QACxB,SAACslB,GAAD,OAAcA,EAAItgB,MAAQ+6B,EAAUzwB,cACpC,GACF6yB,GAAiBtL,EAAS,YAE5B,UAAIkJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAW7wB,aAAc,CAC3B,IAAM4nB,EAAUzR,EAAYrlB,QAC1B,SAACjR,GAAD,OAAcA,EAAIiW,MAAQ+6B,EAAU7wB,gBACpC,GACFizB,GAAiBrL,EAAS,gBAI9B9X,sBAAU,WACRklB,EAAc,CAAEt9B,QAAStc,KAAKyB,UAAUuZ,OACvC,CAACA,IAEJ,IAuBM+H,IAAU,OAAH9E,QAAG,IAAHA,OAAA,EAAAA,EAAK/C,WAAY,IAAInP,KAAJ,OAASkS,QAAT,IAASA,OAAT,EAASA,EAAK/C,WAAa,IAAInP,KACvD+P,GAAG,OAAG5Q,SAAH,IAAGA,QAAH,EAAGA,GAAc6X,GAAKH,UAE/B,OACE,uCACE,eAAC7Q,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,QAAU3kB,QAAQ,QAAnD,gBACG2hB,QADH,IACGA,OADH,EACGA,EAAKmI,UAGV,gBAAC8M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM7jB,MACbZ,MAAO4Z,EACPyF,SAAU,SAACwY,GACT+gB,EAAa/gB,GACb0e,GAAiB1e,EAAG,cAEtBhD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM5jB,IACbb,MAAOmL,EACPkU,SAAU,SAACwY,GACTghB,EAAWhhB,GACX0e,GAAiB1e,EAAG,YAEtBhD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,GACThnC,MAAO2c,EAAI+D,SACX2K,eA/IS,SAACrrB,GACtB,IAAIusB,EAAWvsB,EACVA,IACHusB,EAAW,CACT5L,gBAAYtQ,EACZyQ,kBAAczQ,EACdwQ,oBAAgBxQ,EAChBgT,mBAAehT,GAEjBkmC,GAAiBv2C,EAAO,cACxBu2C,GAAiBv2C,EAAO,gBACxBu2C,GAAiBv2C,EAAO,kBACxBu2C,GAAiBv2C,EAAO,kBAE1Bu2C,GAAiBhqB,EAAU,aAkIfpe,MAAOA,GACPsd,QAnKO,WACnB+lB,GAAY,IAmKArhC,WAAS,EACTga,WAAS,MAGb,eAACyH,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,OACLiZ,MAAOyL,GAAMtd,KACbsd,MAAOA,GACP2G,QAASvL,EACT7f,MAAO8+B,EACPzT,eA7GK,SAACrrB,GAClB,IAAIusB,EAAQ,OAAGvsB,QAAH,IAAGA,OAAH,EAAGA,EAAO8C,GACtBwuC,EAAatxC,GACbu2C,GAAiBhqB,EAAU,WA2Gfpe,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,GAAMxB,WACbwB,MAAOA,GACP2G,QAASqO,EACTz5B,MAAO2c,EAAIsG,WACXoI,eAzJW,SAACrrB,GACxB,IAAIusB,EAAWvsB,EACVA,IACHusB,EAAW,CACTjJ,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEnBkmC,GAAiBv2C,EAAO,gBACxBu2C,GAAiBv2C,EAAO,kBACxBu2C,GAAiBv2C,EAAO,oBACxBu2C,GAAiBv2C,EAAO,oBAE1Bu2C,GAAiBhqB,EAAU,eA4IfZ,QAAM,EACNxd,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAMvB,SACbuB,MAAOA,GACP2G,QAASoO,EACTx5B,MAAO2c,EAAIuG,SACXmI,eAtJS,SAACrrB,GACtB,IAAIusB,EAAWvsB,EACVA,IACHusB,EAAW,CACT7I,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,GAEjBkmC,GAAiBv2C,EAAO,cACxBu2C,GAAiBv2C,EAAO,gBACxBu2C,GAAiBv2C,EAAO,kBACxBu2C,GAAiBv2C,EAAO,kBAE1Bu2C,GAAiBhqB,EAAU,aAyIfZ,QAAM,EACNxd,MAAOA,GACPgC,WAAS,EACTqK,IAAKA,YAKb,gBAACoX,GAAA,EAAD,CACEvgB,MAAI,EACJwgB,GAAI,EACJthB,MAAO,CACLxT,gBAAiB,OACjBif,aAAc,EACd3gB,QAAS,GANb,UASE,eAACiV,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLma,aAAc,EACdhvB,SAAU,GACV+xB,SAAU,IAEZjd,QAAS,WACPyoC,EAAY,MACZF,GAAc,IATlB,SAYG5qC,GAAQ,gEAAgB,iBAE3B,eAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,IAAK0xB,SAAU,QAAvC,SACG5V,EAAY9G,KAAI,SAAC2mC,GAChB,OACE,gBAACznC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAASmkB,GAAoB,CAAExD,IAAK48B,IACpCr9C,UAAWohB,GAAqBi8B,EAAIz+B,SAAU3M,MAEhD,eAACsY,GAAA,EAAD,CACEjW,QAAS,kBApIE,SAACa,GAC5B,IAAMmoC,EAAU9/B,EAAYtF,QAAO,SAACqlC,GAAD,OAAaA,EAAGr/B,QAAU/I,EAAK+I,SAC5D45B,EAAgB3D,GAAamJ,GACnCR,EAAehF,GAiIgB0F,CAAqBH,IACpCvgC,MAAM,aACNzI,MAAO,CAAElV,QAAS,EAAGlB,OAAQ,GAH/B,SAKE,eAAC,KAAD,CACEoW,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAGlC,eAACyhB,GAAA,EAAD,CACElW,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyoC,EAAYM,GACZR,GAAc,IAEhB//B,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,0BAS5C,gBAAC4sB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAACphB,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,MAEzB,gBAACgU,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC2tC,GAAD,CACElf,QAASmlB,EACThG,QAtUQ,SAACl5B,GACrB,IAAM0iC,EAAQ,uBAAOhD,GAAP,8BAAuB1/B,GAAvB,IAA6BquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IAoUDvvB,MAAOA,GACP+U,UAAWA,EACXC,YAAaA,EACbhsB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTsiC,GACA,eAAChgC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,SACE,eAACkiB,GAAD,CACE9e,KAAMijB,EACNlE,SA9UO,SAACx7B,GACtB,IAAM0iC,EAAWhD,EAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IAsUC/zC,WAnUW,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,GACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,EAAagD,IAgUC7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,OAIXgwC,GAAW,eAAC,GAAD,OAEd,gBAAC7gC,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,OAAQjkB,SAAU,IAAnD,UACG+oB,GAAM5F,MADT,MACmBP,GAAY6yB,EAAO5yB,WAEtC,eAAC9N,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,IAAzB,SACE,eAAC,GAAD,CACEmO,OAAQA,EACR0rC,UAAWA,EACXC,iBAAkBA,GAClBpoC,MAAOA,GACP6K,MAAOyL,GAAM7Z,cAKnB,eAAC,GAAD,CACEkf,QAASA,GACTlY,KAAM2/B,EACN7nB,QA/TgB,WACtB8nB,GAAY,GACZC,GAAW,KA8TLljB,OAAO,EACPgR,YAAagX,GACb55B,IAAK,KACLgS,UAAWgY,GACX/X,WAAYiY,KAEd,eAAC,GAAD,CACEj1B,KAAMknC,EACNpvB,QAAS,kBAAMqvB,GAAc,IAC7Bp8B,IAAK85B,EACLloB,OAAOkoB,EACP9nB,UAlPgB,SAACtd,GACvB,IAAM0iC,EAAQ,uBAAOr6B,GAAP,CAAoBrI,IAC5B2iC,EAAgB3D,GAAa0D,GACnCiF,EAAehF,IAgPTplB,WA9OiB,SAACvd,GACxB,IAAM0iC,EAAWr6B,EAAY9G,KAAI,SAACu4B,GAChC,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnCiF,EAAehF,IAsOTz3C,MAAOA,EACP2K,MAAK,6BAAOyV,GAAP,IAAY/C,YAAWzO,qB,8BC9fzBklC,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cAmfSu/B,GA9ea,SAAC,GAYjB,IAXV/nC,EAWS,EAXTA,KACA8X,EAUS,EAVTA,QACAkwB,EASS,EATTA,QACA/Y,EAQS,EARTA,SACA3hB,EAOS,EAPTA,UACAsa,EAMS,EANTA,UACAC,EAKS,EALTA,YACA+W,EAIS,EAJTA,QAIS,IAHTjiB,aAGS,SAFThyB,EAES,EAFTA,MACAymB,EACS,EADTA,MAEMvV,EAAUvP,KADP,EAEewP,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IAFtD,oBAEFquB,EAFE,KAEI5W,EAFJ,OAG+BnW,KAAMjE,SAAS,IAAIjD,MAHlD,oBAGFkmC,EAHE,KAGYC,EAHZ,OAIiBljC,oBAAc,IAJ/B,oBAIFmjC,EAJE,KAIKC,EAJL,OAMyBpjC,oBAAc,IANvC,oBAMFqjC,EANE,KAMSC,EANT,OAOuBtjC,oBAAc,IAPrC,oBAOFiJ,EAPE,KAOQs6B,EAPR,OAQiBvjC,oBAAc,QAR/B,oBAQFugC,EARE,KAQKC,EARL,OAUuBxgC,oBAAS,GAVhC,oBAUFoR,EAVE,KAUQoyB,EAVR,OAWmBxjC,oBAAc,IAXjC,oBAWFyjC,EAXE,KAWMC,EAXN,OAayB1jC,oBAAc,MAbvC,oBAaFlC,EAbE,KAaS6lC,EAbT,OAeuB3jC,qBAAS,GAfhC,oBAeF6jC,EAfE,KAeQC,EAfR,QAgBqB9jC,oBAAS,IAhB9B,sBAgBFoc,GAhBE,MAgBO2nB,GAhBP,SAkBmB/jC,qBAAS,GAlB5B,sBAkBFygC,GAlBE,MAkBMC,GAlBN,SAmBwC0D,KAAzC9K,GAnBC,GAmBDA,UAAWL,GAnBV,GAmBUA,YAAaE,GAnBvB,GAmBuBA,aAnBvB,GAqBuBh5B,aAAQ,IAAhCE,GArBC,GAqBDA,aAAcyxB,GArBb,GAqBaA,MArBb,GAyBUvxB,sBAAWtB,IAzBrB,MAuBPyB,UAAaqW,GAvBN,GAuBMA,MAAOtW,GAvBb,GAuBaA,MACX1N,GAxBF,GAwBPhC,MAASgC,KAGLo5C,GAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOwf,GACPnrC,UAAW,CACT/N,OAAO,IAAI6J,MAAOwW,SAAS,EAAG,EAAG,EAAG,GACpCpgB,KAAK,IAAI4J,MAAOwW,SAAS,GAAI,GAAI,GAAI,OAGzC,CACEqZ,MAAO4M,IAET,CACE5M,MAAOmB,MAxCJ,GA6CYptB,aAAY0rC,GAAeF,IAAzCpZ,GA7CE,yBA+CyBoR,KAA1BrK,GA/CC,GA+CDA,QAASJ,GA/CR,GA+CQA,aAsDjBhU,sBAAU,WACJ7E,GAASiZ,IACXsJ,GAAgB,OAAPtJ,SAAO,IAAPA,QAAA,EAAAA,GAASxhC,cAAe+d,OAAM,OAACyjB,SAAD,IAACA,QAAD,EAACA,GAASxhC,cAAgB,EAAI,KAEtE,CAAC4L,IAEJwhB,sBAAU,WACRqf,OACC,CAAC1B,EAAWjyB,EAAUmvB,EAAOE,KAEhC/a,sBAAU,WACR,GAAIwmB,GAAWA,EAAQhgC,UAAW,CAChC,IAAMR,EAAMwgC,EAAQj5B,WACdgyB,EAAO3L,GAAU5yB,QAAO,SAAC+2B,GAAD,OAAaA,EAAG/xB,MAAQA,KAAK,GAC3Di4B,EAAasB,GAEX3vB,GACFguB,EAAahuB,KAEd,CAAC42B,EAAS/Y,EAAUmG,GAAWhkB,IAElC,IAAMyvB,GAAkB,WACtB,IACMK,EADW/B,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMrH,aAChCsH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAEvDwkC,EADanC,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMpH,iBAC5BqH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAC7D6P,EAASu0B,EAAMh0B,EAUrBsyB,EARa,CACX+B,SAAU50B,EACV60B,aAAcF,EACdG,WAAYH,EACZr0B,MAAOi0B,EACPv0B,SACAgkB,OAPauQ,EAAMh0B,EAAWo0B,IA+BhCjC,EArBa,CACX,CACEqC,SAAU58B,GACVkK,UAAWlK,GACX6H,OAAQu0B,EACR1xC,KAAM2E,GAAeC,cAEvB,CACEstC,SAAU58B,GACVkK,UAAWlK,GACX6H,OAAQO,EACR1d,KAAM2E,GAAeM,kBAEvB,CACEitC,SACY,SAAVrF,EAAmBv3B,GAA2BA,GAChDkK,UAAWlK,GACX6H,OAAQ4vB,GAAS2E,EAAMh0B,EAAW,EAClC1d,KAAM2E,GAAeK,oBAMrBoI,GAAQ,yCAAG,2CAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8uB,EAAe/uB,GAAe+uB,EAAe9uB,GAFlC,gCAGPyG,GACJR,EACA3Z,GAAQ,+FAAsB,yBALnB,6CASX2Q,EAAW,GATA,gCAUPwJ,GACJR,EACA3Z,GAAQ,sIAA+B,2BAZ5B,6CAgBX2Q,GAAQ,OAAGqyB,QAAH,IAAGA,OAAH,EAAGA,EAAQtyB,QAhBR,kCAiBPyJ,GACJR,EACA3Z,GACI,6NACA,sCArBO,6CAyBV3C,EAzBU,kCA0BP8c,GACJR,EACA3Z,GAAQ,oIAA6B,uBA5B1B,+CAgCXogB,GAASxK,OAAO8sB,IAAU9sB,OAAOyjB,GAAQxhC,eAhC9B,kCAiCPsiB,GACJR,EACA3Z,GAAK,uCAC+Bq5B,GAAQxhC,cADvC,6KAEmCwhC,GAAQxhC,eArCrC,6CAyCV+qC,GAAkC,IAArBA,EAAUl9B,OAzCb,kCA0CPyU,GACJR,EACA3Z,GAAK,6KACmCq5B,GAAQxhC,cAD3C,uCAE+BwhC,GAAQxhC,eA9CjC,0CAkDPuY,EAAsC4yB,EAAtC5yB,OAAQ80B,EAA8BlC,EAA9BkC,WAAY9Q,EAAkB4O,EAAlB5O,OAAQ1jB,EAAUsyB,EAAVtyB,MAE9BlQ,EAAiB,CACrBmW,MAAO+rB,EAAQA,EAAM0C,gBAAaljC,EAClC0M,KAAM4zB,EACNjwB,SAAU,CACRC,WAAYnV,EAAU4N,IACtB0H,aAActV,EAAUzL,KACxB8gB,eAAgBrV,EAAUjI,OAC1B8f,cAAe7X,EAAUrG,OAE3B6d,MAAOtkB,KAAKyB,UAAU4wC,GACtBsC,aACAx0B,QACAC,WACAP,SACAgkB,SACAiR,OAAQrF,GACRA,UACAsF,WAAYtF,GAAS5vB,EAAS,EAC9B5H,WACAk8B,YAAa5E,EACbvO,OAAQj/B,GAAK2Y,IACbigC,QAASO,EAAQ92C,GACjByiB,QAASq0B,EAAQ90B,OAGnB6a,GAAMc,GAAY9xB,GA7EH,4CAAH,qDAgFRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,uBAKJuQ,EAAU,CAAEvQ,UAAW,CAAE7L,GAAI82C,EAAQ92C,GAAI8H,OAAQ,MAL7C,OAMVw8B,KACArH,KAPU,gDASVC,GAAQ,EAAD,IACP7b,QAAQC,IAAR,MAVU,yDAAH,wDAcL4b,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,IAFlB,6CAIN+Z,GAAWJ,EAAS3Z,IAJd,OAKZqxB,KACArb,QAAQC,IAAIzW,GANA,2CAAH,sDAoDPoyB,GAAc,WAvPlBP,KACAwR,EAAa,IACbE,EAAY,GACZE,EAAU,IACVC,EAAa,MACbP,EAAS,IACTG,EAAY,IACZ/C,EAAS,IACTE,IAAU,GACVwC,EAAgB,IAAInmC,MAgPpBif,KAOI1Q,GAAQ7K,GACVogB,EACE,sEACA,sEACFA,EACA,cACA,eAEJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASqW,GACT/mB,MAAOA,GACPxK,SAlBmB,WACrBT,GAAaS,GAAbT,IAkBExR,MAAOA,EACPmiC,KAAMA,EACNE,MApEgB,WAClB,IAAM7hB,EAAO,IAAItS,KAAKkmC,GAElBztB,EAAW,GACTF,EAAQ+tB,EAAUn+B,KAAI,SAACu4B,GAI3B,OAHKjoB,GAAYioB,EAAGxnB,eAClBT,EAAQ,UAAMioB,EAAGxnB,aAAT,cAA2BwnB,EAAGvnB,eAA9B,MAEH,CACL7jB,KAAMorC,EAAGprC,KACTwD,OAAQ4nC,EAAG5nC,OACXiC,MAAO2lC,EAAGL,UACVjlC,IAAKslC,EAAGP,QACR/rB,MAAOssB,EAAGO,cAGRsO,EAAoB,SAAV/L,EAAmB,eAAiB,eAC9CgM,EAAsB,SAAVhM,EAAmB,8CAAa,sEAE5C1vB,EADY4yB,EAAVtyB,MACeC,EAEf/B,EAAKm9B,mBAAmBxhC,UAAUyhC,SAAU,CAChDj9B,KAAM,UACNC,OAAQ,YAEJJ,EAAKq9B,mBAAmB,SAGpB97B,GAAYQ,GACdR,GAAYC,IACP,OAAPiyB,QAAO,IAAPA,OAAA,EAAAA,EAAS6J,QAAT,OAAgB7J,QAAhB,IAAgBA,KAAS6J,MACxB7J,EAAQ8J,KACP9J,EAAQ+J,IACP/J,EAAQvM,QACR91B,GAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAEpCU,GAAKV,KAAOU,GAAKV,KAAOU,GAAKiE,UAiCnC7G,SAAS,KACT6S,GAAI,EACJmlB,GAAI,GAXN,SAaE,gBAACjE,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACE1jB,MAAOA,GACP6B,MAAOyU,GAAM1H,KACb/c,MAAO2wC,EACPtxB,SAxPe,SAACoC,GACxBmvB,EAAgBnvB,QA0PZ,eAACmQ,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEpN,MAAOA,GACPwpB,MAAOA,EACPE,OAAQA,GACRC,UAAWA,GACXF,SAAUA,MAGd,eAACtc,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,GACThnC,MAAOwL,EACP6f,eAAgBgmB,EAChBljC,MAAOA,GACPgC,WAAS,EACTsb,QA9TW,WACnB+lB,GAAY,IA8TJrnB,WAAS,MAGb,eAACyH,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAeuR,GAAQ,cAAgB,MACvCtR,WAAY,SACZkf,eAAgB,WAChB5gB,WAAYgT,QAAQkC,EAAY,GAChCjV,YAAa+S,GAAQ,QAAKkC,GAR9B,UAWGke,GACC,eAAC3e,GAAA,EAAD,CAAYW,MAAO,CAAEvL,MAAO,QAA5B,SAAuCyf,GAAMC,KAE/C,eAAC5U,GAAA,EAAD,CACE/P,KAAK,QACLisB,UAAWuC,EACXvuB,MAAO6wC,EACPxxB,SAAU,SAAChQ,GAAD,OAAYyhC,EAAS/sB,OAAO1U,EAAE05B,OAAO/oC,SAC/ChF,QAAQ,WACRuV,MAAO,CAAEtT,MAAOsxB,EAAQ,GAAK,IAAKpzB,WAAY,IAC9ChB,OAAO,QAEPoxC,WAAY,CACVh7B,MAAO,CACL8V,UAAW,SACX3qB,SAAU,GACVkC,OAAQ,YAMlB,gBAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACphB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC2tC,GAAD,CACElf,QAASyV,EACT0J,QA1VQ,SAACl5B,GACrB,IAAM0iC,EAAQ,uBAAOhD,GAAP,8BAAuB1/B,GAAvB,IAA6BquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IAwVDvvB,MAAOA,GACP+U,UAAWA,EACXC,YAAaA,EACbhsB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,OAIX,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,SACE,eAACkiB,GAAD,CACE9e,KAAMijB,EACNlE,SAlWS,SAACx7B,GACtB,IAAM0iC,EAAWhD,EAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IA0VD/zC,WAvVa,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,GACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,EAAagD,IAoVD7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,UAIZ,gBAACgQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,iBAJpB,UAOE,eAACjM,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAOyU,GAAM3F,SACb9e,MAAO8e,EAASy0B,WAChBl0B,SAAU,SAAChQ,GAAD,OAAY6hC,EAAYntB,OAAO1U,EAAE05B,OAAO/oC,SAClDhF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPiH,KAAK,SACLiqC,QAAS,SAACh8B,GAAD,OAAOA,EAAE05B,OAAOuC,YAG3B,eAAC,GAAD,CACE/sB,OAAM,OAAE4yB,QAAF,IAAEA,OAAF,EAAEA,EAAQ5yB,OAChBM,MAAK,OAAEsyB,QAAF,IAAEA,OAAF,EAAEA,EAAQtyB,MACfC,SAAUA,EACV2F,MAAOA,QAGX,eAAC,GAAD,CACEqF,QAASA,GACTlY,KAAM2/B,EACN7nB,QAjac,WACtB8nB,GAAY,GACZC,GAAW,KAgaHljB,OAAO,EACPgR,YA/Ze,SAAC4U,GACxB9C,EAAa8C,IA+ZLx3B,IAAK,KACLgS,UAAWgY,GACX/X,WAAYiY,cCvfX2T,GAAgB,SAAC,GAUlB,IAAD,IATTjC,EASS,EATTA,gBACAkC,EAQS,EARTA,WACAhhB,EAOS,EAPTA,YACAD,EAMS,EANTA,UACAqH,EAKS,EALTA,SACA3hB,EAIS,EAJTA,UACAsxB,EAGS,EAHTA,QACAkK,EAES,EAFTA,SACAn+C,EACS,EADTA,MACS,EACyBmR,oBAAc,IADvC,oBACFqjC,EADE,KACSC,EADT,OAGetjC,qBAAS,GAHxB,oBAGFkE,EAHE,KAGIC,EAHJ,OAIuBnE,qBAAS,GAJhC,oBAIFnL,EAJE,KAIQo4C,EAJR,OAQU1sC,sBAAWtB,IAD5ByB,UAAaqW,EAPN,EAOMA,MAAOtW,EAPb,EAOaA,MAGhBV,EAAU/P,KACRspC,EAAc8K,KAAd9K,UAER5T,sBAAU,WACR,IAAMwnB,EAAiB54C,MAAuBA,KAC9C24C,EAAYC,KACX,IAhBM,IAmBPhhC,EAgBE2+B,EAhBF3+B,UACAzO,EAeEotC,EAfFptC,QACA2V,EAcEy3B,EAdFz3B,aACAD,EAaE03B,EAbF13B,eACAwC,EAYEk1B,EAZFl1B,cACAL,EAWEu1B,EAXFv1B,MACAU,EAUE60B,EAVF70B,WACAC,EASE40B,EATF50B,aACAC,EAQE20B,EARF30B,eACAE,EAOEy0B,EAPFz0B,cACAR,EAMEi1B,EANFj1B,aACAC,EAKEg1B,EALFh1B,eACAC,EAIE+0B,EAJF/0B,iBACA5Y,EAGE2tC,EAHF3tC,OACA2T,EAEEg6B,EAFFh6B,OACAuG,EACEyzB,EADFzzB,MAlCO,EAqC0BkV,aAAa0X,GAAmB,CACjEvK,YAAa,sBAtCN,oBAqCFwK,EArCE,KAqCQC,EArCR,KAyCTxe,sBAAU,WACR,GAAImlB,GAAmBA,EAAgBn/B,IAAK,CAC1C,IAAMzK,EAAY,CAAE+jC,KAAM6F,EAAgBn/B,KAC1Cu4B,EAAS,CACPhjC,iBAGH,IAEHykB,sBAAU,WAAO,IAAD,IACRpQ,GAAiB,OAAT4uB,QAAS,IAATA,GAAA,UAAAA,EAAW/mC,YAAX,2DAAwCA,OAAQ,GAC9D,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMk+B,EAAM/uB,EAAMpQ,KAAI,SAACu4B,GAAD,OAAaA,EAAG6G,UAChCC,EAAWpR,EAASzsB,QAAO,SAAC89B,GAAD,OAAcH,EAAIx4B,SAAS24B,EAAI94B,QAE1D+4B,EAAiBnvB,EAAMpQ,KAAI,SAACvB,EAAW+I,GAAgB,IAEzDg4B,EAWE/gC,EAXF+gC,WACAznB,EAUEtZ,EAVFsZ,aACAC,EASEvZ,EATFuZ,eACAtH,EAQEjS,EARFiS,aACAC,EAOElS,EAPFkS,eACAC,EAMEnS,EANFmS,iBACAC,EAKEpS,EALFoS,gBACAC,EAIErS,EAJFqS,WACAC,EAGEtS,EAHFsS,aACAC,EAEEvS,EAFFuS,eACAC,EACExS,EADFwS,cAEImoB,EAAOiG,EAAS79B,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ/H,EAAK2gC,UAAQ,GAClE,OAAO,6BACFhG,GADL,IAEEoG,aACAznB,eACAC,iBACAtH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAzJ,QACA0wB,UAAWz5B,EAAKghC,UAChBzH,QAASv5B,EAAKxL,IACd6lC,UAAWr6B,EAAKwN,MAChB8sB,cAAet6B,EAAKxL,IAAMmmC,EAAKnK,UAGnCsQ,EAAernC,MAAK,SAAC4D,EAAQ4jC,GAAT,OAClB5jC,EAAE6jC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO7jC,EAAE6jC,MAAQ,EAAI,KAE/CvB,EAAamB,MAEd,CAACP,IAEJ,IAWMiJ,EAAWrhB,EACbA,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQsK,KAC3C,GACEG,GAAwB,OAARg3B,QAAQ,IAARA,GAAA,UAAAA,EAAW,UAAX,eAAe71C,QAAS,GAExC81C,EAAcrhB,EAChBA,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQkK,KAC7C,GACEG,GAA6B,OAAXq3B,QAAW,IAAXA,GAAA,UAAAA,EAAc,UAAd,eAAkB91C,QAAS,GAE7C+1C,GAAiB13B,IAAkBL,GAAqB,KAAXpY,IAAkBrI,EAErE,OACE,gBAACy4C,GAAA,EAAD,CAAMzqC,MAAO,CAAEhV,UAAW4S,EAAQ,MAAQ,OAASuB,UAAWjC,EAAQpQ,KAAtE,UACE,gBAAC49C,GAAA,EAAD,WACGrwC,GACC,gBAAC6F,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLiP,SAAU,WACV5hB,OAAQ,GACR2sB,aAAc,EACdD,YAAa,EACbtO,aAAc,EACdnf,WAAY,SACZkf,eAAgB,SAChBuL,KAAM,GACNF,IAAK,IAXT,UAcGgvB,GAAiBxrC,EAAQ,OAAQ,IAClC,eAACgF,GAAA,EAAD,CACEW,MAAO,CACL9T,WAAY,EACZtB,WAAY,GAHhB,SAMGgT,EAAQlF,GAAc2B,GAAUhC,GAAcgC,QAIrD,eAAC6F,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,YAFjD,SAIE,eAACnM,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,QAAU3kB,QAAQ,QAAnD,SACG8pB,MAGL,gBAACrU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,iBAFjD,UAIE,eAACtL,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAYsrC,cAAY,EAAClgD,QAAQ,YAAYwU,UAAU,KAAvD,SACGoK,EAAUoD,eAAe7O,EAAQ,QAAU,QAlExC,CACdoP,QAAS,OACTlD,KAAM,UACNC,MAAO,OACPE,IAAK,gBAiEC,gBAAC/J,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAEma,aAAc,GAA3C,UACE,iCACGrG,GAAiBzK,EAAWzL,EAAQ,QAAU,SADjD,KAC6D,OAE7D,qCAAOkW,GAAiBlZ,EAASgD,EAAQ,QAAU,kBAGvD,gBAACsC,GAAA,EAAD,WACE,eAACb,GAAA,EAAD,CAAYsrC,cAAY,EAAClgD,QAAQ,KAAKwU,UAAU,KAAhD,SACGrB,EAAQ0S,EAAiBC,IAE5B,eAAClR,GAAA,EAAD,CACEW,MAAO,CAAE9T,WAAY,EAAGtB,WAAY,GACpC+/C,cAAY,EACZlgD,QAAQ,YACRwU,UAAU,KAJZ,SAMG6T,OAGL,eAACyO,GAAA,EAAD,IACA,gBAACrhB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,iBAFjD,UAIGg1B,EAAUn+B,KAAI,SAAC6mC,GACd,OACE,eAAC7pC,GAAA,EAAD,CAAYsrC,cAAY,EAAClgD,QAAQ,KAAKwU,UAAU,KAAhD,SACGrB,EAAQsrC,EAAGl2C,OAASk2C,EAAG15C,UAI7Bwe,GACC,gBAAC3O,GAAA,EAAD,CACEW,MAAO,CACL6jB,OAAQ,GACR/4B,QAAS,EACT0B,gBAAiB,UACjBiI,MAAO,QAETk2C,cAAY,EACZlgD,QAAQ,YACRwU,UAAU,KATZ,UAWG+O,EAXH,YAeJ,gBAAC9N,GAAA,EAAD,CACE6V,EAAG,EACH3pB,QAAQ,OACR4T,MAAO,CACL1T,WAAY,UAJhB,UAOE,eAAC4T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRoe,aAAc,GACdjf,gBAAiB0mB,KAGrB,eAAC7T,GAAA,EAAD,CACEW,MAAO,CAAE9T,UAAW,EAAGtB,WAAY,GAAIC,YAAa,IACpD8/C,cAAY,EACZlgD,QAAQ,QACRwU,UAAU,KAJZ,SAMGrB,EAAQqV,EAAmBD,OAGhC,gBAAC9S,GAAA,EAAD,CACE6V,EAAG,EACH3pB,QAAQ,OACR4T,MAAO,CACL1T,WAAY,UAJhB,UAOE,eAAC,GAAD,CAAQkD,KAAM4jB,EAAcrI,GAAIuI,EAAe5pB,KAAM,KAErD,eAAC2V,GAAA,EAAD,CACEW,MAAO,CAAE9T,UAAW,EAAGtB,WAAY,GAAIC,YAAa,IACpD8/C,cAAY,EACZlgD,QAAQ,QACRwU,UAAU,KAJZ,SAMGrB,EAAQyV,EAAiBD,OAG9B,eAAClT,GAAA,EAAD,CAAKF,MAAO,CAAEpV,WAAY,GAAIsB,WAAY,IAA1C,SACE,eAACmT,GAAA,EAAD,CAAYW,MAAO,CAAE9T,UAAW,GAAKy+C,cAAY,EAAClgD,QAAQ,YAA1D,SACG8oB,SAIP,eAACq3B,GAAA,EAAD,WACIT,GACA,eAACjqC,GAAA,EAAD,CACE6V,EAAG,EACH3pB,QAAQ,OACR4T,MAAO,CAAE9S,KAAM,EAAGse,eAAgB,YAHpC,SAKE,eAACzL,GAAA,EAAD,CACErW,KAAK,SACL+K,MAAM,UACNhK,QAAQ,WACRwV,QAzKa,WACvBqB,GAAQ,IAyKEma,SAAU+uB,EALZ,SAOGt2B,EAAMgc,iBAKf,eAAC,GAAD,CACE7uB,KAAMA,EACN8X,QAAS,WACP+wB,GAAW,GACX5oC,GAAQ,IAEV+nC,QAASrB,EACTvR,UAAWA,EACXnG,SAAUA,EACV3hB,UAAWA,EACXsa,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTj0C,MAAOA,EACPymB,MAAO+tB,QChUFqK,GAAqB,SAACrhD,GAAgB,IAAD,IAY5CA,EAAM8Q,KAVR+O,EAF8C,EAE9CA,UACAzO,EAH8C,EAG9CA,QACA2V,EAJ8C,EAI9CA,aACAD,EAL8C,EAK9CA,eACAogB,EAN8C,EAM9CA,YACAC,EAP8C,EAO9CA,cACAxd,EAR8C,EAQ9CA,WACAC,EAT8C,EAS9CA,aACAC,EAV8C,EAU9CA,eACAhZ,EAX8C,EAW9CA,OAEM4uB,EAAckQ,KAAdlQ,UAEFqhB,EAAWrhB,EACbA,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQsK,KAC3C,GAIWvV,GAHO,OAAR0sC,QAAQ,IAARA,GAAA,UAAAA,EAAW,UAAX,SAAe71C,MAIViJ,sBAAWtB,IAD5ByB,UAAaD,OAGf,OACE,eAAC,KAAaitC,mBAAd,6BAAqCrhD,GAArC,aACE,uBAAK2V,UAAW3V,EAAMu2B,UAAtB,UACG1lB,GACC,eAACiR,GAAA,EAAD,CAAS7C,MAAOpQ,GAAcgC,GAA9B,SACE,eAAC6F,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,WACVE,MAAOvR,OAAQkC,EAAY,EAC3BiX,KAAMnZ,EAAQ,OAAIkC,EAClB+W,IAAK,EACLgN,OAAQ,GACRn3B,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZkf,eAAgB,SAEhBC,aAAc,GAZlB,SAeGo6B,GAAiBxrC,EAAQ,UAAW,QAI3C,gBAAC6F,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE8qC,SAAU,QAAvC,UACE,iCAAMh3B,GAAiBzK,GAAvB,OACA,+BAAMyK,GAAiBlZ,QAEzB,eAACsF,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,QAAU3kB,QAAQ,YAAnD,SACGmT,EAAQ0S,EAAiBC,MAG9B,eAACrQ,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAY5U,QAAQ,UAApB,SACGmT,EAAQ+yB,EAAgBD,MAG5Btd,GACC,eAAC9H,GAAA,EAAD,CAAS7C,MAAO7K,EAAQyV,EAAiBD,EAAzC,SACE,eAAClT,GAAA,EAAD,CACE9T,QAAQ,OACRE,WAAW,SACX0T,MAAO,CACLiP,SAAU,WACV8H,KAAM,EACN7H,OAAQ,GANZ,SASE,eAAC7P,GAAA,EAAD,CACE5U,QAAQ,YACRuV,MAAO,CAAEpV,WAAY,EAAGC,YAAa,GAFvC,SAIG+S,EAAQyV,EAAiBD,eCpF3B,SAASqG,GAAT,GAAgD,IAA1B3Y,EAAyB,EAAzBA,KAAMlD,EAAmB,EAAnBA,MAAO8b,EAAY,EAAZA,IACxCjlB,EAAUqM,EAAVrM,MACR,OACE,gBAACyL,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZtB,UAAW4S,EAAQ,MAAQ,OAN/B,UASGkD,EAAKrM,QAAUilB,GACd,eAACxZ,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRoe,aAAc,EACdjf,gBAAiBiI,GAAgB,UAIvC,eAAC4K,GAAA,EAAD,CACEW,MAAO,CACLpV,WAAY6J,EAAQ,QAAKqL,EACzBjV,YAAa4J,EAAQ,QAAKqL,EAC1BgW,UAAWlY,EAAQ,QAAU,QAE/BnT,QAASmT,EAAQ,YAAc,YANjC,SAQGA,EAAQkD,EAAK9N,OAAS8N,EAAKtR,UC5BrB,SAASu7C,GAAT,GASN,IARPlwB,EAQM,EARNA,QACAprB,EAOM,EAPNA,MACAu7C,EAMM,EANNA,SACA92B,EAKM,EALNA,MACAtW,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MACAkT,EACM,EADNA,UAEA,OACE,eAAC8b,GAAA,EAAD,CACEhyB,KAAK,QACLmxB,QAASA,EACTc,eAAgB,SAACC,GAAD,OAAkBhe,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,MACjEqsB,kBAAmB,SAACD,EAAQE,GAAT,OAAoBF,EAAOrpB,KAAOupB,EAAOvpB,IAC5DwpB,aAAc,SAACH,GAAD,OACZ,eAAC,GAAD,CAAkBhe,MAAOA,EAAOkD,KAAM8a,KAExCnsB,MAAOA,EACPqf,SAAU,SAACjgB,EAAGmtB,GACZgvB,EAAShvB,IAEXG,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEE7pB,GAAI/C,EACJoQ,UAAWA,EACXpQ,KAAMA,EACNiQ,MAAOyU,EAAM1kB,GACb/E,QAAQ,WACRuV,MAAO,CACLtT,MAAOA,QAAgBoT,EACvBtT,gBAAiBiD,EAAQ,eAAYqQ,EACrC3U,SAAU,UChCtB,I,GA0Fe8/C,GA1FU,SAAC,GAOd,IANVx7C,EAMS,EANTA,MACAu7C,EAKS,EALTA,SACAptC,EAIS,EAJTA,MACAikB,EAGS,EAHTA,MACA71B,EAES,EAFTA,MACAw+B,EACS,EADTA,QAKA,OACE,eAACtqB,GAAA,EAAD,CAAK6V,EAAG,EAAR,SACE,gBAACsL,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACkY,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACH3c,MAAOA,EACPqf,SAZO,SAAChQ,GAChBksC,EAASlsC,EAAE05B,OAAO/oC,QAMZ,UAOE,eAACqtB,GAAA,EAAD,CACErtB,MAAM,aACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,uCAAW,aAE5B,eAACkf,GAAA,EAAD,CACErtB,MAAM,eACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,iCAAU,eAE3B,eAACkf,GAAA,EAAD,CACErtB,MAAM,SACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,uCAAW,gBAIhC,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACGO,EAAQ,GACP,gBAAC3hB,GAAA,EAAD,CAAK9T,QAAQ,OAAb,UACE,eAACiT,GAAA,EAAD,CACEW,MAAO,CAAE9T,UAAW,GAAItB,WAAY,GAAIC,YAAa,IADvD,SAGG+S,EAAQ,qDAAe,mBAE1B,eAACyB,GAAA,EAAD,CACEW,MAAO,CACL9T,UAAW,GACXtB,WAAY,GACZC,YAAa,GACbukB,WAAY,QALhB,SAQGyS,SAKT,eAACR,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZkf,eAAgB,YALpB,SAQGgf,GACC,eAACtU,GAAA,EAAD,CACElW,MAAO,CACLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQG,UAAUD,KAAM,IACpDZ,QAAS,GAEXmV,QAASuqB,EALX,SAOE,eAAC,KAAD,CACExqB,MAAO,CAAE7U,SAAU,IACnBsJ,MAAM,wBChFT,SAASy2C,GAAT,GAgBN,IAfPjiB,EAeM,EAfNA,UACAC,EAcM,EAdNA,YACA/uB,EAaM,EAbNA,YACA29B,EAYM,EAZNA,eACA19B,EAWM,EAXNA,UACAmhB,EAUM,EAVNA,aACAlhB,EASM,EATNA,OACA0rC,EAQM,EARNA,UACAhsC,EAOM,EAPNA,iBACAoxC,EAMM,EANNA,oBACAj3B,EAKM,EALNA,MACAtW,EAIM,EAJNA,MACAikB,EAGM,EAHNA,MACA71B,EAEM,EAFNA,MACAw+B,EACM,EADNA,QAEA,OACE,gBAACnJ,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEzG,QAASoO,EACTx5B,MAAO2K,EACP4wC,SAAUzvB,EACVrH,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,WACLoQ,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEzG,QAASqO,EACTz5B,MAAO0K,EACP6wC,SAAUlT,EACV5jB,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,aACLoQ,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEzG,QAASliB,GACTlJ,MAAO4K,EACP2wC,SAAUjF,EACV7xB,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,SACLoQ,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACE7xB,MAAOsK,EACPixC,SAAUG,EACVvtC,MAAOA,EACPikB,MAAOA,EACP71B,MAAOA,EACPw+B,QAASA,SCrDnB,SAASuD,GAAevkC,GACtB,OACE,eAAC,KAAD,CACEwkC,OAAO,0BACPC,OAAQ,mCAFV,SAIE,eAAC9M,GAAA,EAAD,gBAAW33B,MAKF,SAAS4hD,GAAe5hD,GAAa,IAEhD4vB,EAYE5vB,EAZF4vB,SACAxb,EAWEpU,EAXFoU,MACA5R,EAUExC,EAVFwC,MACAqV,EASE7X,EATF6X,KACA8X,EAQE3vB,EARF2vB,QACA1Q,EAOEjf,EAPFif,MACA/b,EAMElD,EANFkD,MACAW,EAKE7D,EALF6D,OACA8gC,EAIE3kC,EAJF2kC,KACA1D,EAGEjhC,EAHFihC,SAX+C,EAc7CjhC,EAFF2W,UAZ+C,MAY1C,GAZ0C,IAc7C3W,EADF87B,UAb+C,MAa1C,GAb0C,EAgBjD,OACE,gBAACjM,GAAA,EAAD,CACEhY,KAAMA,EACN8X,QAASA,EACT4U,eAAgBA,GAChBW,mBAAiB,4BACjBC,kBAAgB,yBAChB/uB,UAAW6qB,EACXn9B,SAAS,KAPX,UASE,gBAAC4S,GAAA,EAAD,CACE3N,GAAG,yBACHyN,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiBR,EACb2U,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,KACjC,OACJgW,OAAQ,OACRrU,OAAQ,GACRjB,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZkf,eAAgB,iBAbpB,UAgBE,eAACnM,GAAA,EAAD,CACEW,MAAO,CACL7U,SAAU,GACVN,YAAa,GACbD,WAAY,IAJhB,SAOG6d,IAEH,eAACyN,GAAA,EAAD,CAAYjW,QAASkZ,EAArB,SACE,eAAC,KAAD,CACEnZ,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAIpC,eAACm6B,GAAA,EAAD,CACE5uB,MAAO,CACLtT,MAAOA,EACPW,OAAQA,EACRrC,UAAW4S,EAAQ,MAAQ,MAC3BkE,WAAY3B,EACZif,cAAekG,GAEjBuJ,UAAU,EARZ,SAUGzV,IAEF+U,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,SC/FNtnB,oBAAf,+oCCMe,cAAO,IAAD,MACQm6B,aAAa4hB,GAAU,CAChDzU,YAAa,sBAFI,oBACZ0U,EADY,KACHC,EADG,KAkBnB,OAbA1oB,sBAAU,WACRyoB,MACC,CAACA,IAWG,CAAEh8B,QATgB,OAAPi8B,QAAO,IAAPA,GAAA,UAAAA,EAASjxC,YAAT,kDAA6BA,OAAQ,IAC/B+H,KAAI,SAACmpC,GAC3B,OAAO,6BACFA,GADL,IAEEh8C,KAAMg8C,EAAG/iC,MACTzV,OAAQw4C,EAAG/iC,aCkXFgjC,GA7VF,SAACjiD,GAAgB,IAAD,EACG2T,qBAAS,GADZ,oBACpBuuC,EADoB,KACXxB,EADW,OAED/sC,oBAAS,IAAIjD,MAFZ,oBAEpB7J,EAFoB,KAEbmyB,EAFa,OAGLrlB,oBAAS,IAAIjD,MAHR,oBAGpB5J,EAHoB,KAGfmyB,EAHe,OAIkBtlB,oBAAS,IAJ3B,oBAIpBwuC,EAJoB,KAINC,EAJM,OAKHzuC,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IALpC,oBAKpBquB,EALoB,aAOHhxB,oBAAS,KAPN,oBAOpBogB,EAPoB,KAOdsuB,EAPc,KAQrBphB,EAAWC,aAAc,qBARJ,EAoBvBhtB,sBAAW9D,IApBY,IAWzBjJ,MACEsJ,EAZuB,EAYvBA,YACAD,EAbuB,EAavBA,gBACAD,EAduB,EAcvBA,iBACAI,EAfuB,EAevBA,YACAC,EAhBuB,EAgBvBA,UACAC,EAjBuB,EAiBvBA,OAEFsD,EAnByB,EAmBzBA,SAEM2R,EAAUw8B,KAAVx8B,MAEFg6B,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOgiB,GACP3tC,UAAW,CACT2U,aAAc5Y,EAAcA,EAAY0O,SAAM/I,EAC9CqT,WAAY/Y,EAAYA,EAAUyO,SAAM/I,EACxCzF,OAAQA,EAASA,EAAO9H,QAAKuN,EAC7BzP,QACAC,QAGJ,CACEy5B,MAAOmB,IAET,CACEnB,MAAOshB,MAIPW,EAAgB,CACpBliB,eAAgB,CACd,CACEC,MAAOmB,MA9Cc,EAkDRptB,aAAYmuC,GAAa3C,GAArC/2B,EAlDoB,uBAmDPzU,aAAY6V,GAAaq4B,GAAtCr9B,EAnDoB,uBAoDL7Q,aAAYouC,GAAa5C,GAAxC92B,EApDoB,uBAsDUiX,aAAasiB,IAtDvB,oBAsDpBI,EAtDoB,KAsDNC,EAtDM,KAyDzBljB,EASE1/B,EATF0/B,YACAD,EAQEz/B,EARFy/B,UACA94B,EAOE3G,EAPF2G,SACAyN,EAMEpU,EANFoU,MACAsW,EAKE1qB,EALF0qB,MACAoc,EAIE9mC,EAJF8mC,SACA2P,EAGEz2C,EAHFy2C,QACAjuC,GAEExI,EAFFwI,SACAhG,GACExC,EADFwC,MAGF62B,sBAAU,WAAO,IAAD,IACRwpB,GAAoB,OAAPD,QAAO,IAAPA,GAAA,UAAAA,EAAS9xC,YAAT,mDAA8BA,OAAQ,GACnD0X,EACJq6B,EAAW/oC,OAAS,EAChB+oC,EAAWhqC,KAAI,SAACiqC,GACd,OAAO,6BACFA,GADL,IAEEjjC,UAAW,IAAInP,KAAKoyC,EAAGjjC,WACvBzO,QAAS,IAAIV,KAAKoyC,EAAG1xC,SACrBvK,MAAOi8C,EAAGjjC,UACV/Y,IAAKg8C,EAAG1xC,aAGZ,GAENixC,EAAQ75B,KACP,CAACo6B,IAeJvpB,sBAAU,WACR,IAAM0pB,EAAgB/7B,GAAqB,CACzChE,KAAMvS,EACNwW,KAAMzW,IAERwoB,EAAS+pB,EAASl8C,OAClBoyB,EAAO8pB,EAASj8C,KAChB,IAAM8N,EAAY,CAChB2U,aAAc5Y,EAAcA,EAAY0O,SAAM/I,EAC9CqT,WAAY/Y,EAAYA,EAAUyO,SAAM/I,EACxCzF,OAAQA,EAASA,EAAO9H,QAAKuN,EAC7BzP,MAAOk8C,EAASl8C,MAChBC,IAAKi8C,EAASj8C,KAEhB67C,EAAa,CAAE/tC,gBACd,CACDnE,EACAD,EACAG,EACAC,EACA+xC,EACA9xC,IAGFwoB,sBAAU,WACR,IAAM/Z,EAAYZ,GACK,eAArBnO,EACIkvB,EACqB,WAArBlvB,EACApB,GACAuwB,EACJnvB,EACA,QAEF6xC,EAAgB9iC,KACf,CAACmgB,EAAWlvB,IAEf,IAyBMyyC,GAA8B,UAApBxyC,EACV0oB,GAAwB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAErDyyB,GAAoB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAExChQ,GAAa,yCAAG,kCAAAt+B,EAAA,sDAASiU,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,QAC7CH,GAAyB,CACvBC,QACAC,UACAC,UACAC,WACA5D,YACA6D,cACA5U,UARkB,2CAAH,sDAYb6K,GAAQ7K,EAAQ,4EAAkB,cAExC,OACE,gBAACsC,GAAA,EAAD,CACEF,MAAO,CAAExT,gBAAiB,OAAQN,UAAWu+B,EAAW,QAAK3qB,GAD/D,UAGE,gBAACuhB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC8Q,GAAD,CACEC,SAAUA,EACVC,OAAQA,EACR7kB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,GACP02B,sBAAuBA,GACvBR,kBAAmBA,GACnBloB,gBAAiBA,EACjBC,YAAaA,EACbgoB,MAAO,CAAC,EAAG,EAAG,EAAG,QAGrB,eAACZ,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAACyO,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,eAAClgB,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,GAA5B,SACE,eAAC+wB,GAAD,CACErpB,MAAOtE,EAAKja,OACZnJ,YAAaA,EACb29B,eAxDiB,SAACroC,GAC9BkO,EAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAwDhC2K,UAAWA,EACXmhB,aAvDe,SAAC9rB,GAC5BkO,EAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAuD9By5B,YAAaA,EACbD,UAAWA,EACX5uB,OAAQA,EACR0rC,UAxDY,SAACt2C,GACzBkO,EAAS,CAAE9M,KAAM,YAAaC,QAASrB,KAwD3B07C,oBA9EsB,SAAC17C,GACnCkO,EAAS,CAAE9M,KAAM,sBAAuBC,QAASrB,IAEjD,IAAMqZ,EAAYZ,GACN,eAAVzY,EACIw5B,EACU,WAAVx5B,EACAkJ,GACAuwB,EACJz5B,EACA,QAEFm8C,EAAgB9iC,IAmEJ/O,iBAAkBA,EAClB6D,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,GACPw+B,QArIE,YACd,OAAI4hB,QAAJ,IAAIA,OAAJ,EAAIA,EAAS9hB,UACX8hB,EAAQ9hB,sBA0IR,gBAAC,KAAD,CACEhwB,KAAMijB,EACNlwB,OACEm/C,GACI,OACA/hB,EACA/rB,OAAOguC,YACPhuC,OAAOguC,YAAc,GAE3BC,eAAgB,EAChB7oB,OAAQlmB,EAAQ,KAAO,KAVzB,WAYI4uC,IAAW,eAAC,KAAD,CAAc5P,gBAAiBH,MAC1C+P,IACA,eAAC,KAAD,CACEjY,SAAU,CACRjY,QAAS1e,EAAQ,+FAAsB,mBACvCgvC,oBAAqBhvC,EACjB,8KACA,kCACJ+L,IAAK/L,EAAQ,gEAAgB,mBAC7BivC,iBAAkBjvC,EACd,yFACA,6BACJkvC,kBAAmBlvC,EACf,6EACA,+BACJ6Y,aAAc7Y,EAAQ,iCAAU,SAChCmvC,aAAcnvC,EAAQ,iCAAU,QAKtC,eAAC,KAAD,CACE5D,gBAAiBA,EACjBgzC,wBAAyBtqB,GACzBzoB,YAAaA,EACbgzC,oBAAqB/qB,KAEvB,eAAC,KAAD,CACEgrB,aAAc/8C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9C+8C,aAAch9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3C+8C,WAAYj9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CACEd,KAAK,QACL69C,YAAY,SACZC,cAAe,EACfJ,aAAc/8C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9C+8C,aAAch9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3C+8C,WAAYj9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CACEd,KAAK,OACL69C,YAAY,OACZH,aAAc/8C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9C+8C,aAAch9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3C+8C,WAAYj9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CAAWg9C,cAAe,IAE1B,eAAC,KAAD,CAAcC,4BAA6B1C,KAC3C,eAAC,KAAD,CAAWvwC,KAAMqxC,EAAc5xC,iBAAkBA,IACjD,eAAC,KAAD,CACEyzC,iBAAe,EACfC,iBAAgBz7C,GAEhB05C,QAASA,EACTgC,mBAAoB,kBAAMxD,GAAYwB,IACtCiC,iBAAkB,gBAAG3F,EAAH,EAAGA,gBAAH,OAChB,eAAC,GAAD,CACEA,gBAAiBA,EACjBkC,WAAYA,EACZhhB,YAAaA,EACbD,UAAWA,EACXqH,SAAUA,EACV3hB,UAAWA,EACXsxB,QAASA,EACTj0C,MAAOA,GACPm+C,SAAU1f,QAKd+hB,IACA,eAAC,KAAD,CACEoB,iBAAkB,SAACC,GAAD,OAChB,eAACzC,GAAD,2BACExtC,MAAOA,EACP5R,MAAOA,GACPmiC,KAAMA,EACN9sB,KAAMwsC,EAAKnC,UAAW,EACtBjjC,MAAOA,GACPxK,SAAUw+B,GACVt8B,GAAI,EACJmlB,GAAI,IACAuoB,GATN,IAUE10B,QAAS00B,EAAKC,OACdrjB,SAAUA,MAGdsjB,qBAAsB,SAACC,GAAD,OACpB,eAAC,GAAD,cACE9kB,YAAaA,EACbD,UAAWA,EACX+W,iBAAkB1P,EAClBtkC,MAAOA,GACPsjB,MAAOA,EACPmb,SAAUA,GACNujB,KAGRC,uBAAwBv3B,KAG5B,eAAC,KAAD,KACE81B,IAAW,eAAC,KAAD,IACb,eAAC,KAAD,CAAsB0B,oBAAkB,WC3XjCC,GAJsBt0C,yBACnC,IC8Qau0C,GAvOW,SAAC5kD,GAAgB,IAAD,QACA2T,oBAAc,IADd,oBACjCwuC,EADiC,KACnBC,EADmB,OAGVzuC,qBAAS,GAHC,oBAGjCuuC,EAHiC,KAGxBxB,EAHwB,OAKhB/sC,oBAAS,IALO,oBAKjCogB,EALiC,KAK3BsuB,EAL2B,OAUpCnuC,sBAAWywC,IAVyB,IAQtCx9C,MAASsJ,EAR6B,EAQ7BA,YAAaD,EARgB,EAQhBA,gBAAiBD,EARD,EAQCA,iBACvC4D,EATsC,EAStCA,SAEI8sB,EAAWC,aAAc,qBACvB+L,EAAc8K,KAAd9K,UAZgC,EAcRhN,aAAasiB,IAdL,oBAcjCI,EAdiC,KAcnBC,EAdmB,KAgBtCpgD,EAQExC,EARFwC,MACAk9B,EAOE1/B,EAPF0/B,YACAD,EAMEz/B,EANFy/B,UACArrB,EAKEpU,EALFoU,MACAsW,EAIE1qB,EAJF0qB,MACAoc,EAGE9mC,EAHF8mC,SACA2P,EAEEz2C,EAFFy2C,QACA9vC,EACE3G,EADF2G,SAGF0yB,sBAAU,WACR,IAAM/Z,EAAYZ,GACK,eAArBnO,EAAoCkvB,EAAYtwB,GAChDoB,EACA,OACA6D,GAEFguC,EAAgB9iC,KACf,CAACmgB,IAEJpG,sBAAU,WAAO,IAAD,IACRwpB,GAAoB,OAAPD,QAAO,IAAPA,GAAA,UAAAA,EAAS9xC,YAAT,mDAA8BA,OAAQ,GACnD0X,EACJq6B,EAAW/oC,OAAS,EAChB+oC,EAAWhqC,KAAI,SAACiqC,GACd,OAAO,6BACFA,GADL,IAEEjjC,UAAW,IAAInP,KAAKoyC,EAAGjjC,WACvBzO,QAAS,IAAIV,KAAKoyC,EAAG1xC,SACrBvK,MAAOi8C,EAAGjjC,UACV/Y,IAAKg8C,EAAG1xC,aAGZ,GAENixC,EAAQ75B,KACP,CAACo6B,IAEJ,IAAM5hB,EAAU,YACd,OAAI4hB,QAAJ,IAAIA,OAAJ,EAAIA,EAAS9hB,UACX8hB,EAAQ9hB,WAIN+jB,EAAW,CACf,CACEC,aAAcv0C,IAWlB8oB,sBAAU,WACR,IAAM0pB,EAAgB/7B,GAAqB,CACzChE,KAAMvS,EACNwW,KAAMzW,IAEFoE,EAAY,CAChB/N,MAAOk8C,EAASl8C,MAChBC,IAAKi8C,EAASj8C,KAEhB67C,EAAa,CACX/tC,gBAED,CAACnE,EAAaD,IAEjB,IAWM0oB,EAAwB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAErDyyB,EAAoB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAI9C,OAFA74B,QAAQC,MAGLoV,GACoB,IAArBA,EAAU3lB,QACTqoC,IACD,OAACA,QAAD,IAACA,GAAD,UAACA,EAAe,UAAhB,aAAC,EAAmBjjC,YACqB,KAA7B,OAAZijC,QAAY,IAAZA,GAAA,UAAAA,EAAe,UAAf,mBAAmBjjC,iBAAnB,eAA8BpF,QAM9B,gBAACpD,GAAA,EAAD,CACEF,MAAO,CAAExT,gBAAiB,OAAQN,UAAWu+B,EAAW,QAAK3qB,GAD/D,UAGE,gBAACuhB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC8Q,GAAD,CACEC,SAAU,kBAAM,MAChBC,OAAQ,kBAAM,MACd7kB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,EACP02B,sBAAuBA,EACvBR,kBAAmBA,EACnBloB,gBAAiBA,EACjBC,YAAaA,EACbgoB,MAAO,CAAC,EAAG,OAGf,eAACZ,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,gBAACyO,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,UACE,gBAACoZ,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACH3c,MAAOsK,EACP+U,SAAU,SAAChQ,GAAD,OAvDc,SAACrP,GACnCkO,EAAS,CAAE9M,KAAM,sBAAuBC,QAASrB,IAEjD,IAAMqZ,EAAYZ,GACN,eAAVzY,EAAyBw5B,EAAYtwB,GACrClJ,EACA,QAEFm8C,EAAgB9iC,GA+CgBylC,CAA4BzvC,EAAE05B,OAAO/oC,QAL7D,UAOE,eAACqtB,GAAA,EAAD,CACErtB,MAAO,aACPstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,uCAAW,aAG5B,eAACkf,GAAA,EAAD,CACErtB,MAAM,SACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,uCAAW,cAG7B4sB,GACC,eAACtU,GAAA,EAAD,CACElW,MAAO,CACLxT,gBAAiBmU,aAAK3U,EAAMR,QAAQG,UAAUD,KAAM,IACpDZ,QAAS,GAEXmV,QAASuqB,EALX,SAOE,eAAC,KAAD,CACExqB,MAAO,CAAE7U,SAAU,IACnBsJ,MAAM,sBAQlB,gBAAC,KAAD,CACE6F,KAAMijB,EACNlwB,OAAQo9B,EAAW/rB,OAAOguC,YAAchuC,OAAOguC,YAAc,GAC7DC,eAAgB,EAChB7oB,OAAQlmB,EAAQ,KAAO,KAJzB,UAME,eAAC,KAAD,CAAeywC,SAAUA,IACzB,eAAC,KAAD,CACEr0C,gBAAiBA,EACjBgzC,wBAAyBtqB,EACzBzoB,YAAaA,EACbgzC,oBAAqB/qB,IAEvB,eAAC,KAAD,CACE1yB,KAAK,MACL69C,YAAY,MACZH,aAAc/8C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9C+8C,aAAch9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3C+8C,WAAYj9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAEzC,eAAC,KAAD,CACEd,KAAK,QACL69C,YAAY,SACZC,cAAe,EACfJ,aAAc/8C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,GAC9C+8C,aAAch9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IAC3C+8C,WAAYj9C,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,OAGzC,eAAC,KAAD,CAAci9C,4BAA6B1C,KAC3C,eAAC,KAAD,CAAWvwC,KAAMqxC,EAAc5xC,iBAAkBA,IACjD,eAAC,KAAD,IACA,eAAC,KAAD,CACEyzC,iBAAe,EACf9B,QAASA,EACTgC,mBAAoB,kBAAMxD,GAAYwB,IACtCiC,iBAAkB,gBAAG3F,EAAH,EAAGA,gBAAH,OAChB,eAAC,GAAD,CACEA,gBAAiBA,EACjBkC,WAAYA,EACZhhB,YAAaA,EACbD,UAAWA,EACXwN,UAAWA,EACXnG,SAAUA,EACV3hB,UAAW,kBAAM,MACjBsxB,QAASA,EACTkK,UAAQ,OAId,eAAC,KAAD,IACA,eAAC,KAAD,CAAsB+D,oBAAkB,UAhHrC,eAAC,GAAD,KCzGIM,GA5CK,SAAC,GAA8B,IAA5Bx+C,EAA2B,EAA3BA,KAAMy+C,EAAqB,EAArBA,QAAS7wC,EAAY,EAAZA,MAIpC,OACE,eAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,KAAxB,SACE,gBAAC6S,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EAAQ,gEAAgB,oBAG3B,gBAAC47B,GAAA,EAAD,CACEjZ,aAAW,QACXvgB,MAAO,CAAE9T,UAAW,IACpBsD,KAAK,QACLC,MAAOO,EACP8e,SAfS,SAAChQ,GAChB2vC,EAAQ3vC,EAAE05B,OAAO/oC,QASb,UAOE,eAACyQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAO8tB,aAAc,IAF/C,SAIE,eAAC2C,GAAA,EAAD,CACErtB,MAAM,KACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAM,cAGV,eAACS,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAO8tB,aAAc,IAF/C,SAIE,eAAC2C,GAAA,EAAD,CACErtB,MAAM,KACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAM,wCCyBLivC,GA5DE,SAAC,GAAoC,IAAlCz+C,EAAiC,EAAjCA,QAAS0+C,EAAwB,EAAxBA,WAAY/wC,EAAY,EAAZA,MA0BvC,OACE,eAACujB,GAAA,EAAD,UACE,gBAACjhB,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SAA0BmT,EAAQ,uCAAW,WAE7C,eAAC47B,GAAA,EAAD,CACEjZ,aAAW,QACXvgB,MAAO,CAAE9T,UAAW,IACpBsD,KAAK,QACLC,MAAOQ,EACP6e,SAnCS,SAAChQ,GAChB6vC,EAAW7vC,EAAE05B,OAAO/oC,QA6BhB,SAOGlE,GAAS8W,KAAI,SAACusC,EAAU/kC,GACvB,OACE,gBAAC3J,GAAA,EAAD,CAEE9T,QAAQ,OACR4T,MAAO,CAAE3T,cAAe,MAAO8tB,aAAc,IAH/C,UAKE,eAAC2C,GAAA,EAAD,CACErtB,MAAOoa,EAAMm5B,WACbjmB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAM,MA3CAovC,EA6CMD,EAAIpjD,QA3C5B,gBAAC0U,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,UACE,eAAC6T,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRb,gBAAiBqiD,EAAOpjD,QAAQC,QAGpC,eAACwU,GAAA,EAAD,CACEF,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRb,gBAAiBqiD,EAAOljD,UAAUD,cAsBzBme,GApCE,IAACglC,a,kDCaT,SAASC,GAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,OAAQnxC,EAAc,EAAdA,MAAc,EAChCT,qBAAS,GADuB,oBACvD+iC,EADuD,KAC9CC,EAD8C,OAEtChjC,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IAFD,oBAEvDquB,EAFuD,KAEjD5W,EAFiD,OAIpCpa,oBAAS,QAJ2B,oBAIvD6xC,EAJuD,KAIhDC,EAJgD,OAKzB9xC,oBAAS,MALgB,oBAKvD+xC,EALuD,aCnBjD,WAAO,IAAD,EACFpxC,aAAYqxC,IAAtBC,EADY,uBAEDtxC,aAAYuxC,IAE9B,MAAO,CAAED,SAAQE,QAJE,sBD0BSC,IAApBH,EAPsD,EAOtDA,OAAQE,EAP8C,EAO9CA,QA2BVE,EAAY,yCAAG,iCAAArxC,EAAA,6DACnBgiC,GAAW,GADQ,SAEDiP,EAAO,IAFN,oBAEbzmC,EAFa,kBAGfA,GAHe,UAGfA,EAAKrO,YAHU,iBAGf,EAAW60C,gBAHI,aAGf,EAAqB7wC,IAHN,gCAIX0Z,GAAYT,EAAD,kBAJA,+CAMXQ,GAAaR,EAAD,eAND,QAQnB4oB,GAAW,GARQ,4CAAH,qDAUZsP,EAAa,yCAAG,WAAOC,GAAP,oBAAAvxC,EAAA,6DACpBgiC,GAAW,GADS,SAEFmP,EAAQ,CAAElxC,UAAW,CAAEuxC,KAAMD,KAF3B,oBAEd/mC,EAFc,kBAGhBA,GAHgB,UAGhBA,EAAKrO,YAHW,iBAGhB,EAAW+0C,iBAHK,aAGhB,EAAsB/wC,IAHN,gCAIZ0Z,GAAYT,EAAD,mBAJC,+CAMZQ,GAAaR,EAAD,gBANA,QAQpB4oB,GAAW,GARS,4CAAH,sDAUnB,OACE,gBAAChf,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,KAAxB,UACE,gBAAC6S,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACGqjC,EAAK3W,MACJ,eAACb,GAAD,CAAUE,KAAG,EAAC1H,OAAK,EAACte,KAAMs9B,EAAKt9B,KAAM+lB,IAAKuX,EAAKvX,MAEjD,gBAAC1W,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,aACZkf,eAAgB,iBAJpB,UAOE,eAACnM,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EACG,sJACA,iCAEJmxC,GACA,eAAChvC,GAAA,EAAD,CACEE,QAASuvC,EACT/6C,MAAM,UACNhK,QAAQ,YACRuV,MAAO,CAAE3S,OAAQ,IAJnB,SAMGuQ,EAAQ,+FAAsB,kBAKrC,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEic,kBAAmB,IAAjC,SACE,gBAACud,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACH3c,MAAOu/C,EACPlgC,SAAU,SAAChQ,GAAD,OAAYmwC,EAASnwC,EAAE05B,OAAO/oC,QAL1C,UAOE,eAACyQ,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACywB,GAAA,EAAD,CACErtB,MAAM,OACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,uHAA0B,mBAG7C,eAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACywB,GAAA,EAAD,CACErtB,MAAM,SACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,EAAQ,6HAA2B,0BAKlD,eAACujB,GAAA,EAAD,CAAOyJ,UAAW,EAAG5qB,MAAO,CAAE3S,OAAQ,IAAK0xB,SAAU,QAArD,SACE,eAAC7e,GAAA,EAAD,CAAKpV,QAAS,EAAd,SACE,eAAC8kD,GAAA,EAAD,UACGV,GACC,eAAC9S,GAAA,EAAD,CAAO7b,aAAW,eAAlB,SACE,eAACsvB,GAAA,EAAD,UACGX,EAAS7sC,KAAI,SAAC+J,GAAD,OACZ,gBAAC0jC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW9wC,UAAU,KAAK+wC,MAAM,MAAhC,SACG5jC,EAAI5c,OAEP,eAACugD,GAAA,EAAD,CAAW3vC,MAAM,UACjB,eAAC2vC,GAAA,EAAD,CAAW3vC,MAAM,QAAjB,SACE,eAACL,GAAA,EAAD,CACEE,QAAS,kBAAMwvC,EAAcrjC,EAAIujC,OACjCllD,QAAQ,WACRgK,MAAM,UAHR,SAKGmJ,EAAQ,8FAAqB,gBAXrBwO,EAAI5c,sBAuBlC0wC,GAAW,eAAC,GAAD,CAAStiC,MAAOA,OEzJlC,IAAMqyC,GAAYv8C,OAAaC,MAAM,CACnCtD,MAAOqD,OAAaE,WAAWC,IAAI,GAAGC,IAAI,IAC1CxD,IAAKoD,OAAaE,WAAWC,IAAI,GAAGC,IAAI,IACxC1D,SAAUsD,OAAaE,WAAWC,IAAI,IAAIC,IAAI,OAkGjCo8C,GA/FS,SAAC,GAA6C,IAA3Ch8B,EAA0C,EAA1CA,MAAO/jB,EAAmC,EAAnCA,SAAUggD,EAAyB,EAAzBA,YAAavyC,EAAY,EAAZA,MAAY,EACxBN,aAAQ,CACjDtJ,SAAUC,aAAYg8C,IACtBG,cAAe,CACb//C,MAAOF,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAQ,IACpCC,IAAKH,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUG,IAAM,KAChCF,SAAUD,EAAQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAUC,SAAW,MALtCmN,EAD2D,EAC3DA,SAAUC,EADiD,EACjDA,aAAcC,EADmC,EACnCA,OAiBhC,OACE,eAAC0jB,GAAA,EAAD,UACE,gBAACjhB,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EAAQ,4EAAkB,kBAE7B,gBAACsC,GAAA,EAAD,CACEF,MAAO,CACL9T,UAAW,IAFf,UAKE,gBAACm1B,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC6H,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,QACLiQ,MAAOyU,EAAM7jB,MACbkN,SAAUA,EACVE,OAAQA,EACR5M,KAAK,aAGT,eAACwwB,GAAA,EAAD,CAAMvgB,MAAI,EAAC2Q,GAAI,IACf,eAAC4P,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC6H,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,MACLiQ,MAAOyU,EAAM5jB,IACbiN,SAAUA,EACVE,OAAQA,EACR5M,KAAK,aAGT,eAACwwB,GAAA,EAAD,CAAMvgB,MAAI,EAAC2Q,GAAI,IAEf,gBAAC4P,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,UACG,IACD,eAAC6H,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,WACLiQ,MAAOyU,EAAM9jB,SACbmN,SAAUA,EACVE,OAAQA,EACR5M,KAAK,iBAKX,eAACqP,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,aAChBne,OAAQ,IALZ,SASE,eAAC0S,GAAA,EAAD,CACEE,QAASzC,GAlEJ,SAAClD,GAChB61C,EAAY,CACV9/C,MAAOmjB,OAAOlZ,EAAKjK,OACnBC,IAAKkjB,OAAOlZ,EAAKhK,KACjBF,SAAUojB,OAAOlZ,EAAKlK,eA+DdqE,MAAM,UACNhK,QAAQ,YACRuV,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZkf,eAAgB,UARpB,SAWE,eAACnM,GAAA,EAAD,UAAa6U,EAAMud,oB,wCCVpB4e,GAAoB,SAAC,GAQ3B,IAPLC,EAOI,EAPJA,IACAC,EAMI,EANJA,OACAC,EAKI,EALJA,MACAC,EAII,EAJJA,SACA/jD,EAGI,EAHJA,MACAW,EAEI,EAFJA,OACA3D,EACI,EADJA,KACI,EACqCyT,oBAAS,MAD9C,oBACGuzC,EADH,KACeC,EADf,KAGEC,EAAYzY,kBAAO,MASnB0Y,EAAc,WAClBJ,EAAS,MACTF,EAAO,OAWT,OARA1tB,sBAAU,WAEN8tB,EADEH,EACYM,IAAIC,gBAAgBP,GAEpB,QAEf,CAACA,IAGF,gBAACtwC,GAAA,EAAD,WACE,wBACEjJ,IAAK25C,EACL5wC,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACR2jD,QAAS,EACT/hC,SAAU,WACV4U,QAAS,GAEXhzB,KAAK,OACLie,SAhCc,SAAChQ,GAAY,IAAD,IACxBmyC,EAAG,UAAGnyC,EAAE05B,cAAL,iBAAG,EAAU0Y,aAAb,aAAG,EAAkB,GAC1BD,GACFR,EAASQ,MA+BRP,GACC,gBAACxwC,GAAA,EAAD,WACE,sBACED,QAAS,kBAAM4wC,KACf7wC,MAAO,CACLiP,SAAU,WACV/iB,UAAW,GACXtB,WAAY,EACZ8W,OAAQ,WANZ,SASE,eAAC,KAAD,CAAkB1B,MAAO,CAAEvL,MAAO,eAEpC,sBACEwL,QAAS,kBAAM2wC,EAAUt0B,QAAQ60B,SACjCnxC,MAAO,CACL+e,SAAU,SACVtT,aAAc,EACd/J,OAAQ,UACR0vC,UAAW,SAEb1kD,MAAOA,EACPW,OAAQA,EACRoyC,IAAKiR,OAIVJ,IAAQI,GACP,gBAACxwC,GAAA,EAAD,WACE,sBACED,QAAS,kBAAM4wC,KACf7wC,MAAO,CACLiP,SAAU,WACV/iB,UAAW,GACXtB,WAAY,EACZ8W,OAAQ,WANZ,SASE,eAAC,KAAD,CAAkB1B,MAAO,CAAEvL,MAAO,eAEpC,sBACEwL,QAAS,kBAAM2wC,EAAUt0B,QAAQ60B,SACjCnxC,MAAO,CACL+e,SAAU,SACVtT,aAAc,EACd/J,OAAQ,UACR0vC,UAAW,SAEb1kD,MAAOA,EACPW,OAAQA,EACRoyC,IAAK6Q,QAITI,IAAeJ,GACf,eAACpwC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9T,UAAW,EACXuf,aAAc,EACdsT,SAAU,SACVryB,MAAOA,EACPW,OAAQA,EACRqU,OAAQ,UACRlV,gBAAiB,UACjBF,WAAY,SACZkf,eAAgB,UAElBvL,QAAS,kBAAM2wC,EAAUt0B,QAAQ60B,SAbnC,SAeE,eAAC9xC,GAAA,EAAD,CAAYW,MAAO,CAAEvL,MAAO,OAAQtJ,SAAU,IAA9C,SACGzB,UAQA2nD,GAAiB,yCAAG,WAAOb,GAAP,sBAAAryC,EAAA,+EAECmzC,aAAiBd,EAAOp9C,IAFzB,cAEvBm+C,EAFuB,QAGvBjqB,EAAI,IAAIkqB,UACZC,OAAO,OAAQF,GACjBjqB,EAAEmqB,OAAO,gBnI3NgB,YmI4NzBnqB,EAAEmqB,OAAO,anI3Na,cmIqNO,UAQXC,MAChB,0DACA,CACEC,OAAQ,OACR1xB,KAAMqH,IAZmB,eAQvB3e,EARuB,iBAeVA,EAAIipC,OAfM,eAevBA,EAfuB,yBAgBtBA,EAAKtB,KAhBiB,gEAkBtBxwC,GAlBsB,0DAAH,sDClM9B8T,QAAQC,IAAI,SAAU1gB,IAEtB,IAGM88C,GAAYv8C,OAAaC,MAAM,CACnCnE,KAAMkE,OAAaE,WAAWC,IAAI,GAAGC,IAAI,KACzCd,OAAQU,OAAaE,WACrBm2C,KAAMr2C,OAEHmB,QAPH,0GAOwB,6BACrBjB,aA8OUi+C,GA3OC,SAAC,GAA4C,IAA1C39B,EAAyC,EAAzCA,MAAO49B,EAAkC,EAAlCA,YAAa7R,EAAqB,EAArBA,QAASriC,EAAY,EAAZA,MAAY,EAClCT,yBAAS2C,GADyB,oBACnDgqC,EADmD,KAC7CiI,EAD6C,OAE9B50C,qBAAS,GAFqB,oBAEnD60C,EAFmD,KAE3CC,EAF2C,OAIxB90C,oBAAS,MAJe,oBAInD+0C,EAJmD,KAIxCC,EAJwC,OAK5Bh1C,oBAAS,MALmB,oBAKnDi1C,EALmD,KAK1CC,EAL0C,OAOf/0C,aAAQ,CACjDtJ,SAAUC,aAAYg8C,IACtBG,cAAe,CACb5gD,KAAI,OAAEywC,QAAF,IAAEA,OAAF,EAAEA,EAASzwC,KACfwD,OAAM,OAAEitC,QAAF,IAAEA,OAAF,EAAEA,EAASjtC,OACjB+2C,KAAI,OAAE9J,QAAF,IAAEA,OAAF,EAAEA,EAAS8J,KACfuI,KAAI,OAAErS,QAAF,IAAEA,OAAF,EAAEA,EAASqS,KACf/e,IAAG,OAAE0M,QAAF,IAAEA,OAAF,EAAEA,EAAS1M,IACdyW,IAAG,OAAE/J,QAAF,IAAEA,OAAF,EAAEA,EAAS+J,IACdl1C,MAAK,OAAEmrC,QAAF,IAAEA,OAAF,EAAEA,EAASnrC,MAChB2+B,QAAO,OAAEwM,QAAF,IAAEA,OAAF,EAAEA,EAASxM,QAClBC,QAAO,OAAEuM,QAAF,IAAEA,OAAF,EAAEA,EAASvM,WAXdn2B,EAPkD,EAOlDA,SAAUC,EAPwC,EAOxCA,aAAcC,EAP0B,EAO1BA,OAehColB,sBAAU,YACR,OAAIod,QAAJ,IAAIA,OAAJ,EAAIA,EAAS6J,QACXiI,EAAO,OAAC9R,QAAD,IAACA,OAAD,EAACA,EAAS6J,MACjBuI,EAAU,OAACpS,QAAD,IAACA,OAAD,EAACA,EAAS6J,SAErB,CAAC7J,IAEJ,IAAMhiC,EAAQ,yCAAG,WAAO3D,GAAP,oCAAA6D,EAAA,yDACT3O,EAAO8K,EAAK9K,KAAK0/B,OACjBl8B,EAASsH,EAAKtH,OAAOk8B,OACnB6a,EAAkDzvC,EAAlDyvC,KAAMuI,EAA4Ch4C,EAA5Cg4C,KAAM/e,EAAsCj5B,EAAtCi5B,IAAKyW,EAAiC1vC,EAAjC0vC,IAAKl1C,EAA4BwF,EAA5BxF,MAAO2+B,EAAqBn5B,EAArBm5B,QAASC,EAAYp5B,EAAZo5B,SAE1Cwe,EALW,gCAMAb,GAAkBa,GANlB,OAObx/C,GADAA,EANa,QAODyb,QAAQ,UAAW,YAPlB,cAST/P,EAAiB,CACrB5O,OACAwD,SACA+2C,OACAuI,OACA/e,MACAyW,MACAl1C,QACA2+B,UACAC,UACAoW,KAAMp3C,GAAco3C,GAnBP,UAsBTgI,EAAY,CAAE1zC,cAtBL,4CAAH,sDAyBd,OACE,eAAC+iB,GAAA,EAAD,UACE,gBAACjhB,GAAA,EAAD,CAAKpV,QAAS,EAAd,UACE,eAACuU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,SACGmT,EAAQ,4EAAkB,wBAE7B,gBAACyjB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,gBAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,UACG7T,GACC,gBAAC,KAAM+c,SAAP,WACE,eAACrB,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,IAEb,eAAC14B,GAAD,CACE9Z,WAAS,EACT5L,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMyb,OACbpyB,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,QAIfp0C,GACA,gBAAC,KAAM+c,SAAP,WACE,eAACrB,GAAD,CACE9Z,WAAS,EACT5L,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,IAEb,eAAC14B,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,EAAMlhB,OACbuK,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,OAIjB,eAAC14B,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMqI,YACbhf,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,OAGf,gBAAC3wB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,UACE,eAAC6H,GAAD,CACE9pB,KAAK,MACLiQ,MAAOyU,EAAMqf,IACbh2B,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,IAEb,eAAC14B,GAAD,CACE9pB,KAAK,MACLiQ,MAAOyU,EAAMwG,OACbnd,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,IAEb,eAAC14B,GAAD,CACE9pB,KAAK,OACLiQ,MAAOyU,EAAMsf,OACbj2B,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,OAGf,gBAAC3wB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,UACE,eAAC6H,GAAD,CACE9pB,KAAK,QACLiQ,MAAOyU,EAAMpf,MACbyI,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,IAEb,eAAC14B,GAAD,CACE9pB,KAAK,UACLiQ,MAAOyU,EAAMwf,QACbn2B,SAAUA,EACVE,OAAQA,EACRoyB,WAAS,EACTC,QAAS,EACTvS,KAAM,EACN9B,UAAWu2B,OAGf,gBAAC3wB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,UACE,eAAC6H,GAAD,CACE9pB,KAAK,UACLiQ,MAAOyU,EAAMuf,QACbl2B,SAAUA,EACVE,OAAQA,EACRge,UAAWu2B,KAEZ,EAeD,eAAC9xC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,MAE1B,eAAC,GAAD,CACEm2B,IAAK8B,EACL7B,OAAQ8B,EACR7B,MAAO0B,EACPzB,SAAU0B,EACVzlD,MAAO,IACPW,OAAQ,IACR3D,KAAK,eAIX,eAAC23B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,IACvB,eAAC4P,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,gBAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,gBAChBne,OAAQ,GACRnB,UAAW,IANf,UASE,eAAC6T,GAAA,EAAD,CACEE,QAASzC,EAAaS,GACtBxJ,MAAM,UACNhK,QAAQ,YACRgxB,UAAWu2B,EACXhyC,MAAO,CACLtT,MAAO,GACPW,OAAQ,GACRf,WAAY,SACZkf,eAAgB,UATpB,SAYE,eAACnM,GAAA,EAAD,UAAa6U,EAAMud,SAErB,eAAC3U,GAAA,EAAD,CACEC,QACE,eAACnO,GAAA,EAAD,CACEC,QAASmjC,EACTljC,SAAU,SAAChQ,GAAD,OAAYmzC,EAAUnzC,EAAE05B,OAAO3pB,UACzCrf,KAAK,WACLiF,MAAM,YAGVgL,MAAO7B,EAAQ,4EAAkB,2BCzP3C20C,GAAe,CACnBniD,SAAU,GACVC,MAAO,IACPC,IAAK,MA+EQkiD,GA5EC,SAAC,GAQN,EAPTvxC,SAOU,IANVrD,EAMS,EANTA,MACAsW,EAKS,EALTA,MACAliB,EAIS,EAJTA,SACAiuC,EAGS,EAHTA,QACA6R,EAES,EAFTA,YAES,KADT9lD,MAE2C0R,sBAAWtB,KAA9ClO,EADC,EACDA,MAAOyP,EADN,EACMA,SACP3N,EAAkC9B,EAAlC8B,KAAMC,EAA4B/B,EAA5B+B,QAASC,EAAmBhC,EAAnBgC,KAAMC,EAAajC,EAAbiC,SAEvBsgB,EAAO/e,GAAaxB,GAQpBigD,EAAc,SAAC71C,GACnBqD,EAAS,CAAE9M,KAAM,cAAeC,QAASwJ,KAO3C,OAJKnK,GACHggD,EAAYoC,IAIZ,eAACryC,GAAA,EAAD,CACEF,MAAO,CACLlV,QAAS,IAFb,SAKE,gBAACu2B,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,SACE,eAAC,GAAD,CAAUzhB,KAAMA,EAAMy+C,QAtBd,SAACz+C,GACf2N,EAAS,CAAE9M,KAAM,UAAWC,QAASd,KAqBS4N,MAAOA,MAGjD,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,SACGzf,GACC,eAAC,GAAD,CACE7B,SAAUA,EACV+jB,MAAOA,EACPi8B,YAAaA,EACbvyC,MAAOA,MAKb,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,EACP3N,QAASA,EACT0+C,WArCS,SAAC1+C,GAClB0N,EAAS,CAAE9M,KAAM,aAAcC,QAASb,SAwCnCwgB,GACC,eAAC4Q,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,SACE,eAACq9B,GAAD,CAAiBlxC,MAAOA,EAAOmxC,QAAQ,MAG3C,eAAC1tB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,SACE,eAAC,GAAD,CACEwuB,QAASA,EACT6R,YAAaA,EACb59B,MAAOA,EACPtW,MAAOA,YC5EnB,IA0Ge60C,GA1GO,SAAC,GAAsD,IAApDpxC,EAAmD,EAAnDA,KAAM8X,EAA6C,EAA7CA,QAAS/M,EAAoC,EAApCA,IAAKsmC,EAA+B,EAA/BA,aAAc1mD,EAAiB,EAAjBA,MAAiB,EAClDmR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADW,oBACnEquB,EADmE,KAC7D5W,EAD6D,OAExBja,aAAQ5J,EAAIglB,cAAtDnb,EAFkE,EAElEA,SAAUC,EAFwD,EAExDA,aAAcC,EAF0C,EAE1CA,OAAQwxB,EAFkC,EAElCA,MAEzBrxB,EACIF,sBAAWtB,IAD5ByB,UAAaD,MAGTK,EAAQ,yCAAG,WAAO3D,GAAP,oCAAA6D,EAAA,yDACT/J,EAAWkG,EAAKlG,SAChBokB,EAAcle,EAAKke,YACnBC,EAAene,EAAKme,aAEtBD,IAAgBC,EALL,gCAMPb,GAAcL,EAAS,sBANhB,+CAUTnZ,EAAiB,CACrByK,IAAKuD,EAAIvD,IACTzU,WACAokB,eAba,mBAgBKk6B,EAAa,CAAEt0C,cAhBpB,YAiByB,KAA/B,QADDuK,EAhBO,cAiBN,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAWq4C,sBAAX,eAA2Br0C,IAjBlB,kCAkBLmZ,GAAaF,EAAS3Z,GAlBjB,oCAmBgC,KAA/B,OAAH+K,QAAG,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAWq4C,sBAAX,eAA2Br0C,IAnBzB,kCAoBLsZ,GAAcL,EAAD,OAAU5O,QAAV,IAAUA,GAAV,UAAUA,EAAKrO,YAAf,iBAAU,EAAWq4C,sBAArB,aAAU,EAA2Bv1C,OApB7C,0CAuBb6xB,IACA9V,IAxBa,kDA0BbsW,EAAQ,EAAD,IA1BM,0DAAH,sDA8BRA,EAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZqxB,IACArb,QAAQC,IAAIzW,GANA,2CAAH,sDAcPqL,EAAQ7K,EAAQ,+FAAsB,kBAE5C,OACE,eAACswB,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASA,EACT1Q,MAAOA,EACPxK,SAZmB,WACrBT,EAAaS,EAAbT,IAYExR,MAAOA,EACPmiC,KAAMA,EACN7gC,SAAS,KARX,SAUE,gBAAC+zB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,eAAC+D,GAAD,CACE7lB,WAAS,EACT5L,UAAQ,EACR/C,KAAK,WACLrB,KAAK,WACLiQ,MAAO7B,EAAQ,2GAAwB,mBACvCL,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,IAEX,eAACylB,GAAD,CACEzxB,UAAQ,EACR/C,KAAK,WACLrB,KAAK,cACLiQ,MAAO7B,EAAQ,2GAAwB,eACvCL,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,IAEX,eAACylB,GAAD,CACEzxB,UAAQ,EACR/C,KAAK,WACLrB,KAAK,eACLiQ,MAAO7B,EAAQ,2GAAwB,eACvCL,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,OAIb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UC8KRsxB,GAtQG,SAAC,GAWP,IAVVvxC,EAUS,EAVTA,KACA8X,EASS,EATTA,QACA/M,EAQS,EARTA,IACA4R,EAOS,EAPTA,MACAM,EAMS,EANTA,aACAF,EAKS,EALTA,UACAC,EAIS,EAJTA,WACAryB,EAGS,EAHTA,MACA0mD,EAES,EAFTA,aACAG,EACS,EADTA,MACS,EACe11C,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAEiBpa,oBAAS,IAF1B,oBAEF1L,EAFE,KAEKqhD,EAFL,OAGe31C,oBAAS,WAHxB,oBAGFyf,EAHE,KAGIm2B,EAHJ,OAIyB51C,qBAAS,GAJlC,oBAIF61C,EAJE,KAISC,EAJT,OAMuB91C,qBAAS,GANhC,oBAMF+1C,EANE,KAMQC,EANR,OAQyC71C,aAChD0gB,EAAQtqB,EAAI0kB,gBAAkB1kB,EAAI4kB,kBAD5B/a,EARC,EAQDA,SAAUC,EART,EAQSA,aAAcC,EARvB,EAQuBA,OAAQwxB,EAR/B,EAQ+BA,MAR/B,EAcUvxB,sBAAWtB,IAdrB,IAYPyB,UAAaqW,EAZN,EAYMA,MAAOtW,EAZb,EAYaA,MACX1N,EAbF,EAaPhC,MAASgC,KAELkjD,EAAOzhD,GAAczB,GACnBwsB,EAAa2oB,KAAb3oB,SAqBRmG,sBAAU,WACR,IAAMwwB,E1IL6B,SAAC32B,EAAe42B,GACrD,IAAMC,EAAM,GACZ,OAAwB,IAApB72B,EAASpZ,QACboZ,EAASra,KAAI,SAACzQ,GACRA,EAAO+nB,WAAa25B,IACtBC,EAAI3hD,EAAO+nB,UAAY,GACvB/nB,EAAOZ,QAAQqR,KAAI,SAACmxC,GAClBD,EAAI3hD,EAAO+nB,UAAU65B,GAAO,UALAD,E0IGnBE,CAAwB/2B,EAAUE,GAC/Ck2B,EAASO,KACR,CAAChyC,EAAMub,IAEViG,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB,IAAMwqC,EAAOllD,KAAKC,MAAMge,EAAI3a,OAC5BshD,EAAQ3mC,EAAIxa,QACZkhD,EAASO,GACTJ,EAAa7mC,EAAIymC,UAElB,CAACxxC,IAEJ,IAEMpD,EAAQ,yCAAG,WAAO3D,GAAP,0BAAA6D,EAAA,0DACW,IAAtBjO,EAAKwB,aADM,oBAEY,IAArB0a,EAAI1a,cAA8C,SAArB0a,EAAI1a,aAFxB,gCAGLkmB,GAAcL,EAAS,iCAHlB,wCAOf+G,IACMnqB,EAAW6pB,EAAQ1jB,EAAKnG,SAAWiY,EAAIjY,SACvC3E,EAAO8K,EAAK9K,KAAK0/B,OACjBt6B,EAAQ0F,EAAK1F,MACbR,EAAWkG,EAAKlG,SAChBU,EAAQwF,EAAKxF,MACbsJ,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChC3L,WACA3E,OACAoF,QACAE,QACAV,SAAU4pB,EAAQ5pB,OAAW0L,EAC7BrO,MAAOtD,KAAKyB,UAAU6B,GACtBG,OAAQgrB,EACRuS,OAAQj/B,EAAK2Y,KAGfumB,EADepR,EAAQI,EAAYC,EACrBjgB,GAzBC,4CAAH,sDA4BRgxB,EAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,uBAGJqZ,GAAaF,EAAS3Z,GAHlB,OAIV+9B,IAJU,gDAMVlM,EAAQ,EAAD,IANG,yDAAH,wDAULA,EAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZqxB,IACArb,QAAQC,IAAIzW,GANA,2CAAH,sDAkBPu+B,EAAc,WAClB1M,IACA6jB,EAAS,IACTC,EAAQ,WACR55B,KAOI1Q,EAAQ7K,EACVogB,EACE,sEACA,2GACFA,EACA,WACA,YACJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASA,EACT1Q,MAAOA,EACPxK,SAjBmB,WACrBT,EAAaS,EAAbT,IAiBExR,MAAOA,EACPmiC,KAAMA,EACN7I,GAAI,GARN,SAUE,gBAACjE,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,eAAChI,GAAD,CACE9Z,WAAS,EACT5L,UAAQ,EACRpE,KAAK,WACLiQ,MAAOyU,EAAM/f,SACboJ,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLqP,UAAWuC,IAEZA,GACC,eAAC1E,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,WACLiQ,MAAOyU,EAAM9f,SACbmJ,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLvb,KAAK,aAGT,eAACyoB,GAAD,CACE1lB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,IAEP,eAACkN,GAAD,CACE9pB,KAAK,QACLiQ,MAAOyU,EAAMqI,YACbhf,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,IAEP,eAACkN,GAAD,CACE9pB,KAAK,QACLiQ,MAAOyU,EAAMpf,MACbyI,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,IAEP,eAAClM,GAAA,EAAD,UACE,eAACb,GAAA,EAAD,CAAY5U,QAAQ,KAAKuV,MAAO,CAAE9T,UAAW,IAA7C,SACG0R,EAAQ,yDAAc,YAG1B8e,GAAYjrB,GACX,eAACgrB,GAAD,CACEhrB,MAAOA,EACPmM,MAAOA,EACP8e,SAAUA,EACVE,KAAMA,EACND,kBAlLc,SAAC,GAAmC,IAAjC/qB,EAAgC,EAAhCA,OAAQG,EAAwB,EAAxBA,OAAQM,EAAgB,EAAhBA,KAC3C,GAAKT,EAAL,CACA,IAAM8hD,EAAQ,gBAAQjiD,GAElBG,IAAWG,GACkB,IAA3B2hD,EAAS9hD,GAAQS,UACZqhD,EAAS9hD,GAAQS,GAExBqhD,EAAS9hD,GAAQS,IAAQ,GAGY,IAAnCqhD,EAAS9hD,GAAQG,GAAQM,UACpBqhD,EAAS9hD,GAAQG,GAAQM,GAEhCqhD,EAAS9hD,GAAQG,GAAQM,IAAQ,EAGrCygD,EAASY,OAoKH,eAACxzC,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZkf,eAAgB,SAChBtf,UAAW,MAGf,gBAACgU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CAAE1T,WAAY,SAAUkf,eAAgB,YAFjD,WAIIwS,GACA,eAACje,GAAA,EAAD,CACEtV,QAAQ,WACRgK,MAAM,UACNwL,QAAS,kBAAMkzC,GAAY,IAC3BnzC,MAAO,CAAEpV,WAAY,GAAIC,YAAa,IAJxC,SAMG+S,EAAQ,+FAAsB,oBAGlCw1C,IAAShnC,EAAI1a,eAAiBssB,GAC7B,eAACje,GAAA,EAAD,CACEtL,MAAOu+C,EAAY,YAAc,UACjC/yC,QA3HM,WAClB,IAAM7B,EAAY,CAChByK,IAAKuD,EAAIvD,IACTgqC,OAAQG,GAEVH,EAAM,CAAEz0C,eAuHI3T,QAAQ,WAHV,SAKGuoD,EACGp1C,EACE,sEACA,eACFA,EACA,sEACA,qBAKZ,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAAC,GAAD,CACEjgB,KAAM6xC,EACN/5B,QA9LY,kBAAMg6B,GAAY,IA+L9B/mC,IAAKA,EACLsmC,aAAcA,EACd1mD,MAAOA,UCrPXgoB,GAAW,SAAC5H,GAAD,OAAuBA,EAAIvD,KAE7B,SAAS8qC,GAAT,GAMN,IALP/1C,EAKM,EALNA,MACAsW,EAIM,EAJNA,MACAloB,EAGM,EAHNA,MACAiV,EAEM,EAFNA,SACAjP,EACM,EADNA,SACM,EACkBmL,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADzD,oBACCquB,EADD,KACO5W,EADP,OAGYpa,oBAAS,CACzB,CAAE3N,KAAM,SAAUiZ,MAAOyL,EAAM3nB,QAC/B,CAAEiD,KAAM,WAAYiZ,MAAOyL,EAAM/f,UACjC,CAAE3E,KAAM,OAAQiZ,MAAOyL,EAAM1kB,MAC7B,CAAEA,KAAM,QAASiZ,MAAOyL,EAAMqI,aAC9B,CAAE/sB,KAAM,QAASiZ,MAAOyL,EAAMpf,OAC9B,CAAEtF,KAAM,QAASiZ,MAAOyL,EAAMziB,OAC9B,CAAEjC,KAAM,QAASiZ,MAAO7K,EAAQ,uCAAW,YAPtC2+B,EAHD,uBC5BO,WAAO,IAAD,MACa9S,aAAamqB,IAD1B,oBACZC,EADY,KACHC,EADG,OAGDh2C,aAAY6zB,GAAQ,CACpC7H,eAAgB,CAAC,CAAEC,MAAO6pB,OADrBG,EAHY,uBAMAj2C,aAAYk2C,GAAY,CACzClqB,eAAgB,CAAC,CAAEC,MAAO6pB,OADrBK,EANY,uBASIn2C,aAAY60C,GAAgB,CACjD7oB,eAAgB,CAAC,CAAEC,MAAO6pB,OADrBlB,EATY,uBAYH50C,aAAYk1C,GAAW,CACrClpB,eAAgB,CAAC,CAAEC,MAAO6pB,OADrBf,EAZY,uBAeE/0C,aAAYo2C,GAAY,CAC3CpqB,eAAgB,CAAC,CAAEC,MAAO6pB,OADrBO,EAfY,qBA0BnB,OAPAtxB,sBAAU,WACRgxB,MACC,CAACA,IAKG,CACLO,OAJmB,OAAPN,QAAO,IAAPA,GAAA,UAAAA,EAASx5C,YAAT,kDAA6BA,OAAQ,GAKjD+5C,YAJkB,yBAAMP,QAAN,IAAMA,OAAN,EAAMA,EAASxpB,WAKjCypB,UACAE,WACAE,aACAzB,eACAG,SDgBEyB,GAPFF,EAdI,EAcJA,MACAL,EAfI,EAeJA,QACAE,EAhBI,EAgBJA,SACAE,EAjBI,EAiBJA,WACAzB,EAlBI,EAkBJA,aACAG,EAnBI,EAmBJA,MACAwB,EApBI,EAoBJA,YAGI5X,EAAa,yCAAG,sCAAAt+B,EAAA,2DAASmU,EAAT,EAASA,SAAT,wBAEZzJ,EAAMyJ,EAAQ,GAFF,SAGA6hC,EAAW,CAAE/1C,UAAW,CAAEyK,SAH1B,WAIgB,KAA3B,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAW45C,kBAAX,eAAuB51C,IAJT,iCAKVqZ,GAAWJ,EAAS3Z,GALV,6EAAH,sDAwCb+X,EAAoB,CACxBC,IA9BgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,sBAAK7V,MAAO,CAAE8V,UAAW,UAAzB,SACE,eAAC5V,GAAA,EAAD,CAAK6V,EAAG,EAAR,SACE,eAACC,GAAA,EAAD,CAAKvhB,MAAM,UAAUwL,QAAS4V,EAAWpN,MAAM,iBAA/C,SACE,eAAC,KAAD,WA2BNwN,KArBiB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,UAAH,OACjB,eAACK,GAAA,EAAD,CAAYjW,QAAS4V,EAAWpN,MAAM,WAAtC,SACE,eAAC,KAAD,OAoBF0N,OAhBmB,SAAC,GAAD,IAAGN,EAAH,EAAGA,UAAH,OACnB,eAACK,GAAA,EAAD,CACEjW,QAAS,WACHvB,OAAO0X,QAAQ,8CACjBP,KAGJpN,MAAM,aANR,SAQE,eAAC,KAAD,QAeJ,OACE,eAAC8hB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAAS6pB,EANX,SAQE,gBAAClzB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAM62B,EAAO7X,QAASA,EAASvoB,SAAUA,GAA/C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CAAc4oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,SACNlB,mBAAoB,SAACtyC,GAAD,OpG9EF,SAAC,GAAgC,IAA9BiG,EAA6B,EAA7BA,MAAO2c,EAAsB,EAAtBA,IAAKxO,EAAiB,EAAjBA,MACrC1N,EAAI,6BAAQkc,GAAR,IAAa3a,MAAOtD,KAAKC,MAAMqB,KACzC,OAAIiC,GAAaxB,GACR,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,uCAAW,eAE9BjM,GAAczB,GACT,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,0DAAe,iBAGlC9L,GAAc5B,EAAM,QAAU4B,GAAc5B,EAAM,OAC7C,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,oDAAc,kBAEjC5L,GAAS9B,EAAM,QAAU8B,GAAS9B,EAAM,OACnC,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,2BAAS,WAE5B1L,GAAShC,EAAM,QAAUgC,GAAShC,EAAM,OACnC,eAACgQ,GAAA,EAAD,UAAMtC,EAAQ,2BAAS,WAGzB,eAACsC,GAAA,EAAD,IoG4DKw0C,CAAe,6BAAKlrD,GAAN,IAAaoU,cAG/B,eAAC,KAAD,CACEo/B,IAAK,CAAC,UACNlB,mBAAoBzvB,KAEtB,eAAC,KAAD,CACE2wB,IAAK,CAAC,SACNlB,mBAAoBxvB,KAGtB,eAAC,KAAD,CACEqoC,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAnDM,SAAC,GAAuB,IAArB3qC,EAAoB,EAApBA,GAAIsjB,EAAgB,EAAhBA,UACfS,EAAgBX,EAAkBpjB,GACxC,OAAO,eAAC+jB,EAAD,CAAeT,UAAWA,OAmD3B,eAAC,KAAD,IACA,eAAC,KAAD,CACEg/B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CAAcwC,MAAOA,EAAOoyB,UAAW21B,EAAS11B,WAAY41B,EAA5D,SACE,eAAC,GAAD,CAAWvB,aAAcA,EAAcG,MAAOA,SAGjD1kB,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,IACXC,KAAG,SEzJA,SAASi+B,GAAT,GAA8D,IAAvCl3C,EAAsC,EAAtCA,MAAOsW,EAA+B,EAA/BA,MAAOliB,EAAwB,EAAxBA,SAAUhG,EAAc,EAAdA,MAAc,EAClDmR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADW,oBACnEquB,EADmE,KAC7D5W,EAD6D,OAGxDpa,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOyL,EAAM1kB,MAChD,CAAEA,KAAMoO,EAAQ,OAAS,SAAU6K,MAAOyL,EAAM1kB,MAChD,CAAEA,KAAM,OAAQiZ,MAAOyL,EAAM0b,aAC7B,CAAEpgC,KAAM,SAAUiZ,MAAOyL,EAAMzf,SAJ1B8nC,EAHmE,uBAWxElR,KADMnC,EAVkE,EAUlEA,YAAac,EAVqD,EAUrDA,cAAeE,EAVsC,EAUtCA,eAAgBE,EAVsB,EAUtBA,iBAG9CqS,EAAa,yCAAG,0CAAAt+B,EAAA,2DAASmU,EAAT,EAASA,SAAT,wBAEZzJ,EAAMyJ,EAAQ,GAFF,SAGA8X,EAAiB,CAAEhsB,UAAW,CAAEyK,SAHhC,WAIsB,KAAjC,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAW6vB,wBAAX,eAA6B7rB,IAJf,6BAKZqK,QALY,IAKZA,GALY,UAKZA,EAAKrO,YALO,iBAKZ,EAAW6vB,wBALC,aAKZ,EAA6B/sB,MAAM4L,SAAS,YALhC,kCAMR8O,GAAiBP,EAAS3Z,GANlB,iDAQR+Z,GAAWJ,EAAS3Z,GARZ,4CAAH,sDAcnB,OACE,gBAACujB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAM2L,EAAaqT,QAASA,EAASvoB,SAAUA,GAArD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAc4oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAGtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,UACNlB,mBAAoB3vB,KAGrBna,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAItB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAW4L,EACX3L,WAAY6L,EAHd,SAKE,eAAC,GAAD,SAGHiE,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,IACXC,KAAG,OC5EE,SAASk+B,GAAT,GAA4D,IAAvCn3C,EAAsC,EAAtCA,MAAOsW,EAA+B,EAA/BA,MAAOliB,EAAwB,EAAxBA,SAAUhG,EAAc,EAAdA,MAAc,EAChDmR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADS,oBACjEquB,EADiE,KAC3D5W,EAD2D,OAGtDpa,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOyL,EAAM1kB,MAChD,CAAEA,KAAM,SAAUiZ,MAAOyL,EAAMzf,OAC/B,CAAEjF,KAAM,QAASiZ,MAAOyL,EAAMqI,aAC9B,CAAE/sB,KAAM,QAASiZ,MAAOyL,EAAMpf,OAC9B,CACEtF,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOyL,EAAMxB,YAEf,CAAEljB,KAAM,OAAQiZ,MAAOyL,EAAM2f,MAC7B,CAAErkC,KAAM,UAAWiZ,MAAO7K,EAAQ,0DAAe,aAV5C2+B,EAHiE,uBClB3D,WAAO,IAAD,IAGb3+B,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgBy5B,aAAaoL,GAAc,CAC5Dz2B,UAAW,CAAER,QAAOy6B,QAAS,KALZ,oBAIZvD,EAJY,KAIAC,EAJA,OAQGj3B,aAAYk3B,GAAgB,CAChDlL,eAAgB,CACd,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,QAAOy6B,QAAS,IACpD,CAAEtO,MAAO8K,GAAcz2B,UAAW,CAAER,aAHjCwyB,EARY,uBAcItyB,aAAYm3B,GAAgB,CACjDnL,eAAgB,CACd,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,QAAOy6B,QAAS,IACpD,CAAEtO,MAAO8K,GAAcz2B,UAAW,CAAER,aAHjCs3B,EAdY,uBAoBMp3B,aAAYq3B,GAAgB,CACnDrL,eAAgB,CACd,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,QAAOy6B,QAAS,IACpD,CAAEtO,MAAO8K,GAAcz2B,UAAW,CAAER,aAHjCw3B,EApBY,qBAkCnB,OAPAvS,sBAAU,WACRiS,MACC,CAACA,IAKG,CACL7L,WAJuB,OAAP8L,QAAO,IAAPA,GAAA,UAAAA,EAASz6B,YAAT,sDAAiCA,OAAQ,GAKzD+6B,gBAJsB,yBAAMN,QAAN,IAAMA,OAAN,EAAMA,EAASzK,WAKrC8F,cACA8E,eACAE,kBDJA4f,GADM/rB,EAhBgE,EAgBhEA,UAAWmH,EAhBqD,EAgBrDA,YAAa8E,EAhBwC,EAgBxCA,aAAcE,EAhB0B,EAgB1BA,eAGxCqH,EAAa,yCAAG,0CAAAt+B,EAAA,2DAASmU,EAAT,EAASA,SAAT,wBAEZzJ,EAAMyJ,EAAQ,GAFF,SAGA8iB,EAAe,CAAEh3B,UAAW,CAAEyK,SAH9B,WAIoB,KAA/B,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAW66B,sBAAX,eAA2B72B,IAJb,6BAKZqK,QALY,IAKZA,GALY,UAKZA,EAAKrO,YALO,iBAKZ,EAAW66B,sBALC,aAKZ,EAA2B/3B,MAAM4L,SAAS,YAL9B,kCAMR8O,GAAiBP,EAAS3Z,GANlB,iDAQR+Z,GAAWJ,EAAS3Z,GARZ,4CAAH,sDAcnB,OACE,gBAACujB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAM0L,EAAWsT,QAASA,EAASvoB,SAAUA,GAAnD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CAAc4oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,UACNlB,mBAAoB3vB,KAEtB,eAAC,KAAD,CACE6wB,IAAK,CAAC,SACNlB,mBAAoBlwB,KAEtB,eAAC,KAAD,CACEoxB,IAAK,CAAC,WACNlB,mBAAoB,SAACtyC,GAAD,OAClBqiB,GAAiB,6BAAKriB,GAAN,IAAaoU,cAGhC5L,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAWgS,EACX/R,WAAY6W,EAHd,SAKE,eAAC,GAAD,SAGH/G,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,IACXC,KAAG,OElGE,SAASo+B,GAAUzrD,GAAa,IACrCoU,EAA4CpU,EAA5CoU,MAAOsW,EAAqC1qB,EAArC0qB,MAAOliB,EAA8BxI,EAA9BwI,SAAUhG,EAAoBxC,EAApBwC,MAAOiV,EAAazX,EAAbyX,SADK,EAEpB9D,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IAFnB,oBAErCquB,EAFqC,KAE/B5W,EAF+B,OAI1Bpa,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOyL,EAAM1kB,MAChD,CAAEA,KAAM,QAASiZ,MAAOyL,EAAMqI,aAC9B,CAAE/sB,KAAM,SAAUiZ,MAAOyL,EAAMwG,QAC/B,CAAElrB,KAAM,QAASiZ,MAAOyL,EAAMpf,OAC9B,CAAEtF,KAAM,UAAWiZ,MAAOyL,EAAMyf,cAL3B4I,EAJqC,uBAkBxCgF,KALF9K,EAb0C,EAa1CA,UACAL,EAd0C,EAc1CA,YACAE,EAf0C,EAe1CA,aACAE,EAhB0C,EAgB1CA,eACAE,EAjB0C,EAiB1CA,gBAGI+F,EAAa,yCAAG,0CAAAt+B,EAAA,2DAASmU,EAAT,EAASA,SAAT,wBAEZzJ,EAAMyJ,EAAQ,GAFF,SAGAkkB,EAAe,CAAEp4B,UAAW,CAAEyK,SAH9B,WAIoB,KAA/B,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAWi8B,sBAAX,eAA2Bj4B,IAJb,6BAKZqK,QALY,IAKZA,GALY,UAKZA,EAAKrO,YALO,iBAKZ,EAAWi8B,sBALC,aAKZ,EAA2Bn5B,MAAM4L,SAAS,YAL9B,kCAMR8O,GAAiBP,EAAS3Z,GANlB,iDAQR+Z,GAAWJ,EAAS3Z,GARZ,4CAAH,sDAcnB,OACE,eAAC2sB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAASkM,EANX,SAQE,gBAACvV,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAMkZ,EAAW8F,QAASA,EAASvoB,SAAUA,GAAnD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAc4oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IAClCziD,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAG1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAWgY,EACX/X,WAAYiY,EAHd,SAKE,eAAC,GAAD,SAGHnI,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,IACXC,KAAG,SCvFA,SAASq+B,GAAT,GAA2D,IAAvCt3C,EAAsC,EAAtCA,MAAOsW,EAA+B,EAA/BA,MAAOloB,EAAwB,EAAxBA,MAAOgG,EAAiB,EAAjBA,SAAiB,EAC/CmL,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADQ,oBAChEquB,EADgE,KAC1D5W,EAD0D,OAGrDpa,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOyL,EAAM1kB,MAChD,CACEA,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOyL,EAAMxB,YAEf,CACEljB,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAM,GAAD,OAAKyL,EAAMvB,SAAX,cAAyBuB,EAAMpL,YAEtC,CAAEtZ,KAAM,OAAQiZ,MAAOyL,EAAM0b,aAC7B,CAAEpgC,KAAM,QAASiZ,MAAOyL,EAAMjf,SAXzBsnC,EAHgE,uBAiBVhB,KAArDjL,EAjB+D,EAiB/DA,SAAUoF,EAjBqD,EAiBrDA,WAAYE,EAjByC,EAiBzCA,YAAaE,EAjB4B,EAiB5BA,cAErC2G,EAAa,yCAAG,0CAAAt+B,EAAA,2DAASmU,EAAT,EAASA,SAAT,wBAEZzJ,EAAMyJ,EAAQ,GAFF,SAGAwjB,EAAc,CAAE13B,UAAW,CAAEyK,SAH7B,WAIgB,KAA3B,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAWu7B,kBAAX,eAAuBv3B,IAJT,6BAKZqK,QALY,IAKZA,GALY,UAKZA,EAAKrO,YALO,iBAKZ,EAAWu7B,kBALC,aAKZ,EAAuBz4B,MAAM4L,SAAS,YAL1B,kCAMR8O,GAAiBP,EAAS3Z,GANlB,iDAQR+Z,GAAWJ,EAAS3Z,GARZ,4CAAH,sDAcnB,OACE,gBAACujB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAM+S,EAAUiM,QAASA,EAASvoB,SAAUA,GAAlD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc4oB,gBAAiBH,IAC/B,eAAC,KAAD,IAEA,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IAEnC,eAAC,KAAD,CACEzX,IAAK,CAAC,SACNlB,mBAAoBttB,KAGrBxc,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAG1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAWsX,EACXrX,WAAYuX,EAHd,SAKE,eAAC,GAAD,SAGHzH,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,IACXC,KAAG,OC1FE,SAASs+B,GAAT,GAcN,IAbP3yB,EAaM,EAbNA,SACAC,EAYM,EAZNA,OACAxoB,EAWM,EAXNA,YACAD,EAUM,EAVNA,gBACAkoB,EASM,EATNA,kBACAQ,EAQM,EARNA,sBAEA9nB,GAMM,EAPNw6C,gBAOM,EANNx6C,SACAy6C,EAKM,EALNA,cACAz3C,EAIM,EAJNA,MACAsW,EAGM,EAHNA,MACAloB,EAEM,EAFNA,MACAi2B,EACM,EADNA,MACM,EAC8B9kB,oBAAS,IADvC,oBACCwlB,EADD,KACaC,EADb,OAEoCzlB,oBAAS,IAF7C,oBAECm4C,EAFD,KAEgBC,EAFhB,OAIuBp4C,qBAAS,GAJhC,oBAICkE,EAJD,KAIOC,EAJP,OAK6BnE,qBAAS,GALtC,oBAKCq4C,EALD,KAKUC,EALV,KAON5yB,sBAAU,WAAO,IAAD,EACiCrS,GAAqB,CAClEhE,KAAMvS,EACNwW,KAAMzW,EACN4D,QACAhD,YAJMvK,EADM,EACNA,MAAOC,EADD,EACCA,IAAKqgB,EADN,EACMA,OAAQQ,EADd,EACcA,UAO5BqR,EAASnyB,GACToyB,EAAOnyB,GACPsyB,EAAcjS,GACd4kC,EAAiBpkC,KAChB,CAAClX,EAAaD,EAAiBY,IAElC,IAAMkoB,EAAc,WAClB,GAAwB,QAApB9oB,EAA2B,CAC7B,IAAM+oB,EAAW,IAAI7oB,KAAKD,GAC1B8oB,EAASlS,QAAQkS,EAAS7Y,UAAY,GACtCgY,EAAkBa,QACb,GAAwB,UAApB/oB,EAA6B,CACtC,IAAMgpB,EAAY,IAAI9oB,KAAKD,GAC3B+oB,EAAUnS,QAAQmS,EAAU9Y,UAAY,GACxCgY,EAAkBc,QACb,GAAwB,SAApBhpB,EAA4B,CACrC,IAAMipB,EAAW,IAAI/oB,KAAKD,GAC1BgpB,EAASpS,QAAQoS,EAAS/Y,UAAY,GACtCgY,EAAkBe,QACb,GAAwB,UAApBjpB,EAA6B,CACtC,IAAMkpB,EAAY,IAAIhpB,KAAKD,GAC3BipB,EAAUpR,SAASoR,EAAUlZ,WAAa,GAC1CkY,EAAkBgB,QACb,GAAwB,SAApBlpB,EAA4B,CACrC,IAAMmpB,EAAW,IAAIjpB,KAAKD,GAC1BkpB,EAASC,YAAYD,EAAS5iB,cAAgB,GAC9C2hB,EAAkBiB,KAGhBE,EAAe,WACnB,GAAwB,QAApBrpB,EAA2B,CAC7B,IAAMspB,EAAY,IAAIppB,KAAKD,GAC3BqpB,EAAUzS,QAAQyS,EAAUpZ,UAAY,GACxCgY,EAAkBoB,QACb,GAAwB,UAApBtpB,EAA6B,CACtC,IAAMupB,EAAY,IAAIrpB,KAAKD,GAC3BspB,EAAU1S,QAAQ0S,EAAUrZ,UAAY,GACxCgY,EAAkBqB,QACb,GAAwB,SAApBvpB,EAA4B,CACrC,IAAMwpB,EAAW,IAAItpB,KAAKD,GAC1BupB,EAAS3S,QAAQ2S,EAAStZ,UAAY,GACtCgY,EAAkBsB,QACb,GAAwB,UAApBxpB,EAA6B,CACtC,IAAMypB,EAAY,IAAIvpB,KAAKD,GAC3BwpB,EAAU3R,SAAS2R,EAAUzZ,WAAa,GAC1CkY,EAAkBuB,QACb,GAAwB,SAApBzpB,EAA4B,CACrC,IAAM0pB,EAAW,IAAIxpB,KAAKD,GAC1BypB,EAASN,YAAYM,EAASnjB,cAAgB,GAC9C2hB,EAAkBwB,KAIhBjI,EAAWkI,KAAO,IAAIzpB,MAAQ0pB,OAAO3pB,EAAa,OAExD,OACE,gBAACiG,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,aAChB3gB,YAAa,GACbD,WAAY,IANhB,UASE,eAACs1B,GAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,eAACrgB,GAAA,EAAD,CACEC,MAAO,CACL9T,UAAW,EACXmB,OAAQ,GACRX,MAAO,GACP5B,QAAS,EACTlB,OAAQ,EACRgB,WAAY,EACZ4B,gBAAiBmU,aACf3U,EAAMR,QAAQC,QAAQkX,KACtB8Y,EAAW,GAAM,KAGrB/xB,KAAK,QACL+xB,SAAUA,EACVxb,QAAS,WACPiiB,EAAkB,IAAIhoB,MACtBm7C,EAAc,IAAIn7C,OAjBtB,SAoBE,eAACmF,GAAA,EAAD,CACEW,MAAO,CACLoP,WAAY,OACZjkB,SAAU,GACVsJ,MAAOgnB,EAAW,OAASzvB,EAAMR,QAAQC,QAAQC,MAJrD,SAOGkS,EAAQ,2BAAS,YAKxB,eAACsC,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC,GAAD,CACE4N,gBAAiBA,EACjB8U,SAAU4T,EACVR,kBAAmBA,EACnBtkB,MAAOA,EACPsW,MAAOA,EACP+N,MAAOA,MAGX,gBAAC/hB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,iBAJpB,UAOuB,WAApBxR,GACC,gBAAC,KAAM2gB,SAAP,WACE,gBAACzE,GAAA,EAAD,CACEzhB,MAAM,UACNuL,MAAO,CAAE9T,UAAW,GACpB+T,QAASrC,EAAQklB,EAAcO,EAHjC,UAKGzlB,GACC,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,WAGhCmJ,GACA,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,aAIpC,gBAACyhB,GAAA,EAAD,CACEzhB,MAAM,UACNuL,MAAO,CAAE9T,UAAW,EAAGtB,WAAY,IACnCqV,QAASrC,EAAQylB,EAAeP,EAHlC,UAKGllB,GACC,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,WAGhCmJ,GACA,eAAC,KAAD,CACEoC,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,gBAMxC,eAACsL,GAAA,EAAD,CACEC,MAAO,CACLiP,SAAU,WACV4U,OAAQ,GACRr3B,gBAAiB,OACjBa,OAAQ,IAEV4S,QAAS,kBAAMqB,GAAQ,IAPzB,SASE,eAACjC,GAAA,EAAD,CAAY5K,MAAM,UAAUhK,QAAQ,SAApC,SACGk4B,MAGgB,WAApB3oB,GACC,eAAC+F,GAAA,EAAD,CACEC,MAAO,CACLiP,SAAU,WACV4U,OAAQ,GACRr3B,gBAAiB,OACjBa,OAAQ,GACRxC,YAAa,IAEfoV,QAAS,kBAAMw1C,GAAW,IAR5B,SAUE,eAACp2C,GAAA,EAAD,CAAY5K,MAAM,UAAUhK,QAAQ,SAApC,SACG6qD,MAIP,gBAAC,KAAD,CACExxB,OAAQlmB,EAAQmmB,KAAWC,KAC3BC,MAAOC,KAFT,UAIE,eAACC,GAAA,EAAD,CACEC,QAAM,EACN35B,QAAQ,SACR45B,aAAa,WACbC,OAAO,aACP16B,OAAO,QACP2I,GAAG,qBACH9C,MAAOwK,EACP6U,SAAUoT,EACV7gB,KAAMA,EAEN8X,QAAS,kBAAM7X,GAAQ,IACvBijB,eACE3mB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJ4mB,cACE5mB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJoC,MAAO,CACLhV,UAAW,MACXikB,SAAU,WACV8H,KAAMnZ,EACkB,WAApB5D,EACE,IACA,QACF8F,EACJqP,MAAOvR,OACHkC,EACoB,WAApB9F,EACA,IACA,GACJkV,OAAQ,GACR2U,QAAS,GACT33B,UAAW,EACXmB,OAAQ,EACRvC,QAAS,EACTlB,OAAQ,EACR8C,MAAO,KAGU,WAApBsN,GACC,eAACmqB,GAAA,EAAD,CACEC,QAAM,EACN35B,QAAQ,SACR45B,aAAa,WACbC,OAAO,aACP16B,OAAO,QACP2I,GAAG,qBACH9C,MAAOmL,EACPkU,SAAUumC,EACVh0C,KAAMm0C,EACNr8B,QAAS,kBAAMs8B,GAAW,IAC1B1wB,QAAS9qB,EACTsqB,eACE3mB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJ4mB,cACE5mB,EACE,eAAC,KAAD,IAEA,eAAC,KAAD,IAGJoC,MAAO,CACLhV,UAAW,MACXikB,SAAU,WACV8H,KAAMnZ,EAAQ,QAAKkC,EACnBqP,MAAOvR,OAAQkC,EAAY,GAC3BoP,OAAQ,GACR2U,QAAS,GACT33B,UAAW,EACXmB,OAAQ,EACRvC,QAAS,EACTlB,OAAQ,EACR8C,MAAO,cCpRR,SAASgpD,GAAT,GAUX,IATF93C,EASC,EATDA,MACAsW,EAQC,EARDA,MACAjT,EAOC,EAPDA,SACAjP,EAMC,EANDA,SACAhG,EAKC,EALDA,MACAi9B,EAIC,EAJDA,UACAC,EAGC,EAHDA,YACA+W,EAEC,EAFDA,QACAD,EACC,EADDA,iBAEMtmB,EAAMzF,GAAW,CAAErW,QAAOsW,UAD/B,EAGiB/W,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOyL,EAAM1H,MAC7B,CAAEhd,KAAM,QAASiZ,MAAOyL,EAAMC,IAC9BuF,EAAI1E,QACJ,CAAExlB,KAAMoO,EAAQ,iBAAmB,eAAgB6K,MAAOyL,EAAM/D,UAChE,CAAE3gB,KAAM,gBAAiBiZ,MAAOyL,EAAMqI,aACtC,CAAE/sB,KAAM,QAASiZ,MAAOyL,EAAM5F,OAC9B,CAAE9e,KAAM,WAAYiZ,MAAOyL,EAAM3F,UACjC,CAAE/e,KAAM,SAAUiZ,MAAOyL,EAAMlG,UAR1BuuB,EAHN,uBAcuBp/B,oBAAS,IAdhC,oBAcMogB,EAdN,KAcYsuB,EAdZ,OAe6B1uC,qBAAS,GAftC,oBAeM+iC,EAfN,KAeeC,EAff,OAgByBhjC,oBAAc,MAhBvC,oBAgBM9M,EAhBN,KAgBamyB,EAhBb,OAiBqBrlB,oBAAc,MAjBnC,oBAiBM7M,EAjBN,KAiBWmyB,EAjBX,KAmBOnT,EAAUw8B,KAAVx8B,MAnBP,EAwBG5R,sBAAWrB,IAxBd,IAsBC1L,MAASsJ,EAtBV,EAsBUA,YAAaD,EAtBvB,EAsBuBA,gBAAiBY,EAtBxC,EAsBwCA,QAASL,EAtBjD,EAsBiDA,KAChDoD,EAvBD,EAuBCA,SAvBD,EAqCmC8rB,aAAa8f,GAAa,CAC5D3S,YAAa,sBAtCd,oBAqCM+e,EArCN,KAqCoBC,EArCpB,KAyCKtM,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOwf,GACPnrC,UAAW,CACT/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,IAG/C,CACEiqB,MAAOmB,IAET,CACEnB,MAAO4M,MAKb9T,sBAAU,WACR,IAAMzkB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,GAE7C61C,EAAa,CACXv3C,gBAED,CAAC/N,EAAOC,IAnEV,MAqEoBwN,aAAY0rC,GAAeF,GAAzCpZ,EArEN,uBAsEqBpyB,aAAY+3C,GAAevM,GAA1CwM,EAtEN,uBAuEuBh4C,aAAYi4C,GAAezM,GAA5C0M,EAvEN,qBAyEKvZ,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpB0jC,EAAc,CAAE53C,UAAW,CAAEyK,UAHX,2CAAH,sDAOnBga,sBAAU,WAAO,IAAD,IAId,IAHA,OAAI+yB,QAAJ,IAAIA,OAAJ,EAAIA,EAAQ1V,UACVC,GAAW,GAEb,OAAIyV,QAAJ,IAAIA,GAAJ,UAAIA,EAAQt7C,YAAZ,iBAAI,EAAcivC,mBAAlB,aAAI,EAA2BjvC,KAAM,CAAC,IAC5BA,EAASs7C,EAAOt7C,KAAKivC,YAArBjvC,KACRuxC,EAAQvxC,GACR6lC,GAAW,MAEZ,CAACyV,IAUJ,OACE,eAACrrB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAfY,WACR,OAANorB,QAAM,IAANA,KAAQtrB,WAQR,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBApFkB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAoFtCzyC,gBAAiBA,EACjB0oB,sBAzFsB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAyFnDmL,QAASA,EACTy6C,cApFc,SAAC5I,GACrB9uC,EAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAoFlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAAC,KAAD,CAAMuxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GA9B1Bx4C,EAAS,CAAE9M,KAAM,UAAWC,QA8B2BqlD,OAEjD,eAAC,KAAD,CAAcvZ,gBAAiBH,IAC/B,eAAC,KAAD,IAEA,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IAEnC,eAAC,KAAD,CACEzX,IAAK,CAAC,QACNlB,mBAAoBzuB,KAEtB,eAAC,KAAD,CACE2vB,IAAK,CAAC,UACNlB,mBAAoBztB,KAEtB,eAAC,KAAD,CACE2uB,IAAK,CAAC,QAAS,YACflB,mBAAoBttB,KAGrBxc,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAItB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAG1C,eAAC,GAAD,CAAc40B,UAAW8R,EAAY7R,WAAYy3B,EAAjD,SACE,eAAC,GAAD,CACE7sB,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTD,iBAAkBA,EAClB1wB,MAAOA,SAIZ4wB,GAAW,eAAC,GAAD,CAAStiC,MAAOA,SC/NrB,kBAAO,IAAD,MACa6rB,aAAa2sB,IAD1B,oBACZC,EADY,KACHC,EADG,OAGEx4C,aAAYy4C,GAAe,CAC9CzsB,eAAgB,CAAC,CAAEC,MAAOqsB,OADrBI,EAHY,uBAMG14C,aAAY24C,GAAe,CAC/C3sB,eAAgB,CAAC,CAAEC,MAAOqsB,OADrBM,EANY,uBASK54C,aAAY64C,GAAe,CACjD7sB,eAAgB,CAAC,CAAEC,MAAOqsB,OADrBQ,EATY,qBAanB/zB,sBAAU,WACRwzB,MACC,CAACA,IAEJ,IAAMjwC,GAAkB,OAAPkwC,QAAO,IAAPA,GAAA,UAAAA,EAASh8C,YAAT,qDAAgCA,OAAQ,GACnDu8C,GACI,OAARzwC,QAAQ,IAARA,OAAA,EAAAA,EAAU9C,QAAS,EACf8C,EAASvC,QAAO,SAACrS,GAAD,MACd,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAIwX,SAASxX,EAAIiT,eAE3C,GACNoyC,EAAQt8C,MAAK,SAAC4D,EAAQ4jC,GAAT,OAAoB5jC,EAAEmI,KAAOy7B,EAAEz7B,QAG5C,MAAO,CACLF,WACAywC,UACAC,eALqB,yBAAMR,QAAN,IAAMA,OAAN,EAAMA,EAAShsB,WAMpCksB,aACAE,cACAE,kBCnBS5iC,GAAW,SAAC5H,GAAD,OAAuBA,EAAIvD,KAEpC,SAASkuC,GAAT,GAA6C,IAAzBn5C,EAAwB,EAAxBA,MAAOwI,EAAiB,EAAjBA,SAAiB,EACjCjJ,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADN,oBAClDquB,EADkD,KAC5C5W,EAD4C,OAGvCpa,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAO7K,EAAQ,0DAAe,QACjE,CAAEpO,KAAM,OAAQiZ,MAAO7K,EAAQ,0DAAe,QAC9C,CACEpO,KAAMoO,EAAQ,WAAa,SAC3B6K,MAAO7K,EAAQ,kFAAmB,gBAEpC,CACEpO,KAAM,aACNiZ,MAAO7K,EAAQ,kFAAmB,kBAT/B2+B,EAHkD,uBAeNya,KAA3CR,EAfiD,EAejDA,WAAYE,EAfqC,EAerCA,YAAaE,EAfwB,EAexBA,cACzBl6B,EAAa2oB,KAAb3oB,SAEF+f,EAAa,yCAAG,8CAAAt+B,EAAA,2DAASmU,EAAT,EAASA,SAAT,oBAEZzJ,EAAMyJ,EAAQ,KACdrC,EAHY,UAGF7J,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAIqX,MAAQA,YAHxC,aAGF,EAAiD,OACtD,OAAIoH,QAAJ,IAAIA,OAAJ,EAAIA,EAAS01B,SAJN,iCAKEiR,EAAc,CAAEx4C,UAAW,CAAEyK,SAL/B,WAMqB,KAA9B,QADDF,EALU,cAMT,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAWq8C,qBAAX,eAA0Br4C,IANd,6BAOVqK,QAPU,IAOVA,GAPU,UAOVA,EAAKrO,YAPK,iBAOV,EAAWq8C,qBAPD,aAOV,EAA0Bv5C,MAAM4L,SAAS,YAP/B,kCAQN8O,GAAiBP,EAAS3Z,GARpB,iDAUN+Z,GAAWJ,EAAS3Z,GAVd,iDAcVia,GAAkBN,EAAS3Z,GAdjB,4CAAH,sDAyBnB,OACE,gBAACujB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAMnX,EAAUm2B,QAASA,EAASvoB,SAAUA,GAAlD,UACE,eAAC,KAAD,CACEiiC,eAAgB,CACd,CAAEz7C,WAAY,SAAUxP,UAAW,OACnC,CAAEwP,WAAY,OAAQxP,UAAW,UAGrC,eAAC,KAAD,IAEA,eAAC,KAAD,CAAc4xC,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,UACNlB,mBAhCgB,SAAC,GAAe,IAAbrsC,EAAY,EAAZA,MACnBmC,EAAS8qB,EAAS7Y,QAAO,SAACozC,GAAD,OAAaA,EAAGt9B,WAAalqB,KAAO,GAC7DD,EAAOoO,EAAQ,SAAW,OAChC,OAAO,+BAAMhM,EAASA,EAAOpC,GAAQ,QAgCjC,eAAC,KAAD,CACEmlD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAEpB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CAAc40B,UAAWo4B,EAAYn4B,WAAYq4B,EAAjD,SACE,eAAC,GAAD,CAActwC,SAAUA,SAG3B+nB,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,IACXC,KAAG,OCpHb,IA6CeqgC,GA7Ca,SAAC,GAA8C,IAA5CxZ,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUmD,EAA0B,EAA1BA,aAAc5sB,EAAY,EAAZA,MAK5D,OACE,gBAACslB,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACH3c,MAAOiuC,EACP5uB,SAVa,SAAChQ,GAChB6+B,EAAS7+B,EAAE05B,OAAO/oC,OAClBqxC,EAAa,OAGb,UAOE,eAAC5gC,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACywB,GAAA,EAAD,CACErtB,MAAM,UACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAOyU,EAAM6e,gBAGjB,eAAC7yB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACywB,GAAA,EAAD,CACErtB,MAAM,cACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAOyU,EAAM+e,gBAGjB,eAAC/yB,GAAA,EAAD,CAAK9T,QAAQ,OAAO4T,MAAO,CAAE3T,cAAe,OAA5C,SACE,eAACywB,GAAA,EAAD,CACErtB,MAAM,aACNstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAOyU,EAAM8e,mBCyURmkB,GArVM,SAAC,GAQV,IAPV91C,EAOS,EAPTA,KACA8X,EAMS,EANTA,QACA/M,EAKS,EALTA,IACA4R,EAIS,EAJTA,MACAI,EAGS,EAHTA,UACAC,EAES,EAFTA,WACAryB,EACS,EADTA,MACS,EACemR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAE+BnW,KAAMjE,SAAS,IAAIjD,MAFlD,oBAEFkmC,EAFE,KAEYC,EAFZ,OAGiBj/B,KAAMjE,SAAS,WAHhC,oBAGFugC,EAHE,KAGKC,EAHL,OAI6Bv8B,KAAMjE,SAAS,IAJ5C,oBAIFi6C,EAJE,KAIWC,EAJX,OAK+Bj2C,KAAMjE,SAAS,IAL9C,oBAKFm6C,EALE,KAKYC,EALZ,OAO4Bn2C,KAAMjE,SAAS,MAP3C,oBAOF4lC,EAPE,KAOQyU,EAPR,OAQ8Bp2C,KAAMjE,SAAS,MAR7C,oBAQFkT,EARE,KAQSonC,EART,OAUyBt6C,oBAAc,MAVvC,oBAUFlC,EAVE,KAUS6lC,EAVT,OAYyCxjC,aAChD5J,EAAIqlB,iBADExb,EAZC,EAYDA,SAAUC,EAZT,EAYSA,aAAcC,EAZvB,EAYuBA,OAAQwxB,EAZ/B,EAY+BA,MAZ/B,EAmBUvxB,sBAAWtB,IAnBrB,IAiBPyB,UAAaqW,EAjBN,EAiBMA,MAAOtW,EAjBb,EAiBaA,MACX1N,EAlBF,EAkBPhC,MAASgC,KAGHkW,EAAa4wC,KAAb5wC,SACAqwB,EAAc8K,KAAd9K,UAER5T,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB,IAAM6uC,EAAKtrC,EAAIiE,UACTzG,EAAKwC,EAAI22B,SACT4U,EAAKvrC,EAAI0I,OACf,GAAW,KAAP6iC,EAAW,CACbha,EAAS,WACT,IAAMia,EAAiBxxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CylD,EAAeO,GACfL,EAAgBK,GAElB,GAAW,KAAPD,EAAW,CACbha,EAAS,eACT,IAAMia,EAAiBxxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAERylD,EAAeO,GACf,IAAMC,EAAiBzxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3C2lD,EAAgBM,GAElB,GAAW,KAAPF,EAAW,CACbha,EAAS,cACT,IAAMia,EAAiBxxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAER2lD,EAAgBK,GAChB,IAAMC,EAAiBzxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CylD,EAAeQ,GAEjB,GAAW,KAAPF,EAAW,CACbha,EAAS,eACT,IAAMia,EAAiBxxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAER2lD,EAAgBK,GAChB,IAAMC,EAAiBzxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CylD,EAAeQ,GAGjB,GAAIH,EAAI,CACN,IAAM5nC,EAAS1J,EAASvC,QACtB,SAACrS,GAAD,OAAcA,EAAI8U,OAASoxC,GAAqB,YAAflmD,EAAII,UACrC,GACF6lD,EAAa3nC,GAEf,GAAIlG,EAAI,CACN,IAAMmG,EAAQ3J,EAASvC,QACrB,SAACrS,GAAD,OAAcA,EAAI8U,OAASsD,GAAqB,YAAfpY,EAAII,UACrC,GACF4lD,EAAYznC,GAEd,IAAMK,EAAU,OAAGhE,QAAH,IAAGA,OAAH,EAAGA,EAAKgE,WACxB,GAAIA,EAAY,CACd,IAAMgyB,EAAO3L,EAAU5yB,QAAO,SAAC+2B,GAAD,OAAaA,EAAG/xB,MAAQuH,KAAY,GAClE0wB,EAAasB,QAEV,CACL,GAAc,YAAV1E,EAAqB,CACvB,IAAMka,EAAiBxxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CylD,EAAeO,GACfL,EAAgBK,GAChBH,EAAY,OAACG,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC9BJ,EAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAiB,IAE/B,GAAc,gBAAVla,EAAyB,CAC3B,IAAMka,EAAiBxxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAERylD,EAAeO,GACf,IAAMC,EAAiBzxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3C2lD,EAAgBM,GAChBJ,EAAY,OAACI,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC9BL,EAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAiB,IAE/B,GAAc,eAAVla,EAAwB,CAC1B,IAAMka,EAAiBxxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAER2lD,EAAgBK,GAChB,IAAMC,EAAiBzxC,EAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CylD,EAAeQ,GACfL,EAAW,OAACK,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC7BJ,EAAY,OAACG,QAAD,IAACA,OAAD,EAACA,EAAiB,QAGjC,CAACxrC,EAAKsxB,EAAOr8B,IAEhB,IAUMpD,EAAQ,yCAAG,WAAO3D,GAAP,4BAAA6D,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8uB,EAAe/uB,GAAe+uB,EAAe9uB,GAFlC,gCAGPyG,GACJR,EACA3Z,EAAQ,+FAAsB,yBALnB,2CASPoQ,EAAiB1T,EAAjB0T,OAAQkT,EAAS5mB,EAAT4mB,KACX6hB,GAAa1yB,EAVH,iCAWP0H,GACJR,EACA3Z,EAAQ,wHAA2B,oCAbxB,4CAiBXmlC,IAAa1yB,EAjBF,kCAkBP0H,GACJR,EACA3Z,EAAQ,iJAAgC,iCApB7B,0CAyBTuS,EAAW,CACfC,WAAU,OAAEnV,QAAF,IAAEA,OAAF,EAAEA,EAAW4N,IACvB0H,aAAY,OAAEtV,QAAF,IAAEA,OAAF,EAAEA,EAAWzL,KACzB8gB,eAAc,OAAErV,QAAF,IAAEA,OAAF,EAAEA,EAAWjI,OAC3B8f,cAAa,OAAE7X,QAAF,IAAEA,OAAF,EAAEA,EAAWrG,OAGtBwJ,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCgV,OA3CY,YAAV4oB,EACKloC,GAAegB,QACH,eAAVknC,EACFloC,GAAekB,aACH,gBAAVgnC,EACFloC,GAAeiB,eADjB,EAwCL+V,KAAM4zB,EACN2C,SAAUA,EAASz8B,KACnB+J,UAAWA,EAAU/J,KACrB6J,SAAUlV,EAAYkV,OAAWrQ,EACjCkO,SACAkT,OACAtvB,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,KAGfumB,GADepR,EAAQI,EAAYC,EACrBjgB,GA7CC,4CAAH,sDAgDRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,uBAGJqZ,GAAaF,EAAS3Z,GAHlB,OAIV06B,KAJU,gDAMV7I,GAAQ,EAAD,IANG,yDAAH,wDAULA,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZ26B,KACA3kB,QAAQC,IAAIzW,GANA,2CAAH,sDAUPm7B,GAAW,WACftJ,IACA0O,EAAS,WACT8Z,EAAa,MACbD,EAAY,MACZH,EAAe,IACfE,EAAgB,KAEZjf,GAAa,WACjBC,KACApf,KAWF,OACE,eAAC+U,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASmf,GACT7vB,MAAOyL,EAAM4e,QACb70B,SAVmB,WACrBT,EAAaS,EAAbT,IAUExR,MAAOA,EACPmiC,KAAMA,EACNhuB,GAAI,GARN,SAUE,gBAACkhB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,gBAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAAC,GAAD,CACE1jB,MAAOA,EACP6B,MAAOyU,EAAM1H,KACb/c,MAAO2wC,EACPtxB,SA5BW,SAACoC,GACxBmvB,EAAgBnvB,MA8BN,eAAChR,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,SAE9B,gBAACkH,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAAC,GAAD,CACEoc,MAAOA,EACPC,SAAUA,EACVmD,aAAcA,EACd5sB,MAAOA,IAET,eAAChU,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,SAE9B,eAACkH,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,YACLiZ,MAAOyL,EAAM2e,KACb3e,MAAOA,EACP2G,QAASy8B,EACT7nD,MAAO4gB,EACPyK,eAAgB28B,EAChBl6C,SAAUA,EACVK,MAAOA,EACPk6C,WAAS,MAGb,eAACz2B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,EAAM1R,GACb0R,MAAOA,EACP2G,QAASu8B,EACT3nD,MAAOszC,EACPjoB,eAAgB08B,EAChBj6C,SAAUA,EACVK,MAAOA,EACPk6C,WAAS,MAGb,gBAACz2B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAACphB,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,MAE5B,eAACkL,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,EAAMlG,OACbzQ,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLvb,KAAK,SACL+O,WAAS,IAEX,eAACylB,GAAD,CACE71B,KAAK,OACLqgC,WAAS,EACTtS,KAAM,EACN9d,MAAOyU,EAAM0b,YACbryB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,YAKjB,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UC1TR,SAASy2B,GAAT,GAA+D,IAA5Cn6C,EAA2C,EAA3CA,MAAOsW,EAAoC,EAApCA,MAAOjT,EAA6B,EAA7BA,SAAUjP,EAAmB,EAAnBA,SAAUhG,EAAS,EAATA,MAAS,EACzDmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOyL,EAAM1H,MAC7B,CAAEhd,KAAM,WAAYiZ,MAAOyL,EAAM1R,IACjC,CAAEhT,KAAM,YAAaiZ,MAAOyL,EAAM2e,MAClC,CAAErjC,KAAM,SAAUiZ,MAAOyL,EAAMrjB,MAC/B,CAAErB,KAAM,OAAQiZ,MAAOyL,EAAM0b,aAC7B,CAAEpgC,KAAM,QAASiZ,MAAOyL,EAAMC,IAC9B,CAAE3kB,KAAM,SAAUiZ,MAAOyL,EAAMlG,UAP1BuuB,EADoE,uBAWnDp/B,oBAAS,IAX0C,oBAWpEogB,EAXoE,KAW9DsuB,EAX8D,OAY7C1uC,qBAAS,GAZoC,oBAYpE+iC,EAZoE,KAY3DC,EAZ2D,OAcjDhjC,oBAAc,MAdmC,oBAcpE9M,EAdoE,KAc7DmyB,EAd6D,OAerDrlB,oBAAc,MAfuC,oBAepE7M,EAfoE,KAe/DmyB,EAf+D,OAoBvE/kB,sBAAW5C,IApB4D,IAkBzEnK,MAASsJ,EAlBgE,EAkBhEA,YAAaD,EAlBmD,EAkBnDA,gBAAiBY,EAlBkC,EAkBlCA,QAASL,EAlByB,EAkBzBA,KAChDoD,EAnByE,EAmBzEA,SAnByE,EAiClC8rB,aAAauuB,GAAa,CACjEphB,YAAa,sBAlC4D,oBAiCpEqhB,EAjCoE,KAiCtDC,EAjCsD,KAoCnE9xC,EAAa4wC,KAAb5wC,SACFkjC,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOiuB,GACP55C,UAAW,CACT/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,IAG/C,CACEiqB,MAAOmB,IAET,CACEnB,MAAO4M,MAKb9T,sBAAU,WACR,IAAMzkB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,GAE7Cm4C,EAAa,CACX75C,gBAED,CAAC/N,EAAOC,IA/DgE,MAiEtDwN,aAAYq6C,GAAe7O,GAAzC8O,EAjEoE,uBAkErDt6C,aAAYu6C,GAAe/O,GAA1CgP,EAlEoE,uBAmEnDx6C,aAAYy6C,GAAejP,GAA5CkP,EAnEoE,qBAqErE/b,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpBkmC,EAAc,CAAEp6C,UAAW,CAAEyK,UAHX,2CAAH,sDAOnBga,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIq1B,QAAJ,IAAIA,OAAJ,EAAIA,EAAahY,UACfC,GAAW,GAEb,OAAI+X,QAAJ,IAAIA,GAAJ,UAAIA,EAAa59C,YAAjB,iBAAI,EAAmB09C,mBAAvB,aAAI,EAAgC19C,KAAM,CAAC,IACjCA,EAAS49C,EAAY59C,KAAK09C,YAA1B19C,KACRuxC,EAAQvxC,GACR6lC,GAAW,MAEZ,CAAC+X,IAUJ,OACE,eAAC3tB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAfY,WACH,OAAX0tB,QAAW,IAAXA,KAAa5tB,WAQb,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBApFkB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAoFtCzyC,gBAAiBA,EACjB0oB,sBAzFsB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAyFnDmL,QAASA,EACTy6C,cApFc,SAAC5I,GACrB9uC,EAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAoFlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAAC,KAAD,CAAMuxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GA9B1Bx4C,EAAS,CAAE9M,KAAM,UAAWC,QA8B2BqlD,OAEjD,eAAC,KAAD,CAAcvZ,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,QACNlB,mBAAoBzuB,KAEtB,eAAC,KAAD,CACE2vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,UACNlB,mBAAoBnsB,KAEtB,eAAC,KAAD,CACEqtB,IAAK,CAAC,QAAS,SACflB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,aACNlB,mBAAoB,SAACtyC,GAAD,OAClB0mB,GAAyB1mB,EAAO4c,EAAUxI,MAG9C,eAAC,KAAD,CACEo/B,IAAK,CAAC,YACNlB,mBAAoB,SAACtyC,GAAD,OAClBwmB,GAAiBxmB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAWg6B,EACX/5B,WAAYi6B,EAHd,SAKE,eAAC,GAAD,SAGHpY,GAAW,eAAC,GAAD,CAAStiC,MAAOA,SClOrB,ICiCFkiC,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cA8rBS4uC,GAzrBU,SAAC,GAcd,IAbVp3C,EAaS,EAbTA,KACA8X,EAYS,EAZTA,QACA/M,EAWS,EAXTA,IACA4R,EAUS,EAVTA,MACAI,EASS,EATTA,UACAC,EAQS,EARTA,WACA4K,EAOS,EAPTA,UACAC,EAMS,EANTA,YACA8W,EAKS,EALTA,iBACA1wB,EAIS,EAJTA,MACAtjB,EAGS,EAHTA,MACAi0C,EAES,EAFTA,QACAjuC,EACS,EADTA,SAEMkL,EAAUvP,KADP,EAGqBwP,qBAAS,GAH9B,oBAGF+iC,EAHE,KAGOC,EAHP,OAK8BhjC,oBAAS,MALvC,oBAKFkM,EALE,KAKSg/B,EALT,OAM0BlrC,oBAAS,MANnC,oBAMFvC,EANE,KAMO0tC,EANP,OAQ6BnrC,oBAAc,MAR3C,oBAQFhD,EARE,KAQW29B,EARX,OAS6B36B,qBAAc,GAT3C,oBASFw7B,EATE,KASWC,EATX,KAUHC,EAAiBz3B,KAAM+2B,SAVpB,EAYyBh7B,oBAAc,MAZvC,oBAYF/C,EAZE,KAYSmhB,EAZT,OAayBpe,qBAAc,GAbvC,oBAaF27B,EAbE,KAaSC,EAbT,KAcHb,EAAe92B,KAAM+2B,SAdlB,EAgByBh7B,oBAAc,MAhBvC,oBAgBFlC,EAhBE,KAgBS6lC,EAhBT,OAiBuB3jC,qBAAS,GAjBhC,oBAiBF6jC,EAjBE,KAiBQC,EAjBR,OAkBqB9jC,oBAAS,IAlB9B,qBAkBFoc,GAlBE,MAkBO2nB,GAlBP,SAoBwB/jC,oBAAS,MApBjC,sBAoBF9C,GApBE,MAoBM0rC,GApBN,SAsBmB5oC,oBAAc,IAtBjC,sBAsBFyjC,GAtBE,MAsBMC,GAtBN,SAuByB1jC,oBAAc,IAvBvC,sBAuBFqjC,GAvBE,MAuBSC,GAvBT,SAwByBtjC,oBAAc,MAxBvC,sBAwBFoxB,GAxBE,MAwBSwS,GAxBT,SA0B6B5jC,qBAAS,GA1BtC,sBA0BFu7C,GA1BE,MA0BWC,GA1BX,SA4Bex7C,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IA5BtD,sBA4BFquB,GA5BE,MA4BI5W,GA5BJ,SA8B2Bpa,qBAAS,GA9BpC,sBA8BForC,GA9BE,MA8BUC,GA9BV,SA+B6BrrC,oBAAS,IA/BtC,sBA+BFgM,GA/BE,MA+BWs/B,GA/BX,SAgCuBtrC,oBAAS,MAhChC,sBAgCF+oC,GAhCE,MAgCQwC,GAhCR,SAiC8BvrC,oBAAS,MAjCvC,sBAiCFy7C,GAjCE,MAiCSC,GAjCT,SAmCwCtX,KAAzC9K,GAnCC,GAmCDA,UAAWL,GAnCV,GAmCUA,YAAaE,GAnCvB,GAmCuBA,aAnCvB,GAqC0Bh5B,aAAQ,IAAnCC,GArCC,GAqCDA,SAAUC,GArCT,GAqCSA,aArCT,GAyCUE,sBAAWtB,IAzCrB,MAuCPyB,UAAaqW,GAvCN,GAuCMA,MAAOtW,GAvCb,GAuCaA,MACX1N,GAxCF,GAwCPhC,MAASgC,KAxCF,GA2C0Bu5B,aAAa0X,GAAmB,CACjEvK,YAAa,sBA5CN,sBA2CFwK,GA3CE,MA2CQC,GA3CR,SA+C+B5X,aAAakf,GAAY,CAC/D/R,YAAa,sBAhDN,sBA+CFgS,GA/CE,MA+CWC,GA/CX,MAmDThmB,sBAAU,WAAO,IAAD,QACRpQ,GAAiB,OAAT4uB,SAAS,IAATA,IAAA,UAAAA,GAAW/mC,YAAX,2DAAwCA,OAAQ,GACxDmQ,GAAqB,OAAXo+B,SAAW,IAAXA,IAAA,UAAAA,GAAavuC,YAAb,oDAAmCA,OAAQ,GAE3D,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMk+B,EAAM/uB,EAAMpQ,KAAI,SAACu4B,GAAD,OAAaA,EAAG6G,UAChCC,EAAW1B,EAAiBn8B,QAAO,SAAC89B,GAAD,OACvCH,EAAIx4B,SAAS24B,EAAI94B,QAGb+4B,EAAiBnvB,EAAMpQ,KAAI,SAACvB,EAAW+I,GAAgB,IAEzDg4B,EAWE/gC,EAXF+gC,WACAznB,EAUEtZ,EAVFsZ,aACAC,EASEvZ,EATFuZ,eACAtH,EAQEjS,EARFiS,aACAC,EAOElS,EAPFkS,eACAC,EAMEnS,EANFmS,iBACAC,EAKEpS,EALFoS,gBACAC,EAIErS,EAJFqS,WACAC,EAGEtS,EAHFsS,aACAC,EAEEvS,EAFFuS,eACAC,EACExS,EADFwS,cAEImoB,EAAOiG,EAAS79B,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ/H,EAAK2gC,UAAQ,GAClE,OAAO,6BACFhG,GADL,IAEEoG,aACAznB,eACAC,iBACAtH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAzJ,QACA0wB,UAAWz5B,EAAKghC,UAChBzH,QAASv5B,EAAKxL,IACd6lC,UAAWr6B,EAAKwN,MAChB8sB,cAAet6B,EAAKxL,IAAMmmC,EAAKnK,UAGnCsQ,EAAernC,MAAK,SAAC4D,EAAQ4jC,GAAT,OAClB5jC,EAAE6jC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO7jC,EAAE6jC,MAAQ,EAAI,KAE/CvB,GAAamB,GAEb,IAAM6B,EAAgB3D,GAAar1B,GACnCg+B,GAAehF,GACftD,GAAW,MAEZ,CAACkB,GAAWwH,KAEfhmB,sBAAU,WACR,GAAI7E,EAAO,CAAC,IAAD,EACH3tB,EAAQ,IAAI6J,KACZ5J,EAAM,IAAI4J,KAChB7J,EAAMyoD,WAAW,GACjBxoD,EAAIogB,SAASpgB,EAAIgZ,WAAa,GAC9BhZ,EAAIwoD,WAAW,GACfzQ,EAAah4C,GACbi4C,EAAWh4C,GACXy1C,GAAS,UAACptC,GAAYkL,QAAO,SAAC8J,GAAD,OAAuB,IAAVA,EAAGpb,aAApC,aAAC,EAA+C,OAE1D,CAAC8O,IAEJwhB,sBAAU,WACRqf,OACC,CAAC1B,KAEJ3d,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClBs3B,GAAW,GACXiB,GAAS,CAAEhjC,UAAW,CAAE+jC,KAAM/1B,EAAIvD,OAClC+/B,GAAY,CAAExqC,UAAW,CAAE0qC,QAAS18B,EAAI7Z,MAExC,IAAM8mC,EAAQjtB,EAAI2G,aACZumB,EAAQltB,EAAI+G,WACZ4lC,EAAS3sC,EAAIgE,WACb4oC,EAAS5sC,EAAI/R,OACb8a,EAAS/I,EAAI+I,OAMnB,GALA0jC,GAAY,OAACzsC,QAAD,IAACA,OAAD,EAACA,EAAK3D,OAElB4/B,EAAY,OAACj8B,QAAD,IAACA,OAAD,EAACA,EAAK/C,WAClBi/B,EAAU,OAACl8B,QAAD,IAACA,OAAD,EAACA,EAAKxR,SAEZy+B,EAAO,CACT,IAAMjB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQwwB,KAAO,GACnEvB,EAAeM,GAEjB,GAAIjjB,EAAQ,CACV,IAAM5F,EAAMD,EAAMzL,QAAO,SAACw+B,GAAD,OAAaA,EAAG9vC,KAAO4iB,KAAQ,GACxD4rB,GAAaxxB,GAEf,GAAI+pB,EAAO,CACT,IAAMC,EAAOtQ,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQywB,KAAO,GAC/D/d,EAAage,GAEf,GAAIwf,EAAQ,CACV,IAAM3W,EAAO3L,GAAU5yB,QAAO,SAACo1C,GAAD,OAAaA,EAAGpwC,MAAQkwC,KAAQ,GAC9DjY,EAAasB,GAEf,GAAI4W,EAAQ,CACV,IAAME,EAAOvgD,GAAYkL,QAAO,SAAC8J,GAAD,OAAaA,EAAGpb,KAAOymD,KAAQ,GAC/DjT,GAAUmT,OAGb,CAAC9sC,IAEJ,IA8CM81B,GAAkB,WACtB,IACMK,EADW/B,GAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMrH,aAChCsH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAEvDwkC,EADanC,GAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMpH,iBAC5BqH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAWnE0iC,GARa,CACX+B,SAHaL,EAIbM,aAAcF,EACdG,WAAYH,EACZr0B,MAAOi0B,EACPv0B,OAPau0B,EAQbvQ,OAPauQ,EAAMI,KAuCjB1kC,GAAQ,yCAAG,mCAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YAEnBjI,EAAYgI,GACZhI,EAAYiI,GACZ1W,EAAUyW,GACVzW,EAAU0W,GANG,gCAQPyG,GACJR,GACA3Z,GAAQ,+FAAsB,yBAVnB,6CAcXyL,EAAYzO,GAdD,gCAePmd,GACJR,GACA3Z,GAAQ,+FAAsB,yBAjBnB,2CAqBX,IAAI1D,KAAKmP,GAAWa,YAAc,IAAIhQ,KAAKU,GAASsP,UArBzC,kCAsBP6N,GACJR,GACA3Z,GAAQ,+FAAsB,yBAxBnB,6CA6BV4iC,IAAkC,IAArBA,GAAUl9B,OA7Bb,kCA8BPyU,GACJR,GACA3Z,GAAK,uTAhCM,0CAuCTQ,EAAiB,CACrB7L,GAAI6Z,GAAOA,EAAI7Z,GAAK6Z,EAAI7Z,QAAKuN,EAC7B2I,MAAOmwC,GACPvvC,YACAzO,UACAoT,OAAQ4yB,GAAO5yB,OACf3T,OAAQA,GAASA,GAAO9H,GAAK,EAC7BkgB,MAAOtkB,KAAKyB,UAAU4wC,IACtB/1B,QAAStc,KAAKyB,UAAUuZ,IACxBgM,OAAQoZ,GAAYA,GAAUh8B,QAAKuN,EACnCqQ,SAAUlV,EACN,CACEmV,WAAYnV,EAAU4N,IACtB0H,aAActV,EAAUzL,KACxB8gB,eAAgBrV,EAAUjI,OAC1B8f,cAAe7X,EAAUrG,OAE3B,CACEwb,gBAAYtQ,EACZyQ,kBAAczQ,EACdwQ,oBAAgBxQ,EAChBgT,mBAAehT,GAGrB4S,WAAYvY,EACR,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEvB6S,SAAUvY,EACN,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,MACzB8e,cAAenZ,EAAUxF,OAE3B,CACEue,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,EACfyT,mBAAezT,IAIvBsvB,GADepR,EAAQI,EAAYC,EACrBjgB,GA7FC,4CAAH,qDAgGRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,OAGVoxB,KAHU,gDAKVC,GAAQ,EAAD,IACP7b,QAAQC,IAAR,MANU,yDAAH,wDAUL4b,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,GAAS3Z,IAFlB,6CAIN+Z,GAAWJ,GAAS3Z,IAJd,OAKZgW,QAAQC,IAAIzW,GALA,2CAAH,sDASPoyB,GAAc,WAjIlB6Y,EAAa,MACbC,EAAW,MACXxH,EAAa,MACbhJ,EAAe,MACfvc,EAAa,MACbwqB,GAAU,MACVhF,GAAa,MACbN,GAAa,IACbI,GAAU,IACV4H,GAAe,IACfC,GAAY,MACZmQ,GAAa,MAwHb1/B,KAOIjI,IAAU,OAAH9E,QAAG,IAAHA,OAAA,EAAAA,EAAK/C,WAAY,IAAInP,KAAJ,OAASkS,QAAT,IAASA,OAAT,EAASA,EAAK/C,WAAa,IAAInP,KACvD+P,GAAG,OAAG5Q,SAAH,IAAGA,QAAH,EAAGA,GAAc6X,GAAKH,UAEzBtI,GAAQ7K,GACVogB,EACE,oDACA,0DACFA,EACA,kBACA,mBACEwsB,GAA8B,KAAfp+B,EAAI/R,SAAkBrI,EAC3C,OACE,eAACk8B,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASqW,GACT/mB,MAAOA,GACPxK,SArBmB,WACrBT,GAAaS,GAAbT,IAqBExR,MAAOA,EACPmiC,KAAMA,GACNhuB,GAAI,GACJmlB,GAAI,GACJh4B,SAAS,KACTihC,UAAWA,GAXb,SAaE,uCACE,eAACruB,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,QAAU3kB,QAAQ,QAAnD,gBACG2hB,QADH,IACGA,OADH,EACGA,EAAKmI,UAIV,eAAC8M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,SACE,gBAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,UACE,gBAAC4P,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM7jB,MACbZ,MAAO4Z,EACPyF,SAAU,SAACwY,GAAD,OAAY+gB,EAAa/gB,IACnChD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM5jB,IACbb,MAAOmL,EACPkU,SAAU,SAACwY,GAAD,OAAYghB,EAAWhhB,IACjChD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAAC+D,GAAD,CACE71B,KAAK,YACLiQ,MAAOyU,GAAMzL,MACbhZ,MAAOmpD,GACP9pC,SAAU,SAAChQ,GAAD,OAAY+5C,GAAa/5C,EAAE05B,OAAO/oC,QAC5C2c,IAAKA,EACLxM,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,GACThnC,MAAOwL,EACP6f,eAAgBgmB,EAChBvjC,SAAUA,GACVK,MAAOA,GACPsd,QArOC,WACnB+lB,GAAY,IAqOMrnB,WAAS,EACTha,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,OACLiZ,MAAOyL,GAAMtd,KACbsd,MAAOA,GACP2G,QAASvL,EACT7f,MAAO8+B,GACPzT,eAAgBimB,GAChBxjC,SAAUA,GACVK,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,GAAMxB,WACbwB,MAAOA,GACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgB6d,EAChB5d,YAAa2d,EACb1d,SAAU4d,EACVt7B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAMvB,SACbuB,MAAOA,GACP2G,QAASoO,EACTx5B,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACb7d,SAAUid,EACV36B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,EACTqK,IAAKA,YAKb,gBAACoX,GAAA,EAAD,CACEvgB,MAAI,EACJwgB,GAAI,EACJthB,MAAO,CACLxT,gBAAiB,OACjBif,aAAc,GALlB,UAQE,eAAC1L,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLma,aAAc,GACdhvB,SAAU,GACV+xB,SAAU,IAEZjd,QAAS,WACPyoC,GAAY,MACZF,IAAc,IATlB,SAYG5qC,GAAQ,gEAAgB,iBAE3B,eAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,IAAK0xB,SAAU,QAAvC,SACG5V,GAAY9G,KAAI,SAAC2mC,GAChB,OACE,gBAACznC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAASmkB,GAAoB,CAAExD,IAAK48B,IACpCr9C,UAAWohB,GAAqBi8B,EAAIz+B,SAAU3M,MAEhD,eAACsY,GAAA,EAAD,CACEjW,QAAS,kBAnVJ,SAACa,GAC5B,IAAMmoC,EAAU9/B,GAAYtF,QAAO,SAACqlC,GAAD,OAAaA,EAAGr/B,QAAU/I,EAAK+I,SAC5D45B,EAAgB3D,GAAamJ,GACnCR,GAAehF,GAgVsB0F,CAAqBH,IACpCvgC,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAHpB,SAKE,eAAC,KAAD,CACEkV,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAGlC,eAACyhB,GAAA,EAAD,CACElW,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyoC,GAAYM,GACZR,IAAc,IAEhB//B,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,6BAU9C,gBAACyL,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,OACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC2tC,GAAD,CACElf,QAASmlB,EACThG,QAlaM,SAACl5B,GACrB,IAAM0iC,EAAQ,uBAAOhD,IAAP,8BAAuB1/B,GAAvB,IAA6BquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,GAAagD,IAgaCvvB,MAAOA,GACP+U,UAAWA,EACXC,YAAaA,EACbhsB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTsiC,GACA,eAAChgC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,SACE,eAACkiB,GAAD,CACE9e,KAAMijB,GACNlE,SA1aK,SAACx7B,GACtB,IAAM0iC,EAAWhD,GAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,GAAagD,IAkaG/zC,WA/ZS,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,IACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,GAAagD,IA4ZG7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,OAIXgwC,GAAW,eAAC,GAAD,OAEd,gBAAC7gC,GAAA,EAAD,CACEW,MAAO,CAAEoP,WAAY,OAAQjkB,SAAU,GAAIgvB,aAAc,IAD3D,UAGGjG,GAAM5F,MAHT,MAGmBP,GAAY6yB,GAAO5yB,WAGtC,gBAACqT,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,SACLiZ,MAAOyL,GAAM7Z,OACb6Z,MAAOA,GACP2G,QAASliB,GACTlJ,MAAO4K,GACPygB,eAAgBirB,GAChB3qB,QAAM,EACNxd,MAAOA,GACPlR,MAAO,QAGX,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACItD,GACA,eAAC9d,GAAA,EAAD,CACE6V,EAAG,EACH3pB,QAAQ,OACR4T,MAAO,CAAE9S,KAAM,EAAGse,eAAgB,YAHpC,SAKE,eAACzL,GAAA,EAAD,CACErW,KAAK,SACL+K,MAAM,UACNhK,QAAQ,WACRwV,QAAS,kBAAM04C,IAAe,IAC9Bl9B,SAAU+uB,GALZ,SAOGt2B,GAAMgc,yBAQrB,eAAC,GAAD,CACE7uB,KAAMq3C,GACNv/B,QAAS,kBAAMw/B,IAAe,IAC9BtP,QAASj9B,EACTkkB,SAAU0P,EACVrxB,UAAW0P,EACX4K,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTj0C,MAAOA,EACPymB,MAAO+tB,KAET,eAAC,GAAD,CACEjnB,QAASA,GACTlY,KAAM2/B,EACN7nB,QA/agB,WACtB8nB,GAAY,GACZC,GAAW,KA8aLljB,OAAO,EACPgR,YA5aiB,SAAC4U,GACxB9C,EAAa8C,IA4aPx3B,IAAK,KACLgS,UAAWgY,GACX/X,WAAYiY,KAEd,eAAC,GAAD,CACEj1B,KAAMknC,GACNpvB,QAAS,kBAAMqvB,IAAc,IAC7Bp8B,IAAK85B,GACLloB,OAAOkoB,GACP9nB,UAvegB,SAACtd,GACvB,IAAM0iC,EAAQ,uBAAOr6B,IAAP,CAAoBrI,IAC5B2iC,EAAgB3D,GAAa0D,GACnCiF,GAAehF,IAqeTplB,WAneiB,SAACvd,GACxB,IAAM0iC,EAAWr6B,GAAY9G,KAAI,SAACu4B,GAChC,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnCiF,GAAehF,IA2dTz3C,MAAOA,EACP2K,MAAK,6BAAOyV,GAAP,IAAY/C,YAAWzO,oBCnrBvB,SAASu+C,GAAT,GAUX,IATFv7C,EASC,EATDA,MACAsW,EAQC,EARDA,MACAjT,EAOC,EAPDA,SACAjP,EAMC,EANDA,SACAhG,EAKC,EALDA,MACAi9B,EAIC,EAJDA,UACAC,EAGC,EAHDA,YACA+W,EAEC,EAFDA,QACAD,EACC,EADDA,iBAEMtmB,EAAMzF,GAAW,CAAErW,QAAOsW,UAC1BuW,EAAWC,aAAc,qBAF9B,EAIiBvtB,oBAAS,CACzBuc,EAAIrQ,UACJqQ,EAAIjR,MACJiR,EAAInF,MACJmF,EAAIvE,OACJuE,EAAI/G,SACJ+G,EAAIhH,WACJgH,EAAIvJ,SACJuJ,EAAIrf,OACJqf,EAAIrE,KACJqE,EAAI1L,SAVCuuB,EAJN,uBAiBuBp/B,oBAAS,IAjBhC,oBAiBMogB,EAjBN,KAiBYsuB,EAjBZ,OAkB6B1uC,qBAAS,GAlBtC,oBAkBM+iC,EAlBN,KAkBeC,EAlBf,OAmByBhjC,oBAAc,MAnBvC,oBAmBM9M,EAnBN,KAmBamyB,EAnBb,OAoBqBrlB,oBAAc,MApBnC,oBAoBM7M,EApBN,KAoBWmyB,EApBX,OAqBqCtlB,oBAAc,MArBnD,oBAqBMi8C,EArBN,KAqBmBC,EArBnB,KAuBO/pC,EAAUw8B,KAAVx8B,MAvBP,EA4BG5R,sBAAWhD,IA5Bd,IA0BC/J,MAASsJ,EA1BV,EA0BUA,YAAaD,EA1BvB,EA0BuBA,gBAAiBY,EA1BxC,EA0BwCA,QAASL,EA1BjD,EA0BiDA,KAChDoD,EA3BD,EA2BCA,SA3BD,EAwCqC8rB,aAAasiB,GAAW,CAC5DnV,YAAa,sBAzCd,oBAwCM0iB,EAxCN,KAwCkBjN,EAxClB,KA4CK/C,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOgiB,GACP3tC,UAAW,CACT/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,IAG/C,CACEiqB,MAAOmB,IAET,CACEnB,MAAOshB,MAQbxoB,sBAAU,WACR,IAAMzkB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,GAE7Cw5C,EAAW,CACTl7C,gBAED,CAAC/N,EAAOC,IAzEV,MA2EkBwN,aAAYmuC,GAAa3C,GAArC/2B,EA3EN,uBA4EmBzU,aAAY6V,GAAa21B,GAAtC36B,EA5EN,uBA6EyB7Q,aAAYy7C,GAAiBjQ,GAAhDkQ,EA7EN,qBA+EK/c,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpBknC,EAAgB,CAAEp7C,UAAW,CAAEyK,UAHb,2CAAH,sDAOnBga,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIwpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAYnM,UACdC,GAAW,GAEb,OAAIkM,QAAJ,IAAIA,GAAJ,UAAIA,EAAY/xC,YAAhB,iBAAI,EAAkByxC,iBAAtB,aAAI,EAA6BzxC,KAAM,CAAC,IAC9BA,EAAS+xC,EAAW/xC,KAAKyxC,UAAzBzxC,KACRuxC,EAAQvxC,GACR6lC,GAAW,MAEZ,CAACkM,IAUJ,OACE,eAAC9hB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAfY,WACJ,OAAV6hB,QAAU,IAAVA,KAAY/hB,WAeV8uB,YAAaA,EACbC,eAAgBA,EARlB,SAUE,gBAACl4B,GAAA,EAAD,WACE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBAxFkB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAwFtCzyC,gBAAiBA,EACjB0oB,sBA7FsB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SA6FnDmL,QAASA,EACTy6C,cAzFc,SAAC5I,GACrB9uC,EAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAyFlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAAC,KAAD,CAAMuxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GAhC1Bx4C,EAAS,CAAE9M,KAAM,UAAWC,QAgC2BqlD,OAEjD,eAAC,KAAD,CAAcvZ,gBAAiBH,KAC7BhS,GAAY,eAAC,KAAD,IAEd,eAAC,KAAD,KACEA,GAAY,eAAC,KAAD,IAEd,eAAC,KAAD,CACEp9B,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IAEnC,eAAC,KAAD,CACEzX,IAAK,CAAC,aACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,QACNlB,mBAAoB,SAACtyC,GAAD,OAClBklB,GAAc,6BAAKllB,GAAN,IAAamlB,kBAG9B,eAAC,KAAD,CACEquB,IAAK,CAAC,UACNlB,mBAAoB,SAACtyC,GAAD,OAClB6lB,GAAgB,6BAAK7lB,GAAN,IAAa8lB,cAI/Btd,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,MAIpBoU,GAAY,eAAC,KAAD,KACZA,GACA,eAAC,KAAD,CACEoqB,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI5C,eAAC,GAAD,CAAc40B,UAAW7L,EAAU8L,WAAY1P,EAA/C,SACE,eAAC,GAAD,CACEsa,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTD,iBAAkBA,EAClBh0C,MAAOA,EACPsjB,MAAOA,EACPtd,SAAUA,SAIfkuC,GAAW,eAAC,GAAD,CAAStiC,MAAOA,S,mEChQ9BlL,GAAO,eAAC,KAAD,CAA0BvH,SAAS,UAC1CsuD,GAAc,eAAC,KAAD,CAActuD,SAAS,UAE5B,SAASuuD,GAAT,GASN,IARP7+B,EAQM,EARNA,QACAprB,EAOM,EAPNA,MACAu7C,EAMM,EANNA,SACA92B,EAKM,EALNA,MACAtW,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MAEM,IADNitD,eACM,SACN,OACE,eAACj+B,GAAA,EAAD,CACEhyB,KAAK,QACLkwD,UAAWD,EACX9+B,QAASA,EACTg/B,sBAAoB,EACpBC,iBAAe,EACfC,UAAW,EACXp+B,eAAgB,SAACC,GAAD,OAAkBhe,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,MACjEwQ,MAAO,CAAElV,QAAS,IAClBixB,aAAc,SAACH,EAAD,OAAWsqB,EAAX,EAAWA,SAAX,OACZ,gBAAChmC,GAAA,EAAD,CACEF,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BxR,QAAS,OACTc,KAAM,EACNZ,WAAY,UALhB,WAQIqtD,GACA,eAAC/qC,GAAA,EAAD,CACElc,KAAMA,GACN+mD,YAAaA,GACbz5C,MAAO,CAAEnV,YAAa,GACtBgkB,QAASq3B,IAGZtoC,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,SAGpCC,MAAOA,EACPqf,SAAU,SAACjgB,EAAGmtB,GACZgvB,EAAShvB,IAEXG,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEEmB,KAAM,EACNuS,QAAS,EACTv9B,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOyU,EAAM1kB,GACb/E,QAAQ,WACRuV,MAAO,CACLtT,MAAOA,GAAgB,IACvB7B,YAAa,EACbD,WAAY,EACZ4B,iBAAsB,OAALiD,QAAK,IAALA,OAAA,EAAAA,EAAO6T,QAAS,EAAI,eAAYxD,EACjD3U,SAAU,GACVvB,OAAQ,EACRkB,QAAS,S,yBCrDN,SAASkvD,GAAT,GAqBN,IApBP5/C,EAoBM,EApBNA,UACAmhB,EAmBM,EAnBNA,aACAvgB,EAkBM,EAlBNA,aACAi/C,EAiBM,EAjBNA,gBACA9/C,EAgBM,EAhBNA,YACA29B,EAeM,EAfNA,eACA78B,EAcM,EAdNA,UACA6lC,EAaM,EAbNA,aACApkC,EAYM,EAZNA,SACAw9C,EAWM,EAXNA,YACAh/C,EAUM,EAVNA,SACAi/C,EASM,EATNA,YACAlxB,EAQM,EARNA,UACAC,EAOM,EAPNA,YACAoH,EAMM,EANNA,SACAmG,EAKM,EALNA,UACA2jB,EAIM,EAJNA,WACA9rC,EAGM,EAHNA,MACA4F,EAEM,EAFNA,MACAtW,EACM,EADNA,MACM,EACsCwD,KAAMjE,SAAS,IADrD,oBACCk9C,EADD,KACiBC,EADjB,OAE4Cl5C,KAAMjE,SAAS,IAF3D,oBAECo9C,EAFD,KAEoBC,EAFpB,OAG0Cp5C,KAAMjE,SAAS,IAHzD,oBAGCs9C,EAHD,KAGmBC,EAHnB,OAIsCt5C,KAAMjE,SAAS,IAJrD,oBAICw9C,EAJD,KAIiBC,EAJjB,OAKoCx5C,KAAMjE,SAAS,IALnD,oBAKC09C,EALD,KAKgBC,EALhB,OAMoC15C,KAAMjE,SAAS,MANnD,oBAMC49C,EAND,KAMgBC,EANhB,OAQkB55C,KAAMjE,UAAS,GARjC,oBAQCkE,EARD,KAQOC,EARP,OASsBF,KAAMjE,SAAc,SAT1C,oBASC89C,EATD,KASSC,EATT,KAWNr4B,sBAAU,YACK,IAATxhB,IACFi5C,EAAkBlgD,GAClBogD,EAAqBx/C,GACrB0/C,EAAoBvgD,GACpBygD,EAAkB3/C,GAClB6/C,EAAiB5/C,GACjB8/C,EAAiBt+C,MAElB,CAAC2E,IAEJ,IASM85C,EAAc,WAClB75C,GAAQ,IAgBJ85C,GAAwBh6C,KAAM+2B,OAAoB,MACxD/2B,KAAMyhB,WAAU,WACd,GAAIxhB,EAAM,CAAC,IACQg6C,EAAuBD,GAAhC9+B,QACmB,OAAvB++B,GACFA,EAAmBpgB,WAGtB,CAAC55B,IAEJ,IAfyBi6C,GAyBnBC,GAAe,uBAChBnhD,GADgB,aAEhBY,GAFgB,aAGhBb,GAHgB,aAIhBc,GAJgB,aAKhBC,GALgB,CAMnBwB,QAAsBoD,IACtB+D,QAAO,SAAC23C,GAAD,OAAYA,KAErB,OACE,gBAACt7C,GAAA,EAAD,CACEF,MAAO,CACL1T,WAAY,SACZkf,eAAgB,SAChB5gB,WAAY,GACZC,YAAa,GACbG,UAAW4S,EAAQ,MAAQ,MAC3B1R,UAAW,EACXmB,OAAQ,IARZ,UAWE,eAAC0S,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRX,MAAO,IACPF,gBACE+uD,GAAaj4C,OAAS,GAAK5G,EAAW,eAAYoD,GAEtDG,SAtDmBq7C,GAsDM,QAtDc,WAC3Ch6C,GAAQ,GACR45C,EAAUI,MA4CR,SAUE,gBAACp7C,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNb,cAAe,MACfC,WAAY,SACZkf,eAAgB,iBANpB,UASE,eAACnM,GAAA,EAAD,CAAYW,MAAO,GAAIvV,QAAQ,SAA/B,SACGmT,EAAK,wDACY29C,GAAaj4C,OADzB,0BAEYi4C,GAAaj4C,OAFzB,OAIR,eAAC4S,GAAA,EAAD,CACElW,MAAO,CAAEnV,YAAa,GAAI6B,MAAO,GAAIW,OAAQ,IAC7C4S,QAjFa,WAXrBq6C,EAAkB,IAClBE,EAAqB,IACrBE,EAAoB,IACpBE,EAAkB,IAClBE,EAAiB,IACjBE,EAAiB,MAQjBz/B,EAAa,IACb0+B,EAAgB,IAChBniB,EAAe,IACfgJ,EAAa,IACbqZ,EAAY,IACZD,EAAY,OAwEN,SAIE,eAAC,KAAD,WAIN,gBAAC7gC,GAAA,EAAD,CACEhY,KAAMA,EACN8X,QAASgiC,EACTF,OAAQA,EACRtsB,kBAAgB,sBAChBD,mBAAiB,4BALnB,UAOE,eAAC+sB,GAAA,EAAD,CACElpD,GAAG,sBACHyN,MAAO,CAAEhV,UAAW4S,EAAQ,MAAQ,MAAOpR,gBAAiB,QAF9D,SAIGoR,EAAK,wDACY29C,GAAaj4C,OADzB,0BAEYi4C,GAAaj4C,OAFzB,OAIR,eAACsrB,GAAA,EAAD,CACE5uB,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,IAAKrC,UAAW4S,EAAQ,MAAQ,OAC7DixB,SAAqB,UAAXosB,EAFZ,SAIE,eAAC/6C,GAAA,EAAD,UACE,gBAACA,GAAA,EAAD,WAOE,eAACw5C,GAAD,CACE7+B,QAASoO,EACTx5B,MAAO4qD,EACPrP,SAAUsP,EACVpmC,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,WACL9C,MAAO,MAET,eAACgtD,GAAD,CACE7+B,QAASqO,EACTz5B,MAAOgrD,EACPzP,SAAU0P,EACVxmC,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,aACL9C,MAAO,MAER0tD,GAAcA,EAAW92C,OAAS,GACjC,eAACo2C,GAAD,CACE7+B,QAASu/B,EACT3qD,MAAOorD,EACP7P,SAAU8P,EACV5mC,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,WACL9C,MAAO,MAGX,eAACgtD,GAAD,CACE7+B,QAASyV,EACT7gC,MAAO8qD,EACPvP,SAAUwP,EACVtmC,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,iBACL9C,MAAO,MAET,eAACgtD,GAAD,CACE7+B,QAAS4b,EACThnC,MAAOkrD,EACP3P,SAAU4P,EACV1mC,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,WACL9C,MAAO,MAGR4hB,GAASA,EAAMhL,OAAS,GACvB,eAACpD,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNZ,WAAY,SACZkf,eAAgB,YALpB,SAQE,eAACtL,GAAA,EAAD,CAAKF,MAAO,CAAEnV,YAAa,GAAID,WAAY,IAA3C,SACE,gBAACyU,GAAA,EAAD,CAAY5U,QAAQ,KAApB,UACGypB,EAAM5F,MADT,KACkBP,GAAYO,EAAM,GAAGA,qBAQnD,gBAACwgB,GAAA,EAAD,CACE9uB,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BpR,gBAAiB,UACjBa,OAAQ,GACRf,WAAY,SACZkf,eAAgB,gBANpB,UASE,eAACzL,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,IAC7B5C,QAAQ,YACRwV,QAzKO,WACfsb,EAAa8+B,GACbJ,EAAgBM,GAChBziB,EAAe2iB,GACf3Z,EAAa6Z,GACbR,EAAYU,GACZX,EAAYa,GACZz5C,GAAQ,IAmKA7M,MAAM,UAJR,SAMGmJ,EAAQ,iCAAU,WAErB,eAACmC,GAAA,EAAD,CACEC,MAAO,CAAEtT,MAAO,IAAKW,OAAQ,IAC7B5C,QAAQ,YACRwV,QAASk7C,EACT1mD,MAAM,UAJR,SAMGmJ,EAAQ,iCAAU,oB,mCChRlB89C,GAAwB,SAAC,GAK1B,IAJV7gC,EAIS,EAJTA,QACAprB,EAGS,EAHTA,MACAqf,EAES,EAFTA,SACAlR,EACS,EADTA,MAEA,OACE,eAACukB,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACE7vB,GAAG,cACH9C,MAAOA,EACPqf,SAAUA,EACVrkB,QAAQ,WACRuV,MAAO,CACL3S,OAAQ,GACRX,MAAO,IACP80B,UAAW,WACXr2B,SAAU,GACVikB,WAAY,OACZ3a,MAAO,QAXX,SAcGomB,EAAQxY,KAAI,SAACvB,GACZ,OACE,eAAC,KAAD,CAEEd,MAAO,CAAEwL,eAAgB5N,EAAQ,WAAa,cAC9CnO,MAAOqR,EAAKrR,MAHd,SAKGqR,EAAKtR,MAJDsR,EAAKvO,YC5BXopD,GAAY,SAAC/9C,GAAD,MAAgB,CACvC,CACErL,GAAI,EACJ9C,MAAO,OACPD,KAAMoO,EAAQ,0DAAe,eAE/B,CACErL,GAAI,EACJ9C,MAAO,WACPD,KAAMoO,EAAQ,+FAAsB,qBAEtC,CACErL,GAAI,EACJ9C,MAAO,aACPD,KAAMoO,EAAQ,yFAAqB,uBAErC,CACErL,GAAI,EACJ9C,MAAO,UACPD,KAAMoO,EAAQ,+FAAsB,oBAEtC,CACErL,GAAI,EACJ9C,MAAO,WACPD,KAAMoO,EAAQ,+FAAsB,qBAEtC,CACErL,GAAI,EACJ9C,MAAO,WACPD,KAAMoO,EAAQ,qGAAuB,qBAEvC,CACErL,GAAI,EACJ9C,MAAO,SACPD,KAAMoO,EAAQ,+FAAsB,qBC8BlCg+C,GAAqB,SAAC,GAAD,IAAG1+C,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmCh9B,UAAWjC,EAAQg/B,iBAE3CF,GAAiBC,cAXf,SAACjwC,GAAD,MAAiB,CAC9BkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BysC,CAC5B2f,IAEWC,GAAkB5f,aAC7B,GACA,CAAEzsC,KAAM,kBAFqBysC,CAG7B2f,IAEa,SAASE,GAAT,GAWN,IAVPl+C,EAUM,EAVNA,MACAsW,EASM,EATNA,MACAjT,EAQM,EARNA,SACAioB,EAOM,EAPNA,YACAD,EAMM,EANNA,UACAqH,EAKM,EALNA,SACA8pB,EAIM,EAJNA,WACAna,EAGM,EAHNA,QACAj0C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQmyB,EADR,OAEgBrlB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMmyB,EAFN,OAIkBtlB,oBAAS,IAJ3B,oBAICogB,EAJD,KAIOsuB,EAJP,OAKiC1uC,oBAAS,IAL1C,oBAKC4+C,EALD,KAKYC,EALZ,OAMyB7+C,oBAAS,MANlC,oBAMCmR,EAND,KAMQ2tC,EANR,OAOiC9+C,oBAAS,MAP1C,oBAOC++C,EAPD,KAOYC,EAPZ,KASAziC,EAAMzF,GAAW,CAAErW,QAAOsW,UAT1B,EAWoC/W,oBAAS,CACjDuc,EAAIpF,OACJoF,EAAI/G,SACJ+G,EAAIjF,QACJiF,EAAIhH,WACJgH,EAAIhF,SACJgF,EAAIvJ,SACJuJ,EAAIlF,QACJkF,EAAI1L,SAnBA,oBAWCouC,EAXD,KAWgBC,EAXhB,OAsBYl/C,oBAAS,CACzBuc,EAAIpF,OACJoF,EAAI/G,SACJ+G,EAAIjF,QACJiF,EAAIhH,WACJgH,EAAIhF,SACJgF,EAAIvJ,SACJuJ,EAAIlF,QACJkF,EAAI1L,SARCuuB,EAtBD,uBAiC0Cp/B,oBAAS,CACvD,CAAE3C,WAAYkf,EAAIpF,OAAO9kB,KAAM8sD,iBAAiB,GAChD,CAAE9hD,WAAYkf,EAAI1L,OAAOxe,KAAM8sD,iBAAiB,KAF3CC,EAjCD,uBAsCiC9yB,aAAa+yB,GAAkB,CACpE5lB,YAAa,sBAvCT,oBAsCC6lB,EAtCD,KAsCaC,EAtCb,KAyCEjmB,EAAc8K,KAAd9K,UAzCF,EA4DF/4B,sBAAWlB,IA5DT,IA4CJ7L,MACEsJ,EA7CE,EA6CFA,YACAD,EA9CE,EA8CFA,gBACAY,EA/CE,EA+CFA,QACAI,GAhDE,EAgDFA,aACAb,GAjDE,EAiDFA,YACAC,GAlDE,EAkDFA,UACAa,GAnDE,EAmDFA,UACAC,GApDE,EAoDFA,SACAG,GArDE,EAqDFA,MACAD,GAtDE,EAsDFA,QACAE,GAvDE,EAuDFA,UACAf,GAxDE,EAwDFA,KACAmC,GAzDE,EAyDFA,SAEFiB,GA3DI,EA2DJA,SA6BIg/C,GAAqB,SAACltD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpCmtD,GAAmB,SAACntD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KAYxCozB,sBAAU,WAAO,IAAD,IACRg6B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCA,OAAQ,GAC3DwiD,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASv5C,QAAS,EACdu5C,EAAQx6C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEEkN,OAAQ6B,GAAgB/O,QAG5B,GAEN,GADA+qC,EAAQiR,GACJzhD,GAAO,CACT,IAAMsN,EAAM8Y,GAAc,CACxBjQ,KAAMsrC,EACNttD,KAAM8L,KAER6gD,EAAaxzC,GAGf,IAAI45B,EAAM,EACVua,EAAYC,SAAQ,SAAC5+C,GAAD,OAAaokC,GAAOpkC,EAAE6P,UAC1CiuC,EAAS1Z,KACR,CAACma,IAEJ,IAAMM,GAAS,SAACxrC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlO,QAAS,EAAIkO,EAAKnP,KAAI,SAAC46C,GAAD,OAAaA,EAAGp0C,YAAO/I,GAqB7D+iB,sBAAU,YAnBQ,WAChB,IAAMzkB,EAAY,CAChB8+C,SAAU,GACVxgD,YACAygD,WAAYH,GAAOhiD,IACnBoiD,YAAaJ,GAAO9hD,IACpBmiD,cAAeL,GAAO7iD,IACtBmjD,YAAaN,GAAO5iD,IACpBmjD,YAAaP,GAAO/hD,IACpB5K,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EACDA,EAAIogB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIxW,MAAOwW,SAAS,GAAI,GAAI,GAAI,MAEtC+rC,EAAW,CACTr+C,cAKFo/C,KACC,CAACntD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAMmiD,GAAmBtlB,kBAAO,MAE1BulB,GAAcC,wBAAY,WAC9BF,GAAYnhC,QAAQshC,eACnB,CAACH,KAaEI,GAAkB,SAACruD,GACvB,IAAM20C,EAAKiY,EAAcv4C,QAAO,SAACi6C,GAAD,OAAaA,EAAG7mD,MAAQzH,KACxD,SAAI20C,GAAMA,EAAG7gC,OAAS,IAOxBuf,sBAAU,WACR,GAAIxnB,QACG,CACL,IAMM0iD,EANWlvD,KAAEs+B,QACjB5P,EACA,CAAChjB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGvP,YAGgBqX,KAAI,SAAC+J,GAC9B,MAAO,CACLkI,OAAQupC,GAAgB,UACpBzxC,EAAIoI,QACFjI,GAAaH,EAAIkI,QACjB,WACFxU,EACJ0U,QAASqpC,GAAgB,WACrBzxC,EAAIoI,QACFpI,EAAIoI,QACJ,WACF1U,EACJ6S,SAAUkrC,GAAgB,YACtBzxC,EAAIsN,EAAI/G,SAASnjB,MACf4c,EAAIsN,EAAI/G,SAASnjB,MACjB,WACFsQ,EACJ2U,QAASopC,GAAgB,WACrBzxC,EAAIsN,EAAIjF,QAAQjlB,MACd4c,EAAIsN,EAAIjF,QAAQjlB,MAChB,WACFsQ,EACJ4S,WAAYmrC,GAAgB,cACxBzxC,EAAIsN,EAAIhH,WAAWljB,MACjB4c,EAAIsN,EAAIhH,WAAWljB,MACnB,WACFsQ,EACJ4U,SAAUmpC,GAAgB,YACtBzxC,EAAIsN,EAAIhF,SAASllB,MACf4c,EAAIsN,EAAIhF,SAASllB,MACjB,WACFsQ,EACJqQ,SAAU0tC,GAAgB,YACtBzxC,EAAIsN,EAAIvJ,SAAS3gB,MACf4c,EAAIsN,EAAIvJ,SAAS3gB,MACjB,WACFsQ,EACJkO,OAAQ6vC,GAAgB,UACpBzxC,EAAI4B,OACFD,GAAY3B,EAAI4B,QAChB,WACFlO,MAGRk8C,EAAa+B,MAEd,CAAC3B,EAAe7+B,EAAMhjB,KAEzB,IAqFMyjD,GAAoB,CACxB,CAAExjD,WAAYkf,EAAIlF,QAAQhlB,KAAMqB,KAAM,SACtC,CAAE2J,WAAY,SAAU3J,KAAM,QAG1Bw9C,GAAW,CAAC,CAAE7zC,WAAYc,KAC1B2iD,GAAoB,CACxB,CACEzjD,WAAYkf,EAAIlF,QAAQhlB,KACxBqB,KAAM,QACNqtD,eAAe,GAEjB,CACE1jD,WAAY,SACZ3J,KAAM,MACNqtD,eAAe,IAGbC,GAAexC,GAAU/9C,GAAOiG,QAAO,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,MAEjE,OACE,eAACg4B,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QA1CY,WACH,OAAXkyB,QAAW,IAAXA,KAAapyB,WAmCb,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACjhB,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLgN,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEjW,QAAS5E,GAvFQ,WACzB,IAAM+iD,EAAO,CACX,CAAE5uD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBygD,EAAanC,EAAUzpC,MAAMpQ,KAAI,SAACu4B,GACtC,OAAO,6BACFA,GADL,IAEEtsB,MAAOP,GAAY6sB,EAAGtsB,YAGpBsE,EAAO,CACXhV,QACA0gD,KAAMpqC,EAAM5F,MACZiwC,YAAajwC,EAAQP,GAAYmuC,EAAU5tC,OAAS,GACpDuT,MAAK,OAAEq6B,QAAF,IAAEA,OAAF,EAAEA,EAAWr6B,MAClB28B,WAAY5gD,EAAQ,kFAAmB,eACvCksC,KAAM7J,EAAQ6J,KACdl1C,MAAOqrC,EAAQ8J,KACfrvB,OAAQulB,EAAQ+J,IAChBtW,QAASuM,EAAQvM,QACjBuM,QAASriC,EAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAC1Ca,MAAOA,EAAQkc,GAAalc,GAAS,GACrCC,IAAKA,EAAMic,GAAajc,GAAO,GAC/BmE,MAAO,UACPgqD,IAAK/xC,GAAsB,IAAIxS,OAGrB,cAAEqjB,KAAM8gC,EAAYD,QAASxrC,IAnErB,WACpB,IAAMwrC,EAAOhC,EAAc/5C,KAAI,SAACq8C,GAC9B,MAAO,CAAElvD,KAAMkvD,EAAGj2C,UAGdk2C,EAAe,GACjBvkD,IACFukD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGxD,SAAH,IAAGA,QAAH,EAAGA,GAAWpH,OAAd,OAAuBoH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW5K,OAE1D2K,IACFwkD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAanH,OAAhB,OAAyBmH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAa3K,OAE9DwL,IACF2jD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG5C,SAAH,IAAGA,QAAH,EAAGA,GAAchI,OAAjB,OAA0BgI,SAA1B,IAA0BA,QAA1B,EAA0BA,GAAcxL,OAEhE0L,IACFyjD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG1C,SAAH,IAAGA,QAAH,EAAGA,GAAUlI,OAAb,OAAsBkI,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAU1L,OAG5D,IAAMojB,EAAO,CACXhV,QACA0gD,KAAMpqC,EAAM5F,MACZiwC,YAAajwC,EAAQP,GAAYO,GAAS,GAC1CkwC,WAAY5gD,EAAQ,kFAAmB,eACvCksC,KAAM7J,EAAQ6J,KACdl1C,MAAOqrC,EAAQ8J,KACfrvB,OAAQulB,EAAQ+J,IAChBtW,QAASuM,EAAQvM,QACjBuM,QAASriC,EAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAC1Ca,MAAOA,EAAQkc,GAAalc,GAAS,GACrCC,IAAKA,EAAMic,GAAajc,GAAO,GAC/BquD,UACAlqD,MAAO,UACPgqD,IAAK/xC,GAAsB,IAAIxS,OAGrB,cAAEqjB,KAAMw+B,EAAWqC,QAASxrC,IA0FhCnK,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,eAACyrD,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBArTkB,SAACuqB,GACzB9uC,GAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAqTtCzyC,gBAAiBA,EACjB0oB,sBA1TsB,SAAC5jB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SA0TnDmL,QAASA,EACTy6C,cAtTc,SAAC5I,GACrB9uC,GAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAsTlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLxpB,OAAQ,GACRw2B,OAAQ,IACRv3B,WAAY,SACZkf,eAAgB,aAChBuO,YAAa,GACbC,aAAc,GACd9tB,UAAW,GAbf,UAgBE,eAAC,GAAD,CACE8O,aAAcA,GACdi/C,gBA1UsB,SAACxqD,GAC/BkO,GAAS,CAAE9M,KAAM,kBAAmBC,QAASrB,KA0UrC0K,YAAaA,GACb29B,eAzUqB,SAACroC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAyUpC2K,UAAWA,GACXmhB,aAxUmB,SAAC9rB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAwUlCy5B,YAAaA,EACbD,UAAWA,EACXqH,SAAUA,EACV5zB,SAAUA,GACVw9C,YAvTqB,SAACzqD,GAC9BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,KAuTjCgnC,UAAWA,EACXx7B,UAAWA,GACX6lC,aA7UmB,SAACrxC,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KA6UlCyL,SAAUA,GACVi/C,YA5UkB,SAAC1qD,GAC3BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,KA4UjC2qD,WAAYA,EACZlmC,MAAOA,EACPtW,MAAOA,IAET,eAAC,GAAD,CACEid,QAASsjC,GACT1uD,MAAO2L,GACP0T,SAhHe,SAAChQ,GA1NG,IAACrP,EA2NL,SAAnBqP,EAAE05B,OAAO/oC,OACXmtD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmB79C,EAAE05B,OAAO/oC,OAhOFA,EAiOLiqB,EAAI5a,EAAE05B,OAAO/oC,OAAOD,KAhO3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MA0UlCmO,MAAOA,OAGX,eAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQqR,OAAOguC,YAAc,GAAI3tB,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,GAChB27C,gBAAiB,SAACC,GA9U5Bx4C,GAAS,CAAE9M,KAAM,UAAWC,QA8U6BqlD,OAEhD96C,IAAS,eAAC,KAAD,CAAegzC,SAAUA,KACnC,eAAC,KAAD,CACEuQ,WAAYZ,GACZa,WAAYZ,KAEb5iD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOguC,YAAc,IAC7B3P,eAAiB1hC,GAAyBwgD,GAAjB7f,GACzBzH,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE3X,iBAAkByf,EAClBuC,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAOziB,GACG14B,QAAO,SAAC1F,GAAD,OAAa4gD,EAAI/1C,SAAS7K,EAAE3O,SACtDwvD,EAAOzkD,MAAK,SAAC4D,EAAQ4jC,GAAT,OACV5jC,EAAE5L,GAAKwvC,EAAExvC,GAAK,EAAIwvC,EAAExvC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvC8pD,EAAiB2C,MAGrB,eAAC,KAAD,CACEhiB,IAAK,CAAC,UACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAakvC,YAAaA,KACzBriD,IACC,eAAC,KAAD,CACEk5B,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,QACzBqhD,MAAOrhD,EAAQ,6CAAY,QAC3BshD,QAASthD,EAAQ,iCAAU,SAE7BuhD,wBAAsB,IAG1B,eAAC,KAAD,CACE5qB,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE3G,IAAKwmD,GACLlgC,KAAMA,EACNgf,QAASA,EACT6iB,OAhVO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMhB,EAAM,IAAIvkD,KACV1K,EAAI,uBAAmBkd,GAAsB+xC,IACnDiB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE5uD,KAAM,6BADvB,UAEDrB,EAFC,qBCrPZ,IAAMkD,GAAO,eAAC,KAAD,CAA0BvH,SAAS,UAC1CsuD,GAAc,eAAC,KAAD,CAActuD,SAAS,UAE5B,SAASy0D,GAAT,GASN,IARP/kC,EAQM,EARNA,QACAprB,EAOM,EAPNA,MACAu7C,EAMM,EANNA,SACA92B,EAKM,EALNA,MACAtW,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MAEM,IADNitD,eACM,SACN,OACE,eAACj+B,GAAA,EAAD,CACEhyB,KAAK,QACLkwD,UAAWD,EACX9+B,QAASA,EACTg/B,sBAAoB,EACpBC,iBAAe,EACfl6C,WAAS,EACT+b,eAAgB,SAACC,GAAD,OAAkBhe,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,MACjEwQ,MAAO,GACP+b,aAAc,SAACH,EAAD,OAAWsqB,EAAX,EAAWA,SAAX,OACZ,gBAAChmC,GAAA,EAAD,CACEF,MAAO,CACL5T,QAAS,OACTc,KAAM,EACNZ,WAAY,SACZkf,eAAgB,YALpB,WAQImuC,GACA,eAAC/qC,GAAA,EAAD,CACElc,KAAMA,GACN+mD,YAAaA,GACbz5C,MAAO,CAAEnV,YAAa,GACtBgkB,QAASq3B,IAGZtoC,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,SAGpCC,MAAOA,EACPqf,SAAU,SAACjgB,EAAGmtB,GACZgvB,EAAShvB,IAEXG,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEEmB,KAAM,EACNuS,QAAS,EACTv9B,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOyU,EAAM1kB,GACb/E,QAAQ,WACRuV,MAAO,CACLtT,MAAOA,GAAgB,IACvB7B,YAAa,EACbD,WAAY,EACZ4B,iBAAsB,OAALiD,QAAK,IAALA,OAAA,EAAAA,EAAO6T,QAAS,EAAI,eAAYxD,EACjD3U,SAAU,GACVvB,OAAQ,EACRkB,QAAS,SCjBrB,IAWakxC,GAAiBC,cAXf,SAACjwC,GAAD,MAAY,CACzBkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BysC,EAHH,SAAC,GAAD,IAAG/+B,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmCh9B,UAAWjC,EAAQg/B,mBAMzC,SAAS2jB,GAAT,GAQN,IAPPjiD,EAOM,EAPNA,MACAsW,EAMM,EANNA,MACAjT,EAKM,EALNA,SACA6+C,EAIM,EAJNA,aAEA9zD,GAEM,EAHNi0C,QAGM,EAFNj0C,OACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQmyB,EADR,OAEgBrlB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMmyB,EAFN,OAIkBtlB,oBAAS,IAJ3B,oBAICogB,EAJD,KAIOsuB,EAJP,OAKiC1uC,oBAAS,IAL1C,oBAKY6+C,GALZ,aAMyB7+C,oBAAS,MANlC,oBAMCmR,EAND,KAMQ2tC,EANR,KAQAviC,EAAMzF,GAAW,CAAErW,QAAOsW,UAR1B,EAUoC/W,oBAAS,CACjDuc,EAAIpF,OACJoF,EAAIloB,IACJkoB,EAAI3E,MAEJ2E,EAAI9E,MAGJ8E,EAAI5E,OACJ4E,EAAIlF,QACJkF,EAAI1L,SApBA,oBAUCouC,EAVD,KAUgBC,EAVhB,OAuBYl/C,oBAAS,CACzBuc,EAAIpF,OACJoF,EAAIloB,IACJkoB,EAAI3E,MAEJ2E,EAAI9E,MAGJ8E,EAAI5E,OACJ4E,EAAIlF,QACJkF,EAAI1L,SAVCuuB,EAvBD,uBAoC0Cp/B,oBAAS,CACvD,CAAE3C,WAAYkf,EAAIpF,OAAO9kB,KAAM8sD,iBAAiB,GAChD,CAAE9hD,WAAYkf,EAAI1L,OAAOxe,KAAM8sD,iBAAiB,KAF3CC,EApCD,uBAyCiC9yB,aAAa+yB,GAAkB,CACpE5lB,YAAa,sBA1CT,oBAyCC6lB,EAzCD,KAyCaC,EAzCb,OA8DFh/C,sBAAW5C,IA9DT,IA8CJnK,MACEsJ,EA/CE,EA+CFA,YACAD,EAhDE,EAgDFA,gBACAY,EAjDE,EAiDFA,QACAI,EAlDE,EAkDFA,aACAb,EAnDE,EAmDFA,YACAC,EApDE,EAoDFA,UACAa,EArDE,EAqDFA,UACAC,EAtDE,EAsDFA,SACAC,EAvDE,EAuDFA,SACAE,EAxDE,EAwDFA,MACAD,EAzDE,EAyDFA,QACAE,EA1DE,EA0DFA,UACAf,EA3DE,EA2DFA,KAEFoD,GA7DI,EA6DJA,SAiBFklB,sBAAU,WAAO,IAAD,QACRg6B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCA,OAAQ,GAC3DylD,GAAqB,OAAXrD,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCo1B,UAAW,KAE9D1hB,EAAS+xC,EAAUvsC,OAAOusC,GAAW,KAErCjD,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASv5C,QAAS,EACdu5C,EAAQx6C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEEkN,OAAQ6B,GAAgB/O,QAG5B,GAEFkN,GACF8uC,EAAYkD,QAAQ,CAClBn3C,IAAK3O,KAAKukD,MACVwB,UAAW,sEACXC,QAAS,mBACTlyC,WAIJ69B,EAAQiR,GACR,IAAIva,EAAM,EACVua,EAAYC,SAAQ,SAAC5+C,GAAD,OAAaokC,GAAOpkC,EAAE6P,UAC1CiuC,EAAS1Z,KACR,CAACma,IAEJ,IAAMM,GAAS,SAACxrC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlO,QAAS,EAAIkO,EAAKnP,KAAI,SAAC46C,GAAD,OAAaA,EAAGp0C,YAAO/I,GAoB7D+iB,sBAAU,YAlBQ,WAChB,IAAMzkB,EAAY,CAChB+hD,WAAYnD,GAAO7hD,GACnBgiD,WAAYH,GAAOhiD,GACnBoiD,YAAaJ,GAAO9hD,GACpBmiD,cAAeL,GAAO7iD,GACtBmjD,YAAaN,GAAO5iD,GACpBmjD,YAAaP,GAAO/hD,GACpB5K,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EACDA,EAAIogB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIxW,MAAOwW,SAAS,GAAI,GAAI,GAAI,MAEtC+rC,EAAW,CACTr+C,cAKFo/C,KACC,CAACntD,EAAOC,EAAK+K,EAAOD,EAASE,IAEhC,IAAMmiD,GAAmBtlB,kBAAO,MAE1BulB,GAAcC,wBAAY,WAC9BF,GAAYnhC,QAAQshC,eACnB,CAACH,KAaEI,GAAkB,SAACruD,GACvB,IAAM20C,EAAKiY,EAAcv4C,QAAO,SAACi6C,GAAD,OAAaA,EAAG7mD,MAAQzH,KACxD,SAAI20C,GAAMA,EAAG7gC,OAAS,IAOxBuf,sBAAU,WACR,IAEMk7B,EAFWlvD,KAAEs+B,QAAQ5P,EAAM,CAAChjB,EAAK,GAAGC,YAAa,CAACD,EAAK,GAAGvP,YAErCqX,KAAI,SAAC+J,GAC9B,MAAO,CACLkI,OAAQupC,GAAgB,UACpBtxC,GAAaH,EAAIkI,aACjBxU,EACJ0U,QAASqpC,GAAgB,WAAazxC,EAAIoI,aAAU1U,EACpD6S,SAAUkrC,GAAgB,YACtBzxC,EAAIsN,EAAI/G,SAASnjB,WACjBsQ,EACJ2U,QAASopC,GAAgB,WAAazxC,EAAIsN,EAAIjF,QAAQjlB,WAAQsQ,EAC9D4S,WAAYmrC,GAAgB,cACxBzxC,EAAIsN,EAAIhH,WAAWljB,WACnBsQ,EACJ4U,SAAUmpC,GAAgB,YACtBzxC,EAAIsN,EAAIhF,SAASllB,WACjBsQ,EACJqQ,SAAU0tC,GAAgB,YACtBzxC,EAAIsN,EAAIvJ,SAAS3gB,WACjBsQ,EACJkO,OAAQ6vC,GAAgB,UAAY9vC,GAAY3B,EAAI4B,aAAUlO,MAIlEk8C,EAAa+B,KACZ,CAAC3B,EAAe7+B,EAAMhjB,IAEzB,IA+CMyjD,GAAoB,CACxB,CAAExjD,WAAYc,EAAWzK,KAAM,SAC/B,CAAE2J,WAAYkf,EAAIhF,SAASllB,KAAMqB,KAAM,SACvC,CAAE2J,WAAY,SAAU3J,KAAM,QAO1Bw9C,GAAW,CAAC,CAAE7zC,WAAYc,IAE1B2iD,GAAoB,CACxB,CACEzjD,WAAYkf,EAAIhF,SAASllB,KACzBqB,KAAM,QACNqtD,eAAe,GAGjB,CACE1jD,WAAY,SACZ3J,KAAM,MAENqtD,eAAe,GAEjB,CACE1jD,WAAYkf,EAAIhF,SAASllB,KACzBqB,KAAM,QAENuvD,mBAAmB,GAErB,CACE5lD,WAAY,SACZ3J,KAAM,MACNuvD,mBAAmB,IAKvB,OACE,eAAC71B,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAtDY,WACH,OAAXkyB,QAAW,IAAXA,KAAapyB,WA+Cb,SAQE,gBAACnJ,GAAA,EAAD,WAcE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBA3OkB,SAACuqB,GACzB9uC,GAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KA2OtCzyC,gBAAiBA,EACjB0oB,sBAhPsB,SAAC5jB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAgPnDmL,QAASA,EACTy6C,cA5Oc,SAAC5I,GACrB9uC,GAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KA4OlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLxpB,OAAQ,GACRw2B,OAAQ,IACRv3B,WAAY,SACZkf,eAAgB,aAChBuO,YAAa,GACbC,aAAc,GACd9tB,UAAW,GAbf,UAgBE,eAAC0zD,GAAD,CACE/kC,QAASilC,EACTrwD,MAAK,OAAE0L,QAAF,IAAEA,OAAF,EAAEA,EAAW,GAClB6vC,SAjQkB,SAACv7C,GAC3BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,EAAQ,CAACA,GAAS,MAiQnDykB,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,UACLmqD,SAAO,EACPjtD,MAAO,MAET,eAACwT,GAAA,EAAD,CACEF,MAAO,CACLkd,SAAU,IACVryB,YAAa+S,EAAQ,QAAKkC,EAC1BlV,WAAYgT,OAAQkC,EAAY,IAJpC,SAOE,eAACT,GAAA,EAAD,CAAY5U,QAAQ,YAAYuV,MAAO,CAAEoP,WAAY,QAArD,SACGZ,GAAkB,CAAE/e,MAAO6e,WAIlC,eAAC6S,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQqR,OAAOguC,YAAc,GAAI3tB,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GAzH5Bx4C,GAAS,CAAE9M,KAAM,UAAWC,QAyH6BqlD,OAEhD96C,GAAS,eAAC,KAAD,CAAegzC,SAAUA,KACnC,eAAC,KAAD,CACEuQ,WAAYZ,GACZa,WAAYZ,KAEb5iD,GAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOguC,YAAc,IAC7B3P,eAAgBf,GAChBzH,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE3X,iBAAkByf,EAClBuC,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAOziB,GACG14B,QAAO,SAAC1F,GAAD,OAAa4gD,EAAI/1C,SAAS7K,EAAE3O,SACtDwvD,EAAOzkD,MAAK,SAAC4D,EAAQ4jC,GAAT,OACV5jC,EAAE5L,GAAKwvC,EAAExvC,GAAK,EAAIwvC,EAAExvC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvC8pD,EAAiB2C,MAGrB,eAAC,KAAD,CACEhiB,IAAK,CAAC,UACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,UACNlB,mBAAoBnsB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAa+tC,YAAaA,KACzBriD,GAAS,eAAC,KAAD,CAAe8jD,wBAAsB,IAC9C9jD,GACC,eAAC,KAAD,CACEk5B,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,gBAMnC,eAAC,KAAD,CACE3G,IAAKwmD,GACLlgC,KAAMA,EACNgf,QAASA,EACT6iB,OAnRO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMhB,EAAM,IAAIvkD,KACV1K,EAAI,yBAAqBkd,GAAsB+xC,IACrDiB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE5uD,KAAM,6BADvB,UAEDrB,EAFC,qBCzNL,IAAM6wD,GAA0B,CACrCrmD,gBAAiB,QACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbc,aAAc,GACdb,YAAa,GACbC,UAAW,GACXa,UAAW,GACXC,SAAU,GACVE,QAAS,OACTC,OAAO,EACPC,UAAW,OACXjB,OAAQ,KACRE,KAAM,CAAC,CAAEC,WAAY,YAAaxP,UAAW,UAGlCs1D,GAAsB,SAAC3vD,EAA2BC,GAC7D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,kBACH,OAAO,6BAAKH,GAAZ,IAAmBqK,aAAcpK,EAAOE,UAC1C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBwJ,YAAavJ,EAAOE,UACzC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmByJ,UAAWxJ,EAAOE,UACvC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmBsK,UAAWrK,EAAOE,UACvC,IAAK,cACH,OAAO,6BAAKH,GAAZ,IAAmBuK,SAAUtK,EAAOE,UACtC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmByK,QAASxK,EAAOE,UACrC,IAAK,WACH,OAAO,6BAAKH,GAAZ,IAAmB0K,MAAOzK,EAAOE,UACnC,IAAK,eACH,OAAO,6BAAKH,GAAZ,IAAmB2K,UAAW1K,EAAOE,UACvC,IAAK,YACH,OAAO,6BAAKH,GAAZ,IAAmB0J,OAAQzJ,EAAOE,UACpC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCzCPwvD,GAJoB1mD,yBACjC,ICkEI+hD,GAAqB,SAAC,GAAD,IAAG1+C,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmCh9B,UAAWjC,EAAQg/B,iBAE3CF,GAAiBC,cAXf,SAACjwC,GAAD,MAAY,CACzBkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BysC,CAC5B2f,IAEWC,GAAkB5f,aAC7B,GACA,CAAEzsC,KAAM,kBAFqBysC,CAG7B2f,IAEa,SAASE,GAAT,GAUN,IATPl+C,EASM,EATNA,MACAsW,EAQM,EARNA,MACAjT,EAOM,EAPNA,SACAioB,EAMM,EANNA,YACAD,EAKM,EALNA,UACAqH,EAIM,EAJNA,SACA2P,EAGM,EAHNA,QACAj0C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQmyB,EADR,OAEgBrlB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMmyB,EAFN,OAIkBtlB,oBAAS,IAJ3B,oBAICogB,EAJD,KAIOsuB,EAJP,OAKiC1uC,oBAAS,IAL1C,oBAKC4+C,EALD,KAKYC,EALZ,OAMyB7+C,oBAAS,MANlC,oBAMCmR,EAND,KAMQ2tC,EANR,OAOiC9+C,oBAAS,MAP1C,oBAOC++C,EAPD,KAOYC,EAPZ,KASAziC,EAAMzF,GAAW,CAAErW,QAAOsW,UAT1B,EAWoC/W,oBAAS,CACjDuc,EAAIrQ,UACJqQ,EAAIlN,KACJkN,EAAI/G,SACJ+G,EAAIjF,QACJiF,EAAIhH,WACJgH,EAAIvJ,SACJuJ,EAAIrf,OACJqf,EAAInF,MACJmF,EAAI1L,SApBA,oBAWCouC,EAXD,KAWgBC,EAXhB,OAuBYl/C,oBAAS,CACzBuc,EAAIrQ,UACJqQ,EAAIlN,KACJkN,EAAI/G,SACJ+G,EAAIjF,QACJiF,EAAIhH,WACJgH,EAAIvJ,SACJuJ,EAAIrf,OACJqf,EAAInF,MACJmF,EAAI1L,SATCuuB,EAvBD,uBAmC0Cp/B,oBAAS,CACvD,CAAE3C,WAAYkf,EAAIpF,OAAO9kB,KAAM8sD,iBAAiB,KAD3CC,EAnCD,uBAwCiC9yB,aAAa+2B,GAAiB,CACnE5pB,YAAa,sBAzCT,oBAwCC6lB,EAxCD,KAwCaC,EAxCb,KA2CEjmB,EAAc8K,KAAd9K,UA3CF,EA8DF/4B,sBAAW6iD,IA9DT,IA8CJ5vD,MACEsJ,EA/CE,EA+CFA,YACAD,EAhDE,EAgDFA,gBACAY,EAjDE,EAiDFA,QACAI,EAlDE,EAkDFA,aACAb,GAnDE,EAmDFA,YACAC,GApDE,EAoDFA,UACAa,GArDE,EAqDFA,UACAC,GAtDE,EAsDFA,SACAG,GAvDE,EAuDFA,MACAD,GAxDE,EAwDFA,QACAE,GAzDE,EAyDFA,UACAjB,GA1DE,EA0DFA,OACAE,GA3DE,EA2DFA,KAEFoD,GA7DI,EA6DJA,SA0BIg/C,GAAqB,SAACltD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpCmtD,GAAmB,SAACntD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KASxCozB,sBAAU,WAAO,IAAD,IACRg6B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,yDAAwCA,OAAQ,GAEhE,GADAuxC,EAAQgR,GACJxhD,GAAO,CACT,IAAMsN,EAAM8Y,GAAc,CACxBjQ,KAAMqrC,EACNrtD,KAAM8L,KAER6gD,EAAaxzC,GAEf,IAAI45B,EAAM,EACVsa,EAAQE,SAAQ,SAAC5+C,GAAD,OAAaokC,GAAOpkC,EAAE6P,UACtCiuC,EAAS1Z,KACR,CAACma,IAEJ,IAAMM,GAAS,SAACxrC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlO,QAAS,EAAIkO,EAAKnP,KAAI,SAAC46C,GAAD,OAAaA,EAAGp0C,YAAO/I,GAoB7D+iB,sBAAU,YAlBQ,WAChB,IAAMzkB,EAAY,CAChB++C,WAAYH,GAAOhiD,GACnBoiD,YAAaJ,GAAO9hD,IACpBmiD,cAAeL,GAAO7iD,IACtBmjD,YAAaN,GAAO5iD,IACpBmjD,YAAaP,GAAO/hD,IACpB5K,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EACDA,EAAIogB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIxW,MAAOwW,SAAS,GAAI,GAAI,GAAI,KACpCrW,OAAQA,GAASA,GAAO9H,QAAKuN,GAE/B28C,EAAW,CACTr+C,cAKFo/C,KACC,CAACntD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAMmiD,GAAmBtlB,kBAAO,MAE1BulB,GAAcC,wBAAY,WAC9BF,GAAYnhC,QAAQshC,eACnB,CAACH,KAaEI,GAAkB,SAACruD,GACvB,IAAM20C,EAAKiY,EAAcv4C,QAAO,SAACi6C,GAAD,OAAaA,EAAG7mD,MAAQzH,KACxD,SAAI20C,GAAMA,EAAG7gC,OAAS,IAOxBuf,sBAAU,WACR,GAAIxnB,QACG,CACL,IAKM0iD,EALWlvD,KAAEs+B,QACjB5P,EACA,CAAChjB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGvP,YAEgBqX,KAAI,SAAC+J,GAC9B,MAAO,CACL8E,KAAM2sC,GAAgB,QAClBzxC,EAAI/C,UACFkD,GAAaH,EAAI/C,WACjB,WACFvJ,EACJ0M,KAAMqxC,GAAgB,QAClBzxC,EAAI/C,UACFwD,GAAiBT,EAAI/C,WACrB,WACFvJ,EACJyU,MAAOspC,GAAgB,SACnBzxC,EAAImI,MACFnI,EAAImI,MACJ,WACFzU,EACJzF,OAAQwjD,GAAgB,UACpBzxC,EAAI/R,OACFyT,GAA8B1B,EAAI/R,QAClC,WACFyF,EACJ6S,SAAUkrC,GAAgB,YACtBzxC,EAAIsN,EAAI/G,SAASnjB,MACf4c,EAAIsN,EAAI/G,SAASnjB,MACjB,WACFsQ,EACJ2U,QAASopC,GAAgB,WACrBzxC,EAAIsN,EAAIjF,QAAQjlB,MACd4c,EAAIsN,EAAIjF,QAAQjlB,MAChB,WACFsQ,EACJ4S,WAAYmrC,GAAgB,cACxBzxC,EAAIsN,EAAIhH,WAAWljB,MACjB4c,EAAIsN,EAAIhH,WAAWljB,MACnB,WACFsQ,EACJqQ,SAAU0tC,GAAgB,YACtBzxC,EAAIsN,EAAIvJ,SAAS3gB,MACf4c,EAAIsN,EAAIvJ,SAAS3gB,MACjB,WACFsQ,EACJkO,OAAQ6vC,GAAgB,UACpBzxC,EAAI4B,OACFD,GAAY3B,EAAI4B,QAChB,WACFlO,MAIRk8C,EAAa+B,MAEd,CAAC3B,EAAe7+B,EAAMhjB,KAEzB,IA0FMyjD,GAAoB,CACxB,CAAExjD,WAAYkf,EAAInF,MAAM/kB,KAAMqB,KAAM,SACpC,CAAE2J,WAAY,SAAU3J,KAAM,QAG1Bw9C,GAAW,CAAC,CAAE7zC,WAAYc,KAC1B2iD,GAAoB,CACxB,CACEzjD,WAAYkf,EAAInF,MAAM/kB,KACtBqB,KAAM,QACNqtD,eAAe,GAEjB,CACE1jD,WAAY,SACZ3J,KAAM,MACNqtD,eAAe,IAGbC,GAAexC,GAAU/9C,GAAOiG,QAAO,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,MAEjE,OACE,eAACg4B,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QA9CY,WACH,OAAXkyB,QAAW,IAAXA,KAAapyB,WAuCb,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACjhB,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLgN,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEjW,QAAS5E,GA3FQ,WACzB,IAAM+iD,EAAO,CACX,CAAE5uD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBygD,EAAanC,EAAUzpC,MAAMpQ,KAAI,SAACu4B,GACtC,OAAO,6BACFA,GADL,IAEEtsB,MAAOP,GAAY6sB,EAAGtsB,YAGpBsE,EAAO,CACXhV,QACA0gD,KAAMpqC,EAAM5F,MACZiwC,YAAajwC,EAAQP,GAAYmuC,EAAU5tC,OAAS,GACpDuT,MAAK,OAAEq6B,QAAF,IAAEA,OAAF,EAAEA,EAAWr6B,MAClB28B,WAAY5gD,EAAQ,kFAAmB,eACvCksC,KAAM7J,EAAQ6J,KACdl1C,MAAOqrC,EAAQ8J,KACfrvB,OAAQulB,EAAQ+J,IAChBtW,QAASuM,EAAQvM,QACjBuM,QAASriC,EAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAC1Ca,MAAOA,EAAQkc,GAAalc,GAAS,GACrCC,IAAKA,EAAMic,GAAajc,GAAO,GAC/BmE,MAAO,UACPgqD,IAAK/xC,GAAsB,IAAIxS,OAGrB,cAAEqjB,KAAM8gC,EAAYD,QAASxrC,IApErB,WACpB,IAAMwrC,EAAOhC,EAAc/5C,KAAI,SAACq8C,GAC9B,MAAO,CAAElvD,KAAMkvD,EAAGj2C,UAGdk2C,EAAe,GACjBvkD,IACFukD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGxD,SAAH,IAAGA,QAAH,EAAGA,GAAWpH,OAAd,OAAuBoH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW5K,OAE1D6K,IACFskD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGvD,SAAH,IAAGA,QAAH,EAAGA,GAAQrH,OAAX,OAAoBqH,SAApB,IAAoBA,QAApB,EAAoBA,GAAQ7K,OAEpD2K,IACFwkD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAanH,OAAhB,OAAyBmH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAa3K,OAE9DwL,GACF2jD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG5C,QAAH,IAAGA,OAAH,EAAGA,EAAchI,OAAjB,OAA0BgI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAcxL,OAGpE,IAAMojB,EAAO,CACXhV,QACA0gD,KAAMpqC,EAAM5F,MACZiwC,YAAajwC,EAAQP,GAAYO,GAAS,GAC1CkwC,WAAY5gD,EAAQ,kFAAmB,qBACvCksC,KAAM7J,EAAQ6J,KACdl1C,MAAOqrC,EAAQ8J,KACfrvB,OAAQulB,EAAQ+J,IAChBtW,QAASuM,EAAQvM,QACjBuM,QAASriC,EAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAC1Ca,MAAOA,EAAQkc,GAAalc,GAAS,GACrCC,IAAKA,EAAMic,GAAajc,GAAO,GAC/BquD,UACAlqD,MAAO,UACPgqD,IAAK/xC,GAAsB,IAAIxS,OAGrB,cAAEqjB,KAAMw+B,EAAWqC,QAASxrC,IA+FhCnK,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,eAACyrD,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBA9SkB,SAACuqB,GACzB9uC,GAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KA8StCzyC,gBAAiBA,EACjB0oB,sBAnTsB,SAAC5jB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAmTnDmL,QAASA,EACTy6C,cA/Sc,SAAC5I,GACrB9uC,GAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KA+SlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLxpB,OAAQ,GACRw2B,OAAQ,IACRv3B,WAAY,SACZkf,eAAgB,SAChBuO,YAAa,GACbC,aAAc,GACd9tB,UAAW,GAbf,UAgBE,eAAC,GAAD,CACE8O,aAAcA,EACdi/C,gBAnUsB,SAACxqD,GAC/BkO,GAAS,CAAE9M,KAAM,kBAAmBC,QAASrB,KAmUrC0K,YAAaA,GACb29B,eAlUqB,SAACroC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAkUpC2K,UAAWA,GACXmhB,aAjUmB,SAAC9rB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAiUlCy5B,YAAaA,EACbD,UAAWA,EACXqH,SAAUA,EACVmG,UAAWA,EACXx7B,UAAWA,GACX6lC,aApUmB,SAACrxC,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAoUlC2qD,WAAY,KACZl/C,SAAU,GACVi/C,YAAa,kBAAM,MACnBjmC,MAAOA,EACPtW,MAAOA,IAET,eAAC,GAAD,CACEid,QAASsjC,GACT1uD,MAAO2L,GACP0T,SAlHe,SAAChQ,GAlNG,IAACrP,EAmNL,SAAnBqP,EAAE05B,OAAO/oC,OACXmtD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmB79C,EAAE05B,OAAO/oC,OAxNFA,EAyNLiqB,EAAI5a,EAAE05B,OAAO/oC,OAAOD,KAxN3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MAoUlCmO,MAAOA,OAGX,eAACsC,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B5T,UAAW,EACX23B,OAAQ,KANZ,SASE,eAAC+7B,GAAD,CACE/kC,QAASliB,GACTlJ,MAAO4K,GACP2wC,SAjVgB,SAACv7C,GACzBkO,GAAS,CAAE9M,KAAM,YAAaC,QAASrB,KAiV/BykB,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,SACLmqD,SAAO,EACPjtD,MAAO,QAGX,eAACy0B,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQqR,OAAOguC,YAAc,GAAI3tB,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,GAChB27C,gBAAiB,SAACC,GAlI5Bx4C,GAAS,CAAE9M,KAAM,UAAWC,QAkI6BqlD,OAEhD96C,IAAS,eAAC,KAAD,CAAegzC,SAAUA,KACnC,eAAC,KAAD,CACEuQ,WAAYZ,GACZa,WAAYZ,KAEb5iD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOguC,YAAc,IAC7B3P,eAAiB1hC,GAAyBwgD,GAAjB7f,GACzBzH,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE3X,iBAAkByf,EAClBuC,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAOziB,GACG14B,QAAO,SAAC1F,GAAD,OAAa4gD,EAAI/1C,SAAS7K,EAAE3O,SACtDwvD,EAAOzkD,MAAK,SAAC4D,EAAQ4jC,GAAT,OACV5jC,EAAE5L,GAAKwvC,EAAExvC,GAAK,EAAIwvC,EAAExvC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvC8pD,EAAiB2C,MAGrB,eAAC,KAAD,CACEhiB,IAAK,CAAC,aACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,QACNlB,mBAAoBruB,KAEtB,eAAC,KAAD,CACEuvB,IAAK,CAAC,UACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAakvC,YAAaA,KACzBriD,IACC,eAAC,KAAD,CACEk5B,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,QACzBqhD,MAAOrhD,EAAQ,6CAAY,QAC3BshD,QAASthD,EAAQ,iCAAU,SAE7BuhD,wBAAsB,IAG1B,eAAC,KAAD,CACE5qB,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE3G,IAAKwmD,GACLlgC,KAAMA,EACNgf,QAASA,EACT6iB,OApXO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMhB,EAAM,IAAIvkD,KACV1K,EAAI,wBAAoBkd,GAAsB+xC,IACpDiB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE5uD,KAAM,6BADvB,UAEDrB,EAFC,qBC3LZ,IAWawsC,GAAiBC,cAXf,SAACjwC,GAAD,MAAY,CACzBkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BysC,EAHH,SAAC,GAAD,IAAG/+B,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmCh9B,UAAWjC,EAAQg/B,mBAMzC,SAASukB,GAAT,GAON,IANP7iD,EAMM,EANNA,MACAsW,EAKM,EALNA,MACAjT,EAIM,EAJNA,SAEAjV,GAEM,EAHNi0C,QAGM,EAFNj0C,OACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQmyB,EADR,OAEgBrlB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMmyB,EAFN,OAIkBtlB,oBAAS,IAJ3B,oBAICogB,EAJD,KAIOsuB,EAJP,OAKiC1uC,oBAAS,IAL1C,oBAKY6+C,GALZ,aAMyB7+C,oBAAS,MANlC,oBAMCmR,EAND,KAMQ2tC,EANR,KAQAviC,EAAMzF,GAAW,CAAErW,QAAOsW,UAR1B,EAUoC/W,oBAAS,CACjDuc,EAAIpF,OACJoF,EAAIvJ,SAGJuJ,EAAI5E,OACJ4E,EAAIlF,QACJkF,EAAI9E,MAEJ8E,EAAI3E,MACJ2E,EAAI1L,SApBA,oBAUCouC,EAVD,KAUgBC,EAVhB,OAuBYl/C,oBAAS,CACzBuc,EAAIpF,OACJoF,EAAIvJ,SAGJuJ,EAAI5E,OACJ4E,EAAIlF,QACJkF,EAAI9E,MAEJ8E,EAAI3E,MACJ2E,EAAI1L,SAVCuuB,EAvBD,uBAoC0Cp/B,oBAAS,CACvD,CAAE3C,WAAYkf,EAAIpF,OAAO9kB,KAAM8sD,iBAAiB,GAChD,CAAE9hD,WAAYkf,EAAI1L,OAAOxe,KAAM8sD,iBAAiB,KAF3CC,EApCD,uBAyCiC9yB,aAAa+yB,GAAkB,CACpE5lB,YAAa,sBA1CT,oBAyCC6lB,EAzCD,KAyCaC,EAzCb,KA4CEjmB,EAAc8K,KAAd9K,UA5CF,EA+DF/4B,sBAAW5B,IA/DT,IA+CJnL,MACEsJ,EAhDE,EAgDFA,YACAD,EAjDE,EAiDFA,gBACAY,EAlDE,EAkDFA,QACAI,EAnDE,EAmDFA,aACAb,EApDE,EAoDFA,YACAC,EArDE,EAqDFA,UACAa,EAtDE,EAsDFA,UACAC,EAvDE,EAuDFA,SACAC,EAxDE,EAwDFA,SACAE,EAzDE,EAyDFA,MACAD,EA1DE,EA0DFA,QACAE,EA3DE,EA2DFA,UACAf,EA5DE,EA4DFA,KAEFoD,GA9DI,EA8DJA,SAiBFklB,sBAAU,WAAO,IAAD,QACRg6B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCA,OAAQ,GAC3DylD,GAAqB,OAAXrD,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCo1B,UAAW,KAE9D1hB,EAAS+xC,EAAUvsC,OAAOusC,GAAW,KAErCjD,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASv5C,QAAS,EACdu5C,EAAQx6C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEEkN,OAAQ6B,GAAgB/O,QAG5B,GAEFkN,GACF8uC,EAAYkD,QAAQ,CAClBn3C,IAAK3O,KAAKukD,MACVwB,UAAW,sEACXC,QAAS,mBACTlyC,WAIJ69B,EAAQiR,GACR,IAAIva,EAAM,EACVua,EAAYC,SAAQ,SAAC5+C,GAAD,OAAaokC,GAAOpkC,EAAE6P,UAC1CiuC,EAAS1Z,KACR,CAACma,IAEJ,IAAMM,GAAS,SAACxrC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlO,QAAS,EAAIkO,EAAKnP,KAAI,SAAC46C,GAAD,OAAaA,EAAGp0C,YAAO/I,GAqB7D+iB,sBAAU,YAnBQ,WAChB,IAAMzkB,EAAY,CAChB8+C,SAAU,EACViD,WAAYnD,GAAO7hD,GACnBgiD,WAAYH,GAAOhiD,GACnBoiD,YAAaJ,GAAO9hD,GACpBmiD,cAAeL,GAAO7iD,GACtBmjD,YAAaN,GAAO5iD,GACpBmjD,YAAaP,GAAO/hD,GACpB5K,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EACDA,EAAIogB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIxW,MAAOwW,SAAS,GAAI,GAAI,GAAI,MAEtC+rC,EAAW,CACTr+C,cAKFo/C,KACC,CAACntD,EAAOC,EAAK+K,EAAOD,EAASE,IAEhC,IAAMmiD,GAAmBtlB,kBAAO,MAE1BulB,GAAcC,wBAAY,WAC9BF,GAAYnhC,QAAQshC,eACnB,CAACH,KAaEI,GAAkB,SAACruD,GACvB,IAAM20C,EAAKiY,EAAcv4C,QAAO,SAACi6C,GAAD,OAAaA,EAAG7mD,MAAQzH,KACxD,SAAI20C,GAAMA,EAAG7gC,OAAS,IAOxBuf,sBAAU,WACR,IAEMk7B,EAFWlvD,KAAEs+B,QAAQ5P,EAAM,CAAChjB,EAAK,GAAGC,YAAa,CAACD,EAAK,GAAGvP,YAErCqX,KAAI,SAAC+J,GAC9B,MAAO,CACLkI,OAAQupC,GAAgB,UACpBtxC,GAAaH,EAAIkI,aACjBxU,EACJ0U,QAASqpC,GAAgB,WAAazxC,EAAIoI,aAAU1U,EACpD6S,SAAUkrC,GAAgB,YACtBzxC,EAAIsN,EAAI/G,SAASnjB,WACjBsQ,EACJ2U,QAASopC,GAAgB,WAAazxC,EAAIsN,EAAIjF,QAAQjlB,WAAQsQ,EAC9D4S,WAAYmrC,GAAgB,cACxBzxC,EAAIsN,EAAIhH,WAAWljB,WACnBsQ,EACJ4U,SAAUmpC,GAAgB,YACtBzxC,EAAIsN,EAAIhF,SAASllB,WACjBsQ,EACJqQ,SAAU0tC,GAAgB,YACtBzxC,EAAIsN,EAAIvJ,SAAS3gB,WACjBsQ,EACJkO,OAAQ6vC,GAAgB,UAAY9vC,GAAY3B,EAAI4B,aAAUlO,MAIlEk8C,EAAa+B,KACZ,CAAC3B,EAAe7+B,EAAMhjB,IAEzB,IA+CMyjD,GAAoB,CACxB,CAAExjD,WAAYc,EAAWzK,KAAM,SAC/B,CAAE2J,WAAYkf,EAAIhF,SAASllB,KAAMqB,KAAM,SACvC,CAAE2J,WAAY,SAAU3J,KAAM,QAO1Bw9C,GAAW,CAAC,CAAE7zC,WAAYc,IAE1B2iD,GAAoB,CACxB,CACEzjD,WAAYkf,EAAIhF,SAASllB,KACzBqB,KAAM,QACNqtD,eAAe,GAGjB,CACE1jD,WAAY,SACZ3J,KAAM,MAENqtD,eAAe,GAEjB,CACE1jD,WAAYkf,EAAIhF,SAASllB,KACzBqB,KAAM,QAENuvD,mBAAmB,GAErB,CACE5lD,WAAY,SACZ3J,KAAM,MACNuvD,mBAAmB,IAKvB,OACE,eAAC71B,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAtDY,WACH,OAAXkyB,QAAW,IAAXA,KAAapyB,WA+Cb,SAQE,gBAACnJ,GAAA,EAAD,WAcE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBA5OkB,SAACuqB,GACzB9uC,GAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KA4OtCzyC,gBAAiBA,EACjB0oB,sBAjPsB,SAAC5jB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAiPnDmL,QAASA,EACTy6C,cA7Oc,SAAC5I,GACrB9uC,GAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KA6OlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLxpB,OAAQ,GACRw2B,OAAQ,IACRv3B,WAAY,SACZkf,eAAgB,aAChBuO,YAAa,GACbC,aAAc,GACd9tB,UAAW,GAbf,UAgBE,eAAC0zD,GAAD,CACE/kC,QAAS4b,EACThnC,MAAK,OAAEwL,QAAF,IAAEA,OAAF,EAAEA,EAAY,GACnB+vC,SAlQmB,SAACv7C,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,EAAQ,CAACA,GAAS,MAkQpDykB,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,WACLmqD,SAAO,EACPjtD,MAAO,MAET,eAACwT,GAAA,EAAD,CACEF,MAAO,CACLkd,SAAU,IACVryB,YAAa+S,EAAQ,QAAKkC,EAC1BlV,WAAYgT,OAAQkC,EAAY,IAJpC,SAOE,eAACT,GAAA,EAAD,CAAY5U,QAAQ,YAAYuV,MAAO,CAAEoP,WAAY,QAArD,SACGZ,GAAkB,CAAE/e,MAAO6e,WAIlC,eAAC6S,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQqR,OAAOguC,YAAc,GAAI3tB,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GAzH5Bx4C,GAAS,CAAE9M,KAAM,UAAWC,QAyH6BqlD,OAEhD96C,GAAS,eAAC,KAAD,CAAegzC,SAAUA,KACnC,eAAC,KAAD,CACEuQ,WAAYZ,GACZa,WAAYZ,KAEb5iD,GAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOguC,YAAc,IAC7B3P,eAAgBf,GAChBzH,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE3X,iBAAkByf,EAClBuC,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAOziB,GACG14B,QAAO,SAAC1F,GAAD,OAAa4gD,EAAI/1C,SAAS7K,EAAE3O,SACtDwvD,EAAOzkD,MAAK,SAAC4D,EAAQ4jC,GAAT,OACV5jC,EAAE5L,GAAKwvC,EAAExvC,GAAK,EAAIwvC,EAAExvC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvC8pD,EAAiB2C,MAGrB,eAAC,KAAD,CACEhiB,IAAK,CAAC,UACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,UACNlB,mBAAoBnsB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAa+tC,YAAaA,KACzBriD,GAAS,eAAC,KAAD,CAAe8jD,wBAAsB,IAC9C9jD,GACC,eAAC,KAAD,CACEk5B,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,gBAMnC,eAAC,KAAD,CACE3G,IAAKwmD,GACLlgC,KAAMA,EACNgf,QAASA,EACT6iB,OAnRO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMhB,EAAM,IAAIvkD,KACV1K,EAAI,yBAAqBkd,GAAsB+xC,IACrDiB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE5uD,KAAM,6BADvB,UAEDrB,EAFC,qBC3NL,IAAMkxD,GAA4B,CACvC3mD,iBAAkB,aAClBC,gBAAiB,MACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,YAAaxP,UAAW,UAGlC21D,GAAwB,SACnChwD,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAO,6BAAKF,GAAZ,IAAmBoJ,iBAAkBnJ,EAAOE,UAC9C,IAAK,qBACH,OAAO,6BAAKH,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCyWP6vD,GA7WO,SAAC,GASX,IARVv/C,EAQS,EARTA,KACA8X,EAOS,EAPTA,QACA/M,EAMS,EANTA,IACA4R,EAKS,EALTA,MACAI,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACAryB,EAES,EAFTA,MACAsjB,EACS,EADTA,MACS,EACenS,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAE+BnW,KAAMjE,SAAS,IAAIjD,MAFlD,oBAEFkmC,EAFE,KAEYC,EAFZ,OAG6Bj/B,KAAMjE,SAAS,IAH5C,oBAGFi6C,EAHE,KAGWC,EAHX,OAI+Bj2C,KAAMjE,SAAS,IAJ9C,oBAIFm6C,EAJE,KAIYC,EAJZ,OAM4Bn2C,KAAMjE,SAAS,MAN3C,oBAMF4lC,EANE,KAMQyU,EANR,OAO8Bp2C,KAAMjE,SAAS,MAP7C,oBAOFkT,EAPE,KAOSonC,EAPT,OASyBt6C,oBAAc,MATvC,oBASF/C,EATE,KASSmhB,EATT,OAUyBpe,qBAAc,GAVvC,oBAUF27B,EAVE,KAUSC,EAVT,OAYqB57B,oBAAc,MAZnC,oBAYFk7B,EAZE,KAYOW,EAZP,OAayB77B,oBAAc,IAbvC,oBAaF87B,EAbE,KAaSC,EAbT,OAe6B/7B,oBAAc,MAf3C,oBAeFhD,EAfE,KAeW29B,EAfX,QAgB6B36B,qBAAc,GAhB3C,sBAgBFw7B,GAhBE,MAgBWC,GAhBX,SAkByBz7B,oBAAc,MAlBvC,sBAkBFoxB,GAlBE,MAkBSwS,GAlBT,MAoBD9X,GAAckQ,KAAdlQ,UACAC,GAAgBmC,KAAhBnC,YArBC,GAuByC5rB,aAChD5J,EAAIqlB,iBADExb,GAvBC,GAuBDA,SAAUC,GAvBT,GAuBSA,aAAcC,GAvBvB,GAuBuBA,OAAQwxB,GAvB/B,GAuB+BA,MAvB/B,GA8BUvxB,sBAAWtB,IA9BrB,MA4BPyB,UAAaqW,GA5BN,GA4BMA,MAAOtW,GA5Bb,GA4BaA,MACX1N,GA7BF,GA6BPhC,MAASgC,KAGHkW,GAAa4wC,KAAb5wC,SAERyc,sBAAU,WACR,GAAIoG,IAAaA,GAAU3lB,OAAS,EAAG,CACrC,IAAM81B,EAAWnQ,GAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAIkP,UAAYA,KAChEa,EAAaE,MAEd,CAACf,EAASpP,KAEbpG,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB,IAAM6uC,EAAKtrC,EAAIiE,UACTzG,EAAKwC,EAAI22B,SACT1J,EAAQjtB,EAAI2G,aACZumB,EAAQltB,EAAI+G,WACZgC,EAAS/I,EAAI+I,OAEnB,GAAIkkB,EAAO,CACT,IAAMjB,EAASlP,GAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQwwB,KAAO,GACnEvB,EAAeM,GAEjB,GAAIkB,EAAO,CACT,IAAMC,EAAOtQ,GAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQywB,KAAO,GAC/D/d,EAAage,GAEf,GAAIpkB,EAAQ,CACV,IAAM5F,EAAMD,EAAMzL,QAAO,SAACw+B,GAAD,OAAaA,EAAG9vC,KAAO4iB,KAAQ,GACxD4rB,GAAaxxB,GAEf,IAAMqoC,EAAiBxxC,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAAmC,YAAf1S,EAAII,UAE/CylD,EAAeO,GACf,IAAMC,EAAiBzxC,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAI3C,GAFA2lD,EAAgBM,GAEZH,EAAI,CACN,IAAM5nC,EAAS1J,GAASvC,QACtB,SAACrS,GAAD,OAAcA,EAAI8U,OAASoxC,GAAqB,YAAflmD,EAAII,UACrC,GACF6lD,EAAa3nC,GAEf,GAAIlG,EAAI,CACN,IAAMmG,EAAQ3J,GAASvC,QACrB,SAACrS,GAAD,OAAcA,EAAI8U,OAASsD,GAAqB,YAAfpY,EAAII,UACrC,GACF4lD,EAAYznC,QAET,CACL,IAAM6nC,EAAiBxxC,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAAmC,YAAf1S,EAAII,UAE/CylD,EAAeO,GACf,IAAMC,EAAiBzxC,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3C2lD,EAAgBM,GAChBJ,EAAY,OAACI,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC9BL,EAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAiB,OAE9B,CAACxrC,EAAK/K,IAET,IAAMpD,GAAQ,yCAAG,WAAO3D,GAAP,8BAAA6D,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8uB,EAAe/uB,GAAe+uB,EAAe9uB,GAFlC,gCAGPyG,GACJR,EACA3Z,GAAQ,+FAAsB,yBALnB,2CASPoQ,EAAiB1T,EAAjB0T,OAAQkT,EAAS5mB,EAAT4mB,KACX6hB,GAAa1yB,EAVH,iCAWP0H,GACJR,EACA3Z,GAAQ,wHAA2B,oCAbxB,4CAiBXmlC,IAAa1yB,EAjBF,kCAkBP0H,GACJR,EACA3Z,GAAQ,iJAAgC,iCApB7B,0CAwBT8U,EAAavY,EACf,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEjB6S,EAAWvY,EACb,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,OAE3B,CACE0e,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,GAGf1B,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChC0M,KAAM4zB,EACN2C,SAAUA,EAASz8B,KACnB+J,UAAWA,EAAU/J,KACrB0H,SACAmH,OAAQoZ,GAAYA,GAAUh8B,QAAKuN,EACnC4S,aACAC,WACAuO,OACAtvB,OAAQ1B,GAAK0B,OACbu9B,OAAQj/B,GAAK2Y,KAIfumB,GADepR,EAAQI,EAAYC,EACrBjgB,GAlEC,4CAAH,sDAqERgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,uBAGJqZ,GAAaF,EAAS3Z,IAHlB,OAIV06B,KAJU,gDAMV7I,GAAQ,EAAD,IANG,yDAAH,wDAULA,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,IAFlB,6CAIN+Z,GAAWJ,EAAS3Z,IAJd,OAKZgW,QAAQC,IAAIzW,GALA,2CAAH,sDAuBPk7B,GAAa,WAbjBrJ,KACAwoB,EAAa,MACbD,EAAY,MACZH,EAAe,IACfE,EAAgB,IAChBh8B,EAAa,MACbwd,GAAa,GACbjB,EAAe,MACfc,IAAe,GACfI,EAAW,MACXE,EAAa,IACb6H,GAAa,MAIb5nB,KAWF,OACE,eAAC+U,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASmf,GACT7vB,MAAOyL,GAAM3d,SACb0H,SAVmB,WACrBT,GAAaS,GAAbT,IAUExR,MAAOA,EACPmiC,KAAMA,EACNhuB,GAAI,GARN,SAUE,gBAACkhB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAAC,GAAD,CACE1jB,MAAOA,GACP6B,MAAOyU,GAAM1H,KACb/c,MAAO2wC,EACPtxB,SA5BW,SAACoC,GACxBmvB,EAAgBnvB,QA8BR,eAACmQ,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAO7K,GAAQ,sEAAiB,eAChCsW,MAAOA,GACP2G,QAASu8B,EACT3nD,MAAOszC,EACPjoB,eAAgB08B,EAChBj6C,SAAUA,GACVK,MAAOA,GACPijD,YAAU,MAGd,eAACx/B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,YACLiZ,MAAO7K,GAAQ,0DAAe,cAC9BsW,MAAOA,GACP2G,QAASy8B,EACT7nD,MAAO4gB,EACPyK,eAAgB28B,EAChBl6C,SAAUA,GACVK,MAAOA,GACPijD,YAAU,MAId,gBAACx/B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,GAAMlG,OACbzQ,SAAUA,GACVE,OAAQA,GACR2O,IAAKA,EACLvb,KAAK,SACLnE,MAAO,MAET,eAACgrC,GAAD,CACEloC,KAAK,OACLiZ,MAAOyL,GAAMtd,KACbsd,MAAOA,GACP2G,QAASvL,EACT7f,MAAO8+B,GACPzT,eAAgBimB,GAChBxjC,SAAUA,GACVK,MAAOA,GACPgC,WAAS,IAEX,eAAC83B,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,GAAMxB,WACbwB,MAAOA,GACP2G,QAASqO,GACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgB6d,GAChB5d,YAAa2d,GACbp7B,SAAUA,GACVK,MAAOA,GACP0nB,GAAI,KAEN,gBAACkU,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACH3c,MAAO4oC,EACPvpB,SAAU,SAAChQ,GACTk6B,EAAWxlB,OAAO1U,EAAE05B,OAAO/oC,QAC3B8rB,EAAa,OAPjB,UAUE,eAACuB,GAAA,EAAD,CACErtB,MAAO,EACPstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,GAAQ,mDAAa,cAG9B,eAACkf,GAAA,EAAD,CACErtB,MAAO,EACPstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,GAAQ,6CAAY,iBAG/B,eAAC85B,GAAD,CACEloC,KAAK,WACLiZ,MAAmB,IAAZ4vB,EAAgBnkB,GAAMvB,SAAWuB,GAAMpL,UAC9C2S,UAAW4c,EACXnkB,MAAOA,GACP2G,QAASoe,EACTxpC,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACbv7B,SAAUA,GACVK,MAAOA,GACP0nB,GAAI,KAGN,eAACD,GAAD,CACE71B,KAAK,OACLqgC,WAAS,EACTtS,KAAM,EACN9d,MAAOyU,GAAM0b,YACbryB,SAAUA,GACVE,OAAQA,GACR2O,IAAKA,EACLxM,WAAS,YAKjB,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UChVR,SAASw/B,GAAT,GAAgE,IAA5CljD,EAA2C,EAA3CA,MAAOsW,EAAoC,EAApCA,MAAOjT,EAA6B,EAA7BA,SAAUjP,EAAmB,EAAnBA,SAAUhG,EAAS,EAATA,MAAS,EAC1DmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOyL,EAAM1H,MAC7B,CAAEhd,KAAM,WAAYiZ,MAAO7K,EAAQ,sEAAiB,gBACpD,CAAEpO,KAAM,YAAaiZ,MAAO7K,EAAQ,0DAAe,eACnD,CACEpO,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOyL,EAAMxB,YAEf,CACEljB,KAAMoO,EAAQ,iBAAmB,eACjC6K,MAAM,GAAD,OAAKyL,EAAMvB,SAAX,cAAyBuB,EAAMpL,YAEtC,CACEtZ,KAAM,SACNiZ,MAAO7K,EAAQ,uCAAW,QAE5B,CAAEpO,KAAM,OAAQiZ,MAAOyL,EAAM0b,aAE7B,CAAEpgC,KAAM,SAAUiZ,MAAOyL,EAAMlG,UAlB1BuuB,EADqE,uBAsBpDp/B,oBAAS,IAtB2C,oBAsBrEogB,EAtBqE,KAsB/DsuB,EAtB+D,OAuB9C1uC,qBAAS,GAvBqC,oBAuBrE+iC,EAvBqE,KAuB5DC,EAvB4D,OAyBlDhjC,oBAAc,MAzBoC,oBAyBrE9M,EAzBqE,KAyB9DmyB,EAzB8D,OA0BtDrlB,oBAAc,MA1BwC,oBA0BrE7M,EA1BqE,KA0BhEmyB,EA1BgE,KA2BpEnT,EAAUw8B,KAAVx8B,MA3BoE,EAgCxE5R,sBAAWzB,IAhC6D,IA8B1EtL,MAASsJ,EA9BiE,EA8BjEA,YAAaD,EA9BoD,EA8BpDA,gBAAiBY,EA9BmC,EA8BnCA,QAASL,EA9B0B,EA8B1BA,KAChDoD,EA/B0E,EA+B1EA,SA/B0E,EA6ClC8rB,aAAas3B,GAAa,CAClEnqB,YAAa,sBA9C6D,oBA6CrEoqB,EA7CqE,KA6CvDC,EA7CuD,KAgDpE76C,EAAa4wC,KAAb5wC,SACFkjC,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOg3B,GACP3iD,UAAW,CACT/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,IAG/C,CACEiqB,MAAOmB,IAET,CACEnB,MAAO4M,MAKb9T,sBAAU,WACR,IAAMzkB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,GAE7CkhD,EAAa,CACX5iD,gBAED,CAAC/N,EAAOC,IA3EiE,MA6EtDwN,aAAYojD,GAAgB5X,GAA3C6X,EA7EqE,uBA8ErDrjD,aAAYsjD,GAAgB9X,GAA5C+X,EA9EqE,uBA+EnDvjD,aAAYwjD,GAAgBhY,GAA9CiY,EA/EqE,qBAiFtE9kB,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpBivC,EAAe,CAAEnjD,UAAW,CAAEyK,UAHZ,2CAAH,sDAOnBga,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIo+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAc/gB,UAChBC,GAAW,GAEb,OAAI8gB,QAAJ,IAAIA,GAAJ,UAAIA,EAAc3mD,YAAlB,iBAAI,EAAoBymD,mBAAxB,aAAI,EAAiCzmD,KAAM,CAAC,IAClCA,EAAS2mD,EAAa3mD,KAAKymD,YAA3BzmD,KACRuxC,EAAQvxC,GACR6lC,GAAW,MAEZ,CAAC8gB,IASJ,OACE,eAAC12B,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAdY,WACF,OAAZy2B,QAAY,IAAZA,KAAc32B,WAOd,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBAnFkB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAmFtCzyC,gBAAiBA,EACjB0oB,sBAxFsB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAwFnDmL,QAASA,EACTy6C,cAnFc,SAAC5I,GACrB9uC,EAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAmFlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAAC,KAAD,CAAMuxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GA7B1Bx4C,EAAS,CAAE9M,KAAM,UAAWC,QA6B2BqlD,OAEjD,eAAC,KAAD,CAAcvZ,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,QACNlB,mBAAoBzuB,KAEtB,eAAC,KAAD,CACE2vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,QAAS,SACflB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,aACNlB,mBAAoB,SAACtyC,GAAD,OAClBwmB,GAAiBxmB,EAAO4c,EAAUxI,MAGtC,eAAC,KAAD,CACEo/B,IAAK,CAAC,UACNlB,mBAAoB,SAACtyC,GAAD,OAClB6lB,GAAgB,6BAAK7lB,GAAN,IAAa8lB,cAGhC,eAAC,KAAD,CACE0tB,IAAK,CAAC,YACNlB,mBAAoB,SAACtyC,GAAD,OAClBwmB,GAAiBxmB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAW+iC,EACX9iC,WAAYgjC,EAHd,SAKE,eAAC,GAAD,CAAe/xC,MAAOA,SAGzB4wB,GAAW,eAAC,GAAD,CAAStiC,MAAOA,SC9LpC,IAQMg+C,GAAqB,SAAC,GAAD,IAAG1+C,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmCh9B,UAAWjC,EAAQg/B,iBAE3CF,GAAiBC,cAXf,SAACjwC,GAAD,MAAiB,CAC9BkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BysC,CAC5B2f,IAEWC,GAAkB5f,aAC7B,GACA,CAAEzsC,KAAM,kBAFqBysC,CAG7B2f,IAEa,SAAS4F,GAAT,GAaN,IAZP5jD,EAYM,EAZNA,MACAsW,EAWM,EAXNA,MACAjT,EAUM,EAVNA,SACAioB,EASM,EATNA,YACAD,EAQM,EARNA,UACAqH,EAOM,EAPNA,SACAmxB,EAMM,EANNA,UACArH,EAKM,EALNA,WAEAna,GAGM,EAJNyhB,OAIM,EAHNzhB,SACAj0C,EAEM,EAFNA,MACAgG,EACM,EADNA,SACM,EACoBmL,oBAAc,MADlC,oBACC9M,EADD,KACQmyB,EADR,OAEgBrlB,oBAAc,MAF9B,oBAEC7M,EAFD,KAEMmyB,EAFN,OAIkBtlB,oBAAS,IAJ3B,oBAICogB,EAJD,KAIOsuB,EAJP,OAKiC1uC,oBAAS,IAL1C,oBAKC4+C,EALD,KAKYC,EALZ,OAMyB7+C,oBAAS,MANlC,oBAMCmR,EAND,KAMQ2tC,EANR,OAOiC9+C,oBAAS,MAP1C,oBAOC++C,EAPD,KAOYC,EAPZ,KASAziC,EAAMzF,GAAW,CAAErW,QAAOsW,UAT1B,EAWoC/W,oBAAS,CACjDuc,EAAIpF,OACJoF,EAAI/G,SACJ+G,EAAIjF,QACJiF,EAAIhH,WACJgH,EAAIhF,SACJgF,EAAI/E,SACJ+E,EAAIlF,QACJkF,EAAI1L,SAnBA,oBAWCouC,EAXD,KAWgBC,EAXhB,OAsBYl/C,oBAAS,CACzBuc,EAAIpF,OACJoF,EAAI/G,SACJ+G,EAAIjF,QACJiF,EAAIhH,WACJgH,EAAIhF,SACJgF,EAAI/E,SACJ+E,EAAIlF,QACJkF,EAAI1L,SARCuuB,EAtBD,uBAiC0Cp/B,oBAAS,CACvD,CAAE3C,WAAYkf,EAAIpF,OAAO9kB,KAAM8sD,iBAAiB,GAChD,CAAE9hD,WAAYkf,EAAI1L,OAAOxe,KAAM8sD,iBAAiB,KAF3CC,EAjCD,uBAsCiC9yB,aAAa+yB,GAAkB,CACpE5lB,YAAa,sBAvCT,oBAsCC6lB,EAtCD,KAsCaC,EAtCb,OA2DFh/C,sBAAWd,IA3DT,IA2CJjM,MACEsJ,EA5CE,EA4CFA,YACAD,EA7CE,EA6CFA,gBACAY,EA9CE,EA8CFA,QACAI,GA/CE,EA+CFA,aACAb,GAhDE,EAgDFA,YACAC,GAjDE,EAiDFA,UACA0C,GAlDE,EAkDFA,UAEA5B,IApDE,EAmDF6B,WAnDE,EAoDF7B,UACAG,GArDE,EAqDFA,MACAD,GAtDE,EAsDFA,QACAE,GAvDE,EAuDFA,UACAf,GAxDE,EAwDFA,KAEFoD,GA1DI,EA0DJA,SAgCIg/C,GAAqB,SAACltD,GAC1BkO,GAAS,CAAE9M,KAAM,aAAcC,QAASrB,KAEpCmtD,GAAmB,SAACntD,GACxBkO,GAAS,CAAE9M,KAAM,WAAYC,QAASrB,KASxCozB,sBAAU,WAAO,IAAD,IACRg6B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCA,OAAQ,GAC3DwiD,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASv5C,QAAS,EACdu5C,EAAQx6C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEEkN,OAAQ6B,GAAgB/O,QAG5B,GAEN,GADA+qC,EAAQiR,GACJzhD,GAAO,CACT,IAAMsN,EAAM8Y,GAAc,CACxBjQ,KAAMsrC,EACNttD,KAAM8L,KAER6gD,EAAaxzC,GAGf,IAAI45B,EAAM,EACVua,EAAYC,SAAQ,SAAC5+C,GAAD,OAAaokC,GAAOpkC,EAAE6P,UAC1CiuC,EAAS1Z,KACR,CAACma,IAEJ,IAAMM,GAAS,SAACxrC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlO,QAAS,EAAIkO,EAAKnP,KAAI,SAAC46C,GAAD,OAAaA,EAAGp0C,YAAO/I,GAoB7D+iB,sBAAU,YAlBQ,WAChB,IAAMzkB,EAAY,CAChB8+C,SAAU,GACVC,WAAYH,GAAOhiD,IACnBoiD,YAAaJ,GAAO9hD,IACpBmiD,cAAeL,GAAO7iD,IACtBmjD,YAAaN,GAAO5iD,IACpBunD,YAAa3E,GAAOlgD,IACpBzM,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EACDA,EAAIogB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIxW,MAAOwW,SAAS,GAAI,GAAI,GAAI,MAEtC+rC,EAAW,CACTr+C,cAKFo/C,KACC,CAACntD,EAAOC,EAAK+K,GAAOD,GAASE,KAEhC,IAAMmiD,GAAmBtlB,kBAAO,MAE1BulB,GAAcC,wBAAY,WAC9BF,GAAYnhC,QAAQshC,eACnB,CAACH,KAaEI,GAAkB,SAACruD,GACvB,IAAM20C,EAAKiY,EAAcv4C,QAAO,SAACi6C,GAAD,OAAaA,EAAG7mD,MAAQzH,KACxD,SAAI20C,GAAMA,EAAG7gC,OAAS,IAOxBuf,sBAAU,WACR,GAAIxnB,QACG,CACL,IAMM0iD,EANWlvD,KAAEs+B,QACjB5P,EACA,CAAChjB,GAAK,GAAGC,YACT,CAACD,GAAK,GAAGvP,YAGgBqX,KAAI,SAAC+J,GAC9B,MAAO,CACLkI,OAAQupC,GAAgB,UACpBzxC,EAAIoI,QACFjI,GAAaH,EAAIkI,QACjB,WACFxU,EACJ0U,QAASqpC,GAAgB,WACrBzxC,EAAIoI,QACFpI,EAAIoI,QACJ,WACF1U,EACJ6S,SAAUkrC,GAAgB,YACtBzxC,EAAIsN,EAAI/G,SAASnjB,MACf4c,EAAIsN,EAAI/G,SAASnjB,MACjB,WACFsQ,EACJ2U,QAASopC,GAAgB,WACrBzxC,EAAIsN,EAAIjF,QAAQjlB,MACd4c,EAAIsN,EAAIjF,QAAQjlB,MAChB,WACFsQ,EACJ4S,WAAYmrC,GAAgB,cACxBzxC,EAAIsN,EAAIhH,WAAWljB,MACjB4c,EAAIsN,EAAIhH,WAAWljB,MACnB,WACFsQ,EACJ4U,SAAUmpC,GAAgB,YACtBzxC,EAAIsN,EAAIhF,SAASllB,MACf4c,EAAIsN,EAAIhF,SAASllB,MACjB,WACFsQ,EACJ6U,SAAUkpC,GAAgB,YACtBzxC,EAAIsN,EAAI/E,SAASnlB,MACf4c,EAAIsN,EAAI/E,SAASnlB,MACjB,WACFsQ,EACJkO,OAAQ6vC,GAAgB,UACpBzxC,EAAI4B,OACFD,GAAY3B,EAAI4B,QAChB,WACFlO,MAGRk8C,EAAa+B,MAEd,CAAC3B,EAAe7+B,EAAMhjB,KAEzB,IAqFMyjD,GAAoB,CACxB,CAAExjD,WAAYkf,EAAIlF,QAAQhlB,KAAMqB,KAAM,SACtC,CAAE2J,WAAY,SAAU3J,KAAM,QAG1Bw9C,GAAW,CAAC,CAAE7zC,WAAYc,KAC1B2iD,GAAoB,CACxB,CACEzjD,WAAYkf,EAAIlF,QAAQhlB,KACxBqB,KAAM,QACNqtD,eAAe,GAEjB,CACE1jD,WAAY,SACZ3J,KAAM,MACNqtD,eAAe,IAGbC,GAAexC,GAAU/9C,GAAOiG,QAAO,SAAC/C,GAAD,OAA2B,IAAZA,EAAKvO,MAEjE,OACE,eAACg4B,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QA1CY,WACH,OAAXkyB,QAAW,IAAXA,KAAapyB,WAmCb,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACjhB,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLgN,OAAQ,KANZ,SASE,eAAC3N,GAAA,EAAD,CACEjW,QAAS5E,GAvFQ,WACzB,IAAM+iD,EAAO,CACX,CAAE5uD,KAAMoO,EAAQ,iCAAU,QAC1B,CAAEpO,KAAMoO,EAAQ,iCAAU,SAC1B,CAAEpO,KAAMoO,EAAQ,6CAAY,UAExBygD,EAAanC,EAAUzpC,MAAMpQ,KAAI,SAACu4B,GACtC,OAAO,6BACFA,GADL,IAEEtsB,MAAOP,GAAY6sB,EAAGtsB,YAGpBsE,EAAO,CACXhV,QACA0gD,KAAMpqC,EAAM5F,MACZiwC,YAAajwC,EAAQP,GAAYmuC,EAAU5tC,OAAS,GACpDuT,MAAK,OAAEq6B,QAAF,IAAEA,OAAF,EAAEA,EAAWr6B,MAClB28B,WAAY5gD,EAAQ,kFAAmB,eACvCksC,KAAM7J,EAAQ6J,KACdl1C,MAAOqrC,EAAQ8J,KACfrvB,OAAQulB,EAAQ+J,IAChBtW,QAASuM,EAAQvM,QACjBuM,QAASriC,EAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAC1Ca,MAAOA,EAAQkc,GAAalc,GAAS,GACrCC,IAAKA,EAAMic,GAAajc,GAAO,GAC/BmE,MAAO,UACPgqD,IAAK/xC,GAAsB,IAAIxS,OAGrB,cAAEqjB,KAAM8gC,EAAYD,QAASxrC,IAnErB,WACpB,IAAMwrC,EAAOhC,EAAc/5C,KAAI,SAACq8C,GAC9B,MAAO,CAAElvD,KAAMkvD,EAAGj2C,UAGdk2C,EAAe,GACjBvkD,IACFukD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGxD,SAAH,IAAGA,QAAH,EAAGA,GAAWpH,OAAd,OAAuBoH,SAAvB,IAAuBA,QAAvB,EAAuBA,GAAW5K,OAE1D2K,IACFwkD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAAanH,OAAhB,OAAyBmH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAa3K,OAE9DwL,IACF2jD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG5C,SAAH,IAAGA,QAAH,EAAGA,GAAchI,OAAjB,OAA0BgI,SAA1B,IAA0BA,QAA1B,EAA0BA,GAAcxL,OAEhE0L,IACFyjD,EAAQ17C,KAAK,CAAEzT,KAAMoO,EAAK,OAAG1C,SAAH,IAAGA,QAAH,EAAGA,GAAUlI,OAAb,OAAsBkI,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAU1L,OAG5D,IAAMojB,EAAO,CACXhV,QACA0gD,KAAMpqC,EAAM5F,MACZiwC,YAAajwC,EAAQP,GAAYO,GAAS,GAC1CkwC,WAAY5gD,EAAQ,kFAAmB,eACvCksC,KAAM7J,EAAQ6J,KACdl1C,MAAOqrC,EAAQ8J,KACfrvB,OAAQulB,EAAQ+J,IAChBtW,QAASuM,EAAQvM,QACjBuM,QAASriC,EAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAC1Ca,MAAOA,EAAQkc,GAAalc,GAAS,GACrCC,IAAKA,EAAMic,GAAajc,GAAO,GAC/BquD,UACAlqD,MAAO,UACPgqD,IAAK/xC,GAAsB,IAAIxS,OAGrB,cAAEqjB,KAAMw+B,EAAWqC,QAASxrC,IA0FhCnK,MAAM,eACN/e,KAAK,QAHP,SAKE,eAAC,KAAD,QAGJ,eAACyrD,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBApTkB,SAACuqB,GACzB9uC,GAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAoTtCzyC,gBAAiBA,EACjB0oB,sBAzTsB,SAAC5jB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAyTnDmL,QAASA,EACTy6C,cArTc,SAAC5I,GACrB9uC,GAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAqTlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLxpB,OAAQ,GACRw2B,OAAQ,IACRv3B,WAAY,SACZkf,eAAgB,aAChBuO,YAAa,GACbC,aAAc,GACd9tB,UAAW,GAbf,UAgBE,eAAC,GAAD,CACE8O,aAAcA,GACdi/C,gBAzUsB,SAACxqD,GAC/BkO,GAAS,CAAE9M,KAAM,kBAAmBC,QAASrB,KAyUrC0K,YAAaA,GACb29B,eAxUqB,SAACroC,GAC9BkO,GAAS,CAAE9M,KAAM,iBAAkBC,QAASrB,KAwUpC2K,UAAWA,GACXmhB,aAvUmB,SAAC9rB,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KAuUlCy5B,YAAaA,EACbD,UAAWA,EACXqH,SAAUA,EACVmG,UAAWgrB,EACXxmD,UAAW6B,GACXgkC,aA1UmB,SAACrxC,GAC5BkO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,KA0UlCyL,SAAUA,GACVi/C,YAzUkB,SAAC1qD,GAC3BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,KAyUjC2qD,WAAYA,EACZlmC,MAAOA,EACPtW,MAAOA,IAET,eAAC,GAAD,CACEid,QAASsjC,GACT1uD,MAAO2L,GACP0T,SA9Ge,SAAChQ,GAtNG,IAACrP,EAuNL,SAAnBqP,EAAE05B,OAAO/oC,OACXmtD,IAAiB,GACjBD,GAAmB,UAEnBC,IAAiB,GACjBD,GAAmB79C,EAAE05B,OAAO/oC,OA5NFA,EA6NLiqB,EAAI5a,EAAE05B,OAAO/oC,OAAOD,KA5N3CmO,GAAS,CAAE9M,KAAM,eAAgBC,QAASrB,MAoUlCmO,MAAOA,OAGX,eAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQqR,OAAOguC,YAAc,GAAI3tB,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,GAChB27C,gBAAiB,SAACC,GAxU5Bx4C,GAAS,CAAE9M,KAAM,UAAWC,QAwU6BqlD,OAEhD96C,IAAS,eAAC,KAAD,CAAegzC,SAAUA,KACnC,eAAC,KAAD,CACEuQ,WAAYZ,GACZa,WAAYZ,KAEb5iD,IAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOguC,YAAc,IAC7B3P,eAAiB1hC,GAAyBwgD,GAAjB7f,GACzBzH,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE3X,iBAAkByf,EAClBuC,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAOziB,GACG14B,QAAO,SAAC1F,GAAD,OAAa4gD,EAAI/1C,SAAS7K,EAAE3O,SACtDwvD,EAAOzkD,MAAK,SAAC4D,EAAQ4jC,GAAT,OACV5jC,EAAE5L,GAAKwvC,EAAExvC,GAAK,EAAIwvC,EAAExvC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvC8pD,EAAiB2C,MAGrB,eAAC,KAAD,CACEhiB,IAAK,CAAC,UACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAakvC,YAAaA,KACzBriD,IACC,eAAC,KAAD,CACEk5B,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,QACzBqhD,MAAOrhD,EAAQ,6CAAY,QAC3BshD,QAASthD,EAAQ,iCAAU,SAE7BuhD,wBAAsB,IAG1B,eAAC,KAAD,CACE5qB,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,gBAKjC,eAAC,KAAD,CACE3G,IAAKwmD,GACLlgC,KAAMA,EACNgf,QAASA,EACT6iB,OA9UO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMhB,EAAM,IAAIvkD,KACV1K,EAAI,uBAAmBkd,GAAsB+xC,IACnDiB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE5uD,KAAM,6BADvB,UAEDrB,EAFC,qBCtMZ,IAWawsC,GAAiBC,cAXf,SAACjwC,GAAD,MAAY,CACzBkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,UAQP,CAAE8D,KAAM,kBAA3BysC,EAHH,SAAC,GAAD,IAAG/+B,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAaC,MAAd,6BAAwBD,GAAxB,IAAmCh9B,UAAWjC,EAAQg/B,mBAMzC,SAAS0lB,GAAT,GAQN,IAPPhkD,EAOM,EAPNA,MACAsW,EAMM,EANNA,MACAjT,EAKM,EALNA,SACA6+C,EAIM,EAJNA,aAEA9zD,GAEM,EAHNi0C,QAGM,EAFNj0C,OACAgG,EACM,EADNA,SAEM6vD,EAAgB,OAAG/B,QAAH,IAAGA,OAAH,EAAGA,EAAcj8C,QACrC,SAACrS,GAAD,OAAiC,KAAnBA,EAAIiT,cAFd,EAIoBtH,oBAAc,MAJlC,oBAIC9M,EAJD,KAIQmyB,EAJR,OAKgBrlB,oBAAc,MAL9B,oBAKC7M,EALD,KAKMmyB,EALN,OAOkBtlB,oBAAS,IAP3B,oBAOCogB,EAPD,KAOOsuB,EAPP,OAQiC1uC,oBAAS,IAR1C,oBAQY6+C,GARZ,aASyB7+C,oBAAS,MATlC,oBASCmR,EATD,KASQ2tC,EATR,KAWAviC,EAAMzF,GAAW,CAAErW,QAAOsW,UAX1B,EAaoC/W,oBAAS,CACjDuc,EAAIpF,OACJoF,EAAIloB,IACJkoB,EAAI3E,MAEJ2E,EAAI9E,MAGJ8E,EAAI5E,OACJ4E,EAAIlF,QACJkF,EAAI1L,SAvBA,oBAaCouC,EAbD,KAagBC,EAbhB,OA0BYl/C,oBAAS,CACzBuc,EAAIpF,OACJoF,EAAIloB,IACJkoB,EAAI3E,MAEJ2E,EAAI9E,MAGJ8E,EAAI5E,OACJ4E,EAAIlF,QACJkF,EAAI1L,SAVCuuB,EA1BD,uBAuC0Cp/B,oBAAS,CACvD,CAAE3C,WAAYkf,EAAIpF,OAAO9kB,KAAM8sD,iBAAiB,GAChD,CAAE9hD,WAAYkf,EAAI1L,OAAOxe,KAAM8sD,iBAAiB,KAF3CC,EAvCD,uBA4CiC9yB,aAAa+yB,GAAkB,CACpE5lB,YAAa,sBA7CT,oBA4CC6lB,EA5CD,KA4CaC,EA5Cb,OAiEFh/C,sBAAW/B,IAjET,IAiDJhL,MACEsJ,EAlDE,EAkDFA,YACAD,EAnDE,EAmDFA,gBACAY,EApDE,EAoDFA,QACAI,EArDE,EAqDFA,aACAb,EAtDE,EAsDFA,YACAC,EAvDE,EAuDFA,UACAa,EAxDE,EAwDFA,UACAC,EAzDE,EAyDFA,SACAC,EA1DE,EA0DFA,SACAE,EA3DE,EA2DFA,MACAD,EA5DE,EA4DFA,QACAE,EA7DE,EA6DFA,UACAf,GA9DE,EA8DFA,KAEFoD,GAhEI,EAgEJA,SAiBFklB,sBAAU,WAAO,IAAD,QACRg6B,GAAqB,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCA,OAAQ,GAC3DylD,GAAqB,OAAXrD,QAAW,IAAXA,GAAA,UAAAA,EAAapiD,YAAb,0DAAyCo1B,UAAW,KAE9D1hB,EAAS+xC,EAAUvsC,OAAOusC,GAAW,KAErCjD,GACG,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASv5C,QAAS,EACdu5C,EAAQx6C,KAAI,SAACvB,GACX,OAAO,6BACFA,GADL,IAEEkN,OAAQ6B,GAAgB/O,QAG5B,GAEFkN,GACF8uC,EAAYkD,QAAQ,CAClBn3C,IAAK3O,KAAKukD,MACVwB,UAAW,sEACXC,QAAS,mBACTlyC,WAIJ69B,EAAQiR,GACR,IAAIva,EAAM,EACVua,EAAYC,SAAQ,SAAC5+C,GAAD,OAAaokC,GAAOpkC,EAAE6P,UAC1CiuC,EAAS1Z,KACR,CAACma,IAEJ,IAAMM,GAAS,SAACxrC,GAAD,OACbA,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlO,QAAS,EAAIkO,EAAKnP,KAAI,SAAC46C,GAAD,OAAaA,EAAGp0C,YAAO/I,GAqB7D+iB,sBAAU,YAnBQ,WAChB,IAAMzkB,EAAY,CAChB8+C,SAAU,GACViD,WAAYnD,GAAO7hD,GACnBgiD,WAAYH,GAAOhiD,GACnBoiD,YAAaJ,GAAO9hD,GACpBmiD,cAAeL,GAAO7iD,GACtBmjD,YAAaN,GAAO5iD,GACpBmjD,YAAaP,GAAO/hD,GACpB5K,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EACDA,EAAIogB,SAAS,GAAI,GAAI,GAAI,MACzB,IAAIxW,MAAOwW,SAAS,GAAI,GAAI,GAAI,MAEtC+rC,EAAW,CACTr+C,cAKFo/C,KACC,CAACntD,EAAOC,EAAK+K,EAAOD,EAASE,IAEhC,IAAMmiD,GAAmBtlB,kBAAO,MAE1BulB,GAAcC,wBAAY,WAC9BF,GAAYnhC,QAAQshC,eACnB,CAACH,KAaEI,GAAkB,SAACruD,GACvB,IAAM20C,EAAKiY,EAAcv4C,QAAO,SAACi6C,GAAD,OAAaA,EAAG7mD,MAAQzH,KACxD,SAAI20C,GAAMA,EAAG7gC,OAAS,IAOxBuf,sBAAU,WACR,IAEMk7B,EAFWlvD,KAAEs+B,QAAQ5P,EAAM,CAAChjB,GAAK,GAAGC,YAAa,CAACD,GAAK,GAAGvP,YAErCqX,KAAI,SAAC+J,GAC9B,MAAO,CACLkI,OAAQupC,GAAgB,UACpBtxC,GAAaH,EAAIkI,aACjBxU,EACJ0U,QAASqpC,GAAgB,WAAazxC,EAAIoI,aAAU1U,EACpD6S,SAAUkrC,GAAgB,YACtBzxC,EAAIsN,EAAI/G,SAASnjB,WACjBsQ,EACJ2U,QAASopC,GAAgB,WAAazxC,EAAIsN,EAAIjF,QAAQjlB,WAAQsQ,EAC9D4S,WAAYmrC,GAAgB,cACxBzxC,EAAIsN,EAAIhH,WAAWljB,WACnBsQ,EACJ4U,SAAUmpC,GAAgB,YACtBzxC,EAAIsN,EAAIhF,SAASllB,WACjBsQ,EACJqQ,SAAU0tC,GAAgB,YACtBzxC,EAAIsN,EAAIvJ,SAAS3gB,WACjBsQ,EACJkO,OAAQ6vC,GAAgB,UAAY9vC,GAAY3B,EAAI4B,aAAUlO,MAIlEk8C,EAAa+B,KACZ,CAAC3B,EAAe7+B,EAAMhjB,KAEzB,IA+CMyjD,GAAoB,CACxB,CAAExjD,WAAYc,EAAWzK,KAAM,SAC/B,CAAE2J,WAAYkf,EAAIhF,SAASllB,KAAMqB,KAAM,SACvC,CAAE2J,WAAY,SAAU3J,KAAM,QAO1Bw9C,GAAW,CAAC,CAAE7zC,WAAYc,IAE1B2iD,GAAoB,CACxB,CACEzjD,WAAYkf,EAAIhF,SAASllB,KACzBqB,KAAM,QACNqtD,eAAe,GAGjB,CACE1jD,WAAY,SACZ3J,KAAM,MAENqtD,eAAe,GAEjB,CACE1jD,WAAYkf,EAAIhF,SAASllB,KACzBqB,KAAM,QAENuvD,mBAAmB,GAErB,CACE5lD,WAAY,SACZ3J,KAAM,MACNuvD,mBAAmB,IAKvB,OACE,eAAC71B,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAtDY,WACH,OAAXkyB,QAAW,IAAXA,KAAapyB,WA+Cb,SAQE,gBAACnJ,GAAA,EAAD,WAcE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBA5OkB,SAACuqB,GACzB9uC,GAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KA4OtCzyC,gBAAiBA,EACjB0oB,sBAjPsB,SAAC5jB,GAC7BnB,GAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAiPnDmL,QAASA,EACTy6C,cA7Oc,SAAC5I,GACrB9uC,GAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KA6OlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAACkU,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACLiP,SAAU,WACV8H,KAAMnZ,EAAQ,SAAMkC,EACpBqP,MAAOvR,OAAQkC,EAAY,IAC3B+W,IAAK,GACLxpB,OAAQ,GACRw2B,OAAQ,IACRv3B,WAAY,SACZkf,eAAgB,aAChBuO,YAAa,GACbC,aAAc,GACd9tB,UAAW,GAbf,UAgBE,eAAC0zD,GAAD,CACE/kC,QAASgnC,EACTpyD,MAAK,OAAE0L,QAAF,IAAEA,OAAF,EAAEA,EAAW,GAClB6vC,SAlQkB,SAACv7C,GAC3BkO,GAAS,CAAE9M,KAAM,cAAeC,QAASrB,EAAQ,CAACA,GAAS,MAkQnDykB,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,UACLmqD,SAAO,EACPjtD,MAAO,MAET,eAACwT,GAAA,EAAD,CACEF,MAAO,CACLkd,SAAU,IACVryB,YAAa+S,EAAQ,QAAKkC,EAC1BlV,WAAYgT,OAAQkC,EAAY,IAJpC,SAOE,eAACT,GAAA,EAAD,CAAY5U,QAAQ,YAAYuV,MAAO,CAAEoP,WAAY,QAArD,SACGZ,GAAkB,CAAE/e,MAAO6e,WAIlC,eAAC6S,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQqR,OAAOguC,YAAc,GAAI3tB,SAAU,QAA3D,SACE,gBAAC,KAAD,CAAMxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,GAChB27C,gBAAiB,SAACC,GAzH5Bx4C,GAAS,CAAE9M,KAAM,UAAWC,QAyH6BqlD,OAEhD96C,GAAS,eAAC,KAAD,CAAegzC,SAAUA,KACnC,eAAC,KAAD,CACEuQ,WAAYZ,GACZa,WAAYZ,KAEb5iD,GAAS,eAAC,KAAD,IACV,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEhO,OAAQqR,OAAOguC,YAAc,IAC7B3P,eAAgBf,GAChBzH,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACE3X,iBAAkByf,EAClBuC,0BAA2B,SAACC,GAC1B,IACMC,EADG,aAAOziB,GACG14B,QAAO,SAAC1F,GAAD,OAAa4gD,EAAI/1C,SAAS7K,EAAE3O,SACtDwvD,EAAOzkD,MAAK,SAAC4D,EAAQ4jC,GAAT,OACV5jC,EAAE5L,GAAKwvC,EAAExvC,GAAK,EAAIwvC,EAAExvC,GAAK4L,EAAE5L,IAAM,EAAI,KAEvC8pD,EAAiB2C,MAGrB,eAAC,KAAD,CACEhiB,IAAK,CAAC,UACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,UACNlB,mBAAoBnsB,KAEtB,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CAAa+tC,YAAaA,KACzBriD,GAAS,eAAC,KAAD,CAAe8jD,wBAAsB,IAC9C9jD,GACC,eAAC,KAAD,CACEk5B,SAAU,CACRgO,IAAK3kC,EAAQ,6CAAY,QACzBikB,MAAOjkB,EAAQ,iCAAU,gBAMnC,eAAC,KAAD,CACE3G,IAAKwmD,GACLlgC,KAAMA,EACNgf,QAASA,EACT6iB,OAnRO,SAACC,GACdA,EAASC,KAAKC,cAAcC,MAAK,SAACC,GAChC,IAAMhB,EAAM,IAAIvkD,KACV1K,EAAI,yBAAqBkd,GAAsB+xC,IACrDiB,KACE,IAAIC,KAAK,CAACF,GAAS,CAAE5uD,KAAM,6BADvB,UAEDrB,EAFC,qBCnNG,I,GC4NAsyD,GAnNQ,SAAC,GAUZ,IATVzgD,EASS,EATTA,KACA8X,EAQS,EARTA,QACA/M,EAOS,EAPTA,IACA4R,EAMS,EANTA,MACAgR,EAKS,EALTA,YACA5Q,EAIS,EAJTA,UACAC,EAGS,EAHTA,WACA9E,EAES,EAFTA,QACAvtB,EACS,EADTA,MACS,EACemR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAE6Bpa,oBAAc,MAF3C,oBAEFhD,EAFE,KAEW29B,EAFX,OAGuB36B,qBAAc,GAHrC,oBAGF46B,EAHE,KAGQC,EAHR,OAIuB76B,qBAAc,GAJrC,iCAKiBA,oBAAc,YAL/B,oBAKF1I,EALE,KAKK+pB,EALL,KAOH0Z,EAAe92B,KAAM+2B,SAPlB,EASyC76B,aAAQ5J,EAAI0B,cAAtDmI,EATC,EASDA,SAAUC,EATT,EASSA,aAAcC,EATvB,EASuBA,OAAQwxB,EAT/B,EAS+BA,MAT/B,EAaUvxB,sBAAWtB,IAbrB,IAWPyB,UAAaqW,EAXN,EAWMA,MAAOtW,EAXb,EAWaA,MACX1N,EAZF,EAYPhC,MAASgC,KAZF,EAc8Cm7B,KAA/CnC,EAdC,EAcDA,YAdC,EAcYc,cAdZ,EAc2BE,eAEpCrH,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB,IAAMA,EAAMuD,EAAI2G,aACVqlB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQA,KAAK,GACjEivB,EAAeM,GACf5Z,EAASpS,EAAI3X,UAEd,CAAC2X,IAEJ,IAIMnO,EAAQ,yCAAG,WAAO3D,GAAP,wBAAA6D,EAAA,sDACT3O,EAAO8K,EAAK9K,KAAK0/B,OACjBl8B,EAASsH,EAAKtH,OAAOk8B,OACrB2E,EAAOv5B,EAAKu5B,KACZnhB,EAAavY,EACf,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEjB1B,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCtQ,OACAwD,SACAyB,QACAo/B,OACAwE,QAAS,EACT3lB,aACA9gB,OAAQ1B,EAAK0B,OACbu9B,OAAQj/B,EAAK2Y,KAKfumB,EAFepR,EAAQI,EAAYC,EAChBL,EAAQ,iBAAmB,iBACpB5f,GA/BX,2CAAH,sDAkCRgxB,EAAK,yCAAG,WAAOC,EAAaC,EAAoBlxB,GAAxC,kBAAAD,EAAA,+EAEQkxB,EAAO,CAAEjxB,cAFjB,cAEJuK,EAFI,OAGJ4mB,EAAQtX,GAActP,EAAK2mB,GAC7BN,GAAeO,GAAOP,EAAYO,EAAO,YAJnC,SAKJ9X,GAAaF,EAAS3Z,GALlB,OAMV06B,IANU,kDAQV7I,EAAQ,EAAD,IARG,0DAAH,0DAYLA,EAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,GAFlB,6CAIN+Z,GAAWJ,EAAS3Z,GAJd,OAKZ26B,IACA3kB,QAAQC,IAAIzW,GANA,2CAAH,sDAUPm7B,EAAW,WACftJ,IACA6I,EAAe,MACftZ,EAAS,YAEL8Z,EAAa,WACjBnf,IACAof,KAOI9vB,EAAQ7K,EACVogB,EACE,0DACA,+FACFA,EACA,eACA,gBAEJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASmf,EACT7vB,MAAOA,EACPxK,SAlBmB,WACrBT,EAAaS,EAAbT,IAkBExR,MAAOA,EACPmiC,KAAMA,EACN7I,GAAI,GARN,SAUE,gBAACjE,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACR4L,WAAS,EACThQ,KAAK,SACLiQ,MAAOyU,EAAM1kB,KACb+N,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACThW,OAAQ,GACR07B,GAAI,OAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,OACLiQ,MAAOyU,EAAMyb,OACbpyB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACT2Z,QAASA,EACT3vB,OAAQ,GACR07B,GAAI,UAIV,gBAAC,KAAM3K,SAAP,WACE,eAAC+c,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,EAAMxB,WACbwB,MAAOA,EACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgBid,EAChBhd,YAAa+c,EACb9c,SAAUid,EACV36B,SAAUA,EAEVK,MAAOA,EACPgC,WAAS,EACT0lB,GAAI,KAEN,eAACD,GAAD,CACE71B,KAAK,OACLiQ,MAAOyU,EAAM2f,KACbt2B,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,EACTiwB,WAAS,EACTC,QAAS,EACTvS,KAAM,IAER,eAAC8D,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,SACE,gBAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,eAAC/hB,GAAA,EAAD,CACEkc,UAAQ,EACRjsB,KAAK,QACLC,OAAU,OAAH2c,QAAG,IAAHA,OAAA,EAAAA,EAAK3X,OAAQ2X,EAAI3X,MAAQA,EAChChK,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,IAAKF,gBAAiBiI,GACtCs7B,WAAY,CAAE/vB,MAAO,CAAEyL,aAAc,EAAGhX,MAAO,SAC/C7K,OAAO,UAET,eAAC,GAAD,CAAa40B,SAAUA,EAAU/pB,MAAOA,eAKhD,eAAC4sB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UCpMR,SAASygC,GAAT,GAA4D,IAAvCnkD,EAAsC,EAAtCA,MAAOsW,EAA+B,EAA/BA,MAAOliB,EAAwB,EAAxBA,SAAUhG,EAAc,EAAdA,MAAc,EAChDmR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADS,oBACjEquB,EADiE,KAC3D5W,EAD2D,OAGtDpa,oBAAS,CACzB,CAAE3N,KAAMoO,EAAQ,SAAW,OAAQ6K,MAAOyL,EAAM1kB,MAChD,CAAEA,KAAM,SAAUiZ,MAAOyL,EAAMzf,OAC/B,CACEjF,KAAMoO,EAAQ,mBAAqB,iBACnC6K,MAAOyL,EAAMxB,YAEf,CAAEljB,KAAM,OAAQiZ,MAAOyL,EAAM2f,QAPxB0I,EAHiE,uBFlB3D,WAAO,IAAD,IAGb3+B,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIgBy5B,aAAaoL,GAAc,CAC5Dz2B,UAAW,CAAER,QAAOy6B,QAAS,KALZ,oBAIZvD,EAJY,KAIAC,EAJA,OAQGj3B,aAAYk3B,GAAgB,CAChDlL,eAAgB,CACd,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,QAAOy6B,QAAS,IACpD,CAAEtO,MAAO8K,GAAcz2B,UAAW,CAAER,aAHjCwyB,EARY,uBAcItyB,aAAYm3B,GAAgB,CACjDnL,eAAgB,CACd,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,QAAOy6B,QAAS,IACpD,CAAEtO,MAAO8K,GAAcz2B,UAAW,CAAER,aAHjCs3B,EAdY,uBAoBMp3B,aAAYq3B,GAAgB,CACnDrL,eAAgB,CACd,CAAEC,MAAO8K,GAAcz2B,UAAW,CAAER,QAAOy6B,QAAS,IACpD,CAAEtO,MAAO8K,GAAcz2B,UAAW,CAAER,aAHjCw3B,EApBY,qBAkCnB,OAPAvS,sBAAU,WACRiS,MACC,CAACA,IAKG,CACL7L,WAJuB,OAAP8L,QAAO,IAAPA,GAAA,UAAAA,EAASz6B,YAAT,sDAAiCA,OAAQ,GAKzD+6B,gBAJsB,yBAAMN,QAAN,IAAMA,OAAN,EAAMA,EAASzK,WAKrC8F,cACA8E,eACAE,kBEPA4sB,GADM/4B,EAbgE,EAahEA,UAAWmH,EAbqD,EAarDA,YAAa8E,EAbwC,EAaxCA,aAAcE,EAb0B,EAa1BA,eAGxCqH,EAAa,yCAAG,0CAAAt+B,EAAA,2DAASmU,EAAT,EAASA,SAAT,wBAEZzJ,EAAMyJ,EAAQ,GAFF,SAGA8iB,EAAe,CAAEh3B,UAAW,CAAEyK,SAH9B,WAIoB,KAA/B,QADDF,EAHY,cAIX,IAAHA,GAAA,UAAAA,EAAKrO,YAAL,mBAAW66B,sBAAX,eAA2B72B,IAJb,6BAKZqK,QALY,IAKZA,GALY,UAKZA,EAAKrO,YALO,iBAKZ,EAAW66B,sBALC,aAKZ,EAA2B/3B,MAAM4L,SAAS,YAL9B,kCAMR8O,GAAiBP,EAAS3Z,GANlB,iDAQR+Z,GAAWJ,EAAS3Z,GARZ,4CAAH,sDAcnB,OACE,gBAACujB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAM0L,EAAWsT,QAASA,EAASvoB,SAAUA,GAAnD,UACE,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CAAc4oB,gBAAiBH,IAE/B,eAAC,KAAD,IACA,eAAC,KAAD,IAEA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,UACNlB,mBAAoB3vB,KAEtB,eAAC,KAAD,CACE6wB,IAAK,CAAC,SACNlB,mBAAoBlwB,KAEtB,eAAC,KAAD,CACEoxB,IAAK,CAAC,WACNlB,mBAAoB,SAACtyC,GAAD,OAClBqiB,GAAiB,6BAAKriB,GAAN,IAAaoU,cAGhC5L,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAWgS,EACX/R,WAAY6W,EAHd,SAKE,eAAC,GAAD,SAGH/G,EAAK3W,MACJ,eAACoN,GAAD,CACEhnB,MAAOA,EACP/M,KAAI,OAAEs9B,QAAF,IAAEA,OAAF,EAAEA,EAAMt9B,KACZ+lB,IAAG,OAAEuX,QAAF,IAAEA,OAAF,EAAEA,EAAMvX,IACXC,KAAG,OCxHEvnB,I,GAAAA,gBAAf,4yBCDeA,gBAAf,qwCCgUe2yD,GAxSM,SAAC,GAQV,IAPV5gD,EAOS,EAPTA,KACA8X,EAMS,EANTA,QACA/M,EAKS,EALTA,IACA4R,EAIS,EAJTA,MACAI,EAGS,EAHTA,UACAC,EAES,EAFTA,WACAryB,EACS,EADTA,MACS,EACemR,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IADtD,oBACFquB,EADE,KACI5W,EADJ,OAE+BnW,KAAMjE,SAAS,IAAIjD,MAFlD,oBAEFkmC,EAFE,KAEYC,EAFZ,OAGiBj/B,KAAMjE,SAAS,WAHhC,oBAGFugC,EAHE,KAGKC,EAHL,OAI6Bv8B,KAAMjE,SAAS,IAJ5C,oBAIFi6C,EAJE,KAIWC,EAJX,OAM4Bj2C,KAAMjE,SAAS,MAN3C,oBAMF4lC,EANE,KAMQyU,EANR,OAO8Bp2C,KAAMjE,SAAS,MAP7C,oBAOFkT,EAPE,KAOSonC,EAPT,OASyBt6C,oBAAc,MATvC,oBASFlC,EATE,KASS6lC,EATT,OAUyB3jC,qBAAc,GAVvC,oBAUF+kD,EAVE,KAUSC,EAVT,OAYuBhlD,oBAAc,IAZrC,oBAYFilD,EAZE,KAYQC,EAZR,OAa+BllD,oBAAc,MAb7C,oBAaFmlD,EAbE,KAaYC,EAbZ,OAeyCjlD,aAChD5J,EAAIqlB,iBADExb,EAfC,EAeDA,SAAUC,EAfT,EAeSA,aAAcC,EAfvB,EAeuBA,OAAQwxB,EAf/B,EAe+BA,MAf/B,GAsBUvxB,sBAAWtB,IAtBrB,MAoBPyB,UAAaqW,GApBN,GAoBMA,MAAOtW,GApBb,GAoBaA,MACX1N,GArBF,GAqBPhC,MAASgC,KAGHkW,GAAa4wC,KAAb5wC,SACAqwB,GAAc8K,KAAd9K,UAzBC,GA2BiChN,aAAa+4B,GAAiB,CACtE5rB,YAAa,sBA5BN,sBA2BF+e,GA3BE,MA2BY8M,GA3BZ,MA8BT5/B,sBAAU,WACR,GAAI5nB,EAAW,CACb,IAAMmD,EAAY,CAAEgS,WAAYnV,EAAU4N,KAC1C8sC,GAAa,CAAEv3C,iBAEhB,CAACnD,EAAWoG,IAEfwhB,sBAAU,WAAO,IAAD,IACd,UAAI4/B,SAAJ,IAAIA,IAAJ,UAAIA,GAAcnoD,YAAlB,iBAAI,EAAoBkoD,uBAAxB,aAAI,EAAqCloD,KAAM,CAAC,IACtCA,EAASmoD,GAAanoD,KAAKkoD,gBAA3BloD,KACR,IAAQ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMgJ,QAAS,EAAG,CACpB,IAAMo/C,EAAQpoD,EAAK+H,KAAI,SAACilB,GACtB,IAAM7e,EAAK,UAAM6e,EAAE/S,MAAR,cAAmB+S,EAAEtZ,OAArB,MACX,OAAO,6BACFsZ,GADL,IAEE93B,KAAMiZ,EACNzV,OAAQyV,OAIZ,GADA45C,EAAYK,GACRt2C,EAAI2I,MAAO,CAAC,IAAD,EACP1jB,EAAG,UAAGqxD,EAAM7+C,QAAO,SAACw+B,GAAD,OAAaA,EAAGx5B,MAAQuD,EAAI2I,gBAA5C,aAAG,EAAkD,GAC9DwtC,EAAgBlxD,QAIrB,CAACoxD,KAEJ5/B,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClB,IAAM6uC,EAAKtrC,EAAIiE,UACTzG,EAAKwC,EAAI22B,SAET8U,EAAiBzxC,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAI3C,GAFAylD,EAAeQ,GAEXH,EAAI,CACN,IAAM5nC,EAAS1J,GAASvC,QACtB,SAACrS,GAAD,OAAcA,EAAI8U,OAASoxC,GAAqB,YAAflmD,EAAII,UACrC,GACF6lD,EAAa3nC,GAEf,GAAIlG,EAAI,CACN,IAAMmG,EAAQ3J,GAASvC,QACrB,SAACrS,GAAD,OAAcA,EAAI8U,OAASsD,GAAqB,YAAfpY,EAAII,UACrC,GACF4lD,EAAYznC,GAEd,IAAMK,EAAU,OAAGhE,QAAH,IAAGA,OAAH,EAAGA,EAAKgE,WACxB,GAAIA,EAAY,CACd,IAAMgyB,EAAO3L,GAAU5yB,QAAO,SAAC+2B,GAAD,OAAaA,EAAG/xB,MAAQuH,KAAY,GAClE0wB,EAAasB,QAEV,CACL,IAAMwV,EAAiBxxC,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IACJ,YAAf1S,EAAII,UAEFimD,EAAiBzxC,GAASvC,QAC9B,SAACrS,GAAD,OACEA,EAAIiT,aAAeP,IAA+B,YAAf1S,EAAII,UAE3CylD,EAAeQ,GACfL,EAAW,OAACK,QAAD,IAACA,OAAD,EAACA,EAAiB,IAC7BJ,EAAY,OAACG,QAAD,IAACA,OAAD,EAACA,EAAiB,OAE/B,CAACxrC,EAAKsxB,EAAOr8B,IAEhB,IAAMpD,GAAQ,yCAAG,WAAO3D,GAAP,4BAAA6D,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8uB,EAAe/uB,GAAe+uB,EAAe9uB,GAFlC,gCAGPyG,GACJR,EACA3Z,GAAQ,+FAAsB,yBALnB,2CASPoQ,EAAiB1T,EAAjB0T,OAAQkT,EAAS5mB,EAAT4mB,KACX6hB,GAAa1yB,GAAcpV,EAVjB,iCAWP8c,GACJR,EACA3Z,GAAQ,wHAA2B,oCAbxB,yCAkBTuS,EAAWlV,EACb,CACEmV,WAAYnV,EAAU4N,IACtB0H,aAActV,EAAUzL,KACxB8gB,eAAgBrV,EAAUjI,OAC1B8f,cAAe7X,EAAUxG,OAE3B,CACE2b,gBAAYtQ,EACZyQ,kBAAczQ,EACdwQ,oBAAgBxQ,EAChBgT,mBAAehT,GAGf1B,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCgV,OAAQtf,GAAeK,gBACvB2W,KAAM4zB,EACN2C,SAAUA,EAASz8B,KACnB+J,UAAWA,EAAU/J,KACrB6O,OAAQmtC,EAAeA,EAAantC,YAASrV,EAC7CiV,MAAOutC,EAAeA,EAAaz5C,SAAM/I,EACzCqQ,WACAnC,SACAkT,OACAtvB,OAAQ1B,GAAK0B,OACbu9B,OAAQj/B,GAAK2Y,KAGfumB,GADepR,EAAQI,EAAYC,EACrBjgB,GA/CC,4CAAH,sDAkDRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,uBAGJqZ,GAAaF,EAAS3Z,IAHlB,OAIV06B,KAJU,gDAMV7I,GAAQ,EAAD,IANG,yDAAH,wDAULA,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,IAFlB,6CAIN+Z,GAAWJ,EAAS3Z,IAJd,OAKZ26B,KACA3kB,QAAQC,IAAIzW,GANA,2CAAH,sDAUPm7B,GAAW,WACftJ,IACA0O,EAAS,WACT8Z,EAAa,MACbD,EAAY,MACZH,EAAe,IACfgL,EAAY,IACZvhB,EAAa,MACbyhB,EAAgB,MAChBJ,GAAa,IAET7pB,GAAa,WACjBC,KACApf,KAWF,OACE,eAAC+U,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASmf,GACT7vB,MAAOyL,GAAMigB,SACbl2B,SAVmB,WACrBT,EAAaS,GAAbT,IAUExR,MAAOA,EACPmiC,KAAMA,EACNhuB,GAAI,GARN,SAUE,gBAACkhB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAAC,GAAD,CACE1jB,MAAOA,GACP6B,MAAOyU,GAAM1H,KACb/c,MAAO2wC,EACPtxB,SA5BW,SAACoC,GACxBmvB,EAAgBnvB,QA8BR,eAACmQ,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,GACThnC,MAAOwL,EACP6f,eAAgBgmB,EAChB/lB,eAAgBonC,EAChBnnC,YAAaknC,EACbtkD,MAAOA,GACPk6C,WAAS,MAGb,eAACz2B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAO7K,GAAQ,0DAAe,cAC9BsW,MAAOA,GACP2G,QAASu8B,EACT3nD,MAAOszC,EACPjoB,eAAgB08B,EAChBj6C,SAAUA,EACVK,MAAOA,GACPk6C,WAAS,MAGb,gBAACz2B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,GAAMlG,OACbzQ,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLvb,KAAK,SACL+O,WAAS,IAEX,eAAC83B,GAAD,CACEloC,KAAK,UACLiZ,MAAO7K,GAAQ,mDAAa,WAC5BsW,MAAOA,GACP2G,QAASunC,EACT3yD,MAAO6yD,EACPxnC,eAAgBynC,EAChBhlD,SAAUA,EACVK,MAAOA,GACP6d,UAAWxgB,EACX2E,WAAS,IAEX,eAACylB,GAAD,CACE71B,KAAK,OACLqgC,WAAS,EACTtS,KAAM,EACN9d,MAAOyU,GAAM0b,YACbryB,SAAUA,EACVE,OAAQA,EACR2O,IAAKA,EACLxM,WAAS,YAKjB,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UC7QR,SAASqhC,GAAT,GAA+D,IAA5C/kD,EAA2C,EAA3CA,MAAOsW,EAAoC,EAApCA,MAAOjT,EAA6B,EAA7BA,SAAUjP,EAAmB,EAAnBA,SAAUhG,EAAS,EAATA,MAAS,EACzDmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOyL,EAAM1H,MAC7B,CAAEhd,KAAM,YAAaiZ,MAAOyL,EAAM/D,UAClC,CAAE3gB,KAAM,WAAYiZ,MAAO7K,EAAQ,0DAAe,eAElD,CAAEpO,KAAM,OAAQiZ,MAAOyL,EAAM0b,aAC7B,CAAEpgC,KAAM,QAASiZ,MAAOyL,EAAMC,IAC9B,CAAE3kB,KAAM,SAAUiZ,MAAOyL,EAAMlG,UAP1BuuB,EADoE,uBAWnDp/B,oBAAS,IAX0C,oBAWpEogB,EAXoE,KAW9DsuB,EAX8D,OAY7C1uC,qBAAS,GAZoC,oBAYpE+iC,EAZoE,KAY3DC,EAZ2D,OAcjDhjC,oBAAc,MAdmC,oBAcpE9M,EAdoE,KAc7DmyB,EAd6D,OAerDrlB,oBAAc,MAfuC,oBAepE7M,EAfoE,KAe/DmyB,EAf+D,KAiBnEnT,EAAUw8B,KAAVx8B,MAjBmE,EAsBvE5R,sBAAWlC,IAtB4D,IAoBzE7K,MAASsJ,EApBgE,EAoBhEA,YAAaD,EApBmD,EAoBnDA,gBAAiBY,EApBkC,EAoBlCA,QAASL,EApByB,EAoBzBA,KAChDoD,EArByE,EAqBzEA,SArByE,EAmClC8rB,aAAam5B,GAAa,CACjEhsB,YAAa,sBApC4D,oBAmCpEqhB,EAnCoE,KAmCtDC,EAnCsD,KAsCnE9xC,EAAa4wC,KAAb5wC,SACFkjC,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAO64B,GACPxkD,UAAW,CACT/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,IAG/C,CACEiqB,MAAOmB,IAET,CACEnB,MAAO4M,MAKb9T,sBAAU,WACR,IAAMzkB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,GAE7Cm4C,EAAa,CACX75C,gBAED,CAAC/N,EAAOC,IAjEgE,MAmEtDwN,aAAYq6C,GAAe7O,GAAzC8O,EAnEoE,uBAoErDt6C,aAAYu6C,GAAe/O,GAA1CgP,EApEoE,uBAqEnDx6C,aAAYy6C,GAAejP,GAA5CkP,EArEoE,qBAuErE/b,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpBkmC,EAAc,CAAEp6C,UAAW,CAAEyK,UAHX,2CAAH,sDAOnBga,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIq1B,QAAJ,IAAIA,OAAJ,EAAIA,EAAahY,UACfC,GAAW,GAEb,OAAI+X,QAAJ,IAAIA,GAAJ,UAAIA,EAAa59C,YAAjB,iBAAI,EAAmBsoD,mBAAvB,aAAI,EAAgCtoD,KAAM,CAAC,IACjCA,EAAS49C,EAAY59C,KAAKsoD,YAA1BtoD,KACRuxC,EAAQvxC,GACR6lC,GAAW,MAEZ,CAAC+X,IAUJ,OACE,eAAC3tB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAfY,WACH,OAAX0tB,QAAW,IAAXA,KAAa5tB,WAQb,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBApFkB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAoFtCzyC,gBAAiBA,EACjB0oB,sBAzFsB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAyFnDmL,QAASA,EACTy6C,cApFc,SAAC5I,GACrB9uC,EAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAoFlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAAC,KAAD,CAAMuxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GA9B1Bx4C,EAAS,CAAE9M,KAAM,UAAWC,QA8B2BqlD,OAEjD,eAAC,KAAD,CAAcvZ,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,QACNlB,mBAAoBzuB,KAEtB,eAAC,KAAD,CACE2vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,QAAS,SACflB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,aACNlB,mBAAoB,SAACtyC,GAAD,OAClB0mB,GAAyB1mB,EAAO4c,EAAUxI,MAG9C,eAAC,KAAD,CACEo/B,IAAK,CAAC,YACNlB,mBAAoB,SAACtyC,GAAD,OAClBwmB,GAAiBxmB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAWg6B,EACX/5B,WAAYi6B,EAHd,SAKE,eAAC,GAAD,CAAchpC,MAAOA,SAGxB4wB,GAAW,eAAC,GAAD,CAAStiC,MAAOA,SC1N7B,I,GAAMoW,GAAW,SAAC5H,GAAD,OAAcA,EAAIvC,OAEpCkyB,GAAqB,SAACvyC,GAAD,OACzB,eAAC,KAAD,cACEsyC,mBAAoB,gBAAGrsC,EAAH,EAAGA,MAAH,OAClB,eAAC4P,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiC+oB,OAAO/jB,GAAS,MAE/CjG,KAgBKwyC,GAAiBC,cAZf,SAACjwC,GAAD,MAAY,CACzBkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,SASP,CAAE8D,KAAM,kBAA3BysC,EAJH,SAAC,GAAD,IAAG/+B,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAMC,MAAP,6BAAiBD,GAAjB,IAA4Bh9B,UAAWjC,EAAQg/B,mBAOlC,SAAS2mB,GAAT,GAMN,IALPtlC,EAKM,EALNA,KACA7tB,EAIM,EAJNA,WACAkO,EAGM,EAHNA,MACAsW,EAEM,EAFNA,MACA9N,EACM,EADNA,SACM,EACYjJ,oBAAS,CACzB,CAAE3N,KAAM,QAASiZ,MAAOyL,EAAMC,IAC9B,CAAE3kB,KAAM,WAAYiZ,MAAOyL,EAAM1R,IACjC,CAAEhT,KAAM,YAAaiZ,MAAOyL,EAAM2e,MAClC,CAAErjC,KAAM,OAAQiZ,MAAOyL,EAAM0b,aAC7B,CAAEpgC,KAAM,SAAUiZ,MAAOyL,EAAMlG,UAL1BuuB,EADD,uBAS+Bp/B,oBAAS,CAC5C,CAAE3C,WAAY,QAAS9N,MAAO,MAAO0T,MAAO,QAC5C,CAAE5F,WAAY,WAAY9N,MAAO,MAAO0T,MAAO,QAC/C,CAAE5F,WAAY,YAAa9N,MAAO,MAAO0T,MAAO,QAChD,CAAE5F,WAAY,OAAQ9N,MAAO,QAC7B,CAAE8N,WAAY,SAAU9N,MAAO,MAAO0T,MAAO,WALxCo8B,EATD,qBAiBAC,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzI,EAAQyI,EAAQ,GACtB5iB,EAAWma,IAHO,2CAAH,sDAWnB,OACE,eAACsX,GAAA,EAAD,CACEnhB,MAAO,CACL08B,UAAW,IACX3d,SAAU,OACVn1B,OAAQ,GACR+yC,UAAW,KALf,SAQGpf,GACC,gBAAC,KAAD,CAAMA,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CAAc4oB,gBAAiBH,IAE/B,eAAC,KAAD,CACEI,oBAlBU,WAClB,OAAO,eAAC38B,GAAA,EAAD,CAAK9T,QAAQ,UAkBZ0wC,iBAAkBN,EAClBO,eAAgBf,KAElB,eAAC,KAAD,CACEgB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,GAAD,CAAoBwuB,IAAK,CAAC,WAC1B,eAAC,KAAD,CACEA,IAAK,CAAC,WAAY,aAClBlB,mBAAoB,SAACtyC,GAAD,OAClBwmB,GAAiBxmB,EAAO4c,EAAUxI,MAGtC,eAAC,KAAD,CACEq/B,mBAAiB,EAEjBC,iBAAkB7B,KAEpB,eAAC,KAAD,SC3GK/rC,oBAAf,wpBC0BawwC,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cA8bSi5C,GAzbS,SAAC,GAQb,IAPVzhD,EAOS,EAPTA,KACA8X,EAMS,EANTA,QACA/M,EAKS,EALTA,IACA4R,EAIS,EAJTA,MACAI,EAGS,EAHTA,UACAC,EAES,EAFTA,WACAryB,EACS,EADTA,MACS,EACqBmR,qBAAS,GAD9B,oBACF+iC,EADE,KACOC,EADP,OAGehjC,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IAHtD,oBAGFquB,EAHE,KAGI5W,EAHJ,OAI+BnW,KAAMjE,SAAS,IAAIjD,MAJlD,oBAIFkmC,EAJE,KAIYC,EAJZ,OAK6Bj/B,KAAMjE,SAAS,IAL5C,oBAKFi6C,EALE,KAKWC,EALX,OAM+Bj2C,KAAMjE,SAAS,IAN9C,oBAMFm6C,EANE,KAMYC,EANZ,OAQwBn2C,KAAMjE,SAAS,GARvC,oBAQF6Q,EARE,KAQM+0C,EARN,OASoB3hD,KAAMjE,SAAS,IATnC,oBASF+jB,EATE,KASI8hC,EATJ,OAU4B5hD,KAAMjE,SAAS,MAV3C,oBAUF4lC,EAVE,KAUQyU,EAVR,OAW8Bp2C,KAAMjE,SAAS,MAX7C,oBAWFkT,EAXE,KAWSonC,EAXT,KAYHwL,EAAc7hD,KAAM+2B,SAZjB,EAcyBh7B,oBAAc,IAdvC,oBAcFqjC,EAdE,KAcSC,EAdT,OAgB6BtjC,oBAAc,MAhB3C,oBAgBFhD,EAhBE,KAgBW29B,EAhBX,OAiB6B36B,qBAAc,GAjB3C,qBAiBFw7B,GAjBE,MAiBWC,GAjBX,MAkBHC,GAAiBz3B,KAAM+2B,SAlBpB,GAoByBh7B,oBAAc,MApBvC,sBAoBF/C,GApBE,MAoBSmhB,GApBT,SAqByBpe,qBAAc,GArBvC,sBAqBF27B,GArBE,MAqBSC,GArBT,MAsBHb,GAAe92B,KAAM+2B,SAtBlB,GAwBqBh7B,oBAAc,MAxBnC,sBAwBFk7B,GAxBE,MAwBOW,GAxBP,SAyByB77B,oBAAc,IAzBvC,sBAyBF87B,GAzBE,MAyBSC,GAzBT,SA2BuB/7B,oBAAc,IA3BrC,sBA2BF+lD,GA3BE,MA2BQC,GA3BR,SA+BUzlD,sBAAWtB,IA/BrB,MA6BPyB,UAAaqW,GA7BN,GA6BMA,MAAOtW,GA7Bb,GA6BaA,MACX1N,GA9BF,GA8BPhC,MAASgC,KA9BF,GAiC0Bu5B,aAAa25B,GAAmB,CACjExsB,YAAa,sBAlCN,sBAiCFwK,GAjCE,MAiCQC,GAjCR,MAqCDj7B,GAAa4wC,KAAb5wC,SACA8iB,GAAgBmC,KAAhBnC,YACAD,GAAckQ,KAAdlQ,UAERpG,sBAAU,WACR,GAAIoG,IAAaA,GAAU3lB,OAAS,EAAG,CACrC,IAAM81B,EAAWnQ,GAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAIkP,UAAYA,MAChEa,GAAaE,MAEd,CAACf,GAASpP,KAEbpG,sBAAU,WAAO,IAAD,IACRpQ,GAAiB,OAAT4uB,SAAS,IAATA,IAAA,UAAAA,GAAW/mC,YAAX,2DAAwCA,OAAQ,GAC9D,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMhJ,EAAOzL,KAAE4jB,GACZiP,QAAQ,WACRrf,KAAI,SAACsf,EAAOC,EAAK/X,GAAW,IAAD,cACpBk5B,EAAQ,UAAGphB,EAAM9d,QAAO,SAACw/C,GAAD,OAAcA,EAAItzC,gBAAlC,iBAAG,EAAwC,UAA3C,aAAG,EAA4CuzC,QACvDjzC,EAAS,UAAGsR,EAAM9d,QAAO,SAACw/C,GAAD,OAAcA,EAAIvzC,iBAAlC,iBAAG,EAAyC,UAA5C,aAAG,EACdwzC,QACEt1C,EAAM,UAAG2T,EAAM,UAAT,aAAG,EAAU3T,OACnBkT,EAAI,UAAGS,EAAM,UAAT,aAAG,EAAUT,KAEvB,MAAO,CACL1U,KAFQ,UAAGmV,EAAM,UAAT,aAAG,EAAUrN,OAGrByuB,WACA1yB,YACArC,SACAkT,OACAtvB,OAAQ1B,GAAK0B,OACbu9B,OAAQj/B,GAAK2Y,QAGhBpZ,QAEGg0C,EAAgB3D,GAAaxlC,GACnCmmC,EAAagD,GACbtD,GAAW,MAEZ,CAACkB,KAEJxe,sBAAU,WACRw0B,EAAejxC,IACfmxC,EAAgBnxC,MACf,CAAC/E,IAEJwhB,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClBs3B,GAAW,GACX,IAAM/hC,EAAY,CAAE+jC,KAAM/1B,EAAIvD,KAC9Bu4B,GAAS,CACPhjC,cAGF+kD,GAAY/2C,EAAI8U,MAEhB+gB,GAAiB71B,EAAII,SAEtB,CAACJ,IAEJ,IAAMm3C,GAAa,yCAAG,iCAAAplD,EAAA,yDACf4kC,GAAa1yB,EADE,gCAEZ0H,GACJR,EACA3Z,GAAQ,wHAA2B,oCAJnB,2CAQhBmlC,IAAa1yB,EARG,gCASZ0H,GACJR,EACA3Z,GAAQ,iJAAgC,iCAXxB,wCAedkD,EAAO,CACX0L,KAAM4zB,EACN2C,SAAUA,EAASz8B,KACnB+J,UAAWA,EAAU/J,KACrB0H,SACAkT,OACAtvB,OAAQ1B,GAAK0B,OACbu9B,OAAQj/B,GAAK2Y,KAET26B,EAxBc,uBAwBChD,GAxBD,8BAwBiB1/B,GAxBjB,IAwBuBquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,EAAagD,GACb+f,KACAP,EAAO3mC,QAAQ2e,QA5BK,4CAAH,qDAiDbh9B,GAAQ,yCAAG,uCAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8uB,EAAe/uB,GAAe+uB,EAAe9uB,GAFlC,gCAGPyG,GACJR,EACA3Z,GAAQ,+FAAsB,yBALnB,2CASV4iC,GAAkC,IAArBA,EAAUl9B,OATb,gCAUPyU,GACJR,EACA3Z,GAAQ,sGAAwB,wBAZrB,wCAgBT8U,EAAavY,EACf,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEjB6S,EAAWvY,GACb,CACE+Y,WAAY/Y,GAAUyO,IACtBuK,aAAchZ,GAAU5K,KACxB6jB,eAAgBjZ,GAAUpH,OAC1BsgB,cAAelZ,GAAU3F,OAE3B,CACE0e,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,GAGf1B,EAAiB,CACrByK,IAAKuD,GAAOA,EAAIvD,IAAMuD,EAAIvD,SAAM/I,EAChCgV,OAAQtf,GAAesB,KACvB0V,KAAM4zB,EACN3tB,MAAOtkB,KAAKyB,UAAU4wC,GACtB9tB,aACAC,WACAuO,KAAMgiC,GACNtxD,OAAQ1B,GAAK0B,OACbu9B,OAAQj/B,GAAK2Y,KAGfumB,GADepR,EAAQI,EAAYC,EACrBjgB,GAvDC,4CAAH,qDA0DRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,uBAGJqZ,GAAaF,EAAS3Z,IAHlB,OAIV06B,KAJU,gDAMV7I,GAAQ,EAAD,IANG,yDAAH,wDAULA,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,IAFlB,6CAIN+Z,GAAWJ,EAAS3Z,IAJd,OAKZgW,QAAQC,IAAIzW,GALA,2CAAH,sDASPomD,GAAY,WAChBT,EAAU,GACVC,EAAQ,IACRvL,EAAa,MACbD,EAAY,OAeRlf,GAAa,WAZjBkrB,KACAnM,EAAe,IACfE,EAAgB,IAChB9W,EAAa,IACb3I,EAAe,MACfc,IAAe,GACfrd,GAAa,MACbwd,IAAa,GACbC,GAAW,MACXE,GAAa,IACbiqB,GAAY,IAIZhqC,KAGI8oB,GAAmB,SAAC/wB,GACxBmvB,EAAgBnvB,IAGlB,OACE,eAACgd,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASmf,GACT7vB,MAAOyL,GAAM8f,YACb/1B,SAAUA,GACVjS,MAAOA,EACPmiC,KAAMA,EACNhuB,GAAI,GACJ7S,SAAS,KATX,SAWE,gBAAC+zB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,eAAC,GAAD,CACE1jB,MAAOA,GACP6B,MAAOyU,GAAM1H,KACb/c,MAAO2wC,EACPtxB,SAAUmzB,KAEZ,eAAC5c,GAAD,CACE71B,KAAK,WACLiQ,MAAOyU,GAAM0b,YACbngC,MAAOyzD,GACPp0C,SAAU,SAAChQ,GAAD,OAAYqkD,GAAYrkD,EAAE05B,OAAO/oC,QAC3C2c,IAAKA,EACLxM,WAAS,EACTiwB,WAAS,EACTC,QAAS,EACTvS,KAAM,IAER,gBAAC8D,GAAA,EAAD,CACErhB,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACT2gB,aAAc,IAEhBsU,WAAS,EACT5zB,QAAS,EAPX,UASE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM1R,GACb0R,MAAOA,GACP2G,QAASu8B,EACT3nD,MAAOszC,EACPjoB,eAAgB08B,EAChB55C,MAAOA,GACPk6C,WAAS,EACTxyB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,YACLiZ,MAAOyL,GAAM2e,KACb3e,MAAOA,GACP2G,QAASy8B,EACT7nD,MAAO4gB,EACPyK,eAAgB28B,EAChB75C,MAAOA,GACPk6C,WAAS,EACT78B,SAAUgoC,EACV39B,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,SACLiQ,MAAOyU,GAAMlG,OACbve,MAAOue,EACPc,SAAU,SAAChQ,GAAD,OAAYikD,EAAUvvC,OAAO1U,EAAE05B,OAAO/oC,SAChD2c,IAAKA,EACLvb,KAAK,SACL+O,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,GAAMxB,WACbwB,MAAOA,GACP2G,QAASqO,GACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgB6d,GAChB5d,YAAa2d,GACb1d,SAAU4d,GACVj7B,MAAOA,GACP0nB,GAAI,MAIR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACkY,GAAA,EAAD,CACEjZ,aAAW,QACX/wB,KAAK,QACL4c,KAAG,EACHpM,MAAO,CAAE9T,UAAW,GACpBuD,MAAO4oC,GACPvpB,SAAU,SAAChQ,GACTk6B,GAAWxlB,OAAO1U,EAAE05B,OAAO/oC,QAC3B8rB,GAAa,OARjB,UAWE,eAACuB,GAAA,EAAD,CACErtB,MAAO,EACPstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,GAAQ,mDAAa,cAG9B,eAACkf,GAAA,EAAD,CACErtB,MAAO,EACPstB,QAAS,eAAC0c,GAAA,EAAD,CAAOhlC,MAAM,YACtBgL,MAAO7B,GAAQ,6CAAY,mBAIjC,eAACyjB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAmB,IAAZ4vB,GAAgBnkB,GAAMvB,SAAWuB,GAAMpL,UAC9C2S,UAAW4c,GACXnkB,MAAOA,GACP2G,QAASoe,GACTxpC,MAAO2K,GACP0gB,eAAgBS,GAChBR,eAAgBge,GAChB/d,YAAa8d,GACb7d,SAAUid,GACVt6B,MAAOA,GACP0nB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACE71B,KAAK,OACLiQ,MAAOyU,GAAM0b,YACbngC,MAAOyxB,EACPpS,SAAU,SAAChQ,GAAD,OAAYkkD,EAAQlkD,EAAE05B,OAAO/oC,QACvC2c,IAAKA,EACLxM,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACtL,GAAA,EAAD,CACEhW,MAAO,CAAEpV,WAAY,GAAIsB,UAAW,GACpCuI,MAAM,UACN/K,KAAK,QACLuW,QAASsjD,GACT96C,MAAM,iBALR,SAOE,eAAC,KAAD,aAKR,eAACo6C,GAAD,CACEtlC,KAAMijB,EACNlE,SAlSW,SAACx7B,GACtB,IAAM0iC,EAAWhD,EAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IA0RH/zC,WAvRe,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,GACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,EAAagD,IAoRH7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,GACNkW,SAAUA,KAEX85B,GAAW,eAAC,GAAD,UAGhB,eAAC7e,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UCzaR,SAASmiC,GAAT,GAMX,IALF7lD,EAKC,EALDA,MACAsW,EAIC,EAJDA,MACAjT,EAGC,EAHDA,SACAjP,EAEC,EAFDA,SACAhG,EACC,EADDA,MACC,EACiBmR,oBAAS,CACzB,CAAE3N,KAAM,OAAQiZ,MAAOyL,EAAM1H,MAC7B,CAAEhd,KAAM,QAASiZ,MAAOyL,EAAMC,IAC9B,CAAE3kB,KAAM,OAAQiZ,MAAOyL,EAAM0b,aAC7B,CAAEpgC,KAAM,SAAUiZ,MAAOyL,EAAMrjB,MAC/B,CAAErB,KAAM,SAAUiZ,MAAOyL,EAAMlG,UAL1BuuB,EADN,uBASuBp/B,oBAAS,IAThC,oBASMogB,EATN,KASYsuB,EATZ,OAU6B1uC,qBAAS,GAVtC,oBAUM+iC,EAVN,KAUeC,EAVf,OAYyBhjC,oBAAc,MAZvC,oBAYM9M,EAZN,KAYamyB,EAZb,OAaqBrlB,oBAAc,MAbnC,oBAaM7M,EAbN,KAaWmyB,EAbX,OAkBG/kB,sBAAW5C,IAlBd,IAgBCnK,MAASsJ,EAhBV,EAgBUA,YAAaD,EAhBvB,EAgBuBA,gBAAiBY,EAhBxC,EAgBwCA,QAASL,EAhBjD,EAgBiDA,KAChDoD,EAjBD,EAiBCA,SAjBD,EA+BwC8rB,aAAai6B,GAAoB,CACxE9sB,YAAa,sBAhCd,oBA+BMqhB,EA/BN,KA+BoBC,EA/BpB,KAkCO9xC,EAAa4wC,KAAb5wC,SACFkjC,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAO25B,GACPtlD,UAAW,CACT/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,IAG/C,CACEiqB,MAAOmB,IAET,CACEnB,MAAO4M,MAKb9T,sBAAU,WACR,IAAMzkB,EAAY,CAChB/N,MAAOA,EAAQA,EAAMqgB,SAAS,EAAG,EAAG,EAAG,QAAK5Q,EAC5CxP,IAAKA,EAAMA,EAAIogB,SAAS,GAAI,GAAI,GAAI,UAAO5Q,GAE7Cm4C,EAAa,CACX75C,gBAED,CAAC/N,EAAOC,IA7DV,MA+DoBwN,aAAY6lD,GAAsBra,GAAhD8O,EA/DN,uBAgEqBt6C,aAAY8lD,GAAsBta,GAAjDgP,EAhEN,uBAiEuBx6C,aAAY+lD,GAAsBva,GAAnDkP,EAjEN,qBAmEK/b,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpBkmC,EAAc,CAAEp6C,UAAW,CAAEyK,UAHX,2CAAH,sDAOnBga,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIq1B,QAAJ,IAAIA,OAAJ,EAAIA,EAAahY,UACfC,GAAW,GAEb,OAAI+X,QAAJ,IAAIA,GAAJ,UAAIA,EAAa59C,YAAjB,iBAAI,EAAmBopD,0BAAvB,aAAI,EAAuCppD,KAAM,CAAC,IACxCA,EAAS49C,EAAY59C,KAAKopD,mBAA1BppD,KACRuxC,EAAQvxC,GACR6lC,GAAW,MAEZ,CAAC+X,IAUJ,OACE,eAAC3tB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAfY,WACH,OAAX0tB,QAAW,IAAXA,KAAa5tB,WAQb,SAQE,gBAACnJ,GAAA,EAAD,WACE,eAACg0B,GAAD,CACE3yB,SAAUA,EACVC,OAAQA,EACRxoB,YAAaA,EACbioB,kBApFkB,SAACuqB,GACzB9uC,EAAS,CAAE9M,KAAM,iBAAkBC,QAAS27C,KAoFtCzyC,gBAAiBA,EACjB0oB,sBAzFsB,SAAC5jB,GAC7BnB,EAAS,CAAE9M,KAAM,qBAAsBC,QAASgO,EAAE05B,OAAO/oC,SAyFnDmL,QAASA,EACTy6C,cApFc,SAAC5I,GACrB9uC,EAAS,CAAE9M,KAAM,aAAcC,QAAS27C,KAoFlCxqB,MAAO,CAAC,EAAG,EAAG,GAAI,IAAK,KACvBrkB,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,IAET,gBAAC,KAAD,CAAMuxB,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GA9B1Bx4C,EAAS,CAAE9M,KAAM,UAAWC,QA8B2BqlD,OAEjD,eAAC,KAAD,CAAcvZ,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,IACA,eAAC,KAAD,CACEpvC,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IACnC,eAAC,KAAD,CACEzX,IAAK,CAAC,QACNlB,mBAAoBzuB,KAEtB,eAAC,KAAD,CACE2vB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,UACNlB,mBAAoBnsB,KAEtB,eAAC,KAAD,CACEqtB,IAAK,CAAC,QAAS,SACflB,mBAAoBtuB,KAEtB,eAAC,KAAD,CACEwvB,IAAK,CAAC,aACNlB,mBAAoB,SAACtyC,GAAD,OAClB0mB,GAAyB1mB,EAAO4c,EAAUxI,MAG9C,eAAC,KAAD,CACEo/B,IAAK,CAAC,YACNlB,mBAAoB,SAACtyC,GAAD,OAClBwmB,GAAiBxmB,EAAO4c,EAAUxI,MAGrC5L,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,KAGtB,eAAC,KAAD,IACA,eAAC,KAAD,CACEw+B,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI1C,eAAC,GAAD,CACEwC,MAAOA,EACPoyB,UAAWg6B,EACX/5B,WAAYi6B,EAHd,SAKE,eAAC,GAAD,SAGHpY,GAAW,eAAC,GAAD,CAAStiC,MAAOA,SC1O7B,IAEQkmD,GAFajqD,yBAAwC,ICD9DxJ,GAAQ,IAAI6J,KAAKA,KAAK6pD,IAAI,KAAM,EAAG,EAAG,GAAI,KCKhD,IAAMrxD,GAAO,eAAC,KAAD,CAA0BvH,SAAS,UAC1CsuD,GAAc,eAAC,KAAD,CAActuD,SAAS,UAE5B,SAAS64D,GAAT,GASN,IARPnpC,EAQM,EARNA,QACAprB,EAOM,EAPNA,MACAu7C,EAMM,EANNA,SACA92B,EAKM,EALNA,MACAtW,EAIM,EAJNA,MACApO,EAGM,EAHNA,KACA9C,EAEM,EAFNA,MAEM,IADNitD,eACM,SACN,OACE,eAACj+B,GAAA,EAAD,CACEhyB,KAAK,QACLkwD,UAAWD,EACX9+B,QAASA,EACTg/B,sBAAoB,EACpBC,iBAAe,EACfn+B,eAAgB,SAACC,GAAD,OAAkBhe,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,MACjEusB,aAAc,SAACH,EAAD,OAAWsqB,EAAX,EAAWA,SAAX,OACZ,gBAAChmC,GAAA,EAAD,CACEF,MAAO,CACLhV,UAAW4S,EAAQ,MAAQ,MAC3BxR,QAAS,OACTc,KAAM,EACNZ,WAAY,UALhB,WAQIqtD,GACA,eAAC/qC,GAAA,EAAD,CACElc,KAAMA,GACN+mD,YAAaA,GACbz5C,MAAO,CAAEnV,YAAa,GACtBgkB,QAASq3B,IAGZtoC,EAAQge,EAAO5oB,OAAS4oB,EAAOpsB,SAGpCC,MAAOA,EACPqf,SAAU,SAACjgB,EAAGmtB,GACZgvB,EAAShvB,IAEXG,YAAa,SAACC,GAAD,OACX,eAAC7c,GAAA,EAAD,6BACM6c,GADN,IAEEmB,KAAM,EACNuS,QAAS,EACTv9B,GAAI/C,EACJA,KAAMA,EACNiQ,MAAOyU,EAAM1kB,GACb/E,QAAQ,WACRuV,MAAO,CACLtT,MAAOA,GAAgB,IACvB7B,YAAa,EACbD,WAAY,EACZO,SAAU,GACVvB,OAAQ,EACRkB,QAAS,SCtDrB,I,GAqJem5D,GArJa,SAAC,GAQjB,IAPV5iD,EAOS,EAPTA,KACA8X,EAMS,EANTA,QACAlb,EAKS,EALTA,SACAjS,EAIS,EAJTA,MACA4R,EAGS,EAHTA,MACAsW,EAES,EAFTA,MACA7jB,EACS,EADTA,MACS,EACe8M,oBAASkpC,KAAMC,OAD9B,oBACF4d,EADE,KACIC,EADJ,OAEuBhnD,oBAAS,IAFhC,oBAEFtE,EAFE,KAEQurD,EAFR,OAGyBjnD,oBAAS,IAHlC,oBAGFknD,EAHE,KAGSC,EAHT,OAIqBnnD,oBAAS9M,GAAgB,IAAI6J,MAJlD,oBAIFqqD,EAJE,KAIOC,EAJP,OAKiBrnD,oBAAS,MAL1B,oBAKFsnD,EALE,KAKKC,EALL,OAMuBvnD,oBAAS,GANhC,oBAMF82B,EANE,KAMQ0wB,EANR,OAOiBxnD,oBAAS,GAP1B,oBAOF0kB,EAPE,KAOK+iC,EAPL,OASeznD,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IATtD,oBASFquB,EATE,UAwBTtL,sBAAU,WACR,GAAIhqB,GAAYA,EAASyK,OAAS,EAAG,CACnC,IAAMuhD,EAAMhsD,EAASwJ,KAAI,SAACyiD,GAAD,OAAaA,EAAGr1D,SACzC60D,EAAaO,MAEd,CAAChsD,IACJgqB,sBAAU,WACJqhC,IAAS7d,KAAME,SACjB6d,EAAY,IACZE,EAAa,OAEd,CAACJ,IAEJ,IAaMz7C,EAAQ7K,EAAQ,2GAAwB,yBAExC+9B,EAAc,WAClBwoB,EAAQ9d,KAAMC,OACdke,EAAW,IAAItqD,MACfwqD,EAAS,MACTC,EAAY,GACZC,EAAS,GACTR,EAAY,IACZE,EAAa,IACbnrC,KAEF,OACE,eAAC+U,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAASwiB,EACTlzB,MAAOA,EACPxK,SA/BW,WACb,IAAMopB,EFtDK,YAOX,IAAD,IAND68B,YAMC,MANM7d,KAAME,OAMZ,EALD8d,EAKC,EALDA,UAKC,IAJDE,eAIC,MAJSl0D,GAIT,MAHDo0D,aAGC,MATS,KAST,MAFDxwB,gBAEC,MAFU,EAEV,MADDpS,aACC,MADO,EACP,EACKkjC,EAAO,IAAI1e,KAAM,CAAE6d,OAAMjwB,WAAUowB,YAAWE,UAASE,QAAO5iC,UAKpE,MAAO,CAAElY,IAJGo7C,EAAKp7C,MAIHq7C,IAHFD,EAAK/hB,WAGEiiB,IAFPF,EAAKG,UE2CDC,CAAa,CACzBjB,OACAG,UAAWA,EAAU/gD,OAAS,EAAI+gD,OAAYvkD,EAC9CykD,UACAE,QACAxwB,WACApS,UAEF5jB,EAASopB,GACTsU,KAsBE3vC,MAAOA,EACPmiC,KAAMA,EACN2pB,WAAS,EACTxqD,SAAS,KATX,SAWE,gBAAC+zB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACE1jB,MAAOA,EACP6B,MAAOyU,EAAM7jB,MACbZ,MAAO80D,EACPz1C,SAAU,SAACoC,GAAD,OAAeszC,EAAWtzC,QAGxC,eAAC,GAAD,CACE2J,QAASurB,GACT32C,MAAOy0D,EACPp1C,SA7EW,SAAChQ,GACpBqlD,EAAQrlD,EAAE05B,OAAO/oC,QA6ETmO,MAAOA,IAERsmD,IAAS7d,KAAME,QACd,eAACyd,GAAD,CACEnpC,QAAS6rB,GACTj3C,MAAOoJ,EACPmyC,SAAUoZ,EACVlwC,MAAOA,EACPtW,MAAOA,EACPpO,KAAK,WACL9C,MAAO,MAGX,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,QACLiQ,MAAOyU,EAAM5e,IACb7F,MAAOoyB,EACP/S,SAzFU,SAAChQ,GACrB,IAAMrP,EAAQ+jB,OAAO1U,EAAE05B,OAAO/oC,OAClBm1D,EAAZn1D,EAAQ,EAAa,EAAcA,IAwFzBoB,KAAK,SACLnE,MAAO,QAIX,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,WACLiQ,MAAOyU,EAAM+f,SACbxkC,MAAOwkC,EACPnlB,SAzGa,SAAChQ,GACxB,IAAMrP,EAAQ+jB,OAAO1U,EAAE05B,OAAO/oC,OAClBk1D,EAAZl1D,EAAQ,EAAgB,EAAiBA,IAwG/BoB,KAAK,SACLnE,MAAO,QAGX,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACE1jB,MAAOA,EACP6B,MAAOyU,EAAM5jB,IACbb,MAAOg1D,EACP31C,SAAU,SAACoC,GAAD,OAAewzC,EAASxzC,WAKxC,eAACmQ,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,UClHVwe,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cAgrBSu7C,GA3qBc,SAAC,GAclB,IAAD,EAbT/jD,EAaS,EAbTA,KACA8X,EAYS,EAZTA,QACA/M,EAWS,EAXTA,IACA4R,EAUS,EAVTA,MACAyE,EASS,EATTA,OACA4iC,EAQS,EARTA,UACAp8B,EAOS,EAPTA,UACAC,EAMS,EANTA,YACA8W,EAKS,EALTA,iBACAh0C,EAIS,EAJTA,MACA0mB,EAGS,EAHTA,WACAvC,EAES,EAFTA,SACAwC,EACS,EADTA,SAEMzV,EAAUvP,KADP,EAGqBwP,qBAAS,GAH9B,oBAGF+iC,EAHE,KAGOC,EAHP,OAK8BhjC,oBAAS,MALvC,oBAKFkM,EALE,KAKSg/B,EALT,OAM0BlrC,oBAAS,MANnC,oBAMFvC,EANE,KAMO0tC,EANP,OAQ6BnrC,oBAAc,MAR3C,oBAQFhD,EARE,KAQW29B,EARX,OAS6B36B,qBAAc,GAT3C,oBASFw7B,EATE,KASWC,EATX,KAUHC,EAAiBz3B,KAAM+2B,SAVpB,EAYyBh7B,oBAAc,MAZvC,oBAYF/C,EAZE,KAYSmhB,EAZT,OAayBpe,qBAAc,GAbvC,oBAaF27B,EAbE,KAaSC,EAbT,KAcHb,EAAe92B,KAAM+2B,SAdlB,EAgByBh7B,oBAAc,MAhBvC,oBAgBFlC,EAhBE,KAgBS6lC,EAhBT,OAiBuB3jC,qBAAS,GAjBhC,oBAiBF6jC,EAjBE,KAiBQC,EAjBR,QAkBqB9jC,oBAAS,IAlB9B,sBAkBFoc,GAlBE,MAkBO2nB,GAlBP,SAoBwB/jC,oBAAS,MApBjC,sBAoBF9C,GApBE,MAoBM0rC,GApBN,SAsBmB5oC,oBAAc,IAtBjC,sBAsBFyjC,GAtBE,MAsBMC,GAtBN,SAuByB1jC,oBAAc,IAvBvC,sBAuBFqjC,GAvBE,MAuBSC,GAvBT,SAwBiBtjC,oBAAc,MAxB/B,sBAwBF+L,GAxBE,MAwBKo8C,GAxBL,SA0ByBnoD,qBAAS,GA1BlC,sBA0BFooD,GA1BE,MA0BSC,GA1BT,SA4BeroD,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IA5BtD,sBA4BFquB,GA5BE,MA4BI5W,GA5BJ,SA8B2Bpa,qBAAS,GA9BpC,sBA8BForC,GA9BE,MA8BUC,GA9BV,SA+B6BrrC,oBAAS,IA/BtC,sBA+BFgM,GA/BE,MA+BWs/B,GA/BX,SAgCuBtrC,oBAAS,MAhChC,sBAgCF+oC,GAhCE,MAgCQwC,GAhCR,SAkCwCnH,KAAzC9K,GAlCC,GAkCDA,UAAWL,GAlCV,GAkCUA,YAAaE,GAlCvB,GAkCuBA,aAlCvB,GAoC0Bh5B,aAAQ,IAAnCC,GApCC,GAoCDA,SAAUC,GApCT,GAoCSA,aApCT,GAwCUE,sBAAWtB,IAxCrB,MAsCPyB,UAAaqW,GAtCN,GAsCMA,MAAOtW,GAtCb,GAsCaA,MACX1N,GAvCF,GAuCPhC,MAASgC,KAvCF,GA0C0Bu5B,aAAa0X,GAAmB,CACjEvK,YAAa,sBA3CN,sBA0CFwK,GA1CE,MA0CQC,GA1CR,SA8C+B5X,aAAakf,GAAY,CAC/D/R,YAAa,sBA/CN,sBA8CFgS,GA9CE,MA8CWC,GA9CX,MAkDThmB,sBAAU,WAAO,IAAD,QACRpQ,GAAiB,OAAT4uB,SAAS,IAATA,IAAA,UAAAA,GAAW/mC,YAAX,2DAAwCA,OAAQ,GACxDmQ,GAAqB,OAAXo+B,SAAW,IAAXA,IAAA,UAAAA,GAAavuC,YAAb,oDAAmCA,OAAQ,GAE3D,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMk+B,EAAM/uB,EAAMpQ,KAAI,SAACu4B,GAAD,OAAaA,EAAG6G,UAChCC,EAAW1B,EAAiBn8B,QAAO,SAAC89B,GAAD,OACvCH,EAAIx4B,SAAS24B,EAAI94B,QAGb+4B,EAAiBnvB,EAAMpQ,KAAI,SAACvB,EAAW+I,GAAgB,IAEzDg4B,EAWE/gC,EAXF+gC,WACAznB,EAUEtZ,EAVFsZ,aACAC,EASEvZ,EATFuZ,eACAtH,EAQEjS,EARFiS,aACAC,EAOElS,EAPFkS,eACAC,EAMEnS,EANFmS,iBACAC,EAKEpS,EALFoS,gBACAC,EAIErS,EAJFqS,WACAC,EAGEtS,EAHFsS,aACAC,EAEEvS,EAFFuS,eACAC,EACExS,EADFwS,cAEImoB,EAAOiG,EAAS79B,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ/H,EAAK2gC,UAAQ,GAClE,OAAO,6BACFhG,GADL,IAEEoG,aACAznB,eACAC,iBACAtH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAzJ,QACA0wB,UAAWz5B,EAAKghC,UAChBzH,QAASv5B,EAAKxL,IACd6lC,UAAWr6B,EAAKwN,MAChB8sB,cAAet6B,EAAKxL,IAAMmmC,EAAKnK,UAGnCsQ,EAAernC,MAAK,SAAC4D,EAAQ4jC,GAAT,OAClB5jC,EAAE6jC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO7jC,EAAE6jC,MAAQ,EAAI,KAE/CvB,GAAamB,GAEb,IAAM6B,EAAgB3D,GAAar1B,GACnCg+B,GAAehF,GACftD,GAAW,MAEZ,CAACkB,GAAWwH,KAEfhmB,sBAAU,WACR,IAAKzW,EAAK,CAAC,IAAD,EACF/b,EAAQ,IAAI6J,KACZ5J,EAAM,IAAI4J,KAChB7J,EAAMyoD,WAAW,GACjBxoD,EAAIogB,SAASpgB,EAAIgZ,WAAa,GAC9BhZ,EAAIwoD,WAAW,GACfzQ,EAAah4C,GACbi4C,EAAWh4C,GACXy1C,GAAS,UAACptC,GAAYkL,QAAO,SAAC8J,GAAD,OAAuB,IAAVA,EAAGpb,aAApC,aAAC,EAA+C,IACzDuuC,EAAa3wB,GACb2nB,EAAeplB,GACf6I,EAAa5I,MAEd,CAACtR,IAEJwhB,sBAAU,WACRqf,OACC,CAAC1B,KACJ3d,sBAAU,WAAO,IAAD,GACL,OAAL3Z,SAAK,IAALA,QAAA,EAAAA,GAAOS,OAAY,OAALT,SAAK,IAALA,IAAA,UAAAA,GAAOS,WAAP,eAAYrG,QAAS,GACrCmf,EAAOvZ,GAAMS,IAAIT,GAAMS,IAAIrG,OAAS,MAErC,CAAC4F,KAEJ2Z,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClBs3B,GAAW,GACXiB,GAAS,CAAEhjC,UAAW,CAAE+jC,KAAM/1B,EAAIvD,OAClC+/B,GAAY,CAAExqC,UAAW,CAAE0qC,QAAS18B,EAAI7Z,MAExC,IAAM8mC,EAAQjtB,EAAI2G,aACZumB,EAAQltB,EAAI+G,WACZ4lC,EAAS3sC,EAAIgE,WACb4oC,EAAS5sC,EAAI/R,OAMnB,GAJAguC,EAAY,OAACj8B,QAAD,IAACA,OAAD,EAACA,EAAK/C,WAClBi/B,EAAU,OAACl8B,QAAD,IAACA,OAAD,EAACA,EAAKxR,SAChB0qD,GAAQ,OAACl5C,QAAD,IAACA,OAAD,EAACA,EAAKq5C,OAEVpsB,EAAO,CACT,IAAMjB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQwwB,KAAO,GACnEvB,EAAeM,GAEjB,GAAIkB,EAAO,CACT,IAAMC,EAAOtQ,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQywB,KAAO,GAC/D/d,EAAage,GAEf,GAAIwf,EAAQ,CACV,IAAM3W,EAAO3L,GAAU5yB,QAAO,SAACo1C,GAAD,OAAaA,EAAGpwC,MAAQkwC,KAAQ,GAC9DjY,EAAasB,GAEf,GAAI4W,EAAQ,CACV,IAAME,EAAOvgD,GAAYkL,QAAO,SAAC8J,GAAD,OAAaA,EAAGpb,KAAOymD,KAAQ,GAC/DjT,GAAUmT,OAGb,CAAC9sC,IAEJ,IA2DM81B,GAAkB,WACtB,IACMK,EADW/B,GAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMrH,aAChCsH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAEvDwkC,EADanC,GAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMpH,iBAC5BqH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAWnE0iC,GARa,CACX+B,SAHaL,EAIbM,aAAcF,EACdG,WAAYH,EACZr0B,MAAOi0B,EACPv0B,OAPau0B,EAQbvQ,OAPauQ,EAAMI,KAyBjB1kC,GAAQ,yCAAG,qCAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YAEnBjI,EAAYgI,GACZhI,EAAYiI,GACZ1W,EAAUyW,GACVzW,EAAU0W,GANG,gCAQPyG,GACJR,GACA3Z,GAAQ,+FAAsB,yBAVnB,6CAcXyL,EAAYzO,GAdD,gCAePmd,GACJR,GACA3Z,GAAQ,+FAAsB,yBAjBnB,2CAqBX,IAAI1D,KAAKmP,GAAWa,YAAc,IAAIhQ,KAAKU,GAASsP,UArBzC,kCAsBP6N,GACJR,GACA3Z,GAAQ,+FAAsB,yBAxBnB,6CA6BV4iC,IAAkC,IAArBA,GAAUl9B,OA7Bb,kCA8BPyU,GACJR,GACA3Z,GAAK,uTAhCM,0CAuCTjH,EAAQ,CACZ0S,YACAzO,UACAoT,OAAQ4yB,GAAO5yB,OACf3T,OAAQA,GAASA,GAAO9H,GAAK,EAC7BkgB,MAAOtkB,KAAKyB,UAAU4wC,IACtBrwB,SAAUlV,EACN,CACEmV,WAAYnV,EAAU4N,IACtB0H,aAActV,EAAUzL,KACxB8gB,eAAgBrV,EAAUjI,OAC1B8f,cAAe7X,EAAUrG,OAE3B,CACEwb,gBAAYtQ,EACZyQ,kBAAczQ,EACdwQ,oBAAgBxQ,EAChBgT,mBAAehT,GAGrB4S,WAAYvY,EACR,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEvB6S,SAAUvY,EACN,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,MACzB8e,cAAenZ,EAAUxF,OAE3B,CACEue,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,EACfyT,mBAAezT,IAGjB4lD,EAAYz8C,GAAc,CAAEtS,QAAOuS,SAAOC,iBAChDk8C,EAAUK,GACVl2B,KA1Fe,4CAAH,qDA6FRA,GAAc,WAzGlB6Y,EAAa,MACbC,EAAW,MACXxH,EAAa,MACbhJ,EAAe,MACfvc,EAAa,MACbwqB,GAAU,MACVuf,GAAS,MACT7kB,GAAa,IACbI,GAAU,IACV4H,GAAe,IACfC,GAAY,MAiGZvvB,KAOIjI,IAAU,OAAH9E,QAAG,IAAHA,OAAA,EAAAA,EAAK/C,WAAY,IAAInP,KAAJ,OAASkS,QAAT,IAASA,OAAT,EAASA,EAAK/C,WAAa,IAAInP,KACvD+P,GAAG,OAAG5Q,SAAH,IAAGA,QAAH,EAAGA,GAAc6X,GAAKH,UAEzBtI,GAAQ7K,GACVogB,EACE,oDACA,0DACFA,EACA,kBACA,mBAEJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASqW,GACT/mB,MAAOA,GACPxK,SArBmB,WACrBT,GAAaS,GAAbT,IAqBExR,MAAOA,EACPmiC,KAAMA,GACNhuB,GAAI,GACJ7S,SAAS,KATX,SAWE,uCACE,eAAC4S,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,QAAU3kB,QAAQ,QAAnD,gBACG2hB,QADH,IACGA,OADH,EACGA,EAAKmI,UAIV,gBAAC8M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,SACE,gBAAC4P,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM7jB,MACbZ,MAAO4Z,EACPyF,SAAU,SAACwY,GAAD,OAAY+gB,EAAa/gB,IACnChD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM5jB,IACbb,MAAOmL,EACPkU,SAAU,SAACwY,GAAD,OAAYghB,EAAWhhB,IACjChD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,GACThnC,MAAOwL,EACP6f,eAAgBgmB,EAChBvjC,SAAUA,GACVK,MAAOA,GACPsd,QAlNC,WACnB+lB,GAAY,IAkNMrnB,WAAS,EACTha,WAAS,MAIb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,GAAMxB,WACbwB,MAAOA,GACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgB6d,EAChB5d,YAAa2d,EACb1d,SAAU4d,EACVt7B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAMvB,SACbuB,MAAOA,GACP2G,QAASoO,EACTx5B,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACb7d,SAAUid,EACV36B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,EACTqK,IAAKA,YAKb,gBAACoX,GAAA,EAAD,CACEvgB,MAAI,EACJwgB,GAAI,EACJthB,MAAO,CACLxT,gBAAiB,OACjBif,aAAc,GALlB,UAQE,eAAC1L,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLma,aAAc,GACdhvB,SAAU,GACV+xB,SAAU,IAEZjd,QAAS,WACPyoC,GAAY,MACZF,IAAc,IATlB,SAYG5qC,GAAQ,gEAAgB,iBAE3B,eAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,IAAK0xB,SAAU,QAAvC,SACG5V,GAAY9G,KAAI,SAAC2mC,GAChB,OACE,gBAACznC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAASmkB,GAAoB,CAAExD,IAAK48B,IACpCr9C,UAAWohB,GAAqBi8B,EAAIz+B,SAAU3M,MAEhD,eAACsY,GAAA,EAAD,CACEjW,QAAS,kBAlSJ,SAACa,GAC5B,IAAMmoC,EAAU9/B,GAAYtF,QAAO,SAACqlC,GAAD,OAAaA,EAAGr/B,QAAU/I,EAAK+I,SAC5D45B,EAAgB3D,GAAamJ,GACnCR,GAAehF,GA+RsB0F,CAAqBH,IACpCvgC,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAHpB,SAKE,eAAC,KAAD,CACEkV,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAGlC,eAACyhB,GAAA,EAAD,CACElW,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyoC,GAAYM,GACZR,IAAc,IAEhB//B,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,+BAWhD,gBAAC4sB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,UACE,eAAC4P,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,IAEzB,gBAAC+T,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC2tC,GAAD,CACElf,QAASmlB,EACThG,QAtXM,SAACl5B,GACrB,IAAM0iC,EAAQ,uBAAOhD,IAAP,8BAAuB1/B,GAAvB,IAA6BquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,GAAagD,IAoXCvvB,MAAOA,GACP+U,UAAWA,EACXC,YAAaA,EACbhsB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTsiC,GACA,eAAChgC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,SACE,eAACkiB,GAAD,CACEhvC,OAAQ,IACRkwB,KAAMijB,GACNlE,SA/XK,SAACx7B,GACtB,IAAM0iC,EAAWhD,GAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,GAAagD,IAuXG/zC,WApXS,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,IACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,GAAagD,IAiXG7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,OAIXgwC,GAAW,eAAC,GAAD,OAEd,gBAAC7e,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,gBAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,gBAACjiB,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,OAAQjkB,SAAU,IAAnD,UACG+oB,GAAM5F,MADT,MACmBP,GAAY6yB,GAAO5yB,WAEtC,eAAC9N,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,IAAzB,SACE,eAACwrC,GAAD,CACEloC,KAAK,SACLiZ,MAAOyL,GAAM7Z,OACb6Z,MAAOA,GACP2G,QAASliB,GACTlJ,MAAO4K,GACPygB,eAAgBirB,GAChB3qB,QAAM,EACNxd,MAAOA,GACPlR,MAAO,WAIb,gBAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACE,eAACvhB,GAAA,EAAD,CACEC,MAAO,CAAEkd,SAAU,IAAKhxB,UAAW,GACnCzB,QAAQ,WACRwV,QAAS,kBAAMulD,IAAa,IAH9B,4CAOA,eAACzlD,GAAA,EAAD,CACEC,MAAO,CAAEkd,SAAU,IAAKhxB,UAAW,GACnCzB,QAAQ,WACRwV,QAAS,kBAAMqlD,GAAS,OAH1B,8EAQF,eAACjkC,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,UACQ,OAALpY,SAAK,IAALA,QAAA,EAAAA,GAAOS,MACN,eAACwX,GAAA,EAAD,CACEnhB,MAAO,CACL08B,UAAW,IACX3d,SAAU,OACV4d,UAAW,KAJf,SAOE,eAACz8B,GAAA,EAAD,CAAKF,MAAO,CAAE3T,cAAe,OAA7B,gBACG6c,SADH,IACGA,IADH,UACGA,GAAOS,WADV,aACG,EAAYtH,KAAI,SAAC+H,EAASP,GACzB,OACE,gBAAC3J,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL3T,cAAe,MACfC,WAAY,SACZkf,eAAgB,gBAChBhf,gBAAiB,OACjB5C,OAAQ,EACRkB,QAAS,GARb,UAWE,eAACuU,GAAA,EAAD,UAAa6N,GAAe9C,EAAIxM,MAChC,eAACyB,GAAA,EAAD,CAAY5U,QAAQ,UAApB,SACGof,EAAQ,mBAU3B,eAAC,GAAD,CACExZ,MAAOgZ,EACPhI,KAAMkkD,GACNpsC,QAAS,kBAAMqsC,IAAa,IAC5BvnD,SAAUqnD,GACVt5D,MAAOA,EACP4R,MAAOA,GACPsW,MAAOA,KAET,eAAC,GAAD,CACE7S,KAAMknC,GACNpvB,QAAS,kBAAMqvB,IAAc,IAC7Bp8B,IAAK85B,GACLloB,OAAOkoB,GACP9nB,UA1cY,SAACtd,GACvB,IAAM0iC,EAAQ,uBAAOr6B,IAAP,CAAoBrI,IAC5B2iC,EAAgB3D,GAAa0D,GACnCiF,GAAehF,IAwcLplB,WAtca,SAACvd,GACxB,IAAM0iC,EAAWr6B,GAAY9G,KAAI,SAACu4B,GAChC,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnCiF,GAAehF,IA8bLz3C,MAAOA,EACP2K,MAAK,6BAAOyV,GAAP,IAAY/C,YAAWzO,cAE9B,eAAC,GAAD,CACE2e,QAASA,GACTlY,KAAM2/B,EACN7nB,QAxbY,WACtB8nB,GAAY,GACZC,GAAW,KAubDljB,OAAO,EACPgR,YArba,SAAC4U,GACxB9C,EAAa8C,IAqbHx3B,IAAK,KACLgS,UAAWgY,GACX/X,WAAYiY,iBC9qBbwJ,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cA2pBS87C,GAtpBc,SAAC,GAkBlB,IAjBVtkD,EAiBS,EAjBTA,KACA8X,EAgBS,EAhBTA,QACA/M,EAeS,EAfTA,IACA4R,EAcS,EAdTA,MACAI,EAaS,EAbTA,UACAC,EAYS,EAZTA,WACA4K,EAWS,EAXTA,UACAC,EAUS,EAVTA,YACAuN,EASS,EATTA,UACAuJ,EAQS,EARTA,iBACAh0C,EAOS,EAPTA,MACAmpB,EAMS,EANTA,OACAxC,EAKS,EALTA,SACAD,EAIS,EAJTA,WACAvC,EAGS,EAHTA,SACA8vB,EAES,EAFTA,QACAjuC,EACS,EADTA,SAEMkL,EAAUvP,KADP,EAGqBwP,qBAAS,GAH9B,oBAGF+iC,EAHE,KAGOC,EAHP,OAK8BhjC,oBAAS,MALvC,oBAKFkM,EALE,KAKSg/B,EALT,OAM0BlrC,oBAAS,MANnC,oBAMFvC,EANE,KAMO0tC,EANP,OAQ6BnrC,oBAAc,MAR3C,oBAQFhD,EARE,KAQW29B,EARX,OAS6B36B,qBAAc,GAT3C,oBASFw7B,EATE,KASWC,EATX,KAUHC,EAAiBz3B,KAAM+2B,SAVpB,EAYyBh7B,oBAAc,MAZvC,oBAYF/C,EAZE,KAYSmhB,EAZT,OAayBpe,qBAAc,GAbvC,oBAaF27B,EAbE,KAaSC,EAbT,KAcHb,EAAe92B,KAAM+2B,SAdlB,EAgByBh7B,oBAAc,MAhBvC,oBAgBFlC,EAhBE,KAgBS6lC,EAhBT,OAiByB3jC,qBAAc,GAjBvC,qBAiBF+kD,GAjBE,MAiBSC,GAjBT,MAkBHyD,GAAexkD,KAAM+2B,SAlBlB,GAoBwBh7B,oBAAS,MApBjC,sBAoBF9C,GApBE,MAoBM0rC,GApBN,SAsBmB5oC,oBAAc,IAtBjC,sBAsBFyjC,GAtBE,MAsBMC,GAtBN,SAuByB1jC,oBAAc,IAvBvC,sBAuBFqjC,GAvBE,MAuBSC,GAvBT,SAwBiBtjC,oBAAc,MAxB/B,sBAwBF+L,GAxBE,MAwBKo8C,GAxBL,SA0ByBnoD,qBAAS,GA1BlC,sBA0BFooD,GA1BE,MA0BSC,GA1BT,SA2B6BroD,qBAAS,GA3BtC,sBA2BFu7C,GA3BE,MA2BWC,GA3BX,SA6Bex7C,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IA7BtD,sBA6BFquB,GA7BE,MA6BI5W,GA7BJ,SA+B2Bpa,qBAAS,GA/BpC,sBA+BForC,GA/BE,MA+BUC,GA/BV,SAgC6BrrC,oBAAS,IAhCtC,sBAgCFgM,GAhCE,MAgCWs/B,GAhCX,SAiCuBtrC,oBAAS,MAjChC,sBAiCF+oC,GAjCE,MAiCQwC,GAjCR,SAmC0BprC,aAAQ,IAAnCC,GAnCC,GAmCDA,SAAUC,GAnCT,GAmCSA,aAnCT,GAuCUE,sBAAWtB,IAvCrB,MAqCPyB,UAAaqW,GArCN,GAqCMA,MAAOtW,GArCb,GAqCaA,MACX1N,GAtCF,GAsCPhC,MAASgC,KAtCF,GAyC0Bu5B,aAAa0X,GAAmB,CACjEvK,YAAa,sBA1CN,sBAyCFwK,GAzCE,MAyCQC,GAzCR,SA6C+B5X,aAAakf,GAAY,CAC/D/R,YAAa,sBA9CN,sBA6CFgS,GA7CE,MA6CWC,GA7CX,MAiDThmB,sBAAU,WAAO,IAAD,QACRpQ,GAAiB,OAAT4uB,SAAS,IAATA,IAAA,UAAAA,GAAW/mC,YAAX,2DAAwCA,OAAQ,GACxDmQ,GAAqB,OAAXo+B,SAAW,IAAXA,IAAA,UAAAA,GAAavuC,YAAb,oDAAmCA,OAAQ,GAE3D,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMk+B,EAAM/uB,EAAMpQ,KAAI,SAACu4B,GAAD,OAAaA,EAAG6G,UAChCC,EAAW1B,EAAiBn8B,QAAO,SAAC89B,GAAD,OACvCH,EAAIx4B,SAAS24B,EAAI94B,QAGb+4B,EAAiBnvB,EAAMpQ,KAAI,SAACvB,EAAW+I,GAAgB,IAEzDg4B,EAWE/gC,EAXF+gC,WACAznB,EAUEtZ,EAVFsZ,aACAC,EASEvZ,EATFuZ,eACAtH,EAQEjS,EARFiS,aACAC,EAOElS,EAPFkS,eACAC,EAMEnS,EANFmS,iBACAC,EAKEpS,EALFoS,gBACAC,EAIErS,EAJFqS,WACAC,EAGEtS,EAHFsS,aACAC,EAEEvS,EAFFuS,eACAC,EACExS,EADFwS,cAEImoB,EAAOiG,EAAS79B,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ/H,EAAK2gC,UAAQ,GAClE,OAAO,6BACFhG,GADL,IAEEoG,aACAznB,eACAC,iBACAtH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAzJ,QACA0wB,UAAWz5B,EAAKghC,UAChBzH,QAASv5B,EAAKxL,IACd6lC,UAAWr6B,EAAKwN,MAChB8sB,cAAet6B,EAAKxL,IAAMmmC,EAAKnK,UAGnCsQ,EAAernC,MAAK,SAAC4D,EAAQ4jC,GAAT,OAClB5jC,EAAE6jC,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAO7jC,EAAE6jC,MAAQ,EAAI,KAE/CvB,GAAamB,GAEb,IAAM6B,EAAgB3D,GAAar1B,GACnCg+B,GAAehF,GACftD,GAAW,MAEZ,CAACkB,GAAWwH,KAEfhmB,sBAAU,WACR,GAAI7E,EAAO,CAAC,IAAD,EACH3tB,EAAQ,IAAI6J,KACZ5J,EAAM,IAAI4J,KAChB7J,EAAMyoD,WAAW,GACjBxoD,EAAIogB,SAASpgB,EAAIgZ,WAAa,GAC9BhZ,EAAIwoD,WAAW,GACfzQ,EAAah4C,GACbi4C,EAAWh4C,GACXy1C,GAAS,UAACptC,GAAYkL,QAAO,SAAC8J,GAAD,OAAuB,IAAVA,EAAGpb,aAApC,aAAC,EAA+C,IACzDuuC,EAAa3wB,GACb2nB,EAAeplB,GACf6I,EAAa5I,MAEd,CAACtR,IAEJwhB,sBAAU,WACRqf,OACC,CAAC1B,KAEJ3d,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClBs3B,GAAW,GACXiB,GAAS,CAAEhjC,UAAW,CAAE+jC,KAAM/1B,EAAIvD,OAClC+/B,GAAY,CAAExqC,UAAW,CAAE0qC,QAAS18B,EAAI7Z,MAExC,IAAM8mC,EAAQjtB,EAAI2G,aACZumB,EAAQltB,EAAI+G,WACZ4lC,EAAS3sC,EAAIgE,WACb4oC,EAAS5sC,EAAI/R,OAMnB,GAJAguC,EAAY,OAACj8B,QAAD,IAACA,OAAD,EAACA,EAAK/C,WAClBi/B,EAAU,OAACl8B,QAAD,IAACA,OAAD,EAACA,EAAKxR,SAChB0qD,GAAQ,OAACl5C,QAAD,IAACA,OAAD,EAACA,EAAKq5C,OAEVpsB,EAAO,CACT,IAAMjB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQwwB,KAAO,GACnEvB,EAAeM,GAEjB,GAAIkB,EAAO,CACT,IAAMC,EAAOtQ,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQywB,KAAO,GAC/D/d,EAAage,GAEf,GAAIwf,EAAQ,CACV,IAAM3W,EAAO3L,EAAU5yB,QAAO,SAACo1C,GAAD,OAAaA,EAAGpwC,MAAQkwC,KAAQ,GAC9DjY,EAAasB,GAEf,GAAI4W,EAAQ,CACV,IAAME,EAAOvgD,GAAYkL,QAAO,SAAC8J,GAAD,OAAaA,EAAGpb,KAAOymD,KAAQ,GAC/DjT,GAAUmT,OAGb,CAAC9sC,IAEJ,IA+CM81B,GAAkB,WACtB,IACMK,EADW/B,GAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMrH,aAChCsH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAEvDwkC,EADanC,GAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMpH,iBAC5BqH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAWnE0iC,GARa,CACX+B,SAHaL,EAIbM,aAAcF,EACdG,WAAYH,EACZr0B,MAAOi0B,EACPv0B,OAPau0B,EAQbvQ,OAPauQ,EAAMI,KA0BjB1kC,GAAQ,yCAAG,qCAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YAEnBjI,EAAYgI,GACZhI,EAAYiI,GACZ1W,EAAUyW,GACVzW,EAAU0W,GANG,gCAQPyG,GACJR,GACA3Z,GAAQ,+FAAsB,yBAVnB,6CAcXyL,EAAYzO,GAdD,gCAePmd,GACJR,GACA3Z,GAAQ,+FAAsB,yBAjBnB,2CAqBX,IAAI1D,KAAKmP,GAAWa,YAAc,IAAIhQ,KAAKU,GAASsP,UArBzC,kCAsBP6N,GACJR,GACA3Z,GAAQ,+FAAsB,yBAxBnB,6CA6BV4iC,IAAkC,IAArBA,GAAUl9B,OA7Bb,kCA8BPyU,GACJR,GACA3Z,GAAK,uTAhCM,0CAuCT6nD,GAAa,OAALv8C,SAAK,IAALA,QAAA,EAAAA,GAAO87C,KAAP,OAAa97C,SAAb,IAAaA,QAAb,EAAaA,GAAO87C,SAAMllD,EAElC1B,EAAiB,CACrB7L,GAAI6Z,GAAOA,EAAI7Z,GAAK6Z,EAAI7Z,QAAKuN,EAC7BuJ,YACAzO,UACAoT,OAAQ4yB,GAAO5yB,OACf3T,OAAQA,GAASA,GAAO9H,GAAK,EAC7BkgB,MAAOtkB,KAAKyB,UAAU4wC,IACtB/1B,QAAStc,KAAKyB,UAAUuZ,IACxBs8C,QACAtwC,SACAhF,SAAUlV,EACN,CACEmV,WAAYnV,EAAU4N,IACtB0H,aAActV,EAAUzL,KACxB8gB,eAAgBrV,EAAUjI,OAC1B8f,cAAe7X,EAAUrG,OAE3B,CACEwb,gBAAYtQ,EACZyQ,kBAAczQ,EACdwQ,oBAAgBxQ,EAChBgT,mBAAehT,GAGrB4S,WAAYvY,EACR,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEvB6S,SAAUvY,EACN,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,MACzB8e,cAAenZ,EAAUxF,OAE3B,CACEue,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,EACfyT,mBAAezT,IAKvBsvB,GAFepR,EAAQI,EAAYC,EAErBjgB,GAhGC,4CAAH,qDAmGRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,OAGVoxB,KAHU,gDAKVC,GAAQ,EAAD,IACP7b,QAAQC,IAAR,MANU,yDAAH,wDAUL4b,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,GAAS3Z,IAFlB,6CAIN+Z,GAAWJ,GAAS3Z,IAJd,OAKZgW,QAAQC,IAAIzW,GALA,2CAAH,sDASPoyB,GAAc,WAnIlB6Y,EAAa,MACbC,EAAW,MACXxH,EAAa,MACbhJ,EAAe,MACfvc,EAAa,MACbwqB,GAAU,MACVuf,GAAS,MACT7kB,GAAa,IACbI,GAAU,IACV4H,GAAe,IACfC,GAAY,MA2HZvvB,KAOIjI,IAAU,OAAH9E,QAAG,IAAHA,OAAA,EAAAA,EAAK/C,WAAY,IAAInP,KAAJ,OAASkS,QAAT,IAASA,OAAT,EAASA,EAAK/C,WAAa,IAAInP,KACvD+P,GAAG,OAAG5Q,SAAH,IAAGA,QAAH,EAAGA,GAAc6X,GAAKH,UAEzBtI,GAAQ7K,GACVogB,EACE,oDACA,0DACFA,EACA,kBACA,mBACEwsB,GAA8B,KAAfp+B,EAAI/R,SAAkBrI,EAE3C,OACE,eAACk8B,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASqW,GACT/mB,MAAOA,GACPxK,SAtBmB,WACrBT,GAAaS,GAAbT,IAsBExR,MAAOA,EACPmiC,KAAMA,GACNhuB,GAAI,GACJ7S,SAAS,KATX,SAWE,uCACE,eAAC4S,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,QAAU3kB,QAAQ,QAAnD,gBACG2hB,QADH,IACGA,OADH,EACGA,EAAKmI,UAIV,gBAAC8M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,SACE,gBAAC4P,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACD,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM7jB,MACbZ,MAAO4Z,EACPyF,SAAU,SAACwY,GAAD,OAAY+gB,EAAa/gB,IACnChD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM5jB,IACbb,MAAOmL,EACPkU,SAAU,SAACwY,GAAD,OAAYghB,EAAWhhB,IACjChD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,EACThnC,MAAOwL,EACP6f,eAAgBgmB,EAChB/lB,eAAgBonC,GAChBnnC,YAAaknC,GACbjnC,SAAU2qC,GACVroD,SAAUA,GACVK,MAAOA,GACPgC,WAAS,EACTga,WAAS,MAGb,eAACyH,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,GAAMxB,WACbwB,MAAOA,GACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgB6d,EAChB5d,YAAa2d,EACb1d,SAAU4d,EACVt7B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAMvB,SACbuB,MAAOA,GACP2G,QAASoO,EACTx5B,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACb7d,SAAUid,EACV36B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,EACTqK,IAAKA,YAKb,gBAACoX,GAAA,EAAD,CACEvgB,MAAI,EACJwgB,GAAI,EACJthB,MAAO,CACLxT,gBAAiB,OACjBif,aAAc,GALlB,UAQE,eAAC1L,GAAA,EAAD,CACEtV,QAAQ,WACRuV,MAAO,CACLma,aAAc,GACdhvB,SAAU,GACV+xB,SAAU,IAEZjd,QAAS,WACPyoC,GAAY,MACZF,IAAc,IATlB,SAYG5qC,GAAQ,gEAAgB,iBAE3B,eAACujB,GAAA,EAAD,CAAOnhB,MAAO,CAAE3S,OAAQ,IAAK0xB,SAAU,QAAvC,SACG5V,GAAY9G,KAAI,SAAC2mC,GAChB,OACE,gBAACznC,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CACElW,QAASmkB,GAAoB,CAAExD,IAAK48B,IACpCr9C,UAAWohB,GAAqBi8B,EAAIz+B,SAAU3M,MAEhD,eAACsY,GAAA,EAAD,CACEjW,QAAS,kBAlTJ,SAACa,GAC5B,IAAMmoC,EAAU9/B,GAAYtF,QAAO,SAACqlC,GAAD,OAAaA,EAAGr/B,QAAU/I,EAAK+I,SAC5D45B,EAAgB3D,GAAamJ,GACnCR,GAAehF,GA+SsB0F,CAAqBH,IACpCvgC,MAAM,aACNzI,MAAO,CAAElV,QAAS,GAHpB,SAKE,eAAC,KAAD,CACEkV,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,eAGlC,eAACyhB,GAAA,EAAD,CACElW,MAAO,CAAElV,QAAS,GAClBmV,QAAS,WACPyoC,GAAYM,GACZR,IAAc,IAEhB//B,MAAM,WANR,SAQE,eAAC,KAAD,CACEzI,MAAO,CAAE7U,SAAU,GAAIsJ,MAAO,+BAUhD,gBAAC4sB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,UACE,eAAC4P,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,IACzB,gBAAC+T,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC2tC,GAAD,CACElf,QAASmlB,EACThG,QApYM,SAACl5B,GACrB,IAAM0iC,EAAQ,uBAAOhD,IAAP,8BAAuB1/B,GAAvB,IAA6BquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,GAAagD,IAkYCvvB,MAAOA,GACP+U,UAAWA,EACXC,YAAaA,EACbhsB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,QAGTsiC,GACA,eAAChgC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,SACE,eAACkiB,GAAD,CACE9e,KAAMijB,GACNlE,SA5YK,SAACx7B,GACtB,IAAM0iC,EAAWhD,GAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,GAAagD,IAoYG/zC,WAjYS,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,IACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,GAAagD,IA8XG7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,OAIXgwC,GAAW,eAAC,GAAD,OAEd,gBAAC7gC,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,OAAQjkB,SAAU,IAAnD,UACG+oB,GAAM5F,MADT,MACmBP,GAAY6yB,GAAO5yB,WAGtC,eAAC,GAAD,CACE3M,KAAMkkD,GACNpsC,QAAS,kBAAMqsC,IAAa,IAC5BvnD,SAAUqnD,GACVt5D,MAAOA,EACP4R,MAAOA,GACPsW,MAAOA,MAEP8J,GACA,eAAC9d,GAAA,EAAD,CACE6V,EAAG,EACH3pB,QAAQ,OACR4T,MAAO,CAAE9S,KAAM,EAAGse,eAAgB,YAHpC,SAKE,eAACzL,GAAA,EAAD,CACErW,KAAK,SACL+K,MAAM,UACNhK,QAAQ,WACRwV,QAAS,kBAAM04C,IAAe,IAC9Bl9B,SAAU+uB,GALZ,SAOGt2B,GAAMgc,eAKb,eAAChwB,GAAA,EAAD,CAAKF,MAAO,CAAE9T,UAAW,IAAzB,SACE,eAACwrC,GAAD,CACEloC,KAAK,SACLiZ,MAAOyL,GAAM7Z,OACb6Z,MAAOA,GACP2G,QAASliB,GACTlJ,MAAO4K,GACPygB,eAAgBirB,GAChB3qB,QAAM,EACNxd,MAAOA,GACPlR,MAAO,WAIb,eAAC20B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,OAEjB,eAAC,GAAD,CACEjgB,KAAMq3C,GACNv/B,QAAS,kBAAMw/B,IAAe,IAC9BtP,QAASj9B,EACTqqB,UAAWA,EACXnG,SAAU0P,EACVrxB,UAAW0P,EACX4K,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTj0C,MAAOA,EACPymB,MAAO+tB,KAET,eAAC,GAAD,CACEn/B,KAAMknC,GACNpvB,QAAS,kBAAMqvB,IAAc,IAC7Bp8B,IAAK85B,GACLloB,OAAOkoB,GACP9nB,UAncgB,SAACtd,GACvB,IAAM0iC,EAAQ,uBAAOr6B,IAAP,CAAoBrI,IAC5B2iC,EAAgB3D,GAAa0D,GACnCiF,GAAehF,IAicTplB,WA/biB,SAACvd,GACxB,IAAM0iC,EAAWr6B,GAAY9G,KAAI,SAACu4B,GAChC,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnCiF,GAAehF,IAubTz3C,MAAOA,EACP2K,MAAK,6BAAOyV,GAAP,IAAY/C,YAAWzO,oBC7rBvBtL,gBAAf,mzBC8Ba0kB,GAAW,SAAC5H,GAAD,OAAcA,EAAIvD,KAEpCkzB,GAAqB,SAACvyC,GAAD,OACzB,eAAC,KAAD,cACEsyC,mBAAoB,gBAAGrsC,EAAH,EAAGA,MAAH,OAClB,eAAC4P,GAAA,EAAD,CAAY5U,QAAQ,YAApB,SAAiC+oB,OAAO/jB,GAAS,MAE/CjG,KAgBKwyC,GAAiBC,cAZf,SAACjwC,GAAD,MAAY,CACzBkwC,aAAc,CACZ,8BAA+B,CAC7B1vC,gBAAiBmU,aAAK3U,EAAMR,QAAQC,QAAQC,KAAM,SASP,CAAE8D,KAAM,kBAA3BysC,EAJH,SAAC,GAAD,IAAG/+B,EAAH,EAAGA,QAAYi/B,EAAf,mCACzB,eAAC,KAAMC,MAAP,6BAAiBD,GAAjB,IAA4Bh9B,UAAWjC,EAAQg/B,mBAOlC,SAAS2pB,GAAT,GAkBN,IAjBPxkD,EAiBM,EAjBNA,KACAykD,EAgBM,EAhBNA,UACAvoC,EAeM,EAfNA,KACA3f,EAcM,EAdNA,MACAsW,EAaM,EAbNA,MACAliB,EAYM,EAZNA,SACAi3B,EAWM,EAXNA,UACAC,EAUM,EAVNA,YACAuN,EASM,EATNA,UACAuJ,EAQM,EARNA,iBACAh0C,EAOM,EAPNA,MACAmpB,EAMM,EANNA,OACA6I,EAKM,EALNA,MACArL,EAIM,EAJNA,SACAD,EAGM,EAHNA,WACAvC,EAEM,EAFNA,SACA8vB,EACM,EADNA,QAEMvmB,EAAMzF,GAAW,CAAErW,QAAOsW,UAD1B,EAGwB/W,oBAAS,CACrCuc,EAAIrQ,UACJqQ,EAAItE,OACJsE,EAAInF,MACJmF,EAAIhH,WACJgH,EAAI/G,SACJ+G,EAAIrf,OACJqf,EAAIrE,KACJqE,EAAI1L,SAXA,oBAGCuuB,EAHD,KAGUwpB,EAHV,KAcAzc,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOi8B,GACP5nD,UAAW,CAAE+W,WAEf,CACE4U,MAAOshB,MAKbxoB,sBAAU,WACJijC,GACFC,EAAW,CAACrsC,EAAIrQ,UAAWqQ,EAAItE,OAAQsE,EAAIrf,OAAQqf,EAAI1L,WAExD,CAAC3M,IA9BE,MAgCavD,aAAYmuC,GAAa3C,GAArC/2B,EAhCD,uBAiCczU,aAAY6V,GAAa21B,GAAtC36B,EAjCD,uBAkCoB7Q,aAAYy7C,GAAiBjQ,GAAhDkQ,EAlCD,qBAoCA/c,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpBknC,EAAgB,CAAEp7C,UAAW,CAAEyK,UAHb,2CAAH,sDAWnB,OACE,eAACsY,GAAA,EAAD,CACEnhB,MAAO,CACL08B,UAAW,IACX3d,SAAU,OACVn1B,OAAQ,GACR+yC,UAAW,KALf,SAQGpf,GACC,gBAAC,KAAD,CAAMA,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,IACA,eAAC,KAAD,CAAc4oB,gBAAiBH,IAC/B,eAAC,KAAD,IACA,eAAC,KAAD,CACEI,oBAnBU,WAClB,OAAO,eAAC38B,GAAA,EAAD,CAAK9T,QAAQ,UAmBZ2wC,eAAgBf,KAElB,eAAC,KAAD,CACEgB,IAAK,CAAC,aACNlB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBvuB,KAEtB,eAAC,KAAD,CACEyvB,IAAK,CAAC,UACNlB,mBAAoBpuB,KAEtB,eAAC,KAAD,CACEsvB,IAAK,CAAC,UACNlB,mBAAoBttB,KAEtB,eAAC,KAAD,CACEwuB,IAAK,CAAC,QACNlB,mBAAoB,SAACtyC,GAAD,OAClBklB,GAAc,6BAAKllB,GAAN,IAAamlB,kBAG9B,eAAC,GAAD,CAAoBquB,IAAK,CAAC,WAC1B,eAAC,KAAD,CAAgByX,qBAAmB,IAElCziD,IAAagsB,GACZ,eAAC,KAAD,CACE22B,iBAAe,EACf1X,kBAAmB1f,GAAQA,EAAKja,OAAS,EACzCsxC,gBAAc,EACd1X,iBAAkB7mB,KAItB,eAAC,GAAD,CAAc+H,UAAW7L,EAAU8L,WAAY1P,EAA/C,SACE,eAAC,GAAD,CACEsa,UAAWA,EACXC,YAAaA,EACbuN,UAAWA,EACXuJ,iBAAkBA,EAClBh0C,MAAOA,EACPmpB,OAAQA,EACRxC,SAAUA,EACVD,WAAYA,EACZvC,SAAUA,EACV8vB,QAASA,EACTjuC,SAAUA,MAId,eAAC,KAAD,CACExC,KAAK,eACL2tC,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aAWX,MAVY,CACV,CACExb,IAAK,cACL/wB,KAAMwsC,KAAgBC,YACtB5wC,MAAOsxB,EAAQ,GAAK,MAJZ,oBAMPof,EAAav5B,QACd,SAAC05B,GAAD,OAAYA,EAAE1sC,OAASwsC,KAAgBC,yBC1KlD,I,YAAMwC,GAAe,SAACtuB,GAC3B,OAAOA,EAAKnP,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cAsdSo8C,GAjdU,SAAC,GAYd,IAXV5kD,EAWS,EAXTA,KACA8X,EAUS,EAVTA,QACAviB,EASS,EATTA,KACA6/B,EAQS,EARTA,UACAnG,EAOS,EAPTA,SACArH,EAMS,EANTA,UACAC,EAKS,EALTA,YACA+W,EAIS,EAJTA,QAIS,IAHTjiB,aAGS,SAFThyB,EAES,EAFTA,MACAymB,EACS,EADTA,MAEMvV,EAAUvP,KADP,EAEewP,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IAFtD,oBAEFquB,EAFE,KAEI5W,EAFJ,OAG+BnW,KAAMjE,SAAS,IAAIjD,MAHlD,oBAGFkmC,EAHE,KAGYC,EAHZ,OAIiBljC,oBAAc,IAJ/B,oBAIFmjC,EAJE,KAIKC,EAJL,OAMyBpjC,oBAAc,IANvC,oBAMFqjC,EANE,KAMSC,EANT,OAOuBtjC,oBAAc,IAPrC,oBAOFiJ,EAPE,KAOQs6B,EAPR,OAQiBvjC,oBAAc,QAR/B,oBAQFugC,EARE,KAQKC,EARL,OAUuBxgC,oBAAS,GAVhC,oBAUFoR,EAVE,KAUQoyB,EAVR,OAWmBxjC,oBAAc,IAXjC,oBAWFyjC,EAXE,KAWMC,EAXN,OAayB1jC,oBAAc,MAbvC,oBAaFlC,EAbE,KAaS6lC,EAbT,OAcyB3jC,qBAAc,GAdvC,oBAcF+kD,EAdE,KAcSC,EAdT,KAeHyD,GAAexkD,KAAM+2B,SAflB,GAiBmBh7B,qBAAS,GAjB5B,sBAiBFygC,GAjBE,MAiBMC,GAjBN,SAmBuBvgC,aAAQ,IAAhCE,GAnBC,GAmBDA,aAAcyxB,GAnBb,GAmBaA,MAnBb,GAuBUvxB,sBAAWtB,IAvBrB,MAqBPyB,UAAaqW,GArBN,GAqBMA,MAAOtW,GArBb,GAqBaA,MACX1N,GAtBF,GAsBPhC,MAASgC,KAGLo5C,GAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOwf,GACPnrC,UAAW,CACT/N,OAAO,IAAI6J,MAAOwW,SAAS,EAAG,EAAG,EAAG,GACpCpgB,KAAK,IAAI4J,MAAOwW,SAAS,GAAI,GAAI,GAAI,OAGzC,CACEqZ,MAAO4M,IAET,CACE5M,MAAOmB,MAtCJ,GA2CYptB,aAAY0rC,GAAeF,IAAzCpZ,GA3CE,yBA6CyBoR,KAA1BrK,GA7CC,GA6CDA,QAASJ,GA7CR,GA6CQA,aAyCjBhU,sBAAU,WACJ7E,GAASiZ,IACXsJ,GAAgB,OAAPtJ,SAAO,IAAPA,QAAA,EAAAA,GAASxhC,cAAe+d,OAAM,OAACyjB,SAAD,IAACA,QAAD,EAACA,GAASxhC,cAAgB,EAAI,KAEtE,CAAC4L,IAEJwhB,sBAAU,WACRqf,OACC,CAAC1B,EAAWjyB,EAAUmvB,EAAOE,KAEhC/a,sBAAU,WACR,GAAIjsB,GAAQA,EAAKvG,MAAO,CACtB,IAAMwY,EAAMjS,EAAKwZ,WACXgyB,EAAO3L,EAAU5yB,QAAO,SAAC+2B,GAAD,OAAaA,EAAG/xB,MAAQA,KAAK,GAC3Di4B,EAAasB,GAEX3vB,GACFguB,EAAahuB,KAEd,CAAC7b,EAAM05B,EAAUmG,EAAWhkB,IAE/B,IAAMyvB,GAAkB,WACtB,IACMK,EADW/B,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMrH,aAChCsH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAEvDwkC,EADanC,EAAUn+B,KAAI,SAACmgC,GAAD,OAAgBA,EAAMpH,iBAC5BqH,QAAO,SAACC,EAAWvkC,GAAZ,OAAuBukC,EAAOvkC,IAAG,GAC7D6P,EAASu0B,EAAMh0B,EAUrBsyB,EARa,CACX+B,SAAU50B,EACV60B,aAAcF,EACdG,WAAYH,EACZr0B,MAAOi0B,EACPv0B,SACAgkB,OAPauQ,EAAMh0B,EAAWo0B,IA+BhCjC,EArBa,CACX,CACEqC,SAAU58B,GACVkK,UAAWlK,GACX6H,OAAQu0B,EACR1xC,KAAM2E,GAAeC,cAEvB,CACEstC,SAAU58B,GACVkK,UAAWlK,GACX6H,OAAQO,EACR1d,KAAM2E,GAAeM,kBAEvB,CACEitC,SACY,SAAVrF,EAAmBv3B,GAA2BA,GAChDkK,UAAWlK,GACX6H,OAAQ4vB,GAAS2E,EAAMh0B,EAAW,EAClC1d,KAAM2E,GAAeK,oBAMrBoI,GAAQ,yCAAG,2CAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YACjB8uB,EAAe/uB,GAAe+uB,EAAe9uB,GAFlC,gCAGPyG,GACJR,EACA3Z,GAAQ,+FAAsB,yBALnB,6CASX2Q,EAAW,GATA,gCAUPwJ,GACJR,EACA3Z,GAAQ,sIAA+B,2BAZ5B,6CAgBX2Q,GAAQ,OAAGqyB,QAAH,IAAGA,OAAH,EAAGA,EAAQtyB,QAhBR,kCAiBPyJ,GACJR,EACA3Z,GACI,6NACA,sCArBO,6CAyBV3C,EAzBU,wBA0BbknD,GAAa,GACbyD,GAAQtpC,QAAQ2e,QA3BH,gCA8BXjd,GAASxK,OAAO8sB,IAAU9sB,OAAOyjB,GAAQxhC,eA9B9B,kCA+BPsiB,GACJR,EACA3Z,GAAK,uCAC+Bq5B,GAAQxhC,cADvC,6KAEmCwhC,GAAQxhC,eAnCrC,6CAuCV+qC,GAAkC,IAArBA,EAAUl9B,OAvCb,kCAwCPyU,GACJR,EACA3Z,GAAK,6KACmCq5B,GAAQxhC,cAD3C,uCAE+BwhC,GAAQxhC,eA5CjC,0CAgDPuY,EAAsC4yB,EAAtC5yB,OAAQ80B,EAA8BlC,EAA9BkC,WAAY9Q,EAAkB4O,EAAlB5O,OAAQ1jB,EAAUsyB,EAAVtyB,MAE9BlQ,EAAiB,CACrBmW,MAAO+rB,EAAQA,EAAM0C,gBAAaljC,EAClC0M,KAAM4zB,EACNjwB,SAAU,CACRC,WAAYnV,EAAU4N,IACtB0H,aAActV,EAAUzL,KACxB8gB,eAAgBrV,EAAUjI,OAC1B8f,cAAe7X,EAAUrG,OAE3B6d,MAAOtkB,KAAKyB,UAAU4wC,GACtBsC,aACAx0B,QACAC,WACAP,SACAgkB,SACAiR,OAAQrF,GACRA,UACAsF,WAAYtF,GAAS5vB,EAAS,EAC9B5H,WACAk8B,YAAa5E,EACbvO,OAAQj/B,GAAK2Y,IACbsM,OAAQve,EAAKrE,IAGf68B,GAAMc,GAAY9xB,GA1EH,4CAAH,qDA6ERgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,+EAEJkxB,EAAO,CAAEjxB,cAFL,OAGV8nD,KACArvB,KACArH,KALU,gDAOVC,GAAQ,EAAD,IACP7b,QAAQC,IAAR,MARU,yDAAH,wDAYL4b,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,EAAS3Z,IAFlB,6CAIN+Z,GAAWJ,EAAS3Z,IAJd,OAKZqxB,KACArb,QAAQC,IAAIzW,GANA,2CAAH,sDAUP8oD,GAAc,WAClB,IAAM15C,EAAO,IAAItS,KAAKkmC,GAElBztB,EAAW,GACTF,EAAQ+tB,EAAUn+B,KAAI,SAACu4B,GAI3B,OAHKjoB,GAAYioB,EAAGxnB,eAClBT,EAAQ,UAAMioB,EAAGxnB,aAAT,cAA2BwnB,EAAGvnB,eAA9B,MAEH,CACL7jB,KAAMorC,EAAGprC,KACTwD,OAAQ4nC,EAAG5nC,OACXiC,MAAO2lC,EAAGL,UACVjlC,IAAKslC,EAAGP,QACR/rB,MAAOssB,EAAGO,cAGRsO,EAAoB,SAAV/L,EAAmB,eAAiB,eAC9CgM,EAAsB,SAAVhM,EAAmB,8CAAa,sEAE5C1vB,EADY4yB,EAAVtyB,MACeC,EAEf/B,EAAKm9B,mBAAmBxhC,UAAUyhC,SAAU,CAChDj9B,KAAM,UACNC,OAAQ,YAEJJ,EAAKq9B,mBAAmB,SAGpB97B,GAAYQ,GACdR,GAAYC,IACP,OAAPiyB,QAAO,IAAPA,OAAA,EAAAA,EAAS6J,QAAT,OAAgB7J,QAAhB,IAAgBA,KAAS6J,MACxB7J,EAAQ8J,KACP9J,EAAQ+J,IACP/J,EAAQvM,QACR91B,GAAQqiC,EAAQjtC,OAASitC,EAAQzwC,KAEpCU,GAAKV,KAAOU,GAAKV,KAAOU,GAAKiE,UAMjCq7B,GAAc,WAhPlBiR,EAAa,IACbE,EAAY,GACZE,EAAU,IACVC,EAAa,MACbP,EAAS,IACTG,EAAY,IACZ/C,EAAS,QACT0C,EAAgB,IAAInmC,MA2OpBif,KAOI1Q,GAAQ7K,GACVogB,EACE,sEACA,sEACFA,EACA,cACA,eAEJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASqW,GACT/mB,MAAOA,GACPxK,SAlBmB,WACrBT,GAAaS,GAAbT,IAkBExR,MAAOA,EACPmiC,KAAMA,EACNE,MAAO63B,GACP54D,SAAS,KACT6S,GAAI,EACJmlB,GAAI,GAXN,SAaE,gBAACjE,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACE1jB,MAAOA,GACP6B,MAAOyU,GAAM1H,KACb/c,MAAO2wC,EACPtxB,SAnPe,SAACoC,GACxBmvB,EAAgBnvB,QAqPZ,eAACmQ,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC,GAAD,CACEpN,MAAOA,GACPwpB,MAAOA,EACPE,OAAQA,GACRC,UAAWA,GACXF,SAAUA,MAGd,eAACtc,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,EACThnC,MAAOwL,EACP6f,eAAgBgmB,EAChB/lB,eAAgBonC,EAChBnnC,YAAaknC,EACbtkD,MAAOA,GACPgC,WAAS,MAIb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,IACf,eAACD,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,gBAACphB,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNb,cAAeuR,GAAQ,cAAgB,MACvCtR,WAAY,SACZkf,eAAgB,WAChB5gB,WAAYgT,QAAQkC,EAAY,GAChCjV,YAAa+S,GAAQ,QAAKkC,GAR9B,UAWGke,GACC,eAAC3e,GAAA,EAAD,CAAYW,MAAO,CAAEvL,MAAO,QAA5B,SAAuCyf,GAAMC,KAE/C,eAAC5U,GAAA,EAAD,CACE/P,KAAK,QACLisB,UAAWuC,EACXvuB,MAAO6wC,EACPxxB,SAAU,SAAChQ,GAAD,OAAYyhC,EAAS/sB,OAAO1U,EAAE05B,OAAO/oC,SAC/ChF,QAAQ,WACRuV,MAAO,CAAEtT,MAAOsxB,EAAQ,GAAK,IAAKpzB,WAAY,IAC9ChB,OAAO,QAEPoxC,WAAY,CACVh7B,MAAO,CACL8V,UAAW,SACX3qB,SAAU,GACVkC,OAAQ,YAMlB,gBAACg0B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,UACE,gBAACphB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAAC2tC,GAAD,CACElf,QAASyV,EACT0J,QAtVQ,SAACl5B,GACrB,IAAM0iC,EAAQ,uBAAOhD,GAAP,8BAAuB1/B,GAAvB,IAA6BquB,OAAQj/B,GAAK2Y,QAClD46B,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IAoVDvvB,MAAOA,GACP+U,UAAWA,EACXC,YAAaA,EACbhsB,QAASA,EACThN,KAAMA,GACN0N,MAAOA,OAIX,eAACsC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,SACE,eAACkiB,GAAD,CACE9e,KAAMijB,EACNlE,SA9VS,SAACx7B,GACtB,IAAM0iC,EAAWhD,EAAUn+B,KAAI,SAACu4B,GAC9B,OAAIA,EAAG/xB,MAAQ/H,EAAK+H,IACX/H,EAEA85B,KAGL6I,EAAgB3D,GAAa0D,GACnC/C,EAAagD,IAsVD/zC,WAnVa,SAACma,GAC1B,IAAM65B,EAAO,aAAOlD,GACpBkD,EAAQC,OAAO95B,EAAO,GACtB,IAAM45B,EAAgB3D,GAAa4D,GACnCjD,EAAagD,IAgVD7lC,MAAOA,GACPsW,MAAOA,GACPhkB,KAAMA,UAIZ,gBAACgQ,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,iBAJpB,UAOE,eAACjM,GAAA,EAAD,CACE/P,KAAK,WACLiQ,MAAOyU,GAAM3F,SACb9e,MAAO8e,EAASy0B,WAChBl0B,SAAU,SAAChQ,GAAD,OAAY6hC,EAAYntB,OAAO1U,EAAE05B,OAAO/oC,SAClDhF,QAAQ,WACRuV,MAAO,CAAEtT,MAAO,KAChB9C,OAAO,QACPiH,KAAK,SACLiqC,QAAS,SAACh8B,GAAD,OAAOA,EAAE05B,OAAOuC,YAG3B,eAAC,GAAD,CACE/sB,OAAM,OAAE4yB,QAAF,IAAEA,OAAF,EAAEA,EAAQ5yB,OAChBM,MAAK,OAAEsyB,QAAF,IAAEA,OAAF,EAAEA,EAAQtyB,MACfC,SAAUA,EACV2F,MAAOA,iBC/eN5kB,gBAAf,4gCC6lBe62D,GA9jBG,SAAC,GAeP,IAdV9kD,EAcS,EAdTA,KACA8X,EAaS,EAbTA,QACA/M,EAYS,EAZTA,IACA4R,EAWS,EAXTA,MACAI,EAUS,EAVTA,UACAC,EASS,EATTA,WACA4K,EAQS,EARTA,UACAC,EAOS,EAPTA,YACAuN,EAMS,EANTA,UACAuJ,EAKS,EALTA,iBACAh0C,EAIS,EAJTA,MACAgG,EAGS,EAHTA,SACAiuC,EAES,EAFTA,QACAzV,EACS,EADTA,QACS,EACqBrtB,qBAAS,GAD9B,oBACF+iC,EADE,KACOC,EADP,OAEmBhjC,qBAAS,GAF5B,oBAEFsxB,EAFE,KAEM23B,EAFN,OAI8BjpD,oBAAS,MAJvC,oBAIFy7C,EAJE,KAISC,EAJT,OAKsB17C,oBAAS,MAL/B,oBAKF9M,EALE,KAKKmyB,EALL,OAMkBrlB,oBAAS,MAN3B,oBAMF7M,EANE,KAMGmyB,EANH,OAQ6BtlB,oBAAc,MAR3C,oBAQFhD,EARE,KAQW29B,EARX,OAS6B36B,qBAAc,GAT3C,oBASFw7B,EATE,KASWC,EATX,KAUHC,EAAiBz3B,KAAM+2B,SAVpB,EAYyBh7B,oBAAc,MAZvC,oBAYF/C,EAZE,KAYSmhB,EAZT,OAayBpe,qBAAc,GAbvC,oBAaF27B,EAbE,KAaSC,EAbT,KAcHb,EAAe92B,KAAM+2B,SAdlB,EAgByBh7B,oBAAc,MAhBvC,qBAgBFlC,GAhBE,MAgBS6lC,GAhBT,SAiByB3jC,qBAAc,GAjBvC,sBAiBF+kD,GAjBE,MAiBSC,GAjBT,MAkBHyD,GAAexkD,KAAM+2B,SAlBlB,GAoBwBh7B,oBAAS,MApBjC,sBAoBF9C,GApBE,MAoBM0rC,GApBN,SAsByB5oC,qBAAc,GAtBvC,sBAsBFkpD,GAtBE,MAsBSC,GAtBT,SAuBmBnpD,oBAAc,IAvBjC,sBAuBFopD,GAvBE,MAuBMlB,GAvBN,SAwBiBloD,oBAAc,MAxB/B,sBAwBFmR,GAxBE,MAwBK2tC,GAxBL,SA0B6B9+C,qBAAS,GA1BtC,sBA0BFu7C,GA1BE,MA0BWC,GA1BX,SA2ByBx7C,oBAAc,IA3BvC,sBA2BFqjC,GA3BE,MA2BSC,GA3BT,SA6BetjC,oBAAS,CAAEqa,MAAM,EAAOZ,IAAK,GAAI/lB,UAAMiP,IA7BtD,sBA6BFquB,GA7BE,MA6BI5W,GA7BJ,SA+BiCja,aAAQ,IAA1CC,GA/BC,GA+BDA,SAAUC,GA/BT,GA+BSA,aAAcyxB,GA/BvB,GA+BuBA,MA/BvB,GAkCUvxB,sBAAWtB,IAD5ByB,UAAaqW,GAjCN,GAiCMA,MAAOtW,GAjCb,GAiCaA,MAjCb,GAoC4B6rB,aAAau8B,GAAe,CAC/DpvB,YAAa,sBArCN,sBAoCFmV,GApCE,MAoCSM,GApCT,SAuC0B5iB,aAAa+8B,GAAc,CAC5D5vB,YAAa,sBAxCN,sBAuCFwK,GAvCE,MAuCQC,GAvCR,MA2CTxe,sBAAU,WAAO,IAAD,QACR7Q,GAAmB,OAAVq6B,SAAU,IAAVA,IAAA,UAAAA,GAAY/xC,YAAZ,uDAAqCA,OAAQ,GACtDmY,GAAiB,OAAT4uB,SAAS,IAATA,IAAA,UAAAA,GAAW/mC,YAAX,sDAAmCA,OAAQ,GACzD,GAAImY,GAASA,EAAMnP,OAAS,EAAG,CAC7B,IAAMk+B,EAAM/uB,EAAMpQ,KAAI,SAACu4B,GAAD,OAAaA,EAAG6G,UAChCC,EAAW1B,EAAiBn8B,QAAO,SAAC89B,GAAD,OACvCH,EAAIx4B,SAAS24B,EAAI94B,QAGb+4B,EAAiBnvB,EAAMpQ,KAAI,SAACvB,EAAW+I,GAAgB,IAEzDg4B,EAWE/gC,EAXF+gC,WACAznB,EAUEtZ,EAVFsZ,aACAC,EASEvZ,EATFuZ,eACAtH,EAQEjS,EARFiS,aACAC,EAOElS,EAPFkS,eACAC,EAMEnS,EANFmS,iBACAC,EAKEpS,EALFoS,gBACAC,EAIErS,EAJFqS,WACAC,EAGEtS,EAHFsS,aACAC,EAEEvS,EAFFuS,eACAC,EACExS,EADFwS,cAEImoB,EAAOiG,EAAS79B,QAAO,SAAC63B,GAAD,OAAaA,EAAG7yB,MAAQ/H,EAAK2gC,UAAQ,GAClE,OAAO,6BACFhG,GADL,IAEEoG,aACAznB,eACAC,iBACAtH,eACAC,iBACAC,mBACAC,kBACAC,aACAC,eACAC,iBACAC,gBACAzJ,QACA0wB,UAAWz5B,EAAKghC,UAChBzH,QAASv5B,EAAKxL,IACd6lC,UAAWr6B,EAAKwN,MAChB8sB,cAAet6B,EAAKxL,IAAMmmC,EAAKnK,UAG7Bm1B,EAAa53D,KAAE+yC,GAClBlgB,QAAQ,OACRrf,KAAI,SAACsf,EAAOC,GAAR,MAAiB,CACpBpyB,KAAMmyB,EAAM,GAAGnyB,KACfwD,OAAQ2uB,EAAM,GAAG3uB,OACjB6uC,WAAYlgB,EAAM,GAAGkgB,WACrBznB,aAAcuH,EAAM,GAAGvH,aACvBC,eAAgBsH,EAAM,GAAGtH,eACzBtH,aAAc4O,EAAM,GAAG5O,aACvBC,eAAgB2O,EAAM,GAAG3O,eACzBC,iBAAkB0O,EAAM,GAAG1O,iBAC3BC,gBAAiByO,EAAM,GAAGzO,gBAC1BC,WAAYwO,EAAM,GAAGxO,WACrBC,aAAcuO,EAAM,GAAGvO,aACvBC,eAAgBsO,EAAM,GAAGtO,eACzBC,cAAeqO,EAAM,GAAGrO,cACxBozC,OAAQ/kC,EAAM,GAAG+kC,OACjBnyC,MAAOoN,EAAM,GAAGpN,MAChB+c,KAAM3P,EAAM,GAAG2P,KACf50B,SAAUilB,EAAM,GAAGjlB,SACnBmN,MAAO8X,EAAM,GAAG9X,MAChB0wB,UAAW5Y,EAAM,GAAG4Y,UACpBF,QAASxrC,KAAEkzB,MAAMJ,EAAO,WACxBwZ,UAAWtsC,KAAEkzB,MAAMJ,EAAO,iBAE3BwL,QAAQ,SACR19B,QACHgxC,GAAagmB,GAEXz0C,GAAUA,EAAO1O,OAAS,IAC5B+hD,GAAuBrzC,EA5If3P,KAAI,SAACvB,EAAW+I,GAC1B,OAAO,6BACF/I,GADL,IAEE+I,cA0IAs2B,GAAW,MAEZ,CAACkM,GAAYhL,KAEhBxe,sBAAU,WACR,GAAI7E,EAAO,CAAC,IAAD,EACH3tB,EAAQ,IAAI6J,KACZ5J,EAAM,IAAI4J,KAChB7J,EAAMyoD,WAAW,GACjBxoD,EAAIugB,QAAQvgB,EAAI4Z,UAAY,GAC5B5Z,EAAIwoD,WAAW,GACft2B,EAASnyB,GACToyB,EAAOnyB,GACPy1C,GAAS,UAACptC,GAAYkL,QAAO,SAAC8J,GAAD,OAAuB,IAAVA,EAAGpb,aAApC,aAAC,EAA+C,OAE1D,CAAC8O,IAEJwhB,sBAAU,WACRqf,OACC,CAACqkB,KAEJ1jC,sBAAU,WACR,GAAIzW,GAAOA,EAAIvD,IAAK,CAClBs3B,GAAW,GACX,IAAM/hC,EAAY,CAAE+W,OAAQ/I,EAAI7Z,IAChCw5C,GAAU,CAAE3tC,cACZgjC,GAAS,CAAEhjC,cACX,IAAMi7B,EAAQjtB,EAAI2G,aACZumB,EAAQltB,EAAI+G,WACZ4lC,EAAS3sC,EAAIgE,WACb4oC,EAAS5sC,EAAI/R,OAKnB,GAHAmoB,EAAQ,OAACpW,QAAD,IAACA,OAAD,EAACA,EAAK/b,OACdoyB,EAAM,OAACrW,QAAD,IAACA,OAAD,EAACA,EAAK9b,KACZuoD,EAAY,OAACzsC,QAAD,IAACA,OAAD,EAACA,EAAK3D,OACd4wB,EAAO,CACT,IAAMjB,EAASlP,EAAYrlB,QAAO,SAACjR,GAAD,OAAcA,EAAIiW,MAAQwwB,KAAO,GACnEvB,EAAeM,GAEjB,GAAIkB,EAAO,CACT,IAAMC,EAAOtQ,EAAUplB,QAAO,SAACslB,GAAD,OAAcA,EAAItgB,MAAQywB,KAAO,GAC/D/d,EAAage,GAEf,GAAIwf,EAAQ,CACV,IAAM3W,EAAO3L,EAAU5yB,QAAO,SAACo1C,GAAD,OAAaA,EAAGpwC,MAAQkwC,KAAQ,GAC9DjY,GAAasB,GAEf,GAAI4W,EAAQ,CACV,IAAME,EAAOvgD,GAAYkL,QAAO,SAAC8J,GAAD,OAAaA,EAAGpb,KAAOymD,KAAQ,GAC/DjT,GAAUmT,OAGb,CAAC9sC,IAEJ,IAAM81B,GAAkB,WACtB,IAAMykB,EAAS93D,KAAEkzB,MAAMwkC,GAAQ,UAC/BtK,GAAS0K,IAeL1oD,GAAQ,yCAAG,qCAAAE,EAAA,2DACoBiT,KAA3BC,EADO,EACPA,YAAaC,EADN,EACMA,YAEnBjhB,EAAQghB,GACRhhB,EAAQihB,GACRhhB,EAAM+gB,GACN/gB,EAAMghB,GANO,gCAQPyG,GACJR,GACA3Z,GAAQ,+FAAsB,yBAVnB,6CAcXvN,EAAQC,GAdG,gCAePynB,GACJR,GACA3Z,GAAQ,+FAAsB,yBAjBnB,2CAsBVg7C,EAtBU,kCAuBP7gC,GACJR,GACA3Z,GAAQ,kHAA0B,yBAzBvB,6CA8BV3C,GA9BU,kCA+BP8c,GACJR,GACA3Z,GAAQ,oIAA6B,uBAjC1B,6CAqCV2oD,IAA4B,IAAlBA,GAAOjjD,OArCP,kCAsCPyU,GACJR,GACA3Z,GAAQ,mFAAoB,0BAxCjB,0CA4CfwoD,GAAU,GACJp0C,EACJu0C,IAAUA,GAAOjjD,OAAS,EAAIyO,GAAew0C,SAAUzmD,EACnD1B,EAAiB,CACrB7L,GAAI6Z,GAAOA,EAAI7Z,GAAK6Z,EAAI7Z,QAAKuN,EAC7B2I,MAAOmwC,IAAS,OAAe39C,SAAf,IAAeA,QAAf,EAAeA,GAAWzL,MAC1Ca,QACAC,MACA0d,OAAQM,GACRjU,OAAQA,GAASA,GAAO9H,GAAK,EAC7B6hB,SAAU,EACVpC,SACAkD,MAAOqxC,GAAOjjD,OACdsjD,OAAQ,EACRz2C,SAAUlV,GACN,CACEmV,WAAYnV,GAAU4N,IACtB0H,aAActV,GAAUzL,KACxB8gB,eAAgBrV,GAAUjI,OAC1B8f,cAAe7X,GAAUrG,OAE3B,CACEwb,gBAAYtQ,EACZyQ,kBAAczQ,EACdwQ,oBAAgBxQ,EAChBgT,mBAAehT,GAGrB4S,WAAYvY,EACR,CACE4Y,aAAc5Y,EAAY0O,IAC1BmK,eAAgB7Y,EAAY3K,KAC5ByjB,iBAAkB9Y,EAAYnH,OAC9BkgB,gBAAiB/Y,EAAY1F,OAE/B,CACEse,kBAAcjT,EACdkT,oBAAgBlT,EAChBmT,sBAAkBnT,EAClBoT,qBAAiBpT,GAEvB6S,SAAUvY,EACN,CACE+Y,WAAY/Y,EAAUyO,IACtBuK,aAAchZ,EAAU5K,KACxB6jB,eAAgBjZ,EAAUpH,OAC1BsgB,cAAelZ,EAAU3F,MACzB8e,cAAenZ,EAAUxF,OAE3B,CACEue,gBAAYrT,EACZsT,kBAActT,EACduT,oBAAgBvT,EAChBwT,mBAAexT,EACfyT,mBAAezT,IAKvBsvB,GAFepR,EAAQI,EAAYC,EAErBjgB,GAvGC,4CAAH,qDA0GRgxB,GAAK,yCAAG,WAAOC,EAAajxB,GAApB,UAAAD,EAAA,sDACZ,IACEkxB,EAAO,CAAEjxB,cACTiZ,YAAW,WACTmT,IACA47B,GAAU,GACV52B,OACC,KACH,MAAOpyB,GACPqyB,GAAQryB,GACRwW,QAAQC,IAAIzW,GAVF,2CAAH,wDAcLqyB,GAAO,yCAAG,WAAOryB,GAAP,UAAAe,EAAA,0DACVf,EAAMsyB,QAAQ1mB,SAAS,aADb,gCAEN0O,GAAeH,GAAS3Z,IAFlB,6CAIN+Z,GAAWJ,GAAS3Z,IAJd,OAKZqxB,KACArb,QAAQC,IAAIzW,GANA,2CAAH,sDAUPoyB,GAAc,WA7IlBhN,EAAS,MACTC,EAAO,MACPqe,GAAa,MACbhJ,EAAe,MACfvc,EAAa,MACbwqB,GAAU,MACV8S,EAAa,MACbwM,GAAU,IACVllB,GAAW,GAuIXhnB,KAOIjI,IAAU,OAAH9E,QAAG,IAAHA,OAAA,EAAAA,EAAK/b,OAAQ,IAAI6J,KAAJ,OAASkS,QAAT,IAASA,OAAT,EAASA,EAAK/b,OAAS,IAAI6J,KAC/C+P,GAAG,OAAG5Q,SAAH,IAAGA,QAAH,EAAGA,GAAc6X,GAAKH,UAEzBtI,GAAQ7K,GACVogB,EACE,0DACA,0DACFA,EACA,WACA,YAEJ,OACE,eAACkQ,GAAD,CACEtwB,MAAOA,GACPyD,KAAMA,EACN8X,QAASqW,GACT/mB,MAAOA,GACPxK,SArBmB,WACrBT,GAAaS,GAAbT,IAqBExR,MAAOA,EACPmiC,KAAMA,GACNhuB,GAAI,GACJ7S,SAAS,KACTkhC,cAAY,EACZC,OAAQA,EAXV,SAaE,uCACE,eAACvuB,GAAA,EAAD,CAAK9T,QAAQ,OAAb,SACE,eAACiT,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,QAAU3kB,QAAQ,QAAnD,gBACG2hB,QADH,IACGA,OADH,EACGA,EAAKmI,UAIV,gBAAC8M,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM7jB,MACbZ,MAAOY,EACPye,SAAU,SAACwY,GAAD,OAAY9E,EAAS8E,IAC/BhD,OAAO,qBACP9X,MAAI,MAGR,eAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,EAAvB,SACE,eAAC,GAAD,CACE7T,MAAOA,GACP6B,MAAOyU,GAAM5jB,IACbb,MAAOa,EACPwe,SAAU,SAACwY,GAAD,OAAY7E,EAAO6E,IAC7BhD,OAAO,qBACP9X,MAAI,MAGR,gBAAC6U,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAI7P,GAAI,GAAvB,UACE,gBAAC4P,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAAC+D,GAAD,CACEzxB,UAAQ,EACRpE,KAAK,YACLiQ,MAAOyU,GAAMzL,MACbhZ,MAAOmpD,EACP9pC,SAAU,SAAChQ,GAAD,OAAY+5C,EAAa/5C,EAAE05B,OAAO/oC,QAC5C2c,IAAKA,EACLxM,WAAS,EACT0lB,GAAI,MAGR,eAACjE,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAM/D,SACb+D,MAAOA,GACP2G,QAAS4b,EACThnC,MAAOwL,GACP6f,eAAgBgmB,GAChB/lB,eAAgBonC,GAChBnnC,YAAaknC,GACbjnC,SAAU2qC,GACVroD,SAAUA,GACVK,MAAOA,GACPgC,WAAS,EACTga,WAAS,SAKf,gBAACyH,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,UACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,aACLiZ,MAAOyL,GAAMxB,WACbwB,MAAOA,GACP2G,QAASqO,EACTz5B,MAAO0K,EACP2gB,eAAgBgd,EAChB/c,eAAgB6d,EAChB5d,YAAa2d,EACb1d,SAAU4d,EACVt7B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,MAGb,eAACyhB,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,EAAf,SACE,eAACoW,GAAD,CACEloC,KAAK,WACLiZ,MAAOyL,GAAMvB,SACbuB,MAAOA,GACP2G,QAASoO,EACTx5B,MAAO2K,EACP0gB,eAAgBS,EAChBR,eAAgBge,EAChB/d,YAAa8d,EACb7d,SAAUid,EACV36B,SAAUA,GACV6d,QAAM,EACNxd,MAAOA,GACPgC,WAAS,EACTqK,IAAKA,UAKX,gBAAC/J,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,UACjB1B,QAAS,GACToB,UAAW,GACXiuB,aAAc,GACd1O,aAAc,IANlB,UASE,eAACvL,GAAA,EAAD,CACE9T,QAAQ,OACR4T,MAAO,CACL1T,WAAY,SACZkf,eAAgB,aAChByQ,kBAAmB,IALvB,SAQG+B,GACC,eAACje,GAAA,EAAD,CACEtL,MAAM,UACNwL,QAAS,kBAAMqmD,IAAa,IAC5B77D,QAAQ,YAHV,2BASFy1C,GACA,gBAAChgC,GAAA,EAAD,CAAKF,MAAO,CAAEma,aAAc,IAA5B,UACE,eAAC0rC,GAAD,CACExkD,KAAMA,EACNykD,UAAW9nC,EACXT,KAAMgpC,GACNt9B,UAAWA,EACXC,YAAaA,EACbuN,UAAWA,EACXuJ,iBAAkBA,EAClBhuC,SAAUA,EACV4L,MAAOA,GACPsW,MAAOA,GACPloB,MAAOA,EACPmpB,OAAQ/I,EAAI7Z,GACZyrB,MAAOA,EACPrL,SAAUvY,EACVsY,WAAYvY,EACZgW,SAAUlV,GACVglC,QAASA,IAEX,gBAAC5gC,GAAA,EAAD,CAAYW,MAAO,CAAEoP,WAAY,OAAQjkB,SAAU,IAAnD,UACG+oB,GAAM5F,MADT,MACmBP,GAAYO,UAIlC4xB,GAAW,eAAC,GAAD,QAEZliB,GACA,eAAC9d,GAAA,EAAD,CACE6V,EAAG,EACH3pB,QAAQ,OACR4T,MAAO,CAAE9S,KAAM,EAAGse,eAAgB,YAHpC,SAKE,eAACzL,GAAA,EAAD,CACErW,KAAK,SACL+K,MAAM,UACNhK,QAAQ,WACRwV,QAAS,kBAAM04C,IAAe,IAJhC,SAMGzkC,GAAMgc,kBAKf,eAAC7O,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,OAEjB,eAAC,GAAD,CACEjgB,KAAMglD,GACNltC,QAAS,kBAAMmtC,IAAa,IAC5Bl6C,IAAK,KACL4R,OAAO,EACPiL,UAAWA,EACXC,YAAaA,EACbuN,UAAWA,EACX9jB,SAAUvY,EACVsY,WAAYvY,EACZgW,SAAUlV,GACV+kC,iBAAkBA,EAClBh0C,MAAOA,EACPy2B,OAAQA,EACR4iC,UAAWA,KAEb,eAAC,GAAD,CACEhkD,KAAMq3C,GACNv/B,QAAS,kBAAMw/B,IAAe,IAC9B/hD,KAAMwV,EACNqqB,UAAWA,EACXnG,SAAU0P,EACV/W,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTj0C,MAAOA,EACPymB,MAAO+tB,WCtlBFlxC,gBAAf,i+CCAeA,gBAAf,8/CCAeA,gBAAf,6J,uBCqHO,IAAMu3D,GAA6C,SAAC,GAMpD,IALLC,EAKI,EALJA,iBACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,UACAppD,EAEI,EAFJA,MACA6S,EACI,EADJA,KAEA,OACE,uBAAKtR,UAAU,gBAAf,UACE,yBACEa,MAAO,CACLxT,gBAAiBikB,IAASw2C,KAASC,IAAM,eAAYpnD,EACrDsP,WAAY,OACZ3a,MAAOgc,IAASw2C,KAASC,IAAM,YAASpnD,GAE1CX,UAAU,SACVc,QAAS,kBAAM6mD,EAAiBG,KAASC,MAP3C,SASGtpD,EAAQ,qBAAQ,QAEnB,yBACEuB,UAAU,SACVa,MAAO,CACLxT,gBAAiBikB,IAASw2C,KAASE,KAAO,eAAYrnD,EACtDsP,WAAY,OACZ3a,MAAOgc,IAASw2C,KAASE,KAAO,YAASrnD,GAE3CG,QAAS,kBAAM6mD,EAAiBG,KAASE,OAP3C,SASGvpD,EAAQ,iCAAU,SAErB,yBACEoC,MAAO,CACLxT,gBAAiBikB,IAASw2C,KAASG,MAAQ,eAAYtnD,EACvDsP,WAAY,OACZ3a,MAAOgc,IAASw2C,KAASG,MAAQ,YAAStnD,GAE5CX,UAAU,SACVc,QAAS,kBAAM6mD,EAAiBG,KAASG,QAP3C,SASGxpD,EAAQ,qBAAQ,UAGnB,uBAAKoC,MAAO,CAAEoP,WAAY,QAAUjQ,UAAU,SAA9C,UACE,yBAAOA,UAAU,gBAAjB,UACE,wBACEtO,KAAK,WACLw2D,eAAgBL,EAChB/mD,QAAS,kBAAM8mD,GAAkBC,MAEnC,uBAAM7nD,UAAU,cAEjBvB,EAAQ,kFAAmB,wBC7JpC,IAyFe0pD,GAzFI,SAAC,GAAiD,IAA/CjmD,EAA8C,EAA9CA,KAAM8X,EAAwC,EAAxCA,QAASntB,EAA+B,EAA/BA,MAAOsjB,EAAwB,EAAxBA,MAAO1R,EAAiB,EAAjBA,MAAiB,EAC1CT,oBAAS,IADiC,oBAC3DogB,EAD2D,KACrDsuB,EADqD,OAE1C1uC,oBAAmB8pD,KAASC,KAFc,oBAE3Dz2C,EAF2D,KAErD82C,EAFqD,OAGhCpqD,qBAAS,GAHuB,oBAG3D6pD,EAH2D,KAGhDQ,EAHgD,KAK9DC,EAAc,GACdh3C,IAASw2C,KAASG,MACpBK,EAAc,IACLh3C,IAASw2C,KAASE,OAC3BM,EAAc,KAGhB5kC,sBAAU,WACR,GAAIvT,GAASA,EAAMhM,OAAS,EAAG,CAC7B,IAAMokD,EAAUp4C,EAAMjN,KAAI,SAACkN,GACzB,OAAO,6BACFA,GADL,IAEElf,MAAO,IAAI6J,KAAKqV,EAAIlf,OACpBC,IAAK,IAAI4J,KAAKqV,EAAIjf,KAClBd,KAAM+f,EAAI9G,WAGdojC,EAAQ6b,MAET,CAACrmD,IAEJ,IAIMoH,EAAQ7K,EAAQ,sEAAiB,aAEvC,OACE,eAACswB,GAAD,CACEtwB,MAAOA,EACPyD,KAAMA,EACN8X,QAViB,WACnBA,KAUE1Q,MAAOA,EACPxK,SAAU,kBAAM,MAChBjS,MAAOA,EACPoiC,WAAS,EACTD,KAAM,GACN7gC,SAAS,KATX,SAWE,eAAC+zB,GAAA,EAAD,CAAMtB,WAAS,EAAC5zB,QAAS,EAAzB,SACE,eAACk1B,GAAA,EAAD,CAAMvgB,MAAI,EAACwgB,GAAI,GAAf,SACE,gBAACphB,GAAA,EAAD,CACEF,MAAO,CACLxT,gBAAiB,OACjBxB,UAAW,OAHf,UAME,eAAC,GAAD,CACE87D,iBAAkB,SAACa,GAAD,OAAcJ,EAAQI,IACxCZ,iBAAkBS,EAClBR,UAAWA,EACXppD,MAAOA,EACP6S,KAAMA,IAGR,qBAAIzQ,MAAO,CAAE8V,UAAW,UAAxB,SACGlY,EAAQ,sEAAiB,cAE5B,eAAC,KAAD,CACE0R,MAAOiO,EACPoqC,SAAUl3C,EACVqT,OAAO,KAOP8jC,cAAeZ,EAAY,QAAU,GACrCa,YAAa,IACbJ,YAAaA,EACbK,iBAAiB,UACjBC,mBAAmB,OAEnBC,yBAAyB,UACzBC,WAAW,sBClDZj0C,GAAW,SAAC5H,GAAD,OAAuBA,EAAIvD,KAEpC,SAASq/C,GAAT,GAUX,IATFtqD,EASC,EATDA,MACAsW,EAQC,EARDA,MACAjT,EAOC,EAPDA,SACAjP,EAMC,EANDA,SACAhG,EAKC,EALDA,MACAi9B,EAIC,EAJDA,UACAC,EAGC,EAHDA,YACA+W,EAEC,EAFDA,QACAD,EACC,EADDA,iBAEMtmB,EAAMzF,GAAW,CAAErW,QAAOsW,UAC1BuW,EAAWC,aAAc,qBAF9B,EAIiBvtB,oBAAS,CACzBuc,EAAIjR,MAIJiR,EAAIvJ,SACJuJ,EAAIhH,WACJgH,EAAI/G,SACJ+G,EAAIxE,MACJwE,EAAIzE,SACJyE,EAAInE,cACJmE,EAAIlE,UACJkE,EAAIjE,cACJiE,EAAI1L,OACJ0L,EAAIrf,SAdCkiC,EAJN,uBAqBuBp/B,oBAAS,IArBhC,oBAqBMogB,EArBN,KAqBYsuB,EArBZ,OAsB6B1uC,qBAAS,GAtBtC,oBAsBM+iC,EAtBN,KAsBeC,EAtBf,OAuBiChjC,qBAAS,GAvB1C,oBAuBMgrD,EAvBN,KAuBiBC,EAvBjB,OAyBqCjrD,oBAAc,MAzBnD,oBAyBMi8C,EAzBN,KAyBmBC,EAzBnB,OA8BG37C,sBAAWomD,IAFJvpD,EA5BV,EA4BC5J,MAAS4J,KACToD,EA7BD,EA6BCA,SA7BD,EAgCmC8rB,aAAa4hB,GAAU,CACzDzU,YAAa,sBAjCd,oBAgCMyxB,EAhCN,KAgCiBC,EAhCjB,KAoCKhf,EAAc,CAClBxf,eAAgB,CACd,CACEC,MAAOshB,IAET,CACEthB,MAAOmB,MAKbrI,sBAAU,WACRwlC,EAAU,MACT,IAjDF,MAmDiBvqD,aAAYyqD,GAAYjf,GAAnCkf,EAnDN,uBAoDkB1qD,aAAY2qD,GAAYnf,GAApCof,EApDN,uBAqDwB5qD,aAAY6qD,GAAgBrf,GAA9Csf,EArDN,uBAsDgDrnB,KAAzC9K,EAtDP,EAsDOA,UAAWL,EAtDlB,EAsDkBA,YAAaE,EAtD/B,EAsD+BA,aAE1BmG,EAAa,yCAAG,gCAAAt+B,EAAA,uDAASmU,EAAT,EAASA,WAErBzJ,EAAMyJ,EAAQ,GACpBs2C,EAAe,CAAExqD,UAAW,CAAEyK,UAHZ,2CAAH,sDAOnBga,sBAAU,WAAO,IAAD,IAId,IAHA,OAAIylC,QAAJ,IAAIA,OAAJ,EAAIA,EAAWpoB,UACbC,GAAW,GAEb,OAAImoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAWhuD,YAAf,iBAAI,EAAiB+wC,gBAArB,aAAI,EAA2B/wC,KAAM,CAAC,IAC5BA,EAASguD,EAAUhuD,KAAK+wC,SAAxB/wC,KACRuxC,EAAQvxC,GACR6lC,GAAW,MAEZ,CAACmoB,IAEJ,IAAM99B,EAAU,WACL,OAAT89B,QAAS,IAATA,KAAWh+B,WAOb,OACE,eAACC,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAASA,EACT4uB,YAAaA,EACbC,eAAgBA,EARlB,SAUE,uCACE,eAACn5C,GAAA,EAAD,CACEF,MAAO,CACLiP,SAAU,WACV/iB,UAAW,GACXrB,YAAa,GACbg5B,OAAQ,KALZ,SAQE,eAAC9jB,GAAA,EAAD,CACEtV,QAAQ,YACRgK,MAAM,UACNwL,QAAS,kBAAMmoD,GAAa,IAH9B,SAKGxqD,EAAQ,gEAAgB,gBAG7B,gBAACujB,GAAA,EAAD,WACE,gBAAC,KAAD,CAAM5D,KAAMA,EAAMgf,QAASA,EAASvoB,SAAUA,GAA9C,UACE,eAAC,KAAD,CACEiiC,eAAgB17C,EAChB27C,gBAAiB,SAACC,GAnC5Bx4C,EAAS,CAAE9M,KAAM,UAAWC,QAmC6BqlD,OAEjD,eAAC,KAAD,CAAcvZ,gBAAiBH,KAC7BhS,GAAY,eAAC,KAAD,IAEd,eAAC,KAAD,KACEA,GAAY,eAAC,KAAD,IAEd,eAAC,KAAD,CACEp9B,OAAQqR,OAAOguC,YAAc,IAC7BnY,SAAU,CACRggB,OAAQ32C,EAAQ,6EAAmB,WAErC42C,mBAAoB,KAEtB,eAAC,KAAD,CAAgBC,qBAAmB,IAEnC,eAAC,KAAD,CACEzX,IAAK,CAAC,QAAS,OACflB,mBAAoBxuB,KAEtB,eAAC,KAAD,CACE0vB,IAAK,CAAC,UACNlB,mBAAoBluB,KAEtB,eAAC,KAAD,CACEovB,IAAK,CAAC,SAAU,iBAChBlB,mBAAoBrtB,KAEtB,eAAC,KAAD,CACEuuB,IAAK,CAAC,gBAAiB,aACvBlB,mBAAoB/sB,KAEtB,eAAC,KAAD,CACEiuB,IAAK,CAAC,YACNlB,mBAAoBtsB,KAEtB,eAAC,KAAD,CACEwtB,IAAK,CAAC,YACNlB,mBAAoBrsB,KAGrBzd,GACC,eAAC,KAAD,CACE2iD,iBAAe,EACf1X,mBAAiB,EACjB2X,gBAAc,EACd1X,iBAAkB7mB,MAIpBoU,GAAY,eAAC,KAAD,KACZA,GACA,eAAC,KAAD,CACEoqB,eAAgB,SAACrrD,GACf,OAAO,eAACi7B,GAAD,cAAa7mB,MAAOA,GAAWpU,OAI5C,eAAC,GAAD,CAAc40B,UAAWoqC,EAASnqC,WAAYqqC,EAA9C,SACE,eAAC,GAAD,CACEz/B,UAAWA,EACXC,YAAaA,EACbuN,UAAWA,EACXL,YAAaA,EACbE,aAAcA,EACd2J,QAASA,EACTD,iBAAkBA,EAClBh0C,MAAOA,EACPgG,SAAUA,EACVw4B,QAASA,SAId0V,GAAW,eAAC,GAAD,CAAStiC,MAAOA,IAC5B,eAAC,GAAD,CACEyD,KAAM8mD,EACNhvC,QAAS,kBAAMivC,GAAa,IAC5B94C,MAAOiO,EACPvxB,MAAOA,EACP4R,MAAOA,YCvPZ,IAAMirD,GAAmB,CAC9B7uD,gBAAiB,OACjBC,YAAa,IAAIC,KACjBU,QAAS,IAAIV,KACbK,KAAM,CAAC,CAAEC,WAAY,YAAaxP,UAAW,UAGlC89D,GAAe,SAACn4D,EAA2BC,GACtD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BAAKF,GAAZ,IAAmBqJ,gBAAiBpJ,EAAOE,UAC7C,IAAK,iBACH,OAAO,6BAAKH,GAAZ,IAAmBsJ,YAAarJ,EAAOE,UACzC,IAAK,aACH,OAAO,6BAAKH,GAAZ,IAAmBiK,QAAShK,EAAOE,UACrC,IAAK,UACH,OAAO,6BAAKH,GAAZ,IAAmB4J,KAAM3J,EAAOE,UAClC,QACE,MAAM,IAAIC,MAAM,uBCqqBPg4D,GAvlBC,WAId,IAAM7rD,EAAUtQ,KAJI,EAKYuQ,oBAAS7K,GAAS,IAL9B,oBAKb2O,EALa,KAKHD,EALG,OAMY7D,qBAAS,GANrB,oBAMbnL,EANa,KAMHo4C,EANG,KAQdp+C,EAAQ4zB,eAENlD,EAAa2oB,KAAb3oB,SAVY,EAYlB2O,KADMnC,EAXY,EAWZA,YAAamB,EAXD,EAWCA,kBAAmBL,EAXpB,EAWoBA,cAAeE,EAXnC,EAWmCA,eAXnC,EAclBiP,KADMlQ,EAbY,EAaZA,UAAWoM,EAbC,EAaDA,gBAAiBjF,EAbhB,EAagBA,YAAa8E,EAb7B,EAa6BA,aAb7B,EAe0CqG,KAAtDjL,EAfY,EAeZA,SAAUyF,EAfE,EAeFA,eAAgBL,EAfd,EAecA,WAAYE,EAf1B,EAe0BA,YAf1B,EhD5FP,WAAO,IAAD,IAWfqK,EAXe,EACcxW,aAAau/B,IAD3B,oBACZC,EADY,KACHC,EADG,OAGGprD,aAAYqrD,GAAe,CAC/Cr/B,eAAgB,CAAC,CAAEC,MAAOi/B,OADrBlX,EAHY,qBAOnBjvB,sBAAU,WACRomC,MACC,CAACA,IAGJ,IAAMG,GAAgB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAU5uD,YAAV,oDAAgCA,OAAQ,KAMtD,OALI8uD,IACFnpB,EAAU9xC,KAAKC,MAAMg7D,IAIhB,CAAEnpB,UAAS6R,cAAauX,eAFR,yBAAMH,QAAN,IAAMA,OAAN,EAAMA,EAAU5+B,YgD4FUg/B,GAAzCrpB,EAhBY,EAgBZA,QAAS6R,EAhBG,EAgBHA,YAAauX,EAhBV,EAgBUA,eACtB5H,ECvGK,WAAO,IAAD,IAGb7jD,EAAiB,OAFT/N,GAAa,SACnBG,KAFW,EAIey5B,aAAa8/B,GAAc,CAC3DnrD,UAAW,CAAER,WALI,oBAIZq4B,EAJY,KAIFC,EAJE,OAQGp4B,aAAY0rD,GAAgB,CAChD1/B,eAAgB,CAAC,CAAEC,MAAOw/B,GAAcnrD,UAAW,CAAER,aADhD6rD,EARY,uBAWI3rD,aAAY4rD,GAAgB,CACjD5/B,eAAgB,CAAC,CAAEC,MAAOw/B,GAAcnrD,UAAW,CAAER,aADhD+rD,EAXY,uBAcM7rD,aAAY8rD,GAAgB,CACnD9/B,eAAgB,CAAC,CAAEC,MAAOw/B,GAAcnrD,UAAW,CAAER,aADhDisD,EAdY,qBAwBnB,OANAhnC,sBAAU,WACRoT,MACC,CAACA,IAIG,CACLwrB,WAHwB,OAARvrB,QAAQ,IAARA,GAAA,UAAAA,EAAU57B,YAAV,sDAAkCA,OAAQ,GAI1DwvD,gBAHsB,yBAAM5zB,QAAN,IAAMA,OAAN,EAAMA,EAAU5L,WAItCm/B,cACAE,eACAE,kBD0EoBE,GAAdtI,UAjBY,EAkBiBzK,KAA7B5wC,EAlBY,EAkBZA,SAAU0wC,EAlBE,EAkBFA,eAlBE,EAwBDp5C,sBAAWtB,IAxBV,IAqBlBlO,MAASgC,EArBS,EAqBTA,KAAMC,EArBG,EAqBHA,SAAUI,EArBP,EAqBOA,QACzBoN,EAtBkB,EAsBlBA,SAtBkB,IAuBlBE,UAAaqW,EAvBK,EAuBLA,MAAOtW,EAvBF,EAuBEA,MAMtBilB,sBAAU,WACR,IAAMwnB,EAAiB54C,MAAuBA,KAC9C24C,EAAYC,KACX,IAhCiB,IAyFhBr5C,EAE6B,EA3Fb,EAkCsBg5D,sBACxCvvD,GACAX,IApCkB,oBAkCbmwD,EAlCa,KAkCEC,EAlCF,OAuCkBF,sBACpCnvD,GACAF,IAzCkB,oBAuCbwvD,EAvCa,KAuCAC,EAvCA,OA2CgBJ,sBAClClB,GACAD,IA7CkB,qBA2CbwB,GA3Ca,MA2CDC,GA3CC,SA+CgBN,sBAClCztD,GACAD,IAjDkB,sBA+CbiuD,GA/Ca,MA+CDC,GA/CC,SAmD4BR,sBAC9CrtD,GACAF,IArDkB,sBAmDbguD,GAnDa,MAmDKC,GAnDL,SAuDkCV,sBACpDhtD,GACAH,IAzDkB,sBAuDb8tD,GAvDa,MAuDQC,GAvDR,SA2D8BZ,sBAChD1J,GACAD,IA7DkB,sBA2DbwK,GA3Da,MA2DMC,GA3DN,SAgEoBd,sBACtCzuD,GACAR,IAlEkB,sBAgEbgwD,GAhEa,MAgECC,GAhED,SAoEoBhB,sBACtCtuD,GACAD,IAtEkB,sBAoEbwvD,GApEa,MAoECC,GApED,SAwEsBlB,sBACxC7tD,GACAD,IA1EkB,sBAwEbivD,GAxEa,MAwEEC,GAxEF,SA4EkCpB,sBACpDnuD,GACAD,IA9EkB,sBA4EbyvD,GA5Ea,MA4EQC,GA5ER,SAgFkCtB,sBACpDhuD,GACAD,IAlFkB,sBAgFbwvD,GAhFa,MAgFQC,GAhFR,SAoFkCxB,sBACpDrJ,GACAD,IAtFkB,sBAoFb+K,GApFa,MAoFQC,GApFR,MA0FdC,GAASjvC,EAAS7Y,QAAO,SAACozC,GAAD,OAAaA,EAAGt9B,WAAazpB,EAAK0B,UAC7D+5D,IAAUA,GAAOroD,OAAS,IAC5BtS,EAAO,OAAG26D,SAAH,IAAGA,IAAH,UAAGA,GAAS,UAAZ,aAAG,EAAa36D,SAGzB,IAAM8R,GAAO9R,ErK3HW,SAACA,GAoBzB,OAnBcsB,GAAS+P,KAAI,SAACupD,GAE1B,GADoB7iD,GAAY6iD,EAAK56D,GACpB,CACf,GAAI46D,EAAI/4D,QAAS,CACf,IAMMg5D,EANOD,EAAI/4D,QAAQwP,KAAI,SAACsrB,GAE5B,GADgB5kB,GAAY4kB,EAAI38B,GAE9B,OAAO28B,KAGW9pB,QAAO,SAAC23C,GAAD,OAAYA,KAEzC,OADAoQ,EAAI/4D,QAAUg5D,EACPD,EAEP,OAAOA,MAIW/nD,QAAO,SAAC23C,GAAD,OAAYA,KqKwGpBsQ,CAAW96D,GAAW,GACvC+6D,GAAO77D,EAAKwB,aACd0U,EACAA,EAASvC,QAAO,SAACrS,GAAD,OAAcA,EAAII,SAAW1B,EAAK0B,UAChDkuD,GrKxGyB,SAAC9uD,GAChC,IAAMg7D,EAAQnmD,GACRysB,GAAe,OAAPthC,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAC5BqC,GACA,GACEmmD,GAAkB,OAAPj7D,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAC/BsC,GACA,GACEW,GAAmB,OAAP1V,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAChCwC,GACA,GACE1P,GAAkB,OAAPvF,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,KAC/BuC,GACA,GACEkmD,GAAiB,OAAPl7D,QAAO,IAAPA,OAAA,EAAAA,EAASgY,SAASvF,IAAmBA,KACjDyC,GACA,GAUJ,MATW,uBACN8lD,GADM,aAEN15B,GAFM,aAGN25B,GAHM,aAINvlD,GAJM,aAKNnQ,GALM,aAMN21D,IAEoB7pD,KAAI,SAAC8pD,GAAD,OAAaA,EAAG1nD,cqK+ExB2nD,CAAkBp7D,GACjCq7D,IACA,OAAJN,SAAI,IAAJA,QAAA,EAAAA,GAAMzoD,QAAS,EACXyoD,GAAKloD,QAAO,SAACrS,GAAD,OAAcsuD,GAAa92C,SAASxX,EAAIiT,eACpD,GAGN,OAFA4nD,GAAiB9xD,MAAK,SAAC4D,EAAQ4jC,GAAT,OAAoB5jC,EAAEmI,KAAOy7B,EAAEz7B,QAGnD,gBAACpG,GAAA,EAAD,CACEf,UAAWjC,EAAQpQ,KACnB0U,IAAK5D,EAAQ,WAAQkC,EACrB1T,QAAQ,OACR4T,MAAO,CACL9S,KAAM,EACNV,gBAAiBmU,aAAK3U,EAAMR,QAAQqoC,KAAKxU,MAAO,MANpD,UASE,eAACngB,GAAA,EAAD,IASA,eAAC,GAAD,CACEtB,MAAOA,EACPoD,YAAaA,EACbC,SAAUA,EACV/Q,KAAMA,EACNwsB,SAAUA,EACV5Z,KAAMA,GACNC,OA3GS,WACbpF,EAAS,CAAE9M,KAAM,YA2GbN,QAASA,IAEX,uBAAM4O,UAAWjC,EAAQjQ,QAAzB,SACE,iCACE,eAAC,KAAD,CACE0iD,KAAK,IACL2c,OAAK,EACLrtD,UAAW,kBACT,eAACgsB,GAAD,CACEhqB,SAAUA,EACVgoB,UAAWA,EACXC,YAAaA,EACbtrB,MAAOA,EACPsW,MAAOA,EACPhkB,KAAMA,EACNlE,MAAOA,OAIb,eAAC,KAAD,CACE2jD,KAAK,YACL1wC,UAAW,kBACT,eAACrF,GAAgB2yD,SAAjB,CACE98D,MAAO,CAAEkB,MAAOs5D,EAAetsD,SAAUusD,GAD3C,SAGE,eAAC,GAAD,CACEjpD,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,EACPgG,SAAUA,EACV7B,SAAUA,EACV8vC,QAASA,EACT/W,YAAaA,EACbc,cAAeA,EACfE,eAAgBA,EAChBjB,UAAWA,EACXmH,YAAaA,EACb8E,aAAcA,EACd5E,SAAUA,EACVoF,WAAYA,EACZE,YAAaA,SAKrB,eAAC,KAAD,CACE+Z,KAAK,gBACL1wC,UAAW,kBACT,eAAC,GAAsBstD,SAAvB,CACE98D,MAAO,CACLkB,MAAO86D,GACP9tD,SAAU+tD,IAHd,SAME,eAAC3W,GAAD,CACE9zC,SAAUA,EAEVrD,MAAOA,EACPsW,MAAOA,EACPloB,MAAOA,EACPk9B,YAAaA,EACbD,UAAWA,EACXj3B,SAAUA,EACV7B,SAAUA,EACVmgC,SAAUA,EACV2P,QAASA,SAKjB,eAAC,KAAD,CACE0P,KAAK,SACL1wC,UAAW,kBACT,eAAC,GAAastD,SAAd,CACE98D,MAAO,CAAEkB,MAAO45D,GAAY5sD,SAAU6sD,IADxC,SAGE,eAAC9U,GAAD,CACEz0C,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPi9B,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTD,iBAAkB1P,SAK1B,eAAC,KAAD,CACEqf,KAAK,SACL1wC,UAAW,kBACT,eAAC,GAAastD,SAAd,CACE98D,MAAO,CAAEkB,MAAO05D,GAAY1sD,SAAU2sD,IADxC,SAGE,eAACpC,GAAD,CACEjnD,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPi9B,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTD,iBAAkB1P,SAK1B,eAAC,KAAD,CACEqf,KAAK,gBACL1wC,UAAW,kBACT,eAAC,GAAcstD,SAAf,CACE98D,MAAO,CAAEkB,MAAOw5D,EAAaxsD,SAAUysD,GADzC,SAGE,eAACjR,GAAD,CACEl4C,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPi9B,UAAWA,EACXC,YAAaA,EACb+W,QAASA,EACTD,iBAAkB1P,SAM1B,eAAC,KAAD,CACEqf,KAAK,QACL1wC,UAAW,kBACT,eAAC,GAAestD,SAAhB,CACE98D,MAAO,CAAEkB,MAAOo6D,GAAcptD,SAAUqtD,IAD1C,SAGE,eAACjT,GAAD,CACE92C,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE2jD,KAAK,YACL1wC,UAAW,kBACT,eAAC,GAAestD,SAAhB,CACE98D,MAAO,CAAEkB,MAAOs6D,GAActtD,SAAUutD,IAD1C,SAGE,eAAC,GAAD,CACEjqD,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE2jD,KAAK,YACL1wC,UAAW,kBACT,eAAC,GAAgBstD,SAAjB,CACE98D,MAAO,CAAEkB,MAAOw6D,GAAextD,SAAUytD,IAD3C,SAGE,eAACtK,GAAD,CACE7/C,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE2jD,KAAK,cACL1wC,UAAW,kBACT,eAAC,GAAestD,SAAhB,CACE98D,MAAO,CAAEkB,MAAOo6D,GAAcptD,SAAUqtD,IAD1C,SAGE,eAACvH,GAAD,CACExiD,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,SAKf,eAAC,KAAD,CACE2jD,KAAK,aACL1wC,UAAW,kBACT,eAACg2C,GAAD,CACEr3C,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPiV,SAAUA,OAIhB,eAAC,KAAD,CACE0uC,KAAK,SACL1wC,UAAW,kBACT,eAAC00C,GAAD,CACEz/B,MAAOA,EACPliB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACP4R,MAAOA,OAIb,eAAC,KAAD,CACE+xC,KAAK,YACL1wC,UAAW,kBACT,eAACsrB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAASssB,EANX,SAQE,eAACC,GAAD,CAAU3wC,SAAU2lD,UAI1B,eAAC,KAAD,CACEpc,KAAK,WACL1wC,UAAW,kBACT,eAACsrB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAAS6+B,EACTvX,YAAaA,EACb7R,QAASA,EARX,SAUE,eAAC,GAAD,SAIN,eAAC,KAAD,CACE0P,KAAK,eACL1wC,UAAW,kBACT,eAACsrB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAASH,EANX,SAQE,eAACyqB,GAAD,SAIN,eAAC,KAAD,CACEnF,KAAK,aACL1wC,UAAW,kBACT,eAACsrB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAAS6K,EANX,SAQE,eAAC,GAAD,SAIN,eAAC,KAAD,CACEsa,KAAK,aACL1wC,UAAW,kBACT,eAACsrB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAAS6K,EANX,SAQE,eAAC0sB,GAAD,SAIN,eAAC,KAAD,CACEpS,KAAK,YACL1wC,UAAW,kBACT,eAACsrB,GAAD,CACEtpB,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACVhG,MAAOA,EACPw+B,QAASuL,EANX,SAQE,eAACmf,GAAD,SAKN,eAAC,KAAD,CACEvF,KAAK,cACL1wC,UAAW,kBACT,eAAC,GAAoBstD,SAArB,CACE98D,MAAO,CACLkB,MAAOk6D,GACPltD,SAAUmtD,IAHd,SAME,eAAC,GAAD,CACE94D,SAAUA,EACViP,SAAUA,EACVrD,MAAOA,EACPsW,MAAOA,EACPgV,YAAaA,EACbD,UAAWA,EACXqH,SAAUA,EACV8pB,WAAY,GACZna,QAASA,EACTj0C,MAAOA,SAKf,eAAC,KAAD,CACE2jD,KAAK,eACL1wC,UAAW,kBACT,eAAC,GAAmBstD,SAApB,CACE98D,MAAO,CACLkB,MAAO85D,GACP9sD,SAAU+sD,IAHd,SAME,eAAC5O,GAAD,CACE5yB,YAAaA,EACbD,UAAWA,EACXrrB,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACPskC,SAAUA,EACV8pB,WAAY,GACZna,QAASA,SAKjB,eAAC,KAAD,CACE0P,KAAK,kBACL1wC,UAAW,kBACT,eAAC,GAAsBstD,SAAvB,CACE98D,MAAO,CACLkB,MAAOg6D,GACPhtD,SAAUitD,IAHd,SAME,eAACpJ,GAAD,CACEt4B,YAAaA,EACbD,UAAWA,EACXrrB,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACPskC,SAAUA,EACVmxB,UAAWA,EACXrH,WAAY,GACZna,QAASA,SAKjB,eAAC,KAAD,CACE0P,KAAK,iBACL1wC,UAAW,kBACT,eAAC,GAAestD,SAAhB,CACE98D,MAAO,CACLkB,MAAOo6D,GACPptD,SAAUqtD,IAHd,SAME,eAACnL,GAAD,CACE32B,YAAaA,EACbD,UAAWA,EACXrrB,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACPskC,SAAUA,EACV8pB,WAAY,GACZna,QAASA,EACT6f,aAAcuM,UAKtB,eAAC,KAAD,CACE1c,KAAK,kBACL1wC,UAAW,kBACT,eAAC,GAAsBstD,SAAvB,CACE98D,MAAO,CACLkB,MAAO06D,GACP1tD,SAAU2tD,IAHd,SAME,eAAC1J,GAAD,CACE14B,YAAaA,EACbD,UAAWA,EACXrrB,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACPskC,SAAUA,EACV8pB,WAAY,GACZna,QAASA,EACT6f,aAAcuM,UAKtB,eAAC,KAAD,CACE1c,KAAK,kBACL1wC,UAAW,kBACT,eAAC,GAAsBstD,SAAvB,CACE98D,MAAO,CACLkB,MAAO46D,GACP5tD,SAAU6tD,IAHd,SAME,eAAC/K,GAAD,CACEv3B,YAAaA,EACbD,UAAWA,EACXrrB,MAAOA,EACPsW,MAAOA,EACPliB,SAAUA,EACViP,SAAUA,EACVjV,MAAOA,EACPskC,SAAUA,EACV8pB,WAAY,GACZna,QAASA,EACT6f,aAAcuM,mBE1pBjBG,GAdA,WAAO,IACZt+D,EAAUwP,sBAAWtB,IAArBlO,MACFgC,EAAI,OAAGhC,QAAH,IAAGA,OAAH,EAAGA,EAAOgC,KACdF,EAAI,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAO8B,KAIpB,OACE,gBAAC,KAAD,YACIE,GAAQ,eAAC,GAAD,CAAOF,KAAMA,IACtBE,GAAQ,eAAC,GAAD,QCFTu8D,GAAMC,aAAO,CAAEC,QAAQ,GAAD,oBAAMC,eAAYD,SAAlB,CAA2BE,WA2BxCC,OAzBf,WACE,IAAMC,EAAal9D,GAAa,QAASE,IAD5B,EAEai6D,sBACxBt5D,GACAq8D,GAA0Bh9D,IAJf,oBAEN7B,EAFM,KAECyP,EAFD,KAMP3R,EClBkB,SAAC,GAA4B,IAA1BgE,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAC3B+8D,EAAqB,OAATh9D,EAAgBjF,GAAcxB,GAC1C0jE,EAAc1hE,GAASioB,OAAOvjB,IAOpC,OAJmBi9D,aAAe,6BAC7BD,GACAD,IDWSG,CAAW,CAAEn9D,KAAM9B,EAAM8B,KAAMC,QAAS/B,EAAM+B,UACtD4N,EElBO,SAAC7N,GACd,IAAMo9D,EAAyBp9B,GAAP,OAAThgC,EAA4B4kC,GAAkBxL,IADjC,EAEMjsB,oBAASiwD,GAFf,oBAErBvvD,EAFqB,KAEVwvD,EAFU,KAQ5B,OAJAxqC,sBAAU,WACRwqC,EAAaD,KACZ,CAACp9D,IAEG6N,EFUWyvD,CAAap/D,EAAM8B,MAKrC,OAJA6yB,sBAAU,WACRtzB,GAAa,QAASrB,KACrB,CAACA,IAGF,eAACq/D,GAAA,EAAD,CAAgBv+D,OAAQA,GAAxB,SACE,eAACw+D,GAAA,EAAD,CAAgBf,IAAKA,GAArB,SACE,eAACgB,GAAA,EAAD,CAAezhE,MAAOA,EAAtB,SACE,eAAC,GAAcugE,SAAf,CAAwB98D,MAAO,CAAEvB,QAAOyP,WAAUE,aAAlD,SACE,eAAC,GAAD,aGvBN6vD,GAAcC,QACW,cAA7BjvD,OAAOC,SAASivD,UAEe,UAA7BlvD,OAAOC,SAASivD,UAEhBlvD,OAAOC,SAASivD,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAeC,GACtC7lD,UAAU8lD,cACP1wD,SAASwwD,GACTvO,MAAK,SAAC0O,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBz9D,QACfwX,UAAU8lD,cAAcM,YAI1B36C,QAAQC,IACN,+GAKEm6C,GAAUA,EAAOQ,UACnBR,EAAOQ,SAASN,KAMlBt6C,QAAQC,IAAI,sCAGRm6C,GAAUA,EAAOS,WACnBT,EAAOS,UAAUP,WAO5BQ,OAAM,SAACtxD,GACNwW,QAAQxW,MAAM,4CAA6CA,MCjGjE,IAYeuxD,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrP,MAAK,YAAkD,IAA/CsP,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCRdj6B,EAAQ,KAAUq5B,SAOlBmB,KAASC,OACP,eAAC,KAAMC,WAAP,UACE,eAAC,GAAD,MAEFrvC,SAASsvC,eAAe,SFanB,SAAkBtB,GACvB,GAA6C,kBAAmB7lD,UAAW,CAGzE,GADkB,IAAI2oC,IAAIriD,GAAwBiQ,OAAOC,SAAS2B,MACpDivD,SAAW7wD,OAAOC,SAAS4wD,OAIvC,OAGF7wD,OAAO8wD,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMt/D,GAAN,sBAEPi/D,KAgEV,SAAiCK,EAAeC,GAE9Ctc,MAAMqc,EAAO,CACXj/D,QAAS,CAAE,iBAAkB,YAE5B0wD,MAAK,SAACiQ,GAEL,IAAMC,EAAcD,EAAS3gE,QAAQ6gE,IAAI,gBAEnB,MAApBF,EAASp1D,QACO,MAAfq1D,IAA8D,IAAvCA,EAAYpnD,QAAQ,cAG5CH,UAAU8lD,cAAc2B,MAAMpQ,MAAK,SAAC0O,GAClCA,EAAa2B,aAAarQ,MAAK,WAC7B9gD,OAAOC,SAASC,eAKpBkvD,GAAgBC,EAAOC,MAG1BU,OAAM,WACL96C,QAAQC,IAAI,oEAtFVi8C,CAAwB/B,EAAOC,GAI/B7lD,UAAU8lD,cAAc2B,MAAMpQ,MAAK,WACjC5rC,QAAQC,IACN,+GAMJi6C,GAAgBC,EAAOC,OEnC/B+B,GAKApB,O","file":"static/js/main.3270f034.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// local\r\n// uri: \"http://jadwal-server:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean) {\r\n    getDepartments(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resType: Int) {\r\n    getEmployees(isRTL: $isRTL, resType: $resType) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resType\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices($start: Date, $end: Date, $search: String) {\r\n    getInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses($start: Date, $end: Date, $search: String) {\r\n    getExpenses(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      refNo: $refNo\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      refNo: $refNo\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  localuri: \"jadwal-server:4000\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\n\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"ادارة المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 2.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: \"ادارة المهام\",\r\n    titleEn: \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"sales\",\r\n    uri: \"sales\",\r\n    titleAr: \"ادارة الفواتير\",\r\n    titleEn: \"Sales\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"ادارة المالية\",\r\n    titleEn: \"Finance\",\r\n    icon: \"finance\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"cash\",\r\n        uri: \"cash\",\r\n        titleAr: \"ادارة النقدية\",\r\n        titleEn: \"Cash\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 42,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"ادارة المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 43,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"ادارة المصروفات\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"ادارة القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصروفات\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير الحسابات\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 81,\r\n        name: \"customers\",\r\n        uri: \"customers\",\r\n        titleAr: \"العملاء\",\r\n        titleEn: \"Customers\",\r\n        mainId: 8,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 82,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: \"الأقسام\",\r\n        titleEn: \"Departments\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 83,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: \"الموظفين\",\r\n        titleEn: \"Employees\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 84,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 85,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n\r\n      // {\r\n      //   id: 85,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 86,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 87,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n\r\n      {\r\n        id: 89,\r\n        name: \"accounts\",\r\n        uri: \"accounts\",\r\n        titleAr: \"الحسابات\",\r\n        titleEn: \"Accounts\",\r\n        icon: \"account\",\r\n        mainId: 8,\r\n        role: menuRoles.branchAdmin,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصروفات\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصروفات\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصروفات\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n\r\nexport const isProd = process.env.NODE_ENV === \"production\";\r\n\r\nexport const UPLOAD_PRESET = \"sfnboslv\";\r\nexport const CLOUD_NAME = \"fivegstore\";\r\nexport const imageUploadOptions = {\r\n  maxSizeMB: 1,\r\n  maxWidthOrHeight: 1280,\r\n  useWebWorker: true,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(1).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\n\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصروفات\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n\r\n    const dates = rrule.all;\r\n    const list = dates.map((da: any, index: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n        index,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : null;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Checkbox, CircularProgress, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const fromToFormatter = ({ row }: any) => {\r\n  const start = covertToTimeOnly(row.startDate);\r\n  const end = covertToTimeOnly(row.endDate);\r\n  return (\r\n    <div>\r\n      {start} {end}\r\n    </div>\r\n  );\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const taskStatusFormatter = ({ value }: any) => {\r\n  if (value === 1) {\r\n    return <CircularProgress style={{ color: \"#58ac58\" }} size={16} />;\r\n  } else {\r\n    return (\r\n      <Box\r\n        style={{\r\n          width: 18,\r\n          height: 18,\r\n          borderRadius: 9,\r\n          backgroundColor: \"#58ac58\",\r\n        }}\r\n      ></Box>\r\n    );\r\n  }\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\nexport const moneyFormatEmpty = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const currencyFormatterEmpty = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormatEmpty(value)}</span>;\r\n};\r\nexport const doneFormatter = ({ row, editEvent }: any) => {\r\n  const status = row.status === 10 ? 2 : 10;\r\n  return (\r\n    <span>\r\n      <Checkbox\r\n        style={{ padding: 0, margin: 0 }}\r\n        checked={row.status === 10}\r\n        onChange={async (e: any) =>\r\n          await editEvent({ variables: { id: row.id, status } })\r\n        }\r\n        color=\"primary\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\nexport const invoiceReceiptFormatter = ({ value, row }: any) => {\r\n  const { amount } = row;\r\n  const valuePercent = (value / amount) * 100;\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: valuePercent,\r\n          height: 15,\r\n          backgroundColor: \"#58ac58\",\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 30 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? moneyFormat(value) : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: \"#58ac58\",\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? `${parseInt(value)}%` : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const compressEvents = (events: any) => {\r\n  if (events && events.length > 0) {\r\n    const event = events[0];\r\n    const times = events.map((ev: any) => {\r\n      return {\r\n        startDate: ev.startDate,\r\n        endDate: ev.endDate,\r\n      };\r\n    });\r\n    return JSON.stringify({ event, times });\r\n  } else {\r\n    return JSON.stringify([]);\r\n  }\r\n};\r\n\r\nexport const decompressEvents = (events: any) => {\r\n  if (events) {\r\n    const data = JSON.parse(events);\r\n    const { event, times } = data;\r\n    if (event && times) {\r\n      const readyEvents = times.map((evt: any) => {\r\n        return {\r\n          ...event,\r\n          startDate: evt.startDate,\r\n          endDate: evt.endDate,\r\n        };\r\n      });\r\n      return readyEvents;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    id: {\r\n      id: 25,\r\n      ref: \"id\",\r\n      name: \"id\",\r\n      title: isRTL ? \"الرقم\" : \"No\",\r\n    },\r\n    fromto: {\r\n      id: 25,\r\n      ref: \"fromto\",\r\n      name: \"fromto\",\r\n      title: isRTL ? \"الوقت\" : \"Time\",\r\n    },\r\n    done: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    invo: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    totalinvoiced: {\r\n      id: 26,\r\n      ref: \"totalinvoiced\",\r\n      name: \"totalinvoiced\",\r\n      title: isRTL ? \"فواتير\" : \"Invoices\",\r\n    },\r\n    totalpaid: {\r\n      id: 27,\r\n      ref: \"totalpaid\",\r\n      name: \"totalpaid\",\r\n      title: isRTL ? \"مقبوض\" : \"Receipts\",\r\n    },\r\n    toatlExpenses: {\r\n      id: 28,\r\n      ref: \"toatlExpenses\",\r\n      name: \"toatlExpenses\",\r\n      title: isRTL ? \"مصروف\" : \"Expenses\",\r\n    },\r\n  };\r\n};\r\n\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton style={{ padding: 5 }} onClick={onExecute} title=\"Edit row\">\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف المدخل ؟\"\r\n              : \"Are you sure you want to delete this row?\"\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(1).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 65,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n}: any) => {\r\n  const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          minDate={startPeriod}\r\n          maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          minDate={startPeriod}\r\n          maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const { children, menuitem, isRTL, refresh, theme } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(theme.palette.primary.light, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24 }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, employees, departments, theme, menuitem } = props;\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box style={{ padding: 5 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            {raseeds && salesMonthTotal && eventsMonthCount && (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBoxDark\r\n                    title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                    value={moneyFormat(raseeds?.cash)}\r\n                    icon=\"cash\"\r\n                    color={prim}\r\n                    salesColor={salesColor}\r\n                    eventColor={eventColor}\r\n                  ></InfoBoxDark>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBoxDark\r\n                    title={words.card}\r\n                    value={moneyFormat(raseeds?.card)}\r\n                    icon=\"card\"\r\n                    color={prim}\r\n                    salesColor={salesColor}\r\n                    eventColor={eventColor}\r\n                  ></InfoBoxDark>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"اليوم\" : \"Today\"}\r\n                    value={moneyFormat(salesTodayTotal)}\r\n                    icon=\"sales\"\r\n                    color={salesColor}\r\n                    desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                  ></InfoBox>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                    value={moneyFormat(salesMonthTotal)}\r\n                    icon=\"sales\"\r\n                    color={salesColor}\r\n                    desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                  ></InfoBox>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"اليوم\" : \"Today\"}\r\n                    value={moneyFormatSimple(eventsTodayCount)}\r\n                    icon=\"event\"\r\n                    color={eventColor}\r\n                    desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                  ></InfoBox>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <InfoBox\r\n                    title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                    value={moneyFormatSimple(eventsMonthCount)}\r\n                    icon=\"event\"\r\n                    color={eventColor}\r\n                    desc={\r\n                      isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                    }\r\n                  ></InfoBox>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          {todayEvents && (\r\n            <Grid item xs={12} md={4}>\r\n              <PercentChart\r\n                pricolor={salesColor}\r\n                seccolor={eventColor}\r\n                data={todayEvents}\r\n                height={300}\r\n                prim={prim}\r\n                isRTL={isRTL}\r\n              />\r\n            </Grid>\r\n          )}\r\n          {salesDays && (\r\n            <Grid item xs={12} md={8}>\r\n              <SalesDaysChart\r\n                dataKey=\"total\"\r\n                isRTL={isRTL}\r\n                data={salesDays}\r\n                color={salesColor}\r\n                height={300}\r\n                prim={prim}\r\n              ></SalesDaysChart>\r\n            </Grid>\r\n          )}\r\n          {nextEventDays && (\r\n            <Grid item xs={12} md={4}>\r\n              <DaysEvents\r\n                dataKey=\"count\"\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n                data={nextEventDays}\r\n                height={300}\r\n                prim={prim}\r\n              ></DaysEvents>\r\n            </Grid>\r\n          )}\r\n          {eventDays && (\r\n            <Grid item xs={12} md={8}>\r\n              <EventsDaysChart\r\n                dataKey=\"count\"\r\n                isRTL={isRTL}\r\n                data={eventDays}\r\n                color={eventColor}\r\n                pricolor={salesColor}\r\n                seccolor={eventColor}\r\n                height={300}\r\n                prim={prim}\r\n              ></EventsDaysChart>\r\n            </Grid>\r\n          )}\r\n          {salesMonth && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsEmpChart\r\n                data={salesMonth}\r\n                isRTL={isRTL}\r\n                color={salesColor}\r\n                title={\r\n                  isRTL\r\n                    ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                    : \"Month Sales - Employee\"\r\n                }\r\n                employees={employees}\r\n                prim={prim}\r\n                height={400}\r\n              ></MonthsEmpChart>\r\n            </Grid>\r\n          )}\r\n          {salesMonth && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsEmpChart\r\n                data={salesMonth}\r\n                isRTL={isRTL}\r\n                color={salesColor}\r\n                title={\r\n                  isRTL\r\n                    ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                    : \"Month Sales - Department\"\r\n                }\r\n                departments={departments}\r\n                height={400}\r\n                prim={prim}\r\n              ></MonthsEmpChart>\r\n            </Grid>\r\n          )}\r\n          {salesMonths && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsChart\r\n                data={salesMonths}\r\n                isRTL={isRTL}\r\n                color={salesColor}\r\n                prim={prim}\r\n                dataKey=\"total\"\r\n                title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                height={400}\r\n              ></MonthsChart>\r\n            </Grid>\r\n          )}\r\n          {eventMonths && (\r\n            <Grid item xs={12} md={6}>\r\n              <MonthsChart\r\n                data={eventMonths}\r\n                isRTL={isRTL}\r\n                color={eventColor}\r\n                dataKey=\"count\"\r\n                title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                prim={prim}\r\n                height={400}\r\n              ></MonthsChart>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n    savetitle = isRTL ? \"حفظ\" : \"Save\",\r\n    taskvalue,\r\n    preventclose = false,\r\n    saving,\r\n  } = props;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={preventclose ? () => null : onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title} {taskvalue ? ` - ${taskvalue?.title}` : \"\"}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {!onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"الغاء\" : \"Cancel\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n            disabled={saving}\r\n          >\r\n            <Typography variant=\"subtitle2\">{savetitle}</Typography>\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n        {onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#AAAAAA\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#AAAAAA\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#AAAAAA\");\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      email,\r\n      color,\r\n      info,\r\n      resType: 1,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            required\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n  console.log(row);\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResType(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resType}\r\n            onChange={(e: any) => {\r\n              setResType(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={1}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resType === 1 ? words.employee : words.resourses}\r\n            disabled={!resType}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n    setDepartvalue(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <AutoField\r\n          name=\"employee\"\r\n          title={words.employee}\r\n          words={words}\r\n          options={employees}\r\n          value={emplvalue}\r\n          setSelectValue={setEmplvalue}\r\n          setSelectError={setEmplError}\r\n          selectError={emplError}\r\n          refernce={emplRef}\r\n          register={register}\r\n          width={150}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"md\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={!isNew}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              backgroundColor: \"#aaa\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 10 }}></div>\r\n        </Grid>\r\n        <Grid item xs={6}></Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.price)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.qty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={5}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQSxaeDLKDa72WBXKkOegxEYVz8hJiLQd1KvGG6NJhay6bQHBY5ksUG2NREN2xrn8rloQ&usqp=CAU\"></img>\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Contact</div>\r\n            <div style={contItem}>+974 55257956</div>\r\n            <div style={contItem}>info@5gmobile.qa</div>\r\n            <div style={contItem}>www.5gmobile.qa</div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Address</div>\r\n            <div style={contItem}>Al-Gharafa Mobile Complex</div>\r\n            <div style={contItem}>Doha, Qatar</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 50, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Afsar Moh.</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 50, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Thank you for your business.</div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { print } from \"../common\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const taskId = row.taskId;\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // print={isElectron ? handlePrint : handleReactPrint}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5 printData={printData} ref={componentRef} />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert, successAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [type, setType] = useState(2);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    if (isNew) {\r\n      reset();\r\n    } else {\r\n      reset();\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(2);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onSelectServiceChange(amount, \"amount\");\r\n    onSelectServiceChange(JSON.stringify(itemsList), \"items\");\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  const onSelectServiceChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n    if (nextValue?.employeeId) {\r\n      const itememp = employees.filter(\r\n        (emp: any) => emp._id === nextValue.employeeId\r\n      )[0];\r\n      onNewFieldChange(itememp, \"employee\");\r\n    }\r\n    if (nextValue?.departmentId) {\r\n      const itemdep = departments.filter(\r\n        (dep: any) => dep._id === nextValue.departmentId\r\n      )[0];\r\n      onNewFieldChange(itemdep, \"department\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees}\r\n                value={row.employee}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport { print } from \"../common\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      // handlePrint();\r\n      // await successAlert(setAlrt);\r\n      await editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\nimport { useCustomers } from \"../../../hooks\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n  } = appointmentData;\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList.map((il: any) => {\r\n            return (\r\n              <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n                {isRTL ? il.nameAr : il.name}\r\n              </Typography>\r\n            );\r\n          })}\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginLeft: 61, marginTop: -30 }}>\r\n          <Typography style={{ marginTop: 5 }} gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        customers={customers}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        employees={employees}\r\n        departments={departments}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    alrt,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        status\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      mainResourceName,\r\n      departvalue,\r\n      emplvalue,\r\n      status,\r\n    },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n  const refreshCharts = {\r\n    refetchQueries: [\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refreshCharts);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\"\r\n        ? employees\r\n        : mainResourceName === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      mainResourceName,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees, mainResourceName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\"\r\n        ? employees\r\n        : value === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3, 7, 30]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Box style={{ marginBottom: 3 }}>\r\n              <EventsCalFilter\r\n                count={rows.length}\r\n                departvalue={departvalue}\r\n                setDepartvalue={setDepartvalueDispatch}\r\n                emplvalue={emplvalue}\r\n                setEmplvalue={setEmplvalueDispatch}\r\n                departments={departments}\r\n                employees={employees}\r\n                status={status}\r\n                setStatus={setStatusDispatch}\r\n                setMainResourceName={setMainResourceNameDispatch}\r\n                mainResourceName={mainResourceName}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                theme={theme}\r\n                refresh={refresh}\r\n              ></EventsCalFilter>\r\n            </Box>\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={\r\n          isMonth\r\n            ? \"auto\"\r\n            : isMobile\r\n            ? window.innerHeight\r\n            : window.innerHeight - 60\r\n        }\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n        {!isMonth && (\r\n          <EditRecurrenceMenu\r\n            messages={{\r\n              current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n              currentAndFollowing: isRTL\r\n                ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                : \"This and following appointments\",\r\n              all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n              menuEditingTitle: isRTL\r\n                ? \"تعديل موعد متكرر\"\r\n                : \"Edit recurring appointment\",\r\n              menuDeletingTitle: isRTL\r\n                ? \"حذف موعد متكرر\"\r\n                : \"Delete recurring appointment\",\r\n              cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n              commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n            }}\r\n          />\r\n        )}\r\n        {/* {!isMonth && <IntegratedEditing />} */}\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <WeekView\r\n          name=\"Week\"\r\n          displayName=\"Week\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <MonthView intervalCount={1} />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          showOpenButton={isEditor ? true : false}\r\n          // showDeleteButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              editEvent={editEvent}\r\n              company={company}\r\n              theme={theme}\r\n              viewonly={isMobile}\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        {/* {!isMonth && <AppointmentForm />} */}\r\n        {!isMonth && (\r\n          <AppointmentForm\r\n            overlayComponent={(args: any) => (\r\n              <PopupLayoutBox\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                alrt={alrt}\r\n                open={args.visible || false}\r\n                title={title}\r\n                onSubmit={commitChanges}\r\n                mt={0}\r\n                mb={50}\r\n                {...args}\r\n                onClose={args.onHide}\r\n                isMobile={isMobile}\r\n              ></PopupLayoutBox>\r\n            )}\r\n            basicLayoutComponent={(pr: any) => (\r\n              <AppointForm\r\n                departments={departments}\r\n                employees={employees}\r\n                servicesproducts={services}\r\n                theme={theme}\r\n                tasks={tasks}\r\n                isMobile={isMobile}\r\n                {...pr}\r\n              ></AppointForm>\r\n            )}\r\n            commandButtonComponent={CommandAppointment}\r\n          />\r\n        )}\r\n        <AllDayPanel />\r\n        {!isMonth && <DragDropProvider></DragDropProvider>}\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n  const { customers } = useCustomers();\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    departments,\r\n    employees,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  CLOUD_NAME,\r\n  imageUploadOptions,\r\n  UPLOAD_PRESET,\r\n} from \"../constants/sizes\";\r\n\r\nconst serverURL = \"http://jadwal-server:4000\";\r\n\r\nexport const FileUpload = () => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadfile`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderFile = () => {\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <p>file location {data.path}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input type=\"file\" name=\"file\" onChange={handleChange} />\r\n        {data.path && renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageOnlineUpload = ({\r\n  url,\r\n  setUrl,\r\n  image,\r\n  setImage,\r\n  width,\r\n  height,\r\n  size,\r\n}) => {\r\n  const [localimage, setLocalImage]: any = useState(null);\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  const selectImage = (e: any) => {\r\n    const img = e.target?.files?.[0];\r\n    if (img) {\r\n      setImage(img);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setUrl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setLocalImage(URL.createObjectURL(image));\r\n    } else {\r\n      setLocalImage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        ref={fileInput}\r\n        style={{\r\n          width: 0.1,\r\n          height: 0.1,\r\n          opacity: 0,\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n        }}\r\n        type=\"file\"\r\n        onChange={selectImage}\r\n      />\r\n      {localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={localimage}\r\n          />\r\n        </Box>\r\n      )}\r\n      {url && !localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={url}\r\n          />\r\n        </Box>\r\n      )}\r\n      {!localimage && !url && (\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            overflow: \"hidden\",\r\n            width: width,\r\n            height: height,\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#eaeaea\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => fileInput.current.click()}\r\n        >\r\n          <Typography style={{ color: \"#bbb\", fontSize: 14 }}>\r\n            {size}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const uploadPhotoOnline = async (image: any) => {\r\n  try {\r\n    const compressedImage = await imageCompression(image, imageUploadOptions);\r\n    const d = new FormData();\r\n    d.append(\"file\", compressedImage);\r\n    d.append(\"upload_preset\", UPLOAD_PRESET);\r\n    d.append(\"cloud_name\", CLOUD_NAME);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/fivegstore/image/upload\",\r\n      {\r\n        method: \"post\",\r\n        body: d,\r\n      }\r\n    );\r\n    const json = await res.json();\r\n    return json.url;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  ImageOnlineUpload,\r\n  ImageUpload,\r\n  uploadPhotoOnline,\r\n} from \"../../common/upload\";\r\nimport { isProd } from \"../../constants/sizes\";\r\n\r\nconsole.log(\"isProd\", isProd);\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [iconimage, setIconimage] = useState(null);\r\n  const [iconurl, setIconurl] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n      setIconurl(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n    let icon: any;\r\n    if (iconimage) {\r\n      icon = await uploadPhotoOnline(iconimage);\r\n      icon = icon.replace(\"http://\", \"https://\");\r\n    }\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo: icon ? icon : logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            {!isProd && (\r\n              <>\r\n                <img\r\n                  src={logo}\r\n                  alt={company?.name}\r\n                  height={100}\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    borderRadius: 10,\r\n                    marginTop: 5,\r\n                  }}\r\n                />\r\n                <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n              </>\r\n            )}\r\n            <Box style={{ marginBottom: 20 }}></Box>\r\n            {isProd && (\r\n              <ImageOnlineUpload\r\n                url={iconurl}\r\n                setUrl={setIconurl}\r\n                image={iconimage}\r\n                setImage={setIconimage}\r\n                width={300}\r\n                height={150}\r\n                size=\"400x200\"\r\n              ></ImageOnlineUpload>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, PopupEditing } from \"../../Shared\";\r\nimport { useDepartments } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport { avatarPatternFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Departments({ isRTL, words, isEditor, theme }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n  ]);\r\n\r\n  const { departments, addDepartment, editDepartment, removeDepartment } =\r\n    useDepartments();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n        >\r\n          <PopupDeprtment></PopupDeprtment>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\n\r\nexport default function Employees({ isRTL, words, isEditor, theme }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useHResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupEmployee></PopupEmployee>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 1 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Customers(props: any) {\r\n  const { isRTL, words, isEditor, theme, menuitem } = props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"mobile\", title: words.mobile },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.theaddress },\r\n  ]);\r\n\r\n  const {\r\n    customers,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n    refreshcustomer,\r\n  } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshcustomer}\r\n    >\r\n      <Paper>\r\n        <Grid rows={customers} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginTop: 4 }}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginTop: 4, marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n      setTasktitle(row?.title);\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      startDate < startPeriod ||\r\n      startDate > endPeriod ||\r\n      endDate < startPeriod ||\r\n      endDate > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n      taskvalue={taskvalue}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 180, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography\r\n              style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n            >\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.title,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      // {\r\n      //   query: getReminders,\r\n      // },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          {!isMobile && <SearchState />}\r\n\r\n          <IntegratedSorting />\r\n          {!isMobile && <IntegratedFiltering />}\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          {!isMobile && <Toolbar />}\r\n          {!isMobile && (\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n          )}\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  setItemType,\r\n  catvalue,\r\n  setCatvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  categories,\r\n  total,\r\n  words,\r\n  isRTL,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [catvalueLocal, setCatvalueLocal] = React.useState([]);\r\n  const [itemTypeLocal, setItemTypeLocal] = React.useState(null);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setCatvalueLocal(catvalue);\r\n      setItemTypeLocal(itemType);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setCatvalueLocal([]);\r\n    setItemTypeLocal(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setCatvalue([]);\r\n    setItemType(null);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setCatvalue(catvalueLocal);\r\n    setItemType(itemTypeLocal);\r\n    setOpen(false);\r\n  };\r\n\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...catvalue,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              {/* <SelectServProd\r\n                value={itemTypeLocal}\r\n                onChange={setItemTypeLocal}\r\n                isRTL={isRTL}\r\n                words={words}\r\n              ></SelectServProd> */}\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {categories && categories.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={categories}\r\n                  value={catvalueLocal}\r\n                  setValue={setCatvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"category\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={services}\r\n                value={servicevalueLocal}\r\n                setValue={setServicevalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"serviceproduct\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  categories,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services} // items\r\n            itemType={itemType}\r\n            setItemType={setsetItemTypeDispatch}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={mainaccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 6);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 380 : undefined,\r\n            right: isRTL ? undefined : 380,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={customers}\r\n            custvalue={custvalue}\r\n            setCustvalue={setCustvalueDispatch}\r\n            categories={null}\r\n            catvalue={[]}\r\n            setCatvalue={() => null}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            marginTop: 4,\r\n            zIndex: 115,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={eventStatus}\r\n            value={status}\r\n            setValue={setStatusDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"status\"\r\n            nomulti\r\n            width={180}\r\n          ></FilterSelectCkeckBox>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={customers}\r\n            value={custvalue?.[0]}\r\n            setValue={setCustvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"customer\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب المصروف\" : \"Expenses Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={isRTL ? \"حساب الدفع\" : \"Payment Acc\"}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 1 ? words.employee : words.resourses}\r\n                disabled={!resType}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 2 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport PopupDeprtment from \"./PopupDeprtment\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [openDept, setOpenDept] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const openDepartment = () => {\r\n    setOpenDept(true);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      color,\r\n      info,\r\n      resType: 2,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\n\r\nexport default function Resourses({ isRTL, words, isEditor, theme }: any) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useOResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupResourses></PopupResourses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts($start: Date, $end: Date, $search: String) {\r\n    getReceipts(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoicesList(\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoicesList(\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getInvoicesList from \"../graphql/query/getInvoicesList\";\r\n\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [invoices, setInvoices] = useState<any>([]);\r\n  const [invoicevalue, setInvoicevalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  const [loadInvoices, invoicesData]: any = useLazyQuery(getInvoicesList, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  useEffect(() => {\r\n    if (custvalue) {\r\n      const variables = { customerId: custvalue._id };\r\n      loadInvoices({ variables });\r\n    }\r\n  }, [custvalue, open]);\r\n\r\n  useEffect(() => {\r\n    if (invoicesData?.data?.getInvoicesList?.data) {\r\n      const { data } = invoicesData.data.getInvoicesList;\r\n      if (data?.length > 0) {\r\n        const ndata = data.map((d: any) => {\r\n          const title = `${d.docNo} - ${d.amount}QR`;\r\n          return {\r\n            ...d,\r\n            name: title,\r\n            nameAr: title,\r\n          };\r\n        });\r\n        setInvoices(ndata);\r\n        if (row.refNo) {\r\n          const inv = ndata.filter((ts: any) => ts._id === row.refNo)?.[0];\r\n          setInvoicevalue(inv);\r\n        }\r\n      }\r\n    }\r\n  }, [invoicesData]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: invoicevalue ? invoicevalue.taskId : undefined,\r\n      refNo: invoicevalue ? invoicevalue._id : undefined,\r\n      customer,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setInvoices([]);\r\n    setCustvalue(null);\r\n    setInvoicevalue(null);\r\n    setCustError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب القبض\" : \"Receipt Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"invoice\"\r\n                title={isRTL ? \"الفواتير\" : \"Invoices\"}\r\n                words={words}\r\n                options={invoices}\r\n                value={invoicevalue}\r\n                setSelectValue={setInvoicevalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                disabled={!custvalue}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginTop: 5 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 180}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={180}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={180}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={180}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  setEvList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (!row) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n  };\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      startDate < startPeriod ||\r\n      startDate > endPeriod ||\r\n      endDate < startPeriod ||\r\n      endDate > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const event = {\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist });\r\n    setEvList(eventlist);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    height={200}\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      startDate < startPeriod ||\r\n      startDate > endPeriod ||\r\n      endDate < startPeriod ||\r\n      endDate > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <PopupAddMultiEvents\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                  disabled={desabledSave}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            <Box style={{ marginTop: 20 }}>\r\n              <AutoFieldLocal\r\n                name=\"status\"\r\n                title={words.status}\r\n                words={words}\r\n                options={eventStatus}\r\n                value={status}\r\n                setSelectValue={setStatus}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                width={200}\r\n              ></AutoFieldLocal>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskEvents($taskId: Int) {\r\n    getTaskEvents(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { createEvent, deleteEventById, updateEvent } from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupAppointmentTask from \"../pubups/PopupAppointmentTask\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  open,\r\n  isTaskNew,\r\n  rows,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  isNew,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns, setColumns] = useState([\r\n    col.startDate,\r\n    col.fromto,\r\n    col.docNo,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTaskEvents,\r\n        variables: { taskId },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTaskNew) {\r\n      setColumns([col.startDate, col.fromto, col.status, col.amount]);\r\n    }\r\n  }, [open]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentTask\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              taskId={taskId}\r\n              employee={employee}\r\n              department={department}\r\n              customer={customer}\r\n              company={company}\r\n              isEditor={isEditor}\r\n            ></PopupAppointmentTask>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport { print } from \"../common\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { compressEvents, getAppStartEndPeriod } from \"../common/time\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n  refresh,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getTaskEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const events = eventsData?.data?.[\"getTaskEvents\"]?.data || [];\r\n    const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      const finalItems = _(itemsWqtyprice)\r\n        .groupBy(\"_id\")\r\n        .map((array, key) => ({\r\n          name: array[0].name,\r\n          nameAr: array[0].nameAr,\r\n          categoryId: array[0].categoryId,\r\n          categoryName: array[0].categoryName,\r\n          categoryNameAr: array[0].categoryNameAr,\r\n          departmentId: array[0].departmentId,\r\n          departmentName: array[0].departmentName,\r\n          departmentNameAr: array[0].departmentNameAr,\r\n          departmentColor: array[0].departmentColor,\r\n          employeeId: array[0].employeeId,\r\n          employeeName: array[0].employeeName,\r\n          employeeNameAr: array[0].employeeNameAr,\r\n          employeeColor: array[0].employeeColor,\r\n          autoNo: array[0].autoNo,\r\n          docNo: array[0].docNo,\r\n          cost: array[0].cost,\r\n          itemType: array[0].itemType,\r\n          index: array[0].index,\r\n          itemprice: array[0].itemprice,\r\n          itemqty: _.sumBy(array, \"itemqty\"),\r\n          itemtotal: _.sumBy(array, \"itemtotal\"),\r\n        }))\r\n        .orderBy(\"index\")\r\n        .value();\r\n      setItemsList(finalItems);\r\n    }\r\n    if (events && events.length > 0) {\r\n      setEvList(indexTheList(events));\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData, itemsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setMinutes(0);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 1)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { taskId: row.id };\r\n      getEvents({ variables });\r\n      getItems({ variables });\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setEvList([]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (\r\n      start < startPeriod ||\r\n      start > endPeriod ||\r\n      end < startPeriod ||\r\n      end > endPeriod\r\n    ) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!tasktitle) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة اسم للمهمة\" : \"Please add Task title\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (!evList || evList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة موعد\" : \"Please add Appointment\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const events =\r\n      evList && evList.length > 0 ? compressEvents(evList) : undefined;\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 1,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      evQty: evList.length,\r\n      evDone: 0,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setTimeout(() => {\r\n        refresh();\r\n        setSaving(false);\r\n        onCloseForm();\r\n      }, 2000);\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"lg\"\r\n      preventclose\r\n      saving={saving}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextFieldLocal\r\n                  required\r\n                  name=\"tasktitle\"\r\n                  label={words.title}\r\n                  value={tasktitle}\r\n                  onChange={(e: any) => setTasktitle(e.target.value)}\r\n                  row={row}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"customer\"\r\n                  title={words.customer}\r\n                  words={words}\r\n                  options={customers}\r\n                  value={custvalue}\r\n                  setSelectValue={setCustvalue}\r\n                  setSelectError={setCustError}\r\n                  selectError={custError}\r\n                  refernce={custRef}\r\n                  register={register}\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  showphone\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"department\"\r\n                  title={words.department}\r\n                  words={words}\r\n                  options={departments}\r\n                  value={departvalue}\r\n                  setSelectValue={setDepartvalue}\r\n                  setSelectError={setDepartError}\r\n                  selectError={departError}\r\n                  refernce={departRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"employee\"\r\n                  title={words.employee}\r\n                  words={words}\r\n                  options={employees}\r\n                  value={emplvalue}\r\n                  setSelectValue={setEmplvalue}\r\n                  setSelectError={setEmplError}\r\n                  selectError={emplError}\r\n                  refernce={emplRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  day={day}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"flex-start\",\r\n                  marginInlineStart: 10,\r\n                }}\r\n              >\r\n                {isNew && (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Add Events\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    open={open}\r\n                    isTaskNew={isNew}\r\n                    rows={evList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          setEvList={setEvList}\r\n        ></PopupTaskAppointment>\r\n        <PopupTaskInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          task={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupTaskInvoice>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getLandingChartData } from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  invoiceReceiptFormatter,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  taskStatusFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, useMediaQuery } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    // col.start,\r\n    // col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    col.toatlExpenses,\r\n    col.amount,\r\n    col.status,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const {\r\n    state: { sort },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeTaskById({ variables: { _id } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n    >\r\n      <>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            marginTop: 10,\r\n            marginRight: 10,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setOpenGantt(true)}\r\n          >\r\n            {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n          </Button>\r\n        </Box>\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            {!isMobile && <SearchState />}\r\n\r\n            <IntegratedSorting />\r\n            {!isMobile && <IntegratedFiltering />}\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={taskStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\", \"toatlExpenses\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"totalinvoiced\", \"totalpaid\"]}\r\n              formatterComponent={invoiceReceiptFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            {!isMobile && <Toolbar />}\r\n            {!isMobile && (\r\n              <SearchPanel\r\n                inputComponent={(props: any) => {\r\n                  return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n                }}\r\n              />\r\n            )}\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n                refresh={refresh}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n        </Paper>\r\n      </>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport { MainCalendar } from \"../calendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport {\r\n  useBranches,\r\n  useDepartments,\r\n  useEmployees,\r\n  useServices,\r\n  useSuppliers,\r\n} from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport EmployeesAppoints from \"../calendar/Employees\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { departments, refreshdepartment, addDepartment, editDepartment } =\r\n    useDepartments();\r\n  const { employees, refreshemployee, addEmployee, editEmployee } =\r\n    useEmployees();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      {/* <AppBar\r\n        company={company}\r\n\r\n        isRTL={isRTL}\r\n        user={user}\r\n        network={network}\r\n      ></AppBar> */}\r\n      {/* <AppBar logout={logout} isRTL={isRTL} user={user}></AppBar> */}\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                employees={employees}\r\n                departments={departments}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  departments={departments}\r\n                  addDepartment={addDepartment}\r\n                  editDepartment={editDepartment}\r\n                  employees={employees}\r\n                  addEmployee={addEmployee}\r\n                  editEmployee={editEmployee}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesAppoints\r\n                  menuitem={menuitem}\r\n                  // resourseData={resourseData}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesAppoints>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshdepartment}\r\n              >\r\n                <Departments></Departments>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Employees></Employees>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Resourses></Resourses>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/first */\r\nrequire(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}