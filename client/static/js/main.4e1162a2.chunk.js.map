{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getGroups.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/createGroup.ts","graphql/mutation/deleteGroup.ts","graphql/mutation/updateGroup.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pubups/PopupDeprtment.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","pages/calendar/Main.tsx","contexts/calendarReport/index.ts","pages/calendar/Employees.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/upload.tsx","pages/options/Company.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","pages/adds/Employees.tsx","hooks/useHResourses.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","components/filters/DateNavigatorReports.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","constants/reports.ts","pages/reports/SalesReport.tsx","pages/adds/Invoices.tsx","hooks/useAccounts.ts","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","hooks/useCompany.ts","pubups/PopupAppointment.tsx","Shared/TableComponent.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","pubups/PopupExpenses.tsx","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","hooks/useOResourses.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","graphql/query/getReceipts.ts","graphql/query/getInvoicesList.ts","pubups/PopupReceipt.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupTaskAppointment.tsx","pubups/PopupAppointmentTask.tsx","graphql/query/getTaskEvents.ts","Shared/EventsTable.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","Shared/EventsTableEdit.tsx","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","graphql/query/getReportDocuments.ts","contexts/documentsReport/index.ts","pages/reports/DocumentsReport.tsx","contexts/documentsReport/documentsReducer.ts","contexts/servicesReport/index.ts","graphql/query/getReportServices.ts","pages/reports/ServicesReport.tsx","contexts/servicesReport/servicesReducer.ts","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","systemsNames","nameAr","colors","drawerWidth","isProd","imageUploadOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","taskvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","resourses","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","all","da","index","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","bc","bg","uname","names","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","documentTimeFormatter","opType","createdAtFormatter","fromToFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","taskStatusFormatter","CircularProgress","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","currencyFormatterEmpty","doneFormatter","editEvent","Checkbox","checked","onChange","optimisticResponse","__typename","updateEvent","invoiceReceiptFormatter","valuePercent","position","bottom","right","fontWeight","taskIdFormatter","tasks","tsk","taskNameFormatter","progressFormatter","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","compressEvents","events","times","ev","commitAppointmentChanges","added","changed","deleted","addEvent","removeEvent","items","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","refNo","eventNo","progress","evQty","taskId","fromto","done","invo","totalinvoiced","totalpaid","toatlExpenses","desc","amountdebit","amountcredit","check","commandComponents","add","onExecute","textAlign","m","Fab","edit","IconButton","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","marginBottom","categoryName","categoryNameAr","brandName","brandNameAr","Loading","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","employees","departments","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","bgcolor","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","Landing","getLandingChartData","freshChartData","chartData","useDepartments","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","innerHeight","PaperComponent","handle","cancel","PopupLayout","alrt","onlyclose","print","savetitle","preventclose","saving","bgc","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","PopupDeprtment","setNewValue","setSaving","reset","trim","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","nameEn","description","multiline","rowsMax","InputProps","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","close","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","printsave","from","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","customers","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","setDepartvalue","depError","setDepError","setDaysoff","emplRef","useRef","depart","resType","closeModal","resetAll","target","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","setResType","emplslist","setEmplslist","useEmployees","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","useServices","servId","serv","se","onFormClose","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","src","textTransform","letterSpacing","invoiceNo","PureComponent","indexTheList","PopupInvoice","servicesproducts","company","loading","setLoading","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","setCustvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","tasktitle","setTasktitle","getActions","loadActions","actionsData","eventId","onSelectServiceChange","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","refresQuery","getInvoices","createInvoice","payment","paymentAr","toLocaleTimeString","language","toLocaleDateString","logo","tel1","mob","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","getTasks","getfins","finData","bt","Main","visible","resourseData","setResourseData","setRows","useTasks","getEvents","refreshCharts","createEvent","deleteEvent","getCalEvents","evnData","eventsData","ap","startend","isMonth","curDate","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","CalendarReportContext","EmployeesAppoints","grouping","resourceName","setMainResourceNameDispatch","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","ImageOnlineUpload","url","setUrl","image","setImage","localimage","setLocalImage","fileInput","removeImage","URL","createObjectURL","opacity","img","files","click","objectFit","uploadPhotoOnline","imageCompression","compressedImage","FormData","append","fetch","method","json","Company","editCompany","setLogo","active","setActive","iconimage","setIconimage","iconurl","setIconurl","tel2","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showEditCommand","showAddCommand","inputComponent","Departments","Employees","useHResourses","Customers","Services","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","minDate","checkedIcon","FilterSelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","limitTags","SalesFilter","setServicevalue","documentTypes","types","setTypes","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","taskvalueLocal","setTaskvalueLocal","typesvalueLocal","setTypesvalueLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","groupList","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","departmentIds","employeeIds","customerIds","taskIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","setItemType","defaultSorting","onSortingChange","srt","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","then","buffer","saveAs","Blob","Invoices","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","Accounts","useAccounts","br","CashTransfareSelect","PopupFinance","debaccounts","setDebaccounts","cridaccounts","setCridaccounts","setDebitAcc","setCreditAcc","ca","ot","filtereddebits","filteredcredit","fullwidth","Finance","getFinances","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupAppointment","openInvoice","setOpenInvoice","setMinutes","custId","statNo","cu","stat","TableComponentBlue","blue","TableComponentPurple","green","red","orange","deepPurple","Appointments","due","setDue","periodvalue","setPeriodvalue","loadEvents","deleteEventById","removeEventById","pointerEvents","FilterSelect","FinanceReport","mainaccounts","balance","unshift","accNameAr","accName","accountIds","categoryIds","showInGroupFooter","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","initCalendarReportContext","calendarReportReducer","PopupExpenses","fullwidtth","Expenses","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PurchaseReport","suppliers","categories","brands","supplierIds","setCatvalue","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResourses","PopupReceipt","custError","setCustError","invoices","setInvoices","invoicevalue","setInvoicevalue","getInvoicesList","invoicesData","ndata","Receipt","getReceipts","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","UTC","SelectMulti","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","PopupTaskAppointment","setEvList","setRrule","openMulti","setOpenMulti","rRule","eventlist","PopupAppointmentTask","custRef","EventsTable","getTaskEvents","PopupTaskInvoice","EventsTableEdit","PopupTask","openEvent","setOpenEvent","evList","getTaskItems","finalItems","autoNo","evssum","evDone","isTaskNew","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","loadTasks","tasksData","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","initTasksContext","tasksReducer","DocumentsReportContext","DocumentsReport","getReportDocuments","getTypesValue","initDocumentsReportContext","documentsReportReducer","ServicesReportContext","ServicesReport","getReportServices","initServicesReportContext","servicesReportReducer","Content","getCompany","getComp","compData","updateCompany","comp1","refreshcompany","useCompany","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","documentsStore","documentsDispatch","servicesStore","servicesDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","config","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.4e1162a2.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// local\r\n// uri: \"http://jadwal-server:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean) {\r\n    getDepartments(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGroups($isRTL: Boolean) {\r\n    getGroups(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n        tasks\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resType: Int) {\r\n    getEmployees(isRTL: $isRTL, resType: $resType) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resType\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        documentNo\r\n        startDate\r\n        endDate\r\n        cost\r\n        model\r\n        type\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n    $taskId: Int\r\n    $due: Boolean\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n      taskId: $taskId\r\n      due: $due\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices($start: Date, $end: Date, $search: String) {\r\n    getInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        eventId\r\n        taskId\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n        desc\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses($start: Date, $end: Date, $search: String) {\r\n    getExpenses(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGroup(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    createGroup(branch: $branch, name: $name, nameAr: $nameAr, tasks: $tasks) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGroup($_id: String) {\r\n    deleteGroup(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGroup(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    updateGroup(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tasks: $tasks\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      refNo: $refNo\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      refNo: $refNo\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  localuri: \"jadwal-server:4000\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\n\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"ادارة المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: \"ادارة المهام\",\r\n    titleEn: \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"sales\",\r\n    uri: \"sales\",\r\n    titleAr: \"ادارة الفواتير\",\r\n    titleEn: \"Sales\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"ادارة المالية\",\r\n    titleEn: \"Finance\",\r\n    icon: \"finance\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"cash\",\r\n        uri: \"cash\",\r\n        titleAr: \"ادارة النقدية\",\r\n        titleEn: \"Cash\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 42,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"ادارة المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 43,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"ادارة المصروفات\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"ادارة القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.5,\r\n        name: \"docreports\",\r\n        uri: \"docreports\",\r\n        titleAr: \"تقرير الوثائق\",\r\n        titleEn: \"Documents Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.7,\r\n        name: \"servicesreports\",\r\n        uri: \"servicesreports\",\r\n        titleAr: \"تقرير الخدمات\",\r\n        titleEn: \"Services Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصروفات\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير الحسابات\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 81,\r\n        name: \"customers\",\r\n        uri: \"customers\",\r\n        titleAr: \"العملاء\",\r\n        titleEn: \"Customers\",\r\n        mainId: 8,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 82,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: \"الأقسام\",\r\n        titleEn: \"Departments\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 83,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: \"الموظفين\",\r\n        titleEn: \"Employees\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 84,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 85,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 8,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n\r\n      // {\r\n      //   id: 85,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 86,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 87,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 8,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n\r\n      {\r\n        id: 89,\r\n        name: \"accounts\",\r\n        uri: \"accounts\",\r\n        titleAr: \"الحسابات\",\r\n        titleEn: \"Accounts\",\r\n        icon: \"account\",\r\n        mainId: 8,\r\n        role: menuRoles.branchAdmin,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصروفات\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصروفات\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصروفات\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصروفات\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n\r\nexport const isProd = process.env.NODE_ENV === \"production\";\r\n\r\nexport const UPLOAD_PRESET = \"sfnboslv\";\r\nexport const CLOUD_NAME = \"fivegstore\";\r\nexport const imageUploadOptions = {\r\n  maxSizeMB: 1,\r\n  maxWidthOrHeight: 1280,\r\n  useWebWorker: true,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(1).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\n\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصروفات\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n\r\n    const dates = rrule.all;\r\n    const list = dates.map((da: any, index: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n        index,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : null;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Checkbox, CircularProgress, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\nexport const documentTimeFormatter = ({ row }: any) => {\r\n  const { time, startDate } = row;\r\n  const value = row.opType === 80 ? startDate : time;\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const fromToFormatter = ({ row }: any) => {\r\n  const start = covertToTimeOnly(row.startDate);\r\n  const end = covertToTimeOnly(row.endDate);\r\n  return (\r\n    <div>\r\n      {start} {end}\r\n    </div>\r\n  );\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const taskStatusFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 18,\r\n        height: 18,\r\n        borderRadius: 9,\r\n        backgroundColor: value === 10 ? \"#39a539a0\" : \"#ffffff0\",\r\n      }}\r\n    >\r\n      {value === 1 && (\r\n        <CircularProgress style={{ color: \"#9958ac9b\" }} size={16} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\nexport const moneyFormatEmpty = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const currencyFormatterEmpty = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormatEmpty(value)}</span>;\r\n};\r\nexport const doneFormatter = ({ row, editEvent }: any) => {\r\n  const status = row.status === 10 ? 2 : 10;\r\n  const id = row.id;\r\n  const variables = { id, status };\r\n  return (\r\n    <span>\r\n      <Checkbox\r\n        style={{ padding: 0, margin: 0 }}\r\n        checked={row.status === 10}\r\n        onChange={async (e: any) => {\r\n          await editEvent({\r\n            variables,\r\n            optimisticResponse: {\r\n              __typename: \"updateEvent\",\r\n              updateEvent: {\r\n                __typename: \"Operation\",\r\n                id,\r\n                ...row,\r\n                ...variables,\r\n              },\r\n            },\r\n          });\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\nexport const invoiceReceiptFormatter = ({ value, row }: any) => {\r\n  const { amount } = row;\r\n  const valuePercent = (value / amount) * 100;\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: valuePercent,\r\n          height: 15,\r\n          backgroundColor: \"#39a539a0\",\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 30 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? moneyFormat(value) : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: \"#39a539a0\",\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? `${parseInt(value)}%` : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const compressEvents = (events: any) => {\r\n  if (events && events.length > 0) {\r\n    const event = events[0];\r\n    const times = events.map((ev: any) => {\r\n      return {\r\n        startDate: ev.startDate,\r\n        endDate: ev.endDate,\r\n      };\r\n    });\r\n    return JSON.stringify({ event, times });\r\n  } else {\r\n    return JSON.stringify([]);\r\n  }\r\n};\r\n\r\nexport const decompressEvents = (events: any) => {\r\n  if (events) {\r\n    const data = JSON.parse(events);\r\n    const { event, times } = data;\r\n    if (event && times) {\r\n      const readyEvents = times.map((evt: any) => {\r\n        return {\r\n          ...event,\r\n          startDate: evt.startDate,\r\n          endDate: evt.endDate,\r\n        };\r\n      });\r\n      return readyEvents;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    id: {\r\n      id: 25,\r\n      ref: \"id\",\r\n      name: \"id\",\r\n      title: isRTL ? \"الرقم\" : \"No\",\r\n    },\r\n    fromto: {\r\n      id: 25,\r\n      ref: \"fromto\",\r\n      name: \"fromto\",\r\n      title: isRTL ? \"الوقت\" : \"Time\",\r\n    },\r\n    done: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    invo: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    totalinvoiced: {\r\n      id: 26,\r\n      ref: \"totalinvoiced\",\r\n      name: \"totalinvoiced\",\r\n      title: isRTL ? \"فواتير\" : \"Invoices\",\r\n    },\r\n    totalpaid: {\r\n      id: 27,\r\n      ref: \"totalpaid\",\r\n      name: \"totalpaid\",\r\n      title: isRTL ? \"مقبوض\" : \"Receipts\",\r\n    },\r\n    toatlExpenses: {\r\n      id: 28,\r\n      ref: \"toatlExpenses\",\r\n      name: \"toatlExpenses\",\r\n      title: isRTL ? \"مصروف\" : \"Expenses\",\r\n    },\r\n    desc: {\r\n      id: 29,\r\n      ref: \"desc\",\r\n      name: \"desc\",\r\n      title: isRTL ? \"البيان\" : \"Description\",\r\n    },\r\n    item: {\r\n      id: 30,\r\n      ref: \"item\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    amountdebit: {\r\n      id: 31,\r\n      ref: \"debit\",\r\n      name: \"debit\",\r\n      title: isRTL ? \"مدين\" : \"Debit\",\r\n    },\r\n    amountcredit: {\r\n      id: 32,\r\n      ref: \"credit\",\r\n      name: \"credit\",\r\n      title: isRTL ? \"دائن\" : \"Credit\",\r\n    },\r\n  };\r\n};\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton style={{ padding: 5 }} onClick={onExecute} title=\"Edit row\">\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف المدخل ؟\"\r\n              : \"Are you sure you want to delete this row?\"\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(1).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 20,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\n// import { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n}: any) => {\r\n  // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 170 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const {\r\n    children,\r\n    menuitem,\r\n    isRTL,\r\n    refresh,\r\n    theme,\r\n    bgcolor = theme.palette.primary.light,\r\n  } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(bgcolor, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(bgcolor, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24, color: \"#eee\" }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, employees, departments, theme, menuitem } = props;\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box\r\n        style={{\r\n          height: window.innerHeight - 90,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Box style={{ margin: 20, marginBottom: 20 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              {raseeds && salesMonthTotal && eventsMonthCount && (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                      value={moneyFormat(raseeds?.cash)}\r\n                      icon=\"cash\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={words.card}\r\n                      value={moneyFormat(raseeds?.card)}\r\n                      icon=\"card\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormat(salesTodayTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormat(salesMonthTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormatSimple(eventsTodayCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormatSimple(eventsMonthCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={\r\n                        isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                      }\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            {todayEvents && (\r\n              <Grid item xs={12} md={4}>\r\n                <PercentChart\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  data={todayEvents}\r\n                  height={300}\r\n                  prim={prim}\r\n                  isRTL={isRTL}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {salesDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <SalesDaysChart\r\n                  dataKey=\"total\"\r\n                  isRTL={isRTL}\r\n                  data={salesDays}\r\n                  color={salesColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></SalesDaysChart>\r\n              </Grid>\r\n            )}\r\n            {nextEventDays && (\r\n              <Grid item xs={12} md={4}>\r\n                <DaysEvents\r\n                  dataKey=\"count\"\r\n                  theme={theme}\r\n                  isRTL={isRTL}\r\n                  data={nextEventDays}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></DaysEvents>\r\n              </Grid>\r\n            )}\r\n            {eventDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <EventsDaysChart\r\n                  dataKey=\"count\"\r\n                  isRTL={isRTL}\r\n                  data={eventDays}\r\n                  color={eventColor}\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></EventsDaysChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                      : \"Month Sales - Employee\"\r\n                  }\r\n                  employees={employees}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                      : \"Month Sales - Department\"\r\n                  }\r\n                  departments={departments}\r\n                  height={400}\r\n                  prim={prim}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={salesMonths}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  prim={prim}\r\n                  dataKey=\"total\"\r\n                  title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n            {eventMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={eventMonths}\r\n                  isRTL={isRTL}\r\n                  color={eventColor}\r\n                  dataKey=\"count\"\r\n                  title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n    savetitle = isRTL ? \"حفظ\" : \"Save\",\r\n    taskvalue,\r\n    preventclose = false,\r\n    saving,\r\n    bgcolor,\r\n  } = props;\r\n  const bgc = bgcolor ? fade(bgcolor, 0.1) : \"#eee\";\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={preventclose ? () => null : onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme ? bgc : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title} {taskvalue ? ` - ${taskvalue?.title}` : \"\"}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n            disabled={saving}\r\n          >\r\n            <Typography\r\n              style={{ marginLeft: 5, marginRight: 5 }}\r\n              variant=\"subtitle2\"\r\n            >\r\n              {savetitle}\r\n            </Typography>\r\n            {saving && <CircularProgress color=\"primary\" size={16} />}\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n        {/* {onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )} */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#AAAAAA\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#AAAAAA\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#AAAAAA\");\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      email,\r\n      color,\r\n      info,\r\n      resType: 1,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResType(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resType}\r\n            onChange={(e: any) => {\r\n              setResType(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={1}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resType === 1 ? words.employee : words.resourses}\r\n            disabled={!resType}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n    setDepartvalue(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <AutoField\r\n          name=\"employee\"\r\n          title={words.employee}\r\n          words={words}\r\n          options={employees}\r\n          value={emplvalue}\r\n          setSelectValue={setEmplvalue}\r\n          setSelectError={setEmplError}\r\n          selectError={emplError}\r\n          refernce={emplRef}\r\n          register={register}\r\n          width={150}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Fab, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"md\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={!isNew}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              backgroundColor: \"#aaa\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 10 }}></div>\r\n        </Grid>\r\n        <Grid item xs={6}></Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 14,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.price)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {item.qty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 4,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          >\r\n            {moneyFormat(item.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 38,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={5}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQSxaeDLKDa72WBXKkOegxEYVz8hJiLQd1KvGG6NJhay6bQHBY5ksUG2NREN2xrn8rloQ&usqp=CAU\"></img>\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Contact</div>\r\n            <div style={contItem}>+974 55257956</div>\r\n            <div style={contItem}>info@5gmobile.qa</div>\r\n            <div style={contItem}>www.5gmobile.qa</div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <div style={contHeader}>Address</div>\r\n            <div style={contItem}>Al-Gharafa Mobile Complex</div>\r\n            <div style={contItem}>Doha, Qatar</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 50, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Afsar Moh.</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 50, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Thank you for your business.</div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n\r\n      const taskId = row.taskId;\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // print={isElectron ? handlePrint : handleReactPrint}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5 printData={printData} ref={componentRef} />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      setSaving(false);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [type, setType] = useState(2);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    setSaving(true);\r\n\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    reset();\r\n    setSaving(false);\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(2);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(row?.title);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onSelectServiceChange(amount, \"amount\");\r\n    onSelectServiceChange(JSON.stringify(itemsList), \"items\");\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  const onSelectServiceChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n    if (nextValue?.employeeId) {\r\n      const itememp = employees.filter(\r\n        (emp: any) => emp._id === nextValue.employeeId\r\n      )[0];\r\n      onNewFieldChange(itememp, \"employee\");\r\n    }\r\n    if (nextValue?.departmentId) {\r\n      const itemdep = departments.filter(\r\n        (dep: any) => dep._id === nextValue.departmentId\r\n      )[0];\r\n      onNewFieldChange(itemdep, \"department\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                name=\"tasktitle\"\r\n                label={words.title}\r\n                value={tasktitle}\r\n                onChange={(e: any) => {\r\n                  setTasktitle(e.target.value);\r\n                  onNewFieldChange(e.target.value, \"title\");\r\n                }}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees}\r\n                value={row.employee}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport { print } from \"../common\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      taskId: appoint.taskId,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const time = new Date(selectedDate);\r\n    // const { name, nameAr, phone } = custvalue;\r\n    let employee = \"\";\r\n    const items = itemsList.map((it: any) => {\r\n      if (!employee && it.employeeName) {\r\n        employee = `${it.employeeName} / ${it.employeeNameAr} `;\r\n      }\r\n      return {\r\n        name: it.name,\r\n        nameAr: it.nameAr,\r\n        price: it.itemprice,\r\n        qty: it.itemqty,\r\n        total: it.itemtotal,\r\n      };\r\n    });\r\n    const payment = ptype === \"cash\" ? \"Cash Payment\" : \"Card Payment\";\r\n    const paymentAr = ptype === \"cash\" ? \"دفع نقدي\" : \"دفع بالبطاقة\";\r\n    const { total } = totals;\r\n    const amount = total - discount;\r\n    const data = {\r\n      time: time.toLocaleTimeString(navigator.language, {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      date: time.toLocaleDateString(\"en-GB\"),\r\n      invNo,\r\n      items,\r\n      discount: moneyFormat(discount),\r\n      amount: moneyFormat(amount),\r\n      logo: company?.logo ? company?.logo : \"logo.jpg\",\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      employee,\r\n      user: user.name ? user.name : user.username,\r\n      payment,\r\n      paymentAr,\r\n    };\r\n    print(data);\r\n  };\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\nimport { useCustomers } from \"../../../hooks\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n  } = appointmentData;\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList.map((il: any) => {\r\n            return (\r\n              <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n                {isRTL ? il.nameAr : il.name}\r\n              </Typography>\r\n            );\r\n          })}\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginLeft: 61, marginTop: -30 }}>\r\n          <Typography style={{ marginTop: 5 }} gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        customers={customers}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        employees={employees}\r\n        departments={departments}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    alrt,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        status\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      mainResourceName,\r\n      departvalue,\r\n      emplvalue,\r\n      status,\r\n    },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n  const refreshCharts = {\r\n    refetchQueries: [\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refreshCharts);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\"\r\n        ? employees\r\n        : mainResourceName === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      mainResourceName,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees, mainResourceName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\"\r\n        ? employees\r\n        : value === \"status\"\r\n        ? eventStatus\r\n        : departments,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        marginTop: isMobile ? 47 : undefined,\r\n        height: window.innerHeight - 10,\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Box style={{ margin: 10 }}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={4}>\r\n            <DateNavigator\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              currentViewNameChange={currentViewNameChange}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentDate={currentDate}\r\n              views={[1, 3, 7, 30]}\r\n            ></DateNavigator>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Box style={{ marginBottom: 3 }}>\r\n                <EventsCalFilter\r\n                  count={rows.length}\r\n                  departvalue={departvalue}\r\n                  setDepartvalue={setDepartvalueDispatch}\r\n                  emplvalue={emplvalue}\r\n                  setEmplvalue={setEmplvalueDispatch}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  status={status}\r\n                  setStatus={setStatusDispatch}\r\n                  setMainResourceName={setMainResourceNameDispatch}\r\n                  mainResourceName={mainResourceName}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  refresh={refresh}\r\n                ></EventsCalFilter>\r\n              </Box>\r\n            </Hidden>\r\n          </Grid>\r\n        </Grid>\r\n        <Box style={{ margin: 0 }}>\r\n          <Scheduler\r\n            data={rows}\r\n            height={\r\n              isMonth\r\n                ? \"auto\"\r\n                : isMobile\r\n                ? window.innerHeight\r\n                : window.innerHeight - 90\r\n            }\r\n            firstDayOfWeek={6}\r\n            locale={isRTL ? \"ar\" : \"en\"}\r\n          >\r\n            {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n            {!isMonth && (\r\n              <EditRecurrenceMenu\r\n                messages={{\r\n                  current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n                  currentAndFollowing: isRTL\r\n                    ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                    : \"This and following appointments\",\r\n                  all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n                  menuEditingTitle: isRTL\r\n                    ? \"تعديل موعد متكرر\"\r\n                    : \"Edit recurring appointment\",\r\n                  menuDeletingTitle: isRTL\r\n                    ? \"حذف موعد متكرر\"\r\n                    : \"Delete recurring appointment\",\r\n                  cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n                  commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n                }}\r\n              />\r\n            )}\r\n            {/* {!isMonth && <IntegratedEditing />} */}\r\n            <ViewState\r\n              currentViewName={currentViewName}\r\n              onCurrentViewNameChange={currentViewNameChange}\r\n              currentDate={currentDate}\r\n              onCurrentDateChange={currentDateChange}\r\n            />\r\n            <DayView\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <DayView\r\n              name=\"3Days\"\r\n              displayName=\"3 Days\"\r\n              intervalCount={3}\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <WeekView\r\n              name=\"Week\"\r\n              displayName=\"Week\"\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <MonthView intervalCount={1} />\r\n            {/* <Toolbar /> */}\r\n            <Appointments appointmentContentComponent={AppointmentContent} />\r\n            <Resources\r\n              data={resourseData}\r\n              mainResourceName={mainResourceName}\r\n            />\r\n            <AppointmentTooltip\r\n              showCloseButton\r\n              showOpenButton={isEditor ? true : false}\r\n              // showDeleteButton\r\n              visible={visible}\r\n              onVisibilityChange={() => setVisible(!visible)}\r\n              contentComponent={({ appointmentData }) => (\r\n                <RenderToolTip\r\n                  appointmentData={appointmentData}\r\n                  setVisible={setVisible}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  editEvent={editEvent}\r\n                  company={company}\r\n                  theme={theme}\r\n                  viewonly={isMobile}\r\n                ></RenderToolTip>\r\n              )}\r\n            />\r\n            {/* {!isMonth && <AppointmentForm />} */}\r\n            {!isMonth && (\r\n              <AppointmentForm\r\n                overlayComponent={(args: any) => (\r\n                  <PopupLayoutBox\r\n                    isRTL={isRTL}\r\n                    theme={theme}\r\n                    alrt={alrt}\r\n                    open={args.visible || false}\r\n                    title={title}\r\n                    onSubmit={commitChanges}\r\n                    mt={0}\r\n                    mb={50}\r\n                    {...args}\r\n                    onClose={args.onHide}\r\n                    isMobile={isMobile}\r\n                  ></PopupLayoutBox>\r\n                )}\r\n                basicLayoutComponent={(pr: any) => (\r\n                  <AppointForm\r\n                    departments={departments}\r\n                    employees={employees}\r\n                    servicesproducts={services}\r\n                    theme={theme}\r\n                    tasks={tasks}\r\n                    isMobile={isMobile}\r\n                    {...pr}\r\n                  ></AppointForm>\r\n                )}\r\n                commandButtonComponent={CommandAppointment}\r\n              />\r\n            )}\r\n            <AllDayPanel />\r\n            {!isMonth && <DragDropProvider></DragDropProvider>}\r\n            <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n          </Scheduler>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { useCustomers } from \"../../hooks\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n  const { customers } = useCustomers();\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    departments,\r\n    employees,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  CLOUD_NAME,\r\n  imageUploadOptions,\r\n  UPLOAD_PRESET,\r\n} from \"../constants/sizes\";\r\n\r\nconst serverURL = \"http://jadwal-server:4000\";\r\n\r\nexport const FileUpload = () => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadfile`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderFile = () => {\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <p>file location {data.path}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input type=\"file\" name=\"file\" onChange={handleChange} />\r\n        {data.path && renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageOnlineUpload = ({\r\n  url,\r\n  setUrl,\r\n  image,\r\n  setImage,\r\n  width,\r\n  height,\r\n  size,\r\n}) => {\r\n  const [localimage, setLocalImage]: any = useState(null);\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  const selectImage = (e: any) => {\r\n    const img = e.target?.files?.[0];\r\n    if (img) {\r\n      setImage(img);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setUrl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setLocalImage(URL.createObjectURL(image));\r\n    } else {\r\n      setLocalImage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        ref={fileInput}\r\n        style={{\r\n          width: 0.1,\r\n          height: 0.1,\r\n          opacity: 0,\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n        }}\r\n        type=\"file\"\r\n        onChange={selectImage}\r\n      />\r\n      {localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={localimage}\r\n          />\r\n        </Box>\r\n      )}\r\n      {url && !localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={url}\r\n          />\r\n        </Box>\r\n      )}\r\n      {!localimage && !url && (\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            overflow: \"hidden\",\r\n            width: width,\r\n            height: height,\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#eaeaea\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => fileInput.current.click()}\r\n        >\r\n          <Typography style={{ color: \"#bbb\", fontSize: 14 }}>\r\n            {size}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const uploadPhotoOnline = async (image: any) => {\r\n  try {\r\n    const compressedImage = await imageCompression(image, imageUploadOptions);\r\n    const d = new FormData();\r\n    d.append(\"file\", compressedImage);\r\n    d.append(\"upload_preset\", UPLOAD_PRESET);\r\n    d.append(\"cloud_name\", CLOUD_NAME);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/fivegstore/image/upload\",\r\n      {\r\n        method: \"post\",\r\n        body: d,\r\n      }\r\n    );\r\n    const json = await res.json();\r\n    return json.url;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  ImageOnlineUpload,\r\n  ImageUpload,\r\n  uploadPhotoOnline,\r\n} from \"../../common/upload\";\r\nimport { isProd } from \"../../constants/sizes\";\r\n\r\nconsole.log(\"isProd\", isProd);\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [iconimage, setIconimage] = useState(null);\r\n  const [iconurl, setIconurl] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n      setIconurl(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n    let icon: any;\r\n    if (iconimage) {\r\n      icon = await uploadPhotoOnline(iconimage);\r\n      icon = icon.replace(\"http://\", \"https://\");\r\n    }\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo: icon ? icon : logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            {!isProd && (\r\n              <>\r\n                <img\r\n                  src={logo}\r\n                  alt={company?.name}\r\n                  height={100}\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    borderRadius: 10,\r\n                    marginTop: 5,\r\n                  }}\r\n                />\r\n                <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n              </>\r\n            )}\r\n            <Box style={{ marginBottom: 20 }}></Box>\r\n            {isProd && (\r\n              <ImageOnlineUpload\r\n                url={iconurl}\r\n                setUrl={setIconurl}\r\n                image={iconimage}\r\n                setImage={setIconimage}\r\n                width={300}\r\n                height={150}\r\n                size=\"400x200\"\r\n              ></ImageOnlineUpload>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    setSaving(true);\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setSaving(false);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useDepartments } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport { avatarPatternFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Departments({ isRTL, words, isEditor, theme }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const { departments, addDepartment, editDepartment, removeDepartment } =\r\n    useDepartments();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n      <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n        >\r\n          <PopupDeprtment></PopupDeprtment>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\n\r\nexport default function Employees({ isRTL, words, isEditor, theme }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useHResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupEmployee></PopupEmployee>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 1 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Customers(props: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const { isRTL, words, isEditor, theme, menuitem } = props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"mobile\", title: words.mobile },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.theaddress },\r\n  ]);\r\n\r\n  const {\r\n    customers,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n    refreshcustomer,\r\n  } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshcustomer}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={customers} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n  color = theme.palette.primary.main,\r\n  bgcolor = fade(theme.palette.primary.dark, 0.12),\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n        minWidth: 450,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: bgcolor,\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#bbb\" : color,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{}}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  tasks,\r\n  taskvalue,\r\n  setTaskvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  total,\r\n  words,\r\n  isRTL,\r\n  documentTypes,\r\n  types,\r\n  setTypes,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [taskvalueLocal, setTaskvalueLocal] = React.useState([]);\r\n  const [typesvalueLocal, setTypesvalueLocal] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setTaskvalueLocal(taskvalue);\r\n      setTypesvalueLocal(types);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setTaskvalueLocal([]);\r\n    setTypesvalueLocal([]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setTaskvalue([]);\r\n    setTypes([]);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setTaskvalue(taskvalueLocal);\r\n    setTypes(typesvalueLocal);\r\n    setOpen(false);\r\n  };\r\n  const tt = types ? types : [];\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...taskvalue,\r\n    ...tt,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              {documentTypes && (\r\n                <FilterSelectMulti\r\n                  options={documentTypes}\r\n                  value={typesvalueLocal}\r\n                  setValue={setTypesvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"type\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {tasks && tasks.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={tasks}\r\n                  value={taskvalueLocal}\r\n                  setValue={setTaskvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"task\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              {servicevalue && servicevalue.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={services}\r\n                  value={servicevalueLocal}\r\n                  setValue={setServicevalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"serviceproduct\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import { operationTypes } from \".\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"taskId\",\r\n    name: isRTL ? \"تجميع بحسب المهمة\" : \"Group By Operation\",\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"opType\",\r\n    name: isRTL ? \"تجميع بحسب الوثيقة\" : \"Group By Document\",\r\n  },\r\n];\r\n\r\nexport const documentTypes = [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: \"All\",\r\n    nameAr: \"الكل\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: operationTypes.event,\r\n    name: \"Appointment\",\r\n    nameAr: \"المواعيد\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: operationTypes.salesInvoice,\r\n    name: \"Invoice\",\r\n    nameAr: \"الفواتير\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: operationTypes.customerReceipt,\r\n    name: \"Receipt\",\r\n    nameAr: \"المقبوض\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: operationTypes.expenses,\r\n    name: \"Expenses\",\r\n    nameAr: \"المصروف\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services} // items\r\n              itemType={itemType}\r\n              setItemType={setsetItemTypeDispatch}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { TableComponent } from \"../reports/SalesReport\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert, Loading } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n  color,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n      setTasktitle(row?.title);\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n      taskvalue={taskvalue}\r\n      bgcolor={color[500]}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  marginTop: 5,\r\n                  backgroundColor: fade(color[500], 0.08),\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 180, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: fade(color[500], 0.08),\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                    color={color}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography\r\n              style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n            >\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","import { VirtualTable } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { colors, fade, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\nconst stylesBlue = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.blue[500], 0.13),\r\n    },\r\n  },\r\n});\r\nconst stylesGreen = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.green[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesRed = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.red[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesOrange = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.orange[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesPurple = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.deepPurple[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesGrey = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.grey[400], 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponentBlue = withStyles(stylesBlue, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGreen = withStyles(stylesGreen, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentRed = withStyles(stylesRed, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentOrange = withStyles(stylesOrange, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentPurple = withStyles(stylesPurple, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGrey = withStyles(stylesGrey, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  colors,\r\n  FormControlLabel,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { TableComponentBlue } from \"../../Shared/TableComponent\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [due, setDue] = useState(false);\r\n  const [color] = useState(colors.blue);\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.title,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n      due,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end, due]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={color[500]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              opacity: due ? 0.5 : undefined,\r\n              pointerEvents: due ? \"none\" : undefined,\r\n            }}\r\n          >\r\n            <DateNavigatorReports\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              currentDate={currentDate}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentViewNameChange={currentViewNameChange}\r\n              endDate={endDate}\r\n              endDateChange={endDateChange}\r\n              views={[1, 7, 30, 365, 1000]}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              color={color[700]}\r\n              bgcolor={color[50]}\r\n            ></DateNavigatorReports>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              padding: 0,\r\n              margin: 0,\r\n              backgroundColor: color[50],\r\n              paddingRight: 10,\r\n              marginLeft: 40,\r\n              marginRight: 40,\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={{ padding: 7 }}\r\n                  checked={due}\r\n                  onChange={() => setDue(!due)}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography style={{ color: color[700] }} variant=\"subtitle2\">\r\n                  {isRTL ? \"المواعيد المتأخرة\" : \"Due Appointments\"}\r\n                </Typography>\r\n              }\r\n              style={{ fontSize: 14 }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          {!isMobile && <SearchState />}\r\n\r\n          <IntegratedSorting />\r\n          {!isMobile && <IntegratedFiltering />}\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n            tableComponent={TableComponentBlue}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          {!isMobile && <Toolbar />}\r\n          {!isMobile && (\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n          )}\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n              color={color}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 110,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    console.log(variables);\r\n\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n            }}\r\n          >\r\n            <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n              <FilterSelectCkeckBox\r\n                options={tasks}\r\n                value={taskvalue?.[0]}\r\n                setValue={setTaskvalueDispatch}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"task\"\r\n                nomulti\r\n                width={250}\r\n              ></FilterSelectCkeckBox>\r\n            </Box>\r\n            <FilterSelectCkeckBox\r\n              options={mainaccounts}\r\n              value={accvalue?.[0]}\r\n              setValue={setAccvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"account\"\r\n              nomulti\r\n              width={250}\r\n            ></FilterSelectCkeckBox>\r\n            {/* <Box\r\n              style={{\r\n                minWidth: 120,\r\n                marginRight: isRTL ? 40 : undefined,\r\n                marginLeft: isRTL ? undefined : 40,\r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n                {currencyFormatter({ value: total })}\r\n              </Typography>\r\n            </Box> */}\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 9\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={customers}\r\n              value={custvalue?.[0]}\r\n              setValue={setCustvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"customer\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              minWidth: 120,\r\n              marginRight: 90,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب المصروف\" : \"Expenses Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={isRTL ? \"حساب الدفع\" : \"Payment Acc\"}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 1 ? words.employee : words.resourses}\r\n                disabled={!resType}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <FilterSelectCkeckBox\r\n              options={tasks}\r\n              value={taskvalue?.[0]}\r\n              setValue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"task\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resType: 2 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport PopupDeprtment from \"./PopupDeprtment\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [openDept, setOpenDept] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const openDepartment = () => {\r\n    setOpenDept(true);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      color,\r\n      info,\r\n      resType: 2,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\n\r\nexport default function Resourses({ isRTL, words, isEditor, theme }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const { employees, addEmployee, editEmployee, removeEmployee } =\r\n    useOResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={30}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"avatar\"]}\r\n          formatterComponent={avatarPatternFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"color\"]}\r\n          formatterComponent={colorFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"daysoff\"]}\r\n          formatterComponent={(props: any) =>\r\n            daysoffFormatter({ ...props, isRTL })\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n        >\r\n          <PopupResourses></PopupResourses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts($start: Date, $end: Date, $search: String) {\r\n    getReceipts(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoicesList(\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoicesList(\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getInvoicesList from \"../graphql/query/getInvoicesList\";\r\n\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [invoices, setInvoices] = useState<any>([]);\r\n  const [invoicevalue, setInvoicevalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  const [loadInvoices, invoicesData]: any = useLazyQuery(getInvoicesList, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  useEffect(() => {\r\n    if (custvalue) {\r\n      const variables = { customerId: custvalue._id };\r\n      loadInvoices({ variables });\r\n    }\r\n  }, [custvalue, open]);\r\n\r\n  useEffect(() => {\r\n    if (invoicesData?.data?.getInvoicesList?.data) {\r\n      const { data } = invoicesData.data.getInvoicesList;\r\n      if (data?.length > 0) {\r\n        const ndata = data.map((d: any) => {\r\n          const title = `${d.docNo} - ${d.amount}QR`;\r\n          return {\r\n            ...d,\r\n            name: title,\r\n            nameAr: title,\r\n          };\r\n        });\r\n        setInvoices(ndata);\r\n        if (row.refNo) {\r\n          const inv = ndata.filter((ts: any) => ts.docNo === row.refNo)?.[0];\r\n          setInvoicevalue(inv);\r\n        }\r\n      }\r\n    }\r\n  }, [invoicesData]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: invoicevalue ? invoicevalue.taskId : undefined,\r\n      refNo: invoicevalue ? invoicevalue.docNo : undefined,\r\n      customer,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setInvoices([]);\r\n    setCustvalue(null);\r\n    setInvoicevalue(null);\r\n    setCustError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب القبض\" : \"Receipt Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"invoice\"\r\n                title={isRTL ? \"الفواتير\" : \"Invoices\"}\r\n                words={words}\r\n                options={invoices}\r\n                value={invoicevalue}\r\n                setSelectValue={setInvoicevalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                disabled={!custvalue}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginTop: 5 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={30}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    setSaving(true);\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    setSaving(false);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n    setSaving(false);\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={240}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  setEvList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (!row) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      setTasktitle(row?.title);\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setSaving(false);\r\n    setTasktitle(null);\r\n  };\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const event = {\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist });\r\n    setEvList(eventlist);\r\n    setSaving(false);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    height={200}\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      setCustvalue(customer);\r\n      setDepartvalue(department);\r\n      setEmplvalue(employee);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      setTasktitle(row?.title);\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n              {words.total} : {moneyFormat(totals.amount)}\r\n            </Typography>\r\n\r\n            <PopupAddMultiEvents\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                  disabled={desabledSave}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            <Box style={{ marginTop: 20 }}>\r\n              <AutoFieldLocal\r\n                name=\"status\"\r\n                title={words.status}\r\n                words={words}\r\n                options={eventStatus}\r\n                value={status}\r\n                setSelectValue={setStatus}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                width={200}\r\n              ></AutoFieldLocal>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskEvents($taskId: Int) {\r\n    getTaskEvents(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { createEvent, deleteEventById, updateEvent } from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupAppointmentTask from \"../pubups/PopupAppointmentTask\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  open,\r\n  rows,\r\n  setRows,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  isNew,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.fromto,\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTaskEvents,\r\n        variables: { taskId },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentTask\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              taskId={taskId}\r\n              employee={employee}\r\n              department={department}\r\n              customer={customer}\r\n              company={company}\r\n              isEditor={isEditor}\r\n            ></PopupAppointmentTask>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      // handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      // print={handlePrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { createEvent, deleteEventById, updateEvent } from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupAppointmentTask from \"../pubups/PopupAppointmentTask\";\r\nimport getTaskEvents from \"../graphql/query/getTaskEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport LoadingInline from \"./LoadingInline\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTableEdit({\r\n  open,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  taskId,\r\n  isNew,\r\n  employee,\r\n  department,\r\n  customer,\r\n  company,\r\n}: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.fromto,\r\n    col.docNo,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTaskEvents,\r\n        variables: { taskId },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getTaskEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const variables = { taskId };\r\n    getEvents({ variables });\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const data = eventsData?.data?.[\"getTaskEvents\"]?.data;\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    const events = data || [];\r\n    setRows(events);\r\n  }, [eventsData]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {loading && <LoadingInline></LoadingInline>}\r\n\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentTask\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              taskId={taskId}\r\n              employee={employee}\r\n              department={department}\r\n              customer={customer}\r\n              company={company}\r\n              isEditor={isEditor}\r\n            ></PopupAppointmentTask>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { compressEvents } from \"../common/time\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\nimport EventsTableEdit from \"../Shared/EventsTableEdit\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n  refresh,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      const finalItems = _(itemsWqtyprice)\r\n        .groupBy(\"_id\")\r\n        .map((array, key) => ({\r\n          name: array[0].name,\r\n          nameAr: array[0].nameAr,\r\n          categoryId: array[0].categoryId,\r\n          categoryName: array[0].categoryName,\r\n          categoryNameAr: array[0].categoryNameAr,\r\n          departmentId: array[0].departmentId,\r\n          departmentName: array[0].departmentName,\r\n          departmentNameAr: array[0].departmentNameAr,\r\n          departmentColor: array[0].departmentColor,\r\n          employeeId: array[0].employeeId,\r\n          employeeName: array[0].employeeName,\r\n          employeeNameAr: array[0].employeeNameAr,\r\n          employeeColor: array[0].employeeColor,\r\n          autoNo: array[0].autoNo,\r\n          docNo: array[0].docNo,\r\n          cost: array[0].cost,\r\n          itemType: array[0].itemType,\r\n          index: array[0].index,\r\n          itemprice: array[0].itemprice,\r\n          itemqty: _.sumBy(array, \"itemqty\"),\r\n          itemtotal: _.sumBy(array, \"itemtotal\"),\r\n        }))\r\n        .orderBy(\"index\")\r\n        .value();\r\n      setItemsList(finalItems);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setMinutes(0);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 1)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const variables = { taskId: row.id };\r\n      getItems({ variables });\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setEvList([]);\r\n    setSaving(false);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   start < startPeriod ||\r\n    //   start > endPeriod ||\r\n    //   end < startPeriod ||\r\n    //   end > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!tasktitle) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة اسم للمهمة\" : \"Please add Task title\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && (!evList || evList.length === 0)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة موعد\" : \"Please add Appointment\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const events =\r\n      evList && evList.length > 0 ? compressEvents(evList) : undefined;\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 1,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      evQty: evList.length,\r\n      evDone: 0,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setTimeout(() => {\r\n        refresh();\r\n        onCloseForm();\r\n      }, 2000);\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"lg\"\r\n      preventclose\r\n      saving={saving}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextFieldLocal\r\n                  required\r\n                  name=\"tasktitle\"\r\n                  label={words.title}\r\n                  value={tasktitle}\r\n                  onChange={(e: any) => setTasktitle(e.target.value)}\r\n                  row={row}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"customer\"\r\n                  title={words.customer}\r\n                  words={words}\r\n                  options={customers}\r\n                  value={custvalue}\r\n                  setSelectValue={setCustvalue}\r\n                  setSelectError={setCustError}\r\n                  selectError={custError}\r\n                  refernce={custRef}\r\n                  register={register}\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  showphone\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"department\"\r\n                  title={words.department}\r\n                  words={words}\r\n                  options={departments}\r\n                  value={departvalue}\r\n                  setSelectValue={setDepartvalue}\r\n                  setSelectError={setDepartError}\r\n                  selectError={departError}\r\n                  refernce={departRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"employee\"\r\n                  title={words.employee}\r\n                  words={words}\r\n                  options={employees}\r\n                  value={emplvalue}\r\n                  setSelectValue={setEmplvalue}\r\n                  setSelectError={setEmplError}\r\n                  selectError={emplError}\r\n                  refernce={emplRef}\r\n                  register={register}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  fullWidth\r\n                  day={day}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"flex-start\",\r\n                  marginInlineStart: 10,\r\n                }}\r\n              >\r\n                {isNew && (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Add Events\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n              {isNew && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    open={open}\r\n                    isTaskNew={isNew}\r\n                    rows={evList}\r\n                    setRows={setEvList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n              {!isNew && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTableEdit\r\n                    open={open}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                  ></EventsTableEdit>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n            {!isNew && (\r\n              <Box\r\n                m={1}\r\n                display=\"flex\"\r\n                style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.addInvoice}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          setEvList={setEvList}\r\n        ></PopupTaskAppointment>\r\n        <PopupTaskInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          task={row}\r\n          customers={customers}\r\n          services={servicesproducts}\r\n          employees={employees}\r\n          departments={departments}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupTaskInvoice>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getLandingChartData } from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  invoiceReceiptFormatter,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  taskStatusFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, colors, useMediaQuery } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport { TableComponentPurple } from \"../../Shared/TableComponent\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const col = getColumns({ isRTL, words });\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    // col.start,\r\n    // col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    col.amount,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    col.toatlExpenses,\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const {\r\n    state: { sort },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.deepPurple[400]}\r\n    >\r\n      <>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            marginTop: 10,\r\n            marginRight: 10,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setOpenGantt(true)}\r\n          >\r\n            {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n          </Button>\r\n        </Box>\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            {!isMobile && <SearchState />}\r\n\r\n            <IntegratedSorting />\r\n            {!isMobile && <IntegratedFiltering />}\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n              tableComponent={TableComponentPurple}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={taskStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\", \"toatlExpenses\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"totalinvoiced\", \"totalpaid\"]}\r\n              formatterComponent={invoiceReceiptFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            {!isMobile && <Toolbar />}\r\n            {!isMobile && (\r\n              <SearchPanel\r\n                inputComponent={(props: any) => {\r\n                  return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n                }}\r\n              />\r\n            )}\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n                refresh={refresh}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n          {alrt.show && (\r\n            <AlertLocal\r\n              isRTL={isRTL}\r\n              type={alrt?.type}\r\n              msg={alrt?.msg}\r\n              top\r\n            ></AlertLocal>\r\n          )}\r\n        </Paper>\r\n      </>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportDocuments(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportDocuments(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        opType\r\n        taskId\r\n        branch\r\n        time\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const DocumentsReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default DocumentsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  documentTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportDocuments from \"../../graphql/query/getReportDocuments\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function DocumentsReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportDocuments, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(DocumentsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportDocuments\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          types: inActiveColumns(\"types\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={[]}\r\n              setServicevalue={() => null}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n              zIndex: 115,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={documentTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initDocumentsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const documentsReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const ServicesReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default ServicesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportServices(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportServices(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportServices from \"../../graphql/query/getReportServices\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function ServicesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  departments,\r\n  employees,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportServices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(ServicesReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportServices\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"total\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"total\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initServicesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const servicesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport { MainCalendar } from \"../calendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport {\r\n  useBranches,\r\n  useDepartments,\r\n  useEmployees,\r\n  useServices,\r\n  useSuppliers,\r\n} from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport EmployeesAppoints from \"../calendar/Employees\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport DocumentsReport from \"../reports/DocumentsReport\";\r\nimport {\r\n  documentsReportReducer,\r\n  initDocumentsReportContext,\r\n} from \"../../contexts/documentsReport/documentsReducer\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\nimport ServicesReport from \"../reports/ServicesReport\";\r\nimport {\r\n  initServicesReportContext,\r\n  servicesReportReducer,\r\n} from \"../../contexts/servicesReport/servicesReducer\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { departments, refreshdepartment, addDepartment, editDepartment } =\r\n    useDepartments();\r\n  const { employees, refreshemployee, addEmployee, editEmployee } =\r\n    useEmployees();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [documentsStore, documentsDispatch] = useReducer(\r\n    documentsReportReducer,\r\n    initDocumentsReportContext\r\n  );\r\n  const [servicesStore, servicesDispatch] = useReducer(\r\n    servicesReportReducer,\r\n    initServicesReportContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      {/* <AppBar\r\n        company={company}\r\n\r\n        isRTL={isRTL}\r\n        user={user}\r\n        network={network}\r\n      ></AppBar> */}\r\n      {/* <AppBar logout={logout} isRTL={isRTL} user={user}></AppBar> */}\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                employees={employees}\r\n                departments={departments}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  departments={departments}\r\n                  addDepartment={addDepartment}\r\n                  editDepartment={editDepartment}\r\n                  employees={employees}\r\n                  addEmployee={addEmployee}\r\n                  editEmployee={editEmployee}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesAppoints\r\n                  menuitem={menuitem}\r\n                  // resourseData={resourseData}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesAppoints>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshdepartment}\r\n              >\r\n                <Departments></Departments>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Employees></Employees>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshemployee}\r\n              >\r\n                <Resourses></Resourses>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/docreports\"\r\n            component={() => (\r\n              <DocumentsReportContext.Provider\r\n                value={{\r\n                  state: documentsStore,\r\n                  dispatch: documentsDispatch,\r\n                }}\r\n              >\r\n                <DocumentsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></DocumentsReport>\r\n              </DocumentsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/servicesreports\"\r\n            component={() => (\r\n              <ServicesReportContext.Provider\r\n                value={{\r\n                  state: servicesStore,\r\n                  dispatch: servicesDispatch,\r\n                }}\r\n              >\r\n                <ServicesReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></ServicesReport>\r\n              </ServicesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable import/first */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nrequire(\"dotenv\").config();\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/first */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}