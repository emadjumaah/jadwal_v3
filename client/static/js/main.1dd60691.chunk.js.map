{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getGroups.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/createGroup.ts","graphql/mutation/deleteGroup.ts","graphql/mutation/updateGroup.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","constants/reports.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pubups/PopupDeprtment.tsx","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","hooks/useDepartmentsTech.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","hooks/useCompany.ts","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","pages/calendar/Main.tsx","pages/calendar/MainCalendar.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/upload.tsx","pages/options/Company.tsx","pages/options/Names.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","pages/adds/Employees.tsx","hooks/useHResoursesTech.tsx","graphql/query/getObjectEvents.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupAppointmentCustomer.tsx","Shared/EventsCustomer.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","components/filters/DateNavigatorReports.tsx","pages/reports/SalesReport.tsx","Shared/InvoicesCustomer.tsx","hooks/useAccounts.ts","graphql/query/getReceipts.ts","graphql/query/getInvoicesList.ts","pubups/PopupReceipt.tsx","Shared/ReceiptCustomer.tsx","pubups/PopupExpenses.tsx","Shared/ExpensesCustomer.tsx","pubups/PopupTaskAppointment.tsx","Shared/EventsTable.tsx","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","Shared/TableComponent.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","pubups/PopupTaskView.tsx","Shared/TasksCustomer.tsx","pubups/PopupCustomerView.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","pages/adds/Invoices.tsx","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","pubups/PopupAppointment.tsx","pubups/PopupDepartmentView.tsx","pubups/PopupEmployeeView.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","contexts/calendarReport/index.ts","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","hooks/useOResoursesTech.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","graphql/query/getReportDocuments.ts","contexts/documentsReport/index.ts","pages/reports/DocumentsReport.tsx","contexts/documentsReport/documentsReducer.ts","contexts/servicesReport/index.ts","graphql/query/getReportServices.ts","pages/reports/ServicesReport.tsx","contexts/servicesReport/servicesReducer.ts","pages/adds/ManageEmployees.tsx","hooks/useHResourses.tsx","pages/adds/ManageDepartments.tsx","pages/calendar/Employees.tsx","pages/calendar/EmployeesCalendar.tsx","pubups/PopupResoursesView.tsx","pages/adds/ManageResourses.tsx","hooks/useOResourses.tsx","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","names","tasks","customers","employees","departments","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","resourses","systemsNames","nameAr","colors","drawerWidth","imageUploadOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","taskvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","dates","all","ritems","items","trim","da","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","groupList","documentTypes","bc","bg","uname","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","documentTimeFormatter","opType","createdAtFormatter","fromToFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatEmpty","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","currencyFormatterEmpty","dueAmountFormatter","due","totalinvoiced","totalpaid","red","incomeAmountFormatter","inc","toatlExpenses","totalDiscount","green","doneFormatter","editEvent","Checkbox","blue","checked","onChange","optimisticResponse","__typename","updateEvent","invoiceReceiptFormatter","valuePercent","position","bottom","right","fontWeight","taskIdFormatter","tsk","nameLinkFormat","setOpenItem","textAlign","deepPurple","taskNameFormatter","progressFormatter","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","compressEvents","events","times","ev","commitAppointmentChanges","added","changed","deleted","addEvent","removeEvent","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","refNo","eventNo","progress","evQty","taskId","fromto","done","invo","desc","amountdebit","amountcredit","createdAt","check","commandComponents","add","onExecute","m","Fab","edit","IconButton","marginBottom","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","categoryName","categoryNameAr","brandName","brandNameAr","Loading","CircularProgress","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","bgcolor","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","cancel","close","nameEn","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","print","printsave","from","description","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","Landing","useDepartments","useEmployees","getLandingChartData","freshChartData","chartData","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","innerHeight","resType","depType","PaperComponent","handle","PopupLayout","alrt","onlyclose","savetitle","preventclose","saving","bgc","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","PopupDeprtment","setNewValue","setSaving","reset","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","multiline","rowsMax","InputProps","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","resKind","setDepartvalue","depError","setDepError","setDaysoff","emplRef","useRef","depart","closeModal","resetAll","target","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","setResKind","emplslist","setEmplslist","useDepartmentsTech","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","setResType","useServices","servId","serv","se","onFormClose","index","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","showEditCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","company","src","logo","alt","objectFit","tel1","textTransform","letterSpacing","invoiceNo","PureComponent","getTasks","getfins","finData","bt","getCompany","getComp","compData","updateCompany","editCompany","comp1","refreshcompany","indexTheList","PopupInvoice","servicesproducts","loading","setLoading","useTasks","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","useCompany","setCustvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","dept","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","em","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","manamentTabs","taskManamentTabs","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","tasktitle","setTasktitle","getActions","loadActions","actionsData","eventId","tks","t","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","onCloseAppoint","refresQuery","getInvoices","createInvoice","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","Main","visible","resourseData","setResourseData","setRows","getEvents","createEvent","deleteEvent","getCalEvents","evnData","eventsData","ap","startend","isMonth","curDate","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","MainCalendar","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","ImageOnlineUpload","url","setUrl","image","setImage","localimage","setLocalImage","fileInput","removeImage","URL","createObjectURL","opacity","img","files","click","uploadPhotoOnline","imageCompression","compressedImage","FormData","append","fetch","method","json","Company","setLogo","active","setActive","iconimage","setIconimage","iconurl","setIconurl","tel2","mob","appid","appversion","Names","setNames","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showAddCommand","inputComponent","Departments","Employees","useHResoursesTech","UTC","checkedIcon","SelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","fullwidth","PopupAppointmentCustomer","custError","setCustError","custRef","setRrule","openMulti","setOpenMulti","openInvoice","setOpenInvoice","setMinutes","custId","statNo","rRule","cu","stat","EventsCustomer","getObjectEvents","deleteEventById","removeEventById","FilterSelectMulti","limitTags","SalesFilter","setServicevalue","types","setTypes","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","taskvalueLocal","setTaskvalueLocal","typesvalueLocal","setTypesvalueLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","minDate","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","departmentIds","employeeIds","customerIds","taskIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","grouping","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","setItemType","defaultSorting","onSortingChange","srt","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","then","buffer","saveAs","Blob","InvoicesCustomer","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","PopupReceipt","debaccounts","setDebaccounts","setDebitAcc","setCreditAcc","invoices","setInvoices","invoicevalue","setInvoicevalue","useAccounts","getInvoicesList","invoicesData","ndata","ca","filteredcredit","filtereddebits","ReceiptCustomer","getReceipts","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupExpenses","cridaccounts","setCridaccounts","fullwidtth","ExpensesCustomer","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PopupTaskAppointment","addEventsToList","eventlist","EventsTable","removeEventFromList","departmentFormatter","employeeFormatter","PopupTask","startrange","endrange","openEvent","setOpenEvent","evList","setEvList","evssum","evDone","isTaskNew","sorted","sortBy","orange","PopupTaskInvoice","TabPanel","other","hidden","useStyles","tabs","borderRight","divider","PopupTaskView","setRow","opened","getTaskItems","finalItems","autoNo","viewtotal","Tabs","orientation","Tab","TasksCustomer","openItem","loadTasks","tasksData","tsks","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","defaultHiddenColumnNames","PopupCustomerView","Customers","Services","Invoices","Accounts","br","CashTransfareSelect","PopupFinance","ot","Finance","getFinances","PopupAppointment","number","Tafgeet","PopupDepartmentView","PopupEmployeeView","Appointments","setDue","periodvalue","setPeriodvalue","setName","openTaskItem","setOpenTaskItem","openCustomerItem","setOpenCustomerItem","openEmployeeItem","setOpenEmployeeItem","openDepartmentItem","setOpenDepartmentItem","setEmployeeItem","setDepartmentItem","setCustomerItem","loadEvents","pointerEvents","taskIdLinkFormat","FilterSelect","FinanceReport","mainaccounts","balance","isCredit","unshift","accNameAr","accName","accountIds","categoryIds","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","showInGroupFooter","initCalendarReportContext","calendarReportReducer","CalendarReportContext","Expenses","PurchaseReport","suppliers","categories","brands","supplierIds","setCatvalue","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResoursesTech","Receipt","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","initTasksContext","tasksReducer","DocumentsReportContext","DocumentsReport","getReportDocuments","getTypesValue","initDocumentsReportContext","documentsReportReducer","ServicesReportContext","ServicesReport","getReportServices","initServicesReportContext","servicesReportReducer","ManageEmployees","useHResourses","ManageDepartments","EmployeesAppoints","resourceName","setMainResourceNameDispatch","EmployeesCalendar","setstate","emps","PopupResoursesView","ManageResourses","useOResourses","Content","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","documentsStore","documentsDispatch","servicesStore","servicesDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","config","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1dd60691.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// local\r\n// uri: \"http://jadwal-server:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean, $depType: Int) {\r\n    getDepartments(isRTL: $isRTL, depType: $depType) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        depType\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        amount\r\n        totalinvoiced\r\n        totalDiscount\r\n        totalpaid\r\n        toatlExpenses\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGroups($isRTL: Boolean) {\r\n    getGroups(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n        tasks\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resType: Int, $resKind: Int) {\r\n    getEmployees(isRTL: $isRTL, resType: $resType, resKind: $resKind) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resKind\r\n        resType\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalDiscount\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        documentNo\r\n        startDate\r\n        endDate\r\n        cost\r\n        model\r\n        type\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalDiscount\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n    $taskId: Int\r\n    $due: Boolean\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n      taskId: $taskId\r\n      due: $due\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoices(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        eventId\r\n        taskId\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n        desc\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getExpenses(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGroup(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    createGroup(branch: $branch, name: $name, nameAr: $nameAr, tasks: $tasks) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGroup($_id: String) {\r\n    deleteGroup(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGroup(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    updateGroup(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tasks: $tasks\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resKind: Int\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resKind: $resKind\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resKind: Int\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resKind: $resKind\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      refNo: $refNo\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      refNo: $refNo\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  names: {\r\n    tasks: \"المهام\",\r\n    customers: \"العملاء\",\r\n    employees: \"الموظفين\",\r\n    departments: \"الأقسام\",\r\n  },\r\n  localuri: \"jadwal-server:4000\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"setNames\":\r\n      return { ...state, names: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\nimport { getStoreItem } from \"../store\";\r\nconst store = getStoreItem(\"store\");\r\nconst { names } = store;\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 0.5,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: names?.tasks ? names?.tasks : \"المهام\",\r\n    titleEn: names?.tasks ? names?.tasks : \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"managments\",\r\n    uri: \"managments\",\r\n    titleAr: \"الإدارات\",\r\n    titleEn: \"Managment\",\r\n    icon: \"business\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 31,\r\n        name: \"customers\",\r\n        uri: \"customers\",\r\n        titleAr: names?.customers ? names?.customers : \"العملاء\",\r\n        titleEn: names?.customers ? names?.customers : \"Customers\",\r\n        icon: \"business\",\r\n        mainId: 3,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 32,\r\n        name: \"manageemployees\",\r\n        uri: \"manageemployees\",\r\n        titleAr: names?.employees ? names?.employees : \"الموظفين\",\r\n        titleEn: names?.employees ? names?.employees : \"Employees\",\r\n        icon: \"group\",\r\n        mainId: 3,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 33,\r\n        name: \"manageresourses\",\r\n        uri: \"manageresourses\",\r\n        titleAr: names?.resourses ? names?.resourses : \"الموارد\",\r\n        titleEn: names?.resourses ? names?.resourses : \"Resourses\",\r\n        icon: \"group\",\r\n        mainId: 3,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 34,\r\n        name: \"managedepartments\",\r\n        uri: \"managedepartments\",\r\n        titleAr: names?.departments ? names?.departments : \"الأقسام\",\r\n        titleEn: names?.departments ? names?.departments : \"Departments\",\r\n        icon: \"depart\",\r\n        mainId: 3,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"الوثائق\",\r\n    titleEn: \"Finance\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"sales\",\r\n        uri: \"sales\",\r\n        titleAr: \"الفواتير\",\r\n        titleEn: \"Sales\",\r\n        mainId: 4,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 43,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        mainId: 4,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"المصاريف\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        mainId: 4,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 45,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        mainId: 4,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 62,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: names?.departments ? names?.departments : \"الأقسام\",\r\n        titleEn: names?.departments ? names?.departments : \"Departments\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 63,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: names?.employees ? names?.employees : \"الموظفين\",\r\n        titleEn: names?.employees ? names?.employees : \"Employees\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 64,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 65,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n\r\n      // {\r\n      //   id: 65,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 66,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 67,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.5,\r\n        name: \"docreports\",\r\n        uri: \"docreports\",\r\n        titleAr: \"تقرير الوثائق\",\r\n        titleEn: \"Documents Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.7,\r\n        name: \"servicesreports\",\r\n        uri: \"servicesreports\",\r\n        titleAr: \"تقرير الخدمات\",\r\n        titleEn: \"Services Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصاريف\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير الحسابات\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"accounts\",\r\n    uri: \"accounts\",\r\n    titleAr: \"الحسابات\",\r\n    titleEn: \"Accounts\",\r\n    icon: \"account\",\r\n    mainId: 6,\r\n    role: menuRoles.branchAdmin,\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصاريف\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصاريف\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصاريف\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n\r\nexport const isProd = process.env.NODE_ENV === \"production\";\r\n\r\nexport const UPLOAD_PRESET = \"sfnboslv\";\r\nexport const CLOUD_NAME = \"fivegstore\";\r\nexport const imageUploadOptions = {\r\n  maxSizeMB: 1,\r\n  maxWidthOrHeight: 1280,\r\n  useWebWorker: true,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(0).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"3Days\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Business from \"@material-ui/icons/Business\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"business\":\r\n      return <Business style={style}></Business>;\r\n    case \"group\":\r\n      return <GroupIcon style={style}></GroupIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"depart\":\r\n      return <Dashboard style={style}></Dashboard>;\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصاريف\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as Tafgeet from \"tafgeetjs\";\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist, isRTL }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n    const dates = rrule.all;\r\n    const ritems = JSON.parse(event.items);\r\n    const isTitle = event?.title && event?.title?.trim()?.length > 0;\r\n    const title = isTitle\r\n      ? event?.title\r\n      : isRTL\r\n      ? ritems[0]?.nameAr\r\n      : ritems[0]?.name;\r\n    const list = dates.map((da: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        title,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : 0;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n\r\nexport const tafkeet = (number: any) => {\r\n  const stringText = new Tafgeet(number, \"QAR\").parse();\r\n  return stringText;\r\n};\r\n","import { operationTypes } from \".\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"taskId\",\r\n    name: isRTL ? \"تجميع بحسب المهمة\" : \"Group By Operation\",\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"opType\",\r\n    name: isRTL ? \"تجميع بحسب الوثيقة\" : \"Group By Document\",\r\n  },\r\n];\r\n\r\nexport const documentTypes = [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: \"All\",\r\n    nameAr: \"الكل\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: operationTypes.event,\r\n    name: \"Appointment\",\r\n    nameAr: \"المواعيد\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: operationTypes.salesInvoice,\r\n    name: \"Invoice\",\r\n    nameAr: \"الفواتير\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: operationTypes.customerReceipt,\r\n    name: \"Receipt\",\r\n    nameAr: \"المقبوض\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: operationTypes.expenses,\r\n    name: \"Expenses\",\r\n    nameAr: \"المصروف\",\r\n  },\r\n];\r\n\r\nexport const sectionTypes = [\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    name: \"Managment\",\r\n    nameAr: \"اداري\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    name: \"Operational\",\r\n    nameAr: \"فني\",\r\n  },\r\n];\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  CircularProgress,\r\n  colors,\r\n  fade,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const sectionsTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const nameObj = sectionTypes.filter((st: any) => st.value === value)?.[0];\r\n  const name = nameObj ? (lang === \"ar\" ? nameObj.nameAr : nameObj.name) : \"\";\r\n\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\nexport const documentTimeFormatter = ({ row }: any) => {\r\n  const { time, startDate } = row;\r\n  const value = row.opType === 80 ? startDate : time;\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const fromToFormatter = ({ row }: any) => {\r\n  const start = covertToTimeOnly(row.startDate);\r\n  const end = covertToTimeOnly(row.endDate);\r\n  return (\r\n    <div>\r\n      {start} {end}\r\n    </div>\r\n  );\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\nexport const departmentFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL\r\n        ? row?.department?.departmentNameAr\r\n        : row?.department?.departmentName}\r\n    </div>\r\n  );\r\n};\r\nexport const employeeFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL ? row?.employee?.employeeNameAr : row?.employee?.employeeName}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const taskStatusFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 18,\r\n        height: 18,\r\n        borderRadius: 9,\r\n        backgroundColor: value === 10 ? \"#39a539a0\" : \"#ffffff0\",\r\n      }}\r\n    >\r\n      {value === 1 && (\r\n        <CircularProgress style={{ color: \"#9958ac9b\" }} size={16} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\nexport const moneyFormatEmpty = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const currencyFormatterEmpty = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormatEmpty(value)}</span>;\r\n};\r\n\r\nexport const dueAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row.totalpaid ? row.totalpaid : 0;\r\n  const due = totalinvoiced - totalpaid;\r\n  if (due) {\r\n    return (\r\n      <span style={{ color: colors.red[400] }}>{moneyFormatEmpty(due)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const incomeAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const toatlExpenses = row.toatlExpenses ? row.toatlExpenses : 0;\r\n  const totalDiscount = row.totalDiscount ? row.totalDiscount : 0;\r\n  const inc = totalinvoiced - toatlExpenses - totalDiscount;\r\n  if (inc) {\r\n    return (\r\n      <span style={{ color: colors.green[800] }}>{moneyFormatEmpty(inc)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const doneFormatter = ({ row, editEvent }: any) => {\r\n  const status = row.status === 10 ? 2 : 10;\r\n  const id = row.id;\r\n  const variables = { id, status };\r\n  return (\r\n    <span>\r\n      <Checkbox\r\n        style={{ padding: 5, color: colors.blue[500] }}\r\n        checked={row.status === 10}\r\n        onChange={async (e: any) => {\r\n          await editEvent({\r\n            variables,\r\n            optimisticResponse: {\r\n              __typename: \"updateEvent\",\r\n              updateEvent: {\r\n                __typename: \"Operation\",\r\n                id,\r\n                ...row,\r\n                ...variables,\r\n              },\r\n            },\r\n          });\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\nexport const invoiceReceiptFormatter = ({ value, row }: any) => {\r\n  const { amount } = row;\r\n  const valuePercent = (value / amount) * 100;\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: valuePercent,\r\n          height: 15,\r\n          backgroundColor: fade(colors.green[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 30 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? moneyFormat(value) : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\n\r\nexport const nameLinkFormat = ({ row, value, setItem, setOpenItem }: any) => {\r\n  return (\r\n    <Box\r\n      onClick={() => {\r\n        setItem(row);\r\n        setOpenItem(true);\r\n      }}\r\n      style={{\r\n        cursor: \"pointer\",\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Typography\r\n        style={{\r\n          fontSize: 13,\r\n          textAlign: \"start\",\r\n          color: colors.deepPurple[500],\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdLinkFormat = ({\r\n  value,\r\n  tasks,\r\n  setItem,\r\n  setOpenItem,\r\n  setName,\r\n}: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value)?.[0];\r\n  if (task) {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setItem(task);\r\n          setName(\"task\");\r\n          setOpenItem(true);\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 13,\r\n            textAlign: \"start\",\r\n            color: colors.deepPurple[500],\r\n          }}\r\n        >\r\n          {task.title}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\n\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: fade(colors.blue[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? `${parseInt(value)}%` : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const compressEvents = (events: any) => {\r\n  if (events && events.length > 0) {\r\n    const event = events[0];\r\n    const times = events.map((ev: any) => {\r\n      return {\r\n        startDate: ev.startDate,\r\n        endDate: ev.endDate,\r\n      };\r\n    });\r\n    return JSON.stringify({ event, times });\r\n  } else {\r\n    return JSON.stringify([]);\r\n  }\r\n};\r\n\r\nexport const decompressEvents = (events: any) => {\r\n  if (events) {\r\n    const data = JSON.parse(events);\r\n    const { event, times } = data;\r\n    if (event && times) {\r\n      const readyEvents = times.map((evt: any) => {\r\n        return {\r\n          ...event,\r\n          startDate: evt.startDate,\r\n          endDate: evt.endDate,\r\n        };\r\n      });\r\n      return readyEvents;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    id: {\r\n      id: 25,\r\n      ref: \"id\",\r\n      name: \"id\",\r\n      title: isRTL ? \"الرقم\" : \"No\",\r\n    },\r\n    fromto: {\r\n      id: 25,\r\n      ref: \"fromto\",\r\n      name: \"fromto\",\r\n      title: isRTL ? \"الوقت\" : \"Time\",\r\n    },\r\n    done: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    invo: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    totalinvoiced: {\r\n      id: 26,\r\n      ref: \"totalinvoiced\",\r\n      name: \"totalinvoiced\",\r\n      title: isRTL ? \"الفواتير\" : \"Invoices\",\r\n    },\r\n    totalpaid: {\r\n      id: 27,\r\n      ref: \"totalpaid\",\r\n      name: \"totalpaid\",\r\n      title: isRTL ? \"المقبوضات\" : \"Receipts\",\r\n    },\r\n    toatlExpenses: {\r\n      id: 28,\r\n      ref: \"toatlExpenses\",\r\n      name: \"toatlExpenses\",\r\n      title: isRTL ? \"المصاريف\" : \"Expenses\",\r\n    },\r\n    desc: {\r\n      id: 29,\r\n      ref: \"desc\",\r\n      name: \"desc\",\r\n      title: isRTL ? \"البيان\" : \"Description\",\r\n    },\r\n    item: {\r\n      id: 30,\r\n      ref: \"item\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    amountdebit: {\r\n      id: 31,\r\n      ref: \"debit\",\r\n      name: \"debit\",\r\n      title: isRTL ? \"مدين\" : \"Debit\",\r\n    },\r\n    amountcredit: {\r\n      id: 32,\r\n      ref: \"credit\",\r\n      name: \"credit\",\r\n      title: isRTL ? \"دائن\" : \"Credit\",\r\n    },\r\n    createdAt: {\r\n      id: 33,\r\n      ref: \"createdAt\",\r\n      name: \"createdAt\",\r\n      title: isRTL ? \"تاريخ الانشاء\" : \"Created Date\",\r\n    },\r\n  };\r\n};\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      style={{ padding: 5, marginTop: 3, marginBottom: 3 }}\r\n      onClick={onExecute}\r\n      title=\"Edit row\"\r\n    >\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف المدخل ؟\"\r\n              : \"Are you sure you want to delete this row?\"\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 20,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\n// import { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n  ...rest\r\n}: any) => {\r\n  // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n      {...rest}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [\r\n      { query: getDepartments, variables: { isRTL } },\r\n      { query: getDepartments, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [\r\n      { query: getDepartments, variables: { isRTL } },\r\n      { query: getDepartments, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [\r\n      { query: getDepartments, variables: { isRTL } },\r\n      { query: getDepartments, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const {\r\n    children,\r\n    menuitem,\r\n    isRTL,\r\n    refresh,\r\n    theme,\r\n    bgcolor = theme.palette.primary.light,\r\n  } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(bgcolor, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(bgcolor, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24, color: \"#eee\" }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, theme, menuitem } = props;\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box\r\n        style={{\r\n          height: window.innerHeight - 90,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Box style={{ margin: 20, marginBottom: 20 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              {raseeds && salesMonthTotal && eventsMonthCount && (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                      value={moneyFormat(raseeds?.cash)}\r\n                      icon=\"cash\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={words.card}\r\n                      value={moneyFormat(raseeds?.card)}\r\n                      icon=\"card\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormat(salesTodayTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormat(salesMonthTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormatSimple(eventsTodayCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormatSimple(eventsMonthCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={\r\n                        isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                      }\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            {todayEvents && (\r\n              <Grid item xs={12} md={4}>\r\n                <PercentChart\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  data={todayEvents}\r\n                  height={300}\r\n                  prim={prim}\r\n                  isRTL={isRTL}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {salesDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <SalesDaysChart\r\n                  dataKey=\"total\"\r\n                  isRTL={isRTL}\r\n                  data={salesDays}\r\n                  color={salesColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></SalesDaysChart>\r\n              </Grid>\r\n            )}\r\n            {nextEventDays && (\r\n              <Grid item xs={12} md={4}>\r\n                <DaysEvents\r\n                  dataKey=\"count\"\r\n                  theme={theme}\r\n                  isRTL={isRTL}\r\n                  data={nextEventDays}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></DaysEvents>\r\n              </Grid>\r\n            )}\r\n            {eventDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <EventsDaysChart\r\n                  dataKey=\"count\"\r\n                  isRTL={isRTL}\r\n                  data={eventDays}\r\n                  color={eventColor}\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></EventsDaysChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                      : \"Month Sales - Employee\"\r\n                  }\r\n                  employees={employees.filter((emp: any) => emp.resType === 1)}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                      : \"Month Sales - Department\"\r\n                  }\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  height={400}\r\n                  prim={prim}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={salesMonths}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  prim={prim}\r\n                  dataKey=\"total\"\r\n                  title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n            {eventMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={eventMonths}\r\n                  isRTL={isRTL}\r\n                  color={eventColor}\r\n                  dataKey=\"count\"\r\n                  title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n    savetitle = isRTL ? \"حفظ\" : \"Save\",\r\n    taskvalue,\r\n    preventclose = false,\r\n    saving,\r\n    bgcolor,\r\n  } = props;\r\n  const bgc = bgcolor ? fade(bgcolor, 0.1) : \"#eee\";\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={preventclose ? () => null : onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: bgc,\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title} {taskvalue ? ` - ${taskvalue?.title}` : \"\"}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n            disabled={saving}\r\n          >\r\n            <Typography\r\n              style={{ marginLeft: 5, marginRight: 5 }}\r\n              variant=\"subtitle2\"\r\n            >\r\n              {savetitle}\r\n            </Typography>\r\n            {saving && <CircularProgress color=\"primary\" size={16} />}\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n  depType,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#AAAAAA\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      depType,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#AAAAAA\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#AAAAAA\");\r\n    setSaving(false);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else if (option.title && !option.name) {\r\n              nm = option?.title;\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments } from \"../hooks\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n  resKind,\r\n  resType,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      resKind,\r\n      resType,\r\n      email,\r\n      color,\r\n      info,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n    setSaving(false);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === resType)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL, depType: 2 },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [\r\n      { query: getDepartments, variables: { isRTL, depType: 2 } },\r\n      { query: getDepartments, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [\r\n      { query: getDepartments, variables: { isRTL, depType: 2 } },\r\n      { query: getDepartments, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [\r\n      { query: getDepartments, variables: { isRTL, depType: 2 } },\r\n      { query: getDepartments, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport useDepartmentsTech from \"../hooks/useDepartmentsTech\";\r\nimport { useEmployees } from \"../hooks\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resKind, setResKind] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartmentsTech();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter(\r\n        (emp: any) => emp.resKind === resKind && emp.resType === 2\r\n      );\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resKind, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResKind(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResKind(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resKind}\r\n            onChange={(e: any) => {\r\n              setResKind(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={1}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resKind === 2 ? words.resourses : words.employee}\r\n            disabled={!resKind}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [resKind, setResKind] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter(\r\n        (emp: any) => emp.resKind === resKind && emp.resType === 2\r\n      );\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resKind, employees]);\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n    setDepartvalue(null);\r\n    setResKind(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <Box>\r\n          <Box style={{ marginRight: 10, marginTop: -20 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resKind}\r\n              onChange={(e: any) => {\r\n                setResKind(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={1}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            // title={words.employee}\r\n            words={words}\r\n            disabled={!resKind}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={180}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n        </Box>\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments.filter((dep: any) => dep.depType === 2)}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"lg\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={true}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n\r\n          <Box style={{ position: \"absolute\", marginTop: -80, right: 480 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resType}\r\n              onChange={(e: any) => {\r\n                setResType(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={1}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 15 }}></div>\r\n        </Grid>\r\n        <Grid item xs={7}></Grid>\r\n        <Grid item xs={3}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemprice)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.itemqty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemtotal)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    const { company } = this.props;\r\n\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={5}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderLeftWidth: 1,\r\n                borderTopColor: \"#ccc\",\r\n                borderBottomColor: \"#ccc\",\r\n                borderLeftColor: \"#ccc\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n                borderTopLeftRadius: 15,\r\n                height: 90,\r\n              }}\r\n            >\r\n              <img\r\n                src={company?.logo}\r\n                alt={company?.name}\r\n                height={100}\r\n                style={{\r\n                  objectFit: \"contain\",\r\n                  borderRadius: 10,\r\n                  marginTop: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                backgroundColor: \"#eee\",\r\n                borderTopRightRadius: 15,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderRightWidth: 1,\r\n                borderBottomColor: \"#ccc\",\r\n                borderTopColor: \"#ccc\",\r\n                borderRightColor: \"#ccc\",\r\n                height: 90,\r\n              }}\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Contact</div>\r\n                  <div style={contItem}>{company.tel1}</div>\r\n                  <div style={contItem}>{company?.email}</div>\r\n                  <div style={contItem}>{company?.website}</div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Address</div>\r\n                  <div style={contItem}>{company?.address}</div>\r\n                  {/* <div style={contItem}>Doha, Qatar</div> */}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 80, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Name</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 40, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\", color: \"#999\", fontSize: 11 }}>\r\n            Thank you for your business.\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        status\r\n        totalinvoiced\r\n        totalDiscount\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  task,\r\n  value,\r\n  name,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n  const { tasks } = useTasks();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const { company } = useCompany();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n\r\n      if (!task && row.taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === row.taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleReactPrint();\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n            disabled={name === \"customerId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            disabled={name === \"taskId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n            disabled={name === \"employeeId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n            disabled={name === \"departmentId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      setSaving(false);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n\r\nexport const manamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: 4,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const customerTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n];\r\nexport const employeeTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const taskManamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [type, setType] = useState(1);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    setSaving(true);\r\n\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    reset();\r\n    setSaving(false);\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(1);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(row?.title);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      if (row.taskId) {\r\n        const tks = tasks.filter((t: any) => t.id === row.taskId)?.[0];\r\n        setTaskvalue(tks);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onFieldChange({ amount });\r\n    onFieldChange({ items: JSON.stringify(itemsList) });\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n    setEmplvalue(newValue);\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (taskvalue?.employeeId) {\r\n        const empl = employees.filter(\r\n          (em: any) => em._id === taskvalue?.employeeId\r\n        )?.[0];\r\n        onNewFieldChange(empl, \"employee\");\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                autoFocus={true}\r\n                name=\"tasktitle\"\r\n                label={words.title}\r\n                value={tasktitle}\r\n                onChange={(e: any) => {\r\n                  setTasktitle(e.target.value);\r\n                  onNewFieldChange(e.target.value, \"title\");\r\n                }}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees.filter((em: any) => em.resType === 1)}\r\n                value={emplvalue}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments.filter((dep: any) => dep.depType === 1)}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport {\r\n  useCustomers,\r\n  useDepartments,\r\n  useEmployees,\r\n  useLastNos,\r\n} from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n  onCloseAppoint = () => null,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { company } = useCompany();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    const depId = appoint.departmentId;\r\n    const empId = appoint.employeeId;\r\n    if (depId) {\r\n      const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n      setDepartvalue(depart);\r\n    }\r\n    if (empId) {\r\n      const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n      setEmplvalue(empl);\r\n    }\r\n    if (appoint.taskId) {\r\n      const empl = tasks.filter((emp: any) => emp.id === appoint.taskId)[0];\r\n      setTaskvalue(empl);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n      onCloseAppoint();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const date = appoint?.startDate ? new Date(appoint?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n    taskId,\r\n    title,\r\n  } = appointmentData;\r\n\r\n  const task = tasks.filter((t: any) => t.id === taskId)?.[0];\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ alignItems: \"center\", justifyContent: \"flex-start\" }}>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {task?.title}\r\n          </Typography>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList?.[0] && (\r\n            <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n              {isRTL ? itemsList?.[0].nameAr : itemsList?.[0].name}\r\n            </Typography>\r\n          )}\r\n\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginTop: -25, marginRight: 60 }}>\r\n          <Typography gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n  const [mainResourceName, setMainResourceName]: any = useState(\"departmentId\");\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, departvalue, emplvalue, status },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let res: any;\r\n    if (mainResourceName === \"employeeId\") {\r\n      res = employees;\r\n    }\r\n    if (mainResourceName === \"status\") {\r\n      res = eventStatus;\r\n    }\r\n    if (mainResourceName === \"departmentId\") {\r\n      res = departments;\r\n    }\r\n    const resourses = getResourses(res, mainResourceName, \"Data\");\r\n    setResourseData(resourses);\r\n  }, [mainResourceName, departments]);\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        marginTop: isMobile ? 47 : undefined,\r\n        height: window.innerHeight - 10,\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Box style={{ margin: 10 }}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={4}>\r\n            <DateNavigator\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              currentViewNameChange={currentViewNameChange}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentDate={currentDate}\r\n              views={[1, 3, 7, 30]}\r\n            ></DateNavigator>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Box style={{ marginBottom: 3 }}>\r\n                <EventsCalFilter\r\n                  count={rows.length}\r\n                  departvalue={departvalue}\r\n                  setDepartvalue={setDepartvalueDispatch}\r\n                  emplvalue={emplvalue}\r\n                  setEmplvalue={setEmplvalueDispatch}\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  employees={employees.filter((dep: any) => dep.resType === 1)}\r\n                  status={status}\r\n                  setStatus={setStatusDispatch}\r\n                  setMainResourceName={setMainResourceName}\r\n                  mainResourceName={mainResourceName}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  refresh={refresh}\r\n                ></EventsCalFilter>\r\n              </Box>\r\n            </Hidden>\r\n          </Grid>\r\n        </Grid>\r\n        <Box style={{ margin: 0 }}>\r\n          <Scheduler\r\n            data={rows}\r\n            height={\r\n              isMonth\r\n                ? \"auto\"\r\n                : isMobile\r\n                ? window.innerHeight\r\n                : window.innerHeight - 90\r\n            }\r\n            firstDayOfWeek={6}\r\n            locale={isRTL ? \"ar\" : \"en\"}\r\n          >\r\n            {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n            {!isMonth && (\r\n              <EditRecurrenceMenu\r\n                messages={{\r\n                  current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n                  currentAndFollowing: isRTL\r\n                    ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                    : \"This and following appointments\",\r\n                  all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n                  menuEditingTitle: isRTL\r\n                    ? \"تعديل موعد متكرر\"\r\n                    : \"Edit recurring appointment\",\r\n                  menuDeletingTitle: isRTL\r\n                    ? \"حذف موعد متكرر\"\r\n                    : \"Delete recurring appointment\",\r\n                  cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n                  commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n                }}\r\n              />\r\n            )}\r\n            {/* {!isMonth && <IntegratedEditing />} */}\r\n            <ViewState\r\n              currentViewName={currentViewName}\r\n              onCurrentViewNameChange={currentViewNameChange}\r\n              currentDate={currentDate}\r\n              onCurrentDateChange={currentDateChange}\r\n            />\r\n            <DayView\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <DayView\r\n              name=\"3Days\"\r\n              displayName=\"3 Days\"\r\n              intervalCount={3}\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <WeekView\r\n              name=\"Week\"\r\n              displayName=\"Week\"\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <MonthView intervalCount={1} />\r\n            {/* <Toolbar /> */}\r\n            <Appointments appointmentContentComponent={AppointmentContent} />\r\n            <Resources\r\n              data={resourseData}\r\n              mainResourceName={mainResourceName}\r\n            />\r\n            <AppointmentTooltip\r\n              showCloseButton\r\n              showOpenButton={isEditor ? true : false}\r\n              // showDeleteButton\r\n              visible={visible}\r\n              onVisibilityChange={() => setVisible(!visible)}\r\n              contentComponent={({ appointmentData }) => (\r\n                <RenderToolTip\r\n                  appointmentData={appointmentData}\r\n                  setVisible={setVisible}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  editEvent={editEvent}\r\n                  company={company}\r\n                  theme={theme}\r\n                  viewonly={isMobile}\r\n                  tasks={tasks}\r\n                ></RenderToolTip>\r\n              )}\r\n            />\r\n            {/* {!isMonth && <AppointmentForm />} */}\r\n            {!isMonth && (\r\n              <AppointmentForm\r\n                overlayComponent={(args: any) => (\r\n                  <PopupLayoutBox\r\n                    isRTL={isRTL}\r\n                    theme={theme}\r\n                    alrt={{}}\r\n                    open={args.visible || false}\r\n                    title={title}\r\n                    onSubmit={commitChanges}\r\n                    mt={0}\r\n                    mb={50}\r\n                    {...args}\r\n                    onClose={args.onHide}\r\n                    isMobile={isMobile}\r\n                  ></PopupLayoutBox>\r\n                )}\r\n                basicLayoutComponent={(pr: any) => (\r\n                  <AppointForm\r\n                    departments={departments}\r\n                    employees={employees}\r\n                    servicesproducts={services}\r\n                    theme={theme}\r\n                    tasks={tasks}\r\n                    isMobile={isMobile}\r\n                    {...pr}\r\n                  ></AppointForm>\r\n                )}\r\n                commandButtonComponent={CommandAppointment}\r\n              />\r\n            )}\r\n            <AllDayPanel />\r\n            {!isMonth && <DragDropProvider></DragDropProvider>}\r\n            <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n          </Scheduler>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useDepartments, useEmployees } from \"../../hooks\";\r\nimport Main from \"./Main\";\r\n\r\nconst MainCalendar = (props: any) => {\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  return (\r\n    <Main {...props} employees={employees} departments={departments}></Main>\r\n  );\r\n};\r\n\r\nexport default MainCalendar;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  CLOUD_NAME,\r\n  imageUploadOptions,\r\n  UPLOAD_PRESET,\r\n} from \"../constants/sizes\";\r\n\r\nconst serverURL = \"http://jadwal-server:4000\";\r\n\r\nexport const FileUpload = () => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadfile`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderFile = () => {\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <p>file location {data.path}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input type=\"file\" name=\"file\" onChange={handleChange} />\r\n        {data.path && renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageOnlineUpload = ({\r\n  url,\r\n  setUrl,\r\n  image,\r\n  setImage,\r\n  width,\r\n  height,\r\n  size,\r\n}) => {\r\n  const [localimage, setLocalImage]: any = useState(null);\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  const selectImage = (e: any) => {\r\n    const img = e.target?.files?.[0];\r\n    if (img) {\r\n      setImage(img);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setUrl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setLocalImage(URL.createObjectURL(image));\r\n    } else {\r\n      setLocalImage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        ref={fileInput}\r\n        style={{\r\n          width: 0.1,\r\n          height: 0.1,\r\n          opacity: 0,\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n        }}\r\n        type=\"file\"\r\n        onChange={selectImage}\r\n      />\r\n      {localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={localimage}\r\n          />\r\n        </Box>\r\n      )}\r\n      {url && !localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={url}\r\n          />\r\n        </Box>\r\n      )}\r\n      {!localimage && !url && (\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            overflow: \"hidden\",\r\n            width: width,\r\n            height: height,\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#eaeaea\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => fileInput.current.click()}\r\n        >\r\n          <Typography style={{ color: \"#bbb\", fontSize: 14 }}>\r\n            {size}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const uploadPhotoOnline = async (image: any) => {\r\n  try {\r\n    const compressedImage = await imageCompression(image, imageUploadOptions);\r\n    const d = new FormData();\r\n    d.append(\"file\", compressedImage);\r\n    d.append(\"upload_preset\", UPLOAD_PRESET);\r\n    d.append(\"cloud_name\", CLOUD_NAME);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/fivegstore/image/upload\",\r\n      {\r\n        method: \"post\",\r\n        body: d,\r\n      }\r\n    );\r\n    const json = await res.json();\r\n    return json.url;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  ImageOnlineUpload,\r\n  ImageUpload,\r\n  uploadPhotoOnline,\r\n} from \"../../common/upload\";\r\nimport { isProd } from \"../../constants/sizes\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [iconimage, setIconimage] = useState(null);\r\n  const [iconurl, setIconurl] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n      setIconurl(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n    let icon: any;\r\n    if (iconimage) {\r\n      icon = await uploadPhotoOnline(iconimage);\r\n      icon = icon.replace(\"http://\", \"https://\");\r\n    }\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo: icon ? icon : logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            {!isProd && (\r\n              <>\r\n                <img\r\n                  src={logo}\r\n                  alt={company?.name}\r\n                  height={100}\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    borderRadius: 10,\r\n                    marginTop: 5,\r\n                  }}\r\n                />\r\n                <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n              </>\r\n            )}\r\n            <Box style={{ marginBottom: 20 }}></Box>\r\n            {isProd && (\r\n              <ImageOnlineUpload\r\n                url={iconurl}\r\n                setUrl={setIconurl}\r\n                image={iconimage}\r\n                setImage={setIconimage}\r\n                width={300}\r\n                height={150}\r\n                size=\"400x200\"\r\n              ></ImageOnlineUpload>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flexDirection: \"row\",\r\n              direction: \"ltr\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ flexDirection: \"row\", direction: \"ltr\" }}\r\n            >\r\n              <Box\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 11,\r\n                  color: \"#ccc\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                App ID:\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 11,\r\n                  color: \"#ccc\",\r\n                }}\r\n              >\r\n                {company?.appid}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 11,\r\n                color: \"#ccc\",\r\n                marginLeft: 10,\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              {company?.appversion}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { PopupTextField } from \"../../Shared\";\r\n\r\nexport default function Names({ isRTL, words, setNames }) {\r\n  const { store } = useContext(GlobalContext);\r\n  const { names } = store;\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      tasks: names ? names?.tasks : null,\r\n      customers: names ? names?.customers : null,\r\n      employees: names ? names?.employees : null,\r\n      departments: names ? names?.departments : null,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    const { customers, departments, employees, tasks } = data;\r\n    if (\r\n      customers?.length < 3 ||\r\n      customers?.length < 3 ||\r\n      customers?.length < 3 ||\r\n      customers?.length < 3\r\n    ) {\r\n      return;\r\n    }\r\n    const names = {\r\n      tasks,\r\n      customers,\r\n      employees,\r\n      departments,\r\n    };\r\n    setNames(names);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل الاسماء\" : \"Edit Names\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"tasks\"\r\n                label={words.task}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"tasksAr\"\r\n                label={words.task}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"employees\"\r\n                label={words.employee}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"employeesAr\"\r\n                label={words.employee}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"departments\"\r\n                label={words.department}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"departmentsAr\"\r\n                label={words.deparrtment}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"customers\"\r\n                label={words.customer}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"customersAr\"\r\n                label={words.customer}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\nimport Names from \"./Names\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n  const setNames = (data: any) => {\r\n    dispatch({ type: \"setNames\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <Names setNames={setNames} isRTL={isRTL} words={words}></Names>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    setSaving(true);\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setSaving(false);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport { avatarPatternFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport useDepartmentsTech from \"../../hooks/useDepartmentsTech\";\r\n\r\nexport default function Departments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartmentsTech();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment depType={2}></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport useHResoursesTech from \"../../hooks/useHResoursesTech\";\r\n\r\nexport default function Employees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResoursesTech();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee resKind={1} resType={2}></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resKind: 1, resType: 2 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 1, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 1, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 1, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getObjectEvents(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $taskId: Int\r\n  ) {\r\n    getObjectEvents(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    setSaving(true);\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    setSaving(false);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n    setSaving(false);\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={240}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      setTasktitle(row?.title);\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      bgcolor={colors.blue[500]}\r\n      mb={20}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                      disabled={name === \"customerId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"taskId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                      disabled={name === \"employeeId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"departmentId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Box>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAddMultiEvents\r\n          open={openMulti}\r\n          onClose={() => setOpenMulti(false)}\r\n          onSubmit={setRrule}\r\n          theme={theme}\r\n          isRTL={isRTL}\r\n          words={words}\r\n        ></PopupAddMultiEvents>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  updateEvent,\r\n} from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport getObjectEvents from \"../graphql/query/getObjectEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport LoadingInline from \"./LoadingInline\";\r\nimport PopupAppointmentCustomer from \"../pubups/PopupAppointmentCustomer\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  id,\r\n  name,\r\n  isNew,\r\n  company,\r\n  value,\r\n}: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    col.docNo,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n  const { tasks } = useTasks();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getObjectEvents,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getObjectEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n    getEvents({ variables });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const data = eventsData?.data?.[\"getObjectEvents\"]?.data;\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    const events = data || [];\r\n    setRows(events);\r\n  }, [eventsData]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      {loading && <LoadingInline></LoadingInline>}\r\n\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n\r\n          <VirtualTable\r\n            height={600}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentCustomer\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              company={company}\r\n              isEditor={isEditor}\r\n              tasks={tasks}\r\n              name={name}\r\n              value={value}\r\n            ></PopupAppointmentCustomer>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  tasks,\r\n  taskvalue,\r\n  setTaskvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  total,\r\n  words,\r\n  isRTL,\r\n  documentTypes,\r\n  types,\r\n  setTypes,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [taskvalueLocal, setTaskvalueLocal] = React.useState([]);\r\n  const [typesvalueLocal, setTypesvalueLocal] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setTaskvalueLocal(taskvalue);\r\n      setTypesvalueLocal(types);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setTaskvalueLocal([]);\r\n    setTypesvalueLocal([]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setTaskvalue([]);\r\n    setTypes([]);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setTaskvalue(taskvalueLocal);\r\n    setTypes(typesvalueLocal);\r\n    setOpen(false);\r\n  };\r\n  const tt = types ? types : [];\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...taskvalue,\r\n    ...tt,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              {documentTypes && (\r\n                <FilterSelectMulti\r\n                  options={documentTypes}\r\n                  value={typesvalueLocal}\r\n                  setValue={setTypesvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"type\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {tasks && tasks.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={tasks}\r\n                  value={taskvalueLocal}\r\n                  setValue={setTaskvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"task\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              {servicevalue && servicevalue.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={services}\r\n                  value={servicevalueLocal}\r\n                  setValue={setServicevalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"serviceproduct\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n  color = theme.palette.primary.main,\r\n  bgcolor = fade(theme.palette.primary.dark, 0.12),\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n        minWidth: 450,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: bgcolor,\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#bbb\" : color,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{}}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services} // items\r\n              itemType={itemType}\r\n              setItemType={setsetItemTypeDispatch}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { PopupInvoice } from \"../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { getColumns } from \"../common/columns\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { TableComponent } from \"../pages/reports/SalesReport\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function InvoicesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={amountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"total\", \"discount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n          <PopupInvoice\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            tasks={tasks}\r\n          ></PopupInvoice>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getReceipts(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoicesList(\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoicesList(\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getInvoicesList from \"../graphql/query/getInvoicesList\";\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [invoices, setInvoices] = useState<any>([]);\r\n  const [invoicevalue, setInvoicevalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  const [loadInvoices, invoicesData]: any = useLazyQuery(getInvoicesList, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  useEffect(() => {\r\n    if (custvalue) {\r\n      const variables = { customerId: custvalue._id };\r\n      loadInvoices({ variables });\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [custvalue, open]);\r\n\r\n  useEffect(() => {\r\n    if (invoicesData?.data?.getInvoicesList?.data) {\r\n      const { data } = invoicesData.data.getInvoicesList;\r\n      if (data?.length > 0) {\r\n        const ndata = data.map((d: any) => {\r\n          const title = `${d.docNo} - ${d.amount}QR`;\r\n          return {\r\n            ...d,\r\n            name: title,\r\n            nameAr: title,\r\n          };\r\n        });\r\n        setInvoices(ndata);\r\n        if (row.refNo) {\r\n          const inv = ndata.filter((ts: any) => ts.docNo === row.refNo)?.[0];\r\n          setInvoicevalue(inv);\r\n        }\r\n      }\r\n    }\r\n  }, [invoicesData]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const department = invoicevalue\r\n      ? {\r\n          departmentId: invoicevalue.departmentId,\r\n          departmentName: invoicevalue.departmentName,\r\n          departmentNameAr: invoicevalue.departmentNameAr,\r\n          departmentColor: invoicevalue.departmentColor,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = invoicevalue\r\n      ? {\r\n          employeeId: invoicevalue.employeeId,\r\n          employeeName: invoicevalue.employeeName,\r\n          employeeNameAr: invoicevalue.employeeNameAr,\r\n          employeeColor: invoicevalue.employeeColor,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: invoicevalue ? invoicevalue.taskId : undefined,\r\n      refNo: invoicevalue ? invoicevalue.docNo : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    console.log(variables);\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setInvoices([]);\r\n    setCustvalue(null);\r\n    setInvoicevalue(null);\r\n    setCustError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n                disabled={name === \"customerId\"}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب القبض\" : \"Receipt Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"invoice\"\r\n                title={isRTL ? \"الفواتير\" : \"Invoices\"}\r\n                words={words}\r\n                options={invoices}\r\n                value={invoicevalue}\r\n                setSelectValue={setInvoicevalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                disabled={!custvalue}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\n\r\nimport getReceipts from \"../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../pubups/PopupReceipt\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ReceiptCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            customerAccountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addFinance}\r\n          editAction={editFinance}\r\n        >\r\n          <PopupReceipt name={name} value={value} tasks={tasks}></PopupReceipt>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const customer = taskvalue\r\n      ? {\r\n          customerId: taskvalue.customerId,\r\n          customerName: taskvalue.customerName,\r\n          customerNameAr: taskvalue.customerNameAr,\r\n          customerPhone: taskvalue.customerPhone,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب المصروف\" : \"Expenses Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={isRTL ? \"حساب الدفع\" : \"Payment Acc\"}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                disabled={name === \"taskId\"}\r\n              ></AutoFieldLocal>\r\n\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اداري\" : \"Managment\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                />\r\n                <FormControlLabel\r\n                  value={3}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 3 ? words.resourses : words.employee}\r\n                disabled={!resType || name === \"employeeId\"}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n                disabled={name === \"departmentId\"}\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport PopupExpenses from \"../pubups/PopupExpenses\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ExpensesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addExpenses}\r\n          editAction={editExpenses}\r\n        >\r\n          <PopupExpenses\r\n            name={name}\r\n            value={value}\r\n            tasks={tasks}\r\n          ></PopupExpenses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  addEventsToList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const start = new Date();\r\n    const end = new Date();\r\n    start.setMinutes(0);\r\n    end.setHours(end.getHours() + 1);\r\n    end.setMinutes(0);\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n    setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    setCustvalue(customer);\r\n    setDepartvalue(department);\r\n    setEmplvalue(employee);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setSaving(false);\r\n    setTasktitle(null);\r\n  };\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const event = {\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      user: user._id,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist, isRTL });\r\n    addEventsToList(eventlist);\r\n    setSaving(false);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n      bgcolor={colors.blue[500]}\r\n      savetitle={isRTL ? \"متابعة\" : \"Proceed\"}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  height={200}\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  departmentFormatter,\r\n  employeeFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { Command } from \"./Command\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  rows,\r\n  removeEventFromList,\r\n  isRTL,\r\n  words,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 1, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    {\r\n      id: 4,\r\n      ref: \"department\",\r\n      name: \"departmentname\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      id: 5,\r\n      ref: \"employee\",\r\n      name: \"employeename\",\r\n      title: words.employee,\r\n    },\r\n\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeEventFromList(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 500,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 500,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <VirtualTable\r\n            height={500}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentname\"]}\r\n            formatterComponent={(props: any) =>\r\n              departmentFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeename\"]}\r\n            formatterComponent={(props: any) =>\r\n              employeeFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <TableEditColumn\r\n            showDeleteCommand={rows && rows.length > 1}\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, colors, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { compressEvents } from \"../common/time\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n  refresh,\r\n  startrange,\r\n  endrange,\r\n  value = null,\r\n  name = null,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const addEventsToList = (events: any) => {\r\n    const newArray = [...evList, ...events];\r\n    const sorted = _.sortBy(newArray, \"startDate\");\r\n    const listwithindex = indexTheList(sorted);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  const removeEventFromList = (index: any) => {\r\n    const newList = [...evList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue && name !== \"departmentId\") {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setHours(23, 59, 59, 999);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 1)?.[0]);\r\n      setEvList([]);\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setSaving(false);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!tasktitle) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة اسم للمهمة\" : \"Please add Task title\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && (!evList || evList.length === 0)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة موعد\" : \"Please add Appointment\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const events =\r\n      evList && evList.length > 0 ? compressEvents(evList) : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 1,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      evQty: evList ? evList.length : undefined,\r\n      evDone: isNew ? 0 : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setTimeout(() => {\r\n        refresh();\r\n        onCloseForm();\r\n      }, 1000);\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      saving={saving}\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={4}>\r\n            <TextFieldLocal\r\n              required\r\n              autoFocus={true}\r\n              name=\"tasktitle\"\r\n              label={words.title}\r\n              value={tasktitle}\r\n              onChange={(e: any) => setTasktitle(e.target.value)}\r\n              row={row}\r\n              fullWidth\r\n              mb={0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"customer\"\r\n              title={words.customer}\r\n              words={words}\r\n              options={customers}\r\n              value={custvalue}\r\n              setSelectValue={setCustvalue}\r\n              setSelectError={setCustError}\r\n              selectError={custError}\r\n              refernce={custRef}\r\n              register={register}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              showphone\r\n              disabled={name === \"customerId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"employee\"\r\n              title={words.employee}\r\n              words={words}\r\n              options={employees.filter((em: any) => em.resType === 1)}\r\n              value={emplvalue}\r\n              setSelectValue={setEmplvalue}\r\n              setSelectError={setEmplError}\r\n              selectError={emplError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              day={day}\r\n              disabled={name === \"employeeId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter((dep: any) => dep.depType === 1)}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepartError}\r\n              selectError={departError}\r\n              refernce={departRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              disabled={name === \"departmentId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={10}>\r\n            {isNew && (\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#F3F3F3\",\r\n                  marginTop: 15,\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\",\r\n                    marginInlineStart: 10,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    {isRTL ? \"اضافة مواعيد\" : \"Add Appointments\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    isTaskNew={isNew}\r\n                    rows={evList}\r\n                    removeEventFromList={removeEventFromList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                    start={startrange}\r\n                    end={endrange}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          addEventsToList={addEventsToList}\r\n        ></PopupTaskAppointment>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { VirtualTable } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { colors, fade, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\nconst stylesBlue = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.blue[500], 0.13),\r\n    },\r\n  },\r\n});\r\nconst stylesGreen = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.green[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesRed = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.red[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesOrange = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.orange[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesPurple = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.deepPurple[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesGrey = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.grey[400], 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponentBlue = withStyles(stylesBlue, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGreen = withStyles(stylesGreen, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentRed = withStyles(stylesRed, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentOrange = withStyles(stylesOrange, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentPurple = withStyles(stylesPurple, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGrey = withStyles(stylesGrey, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n      const depId = task.departmentId;\r\n      const empId = task.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      // handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={null}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport _ from \"lodash\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\nimport { taskManamentTabs } from \"../constants/rrule\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 224,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskView = ({\r\n  open,\r\n  onClose,\r\n  item,\r\n  tasks,\r\n  isNew,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n  const [row, setRow] = useState(item);\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (item?.id && tasks && tasks.length > 0) {\r\n      const opened = tasks.filter((ts: any) => ts.id === item.id)?.[0];\r\n      setRow(opened);\r\n    }\r\n  }, [tasks]);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalDiscount = row?.totalDiscount ? row.totalDiscount : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n      if (items && items.length > 0) {\r\n        const ids = items.map((it: any) => it.itemId);\r\n        const servlist = servicesproducts.filter((ser: any) =>\r\n          ids.includes(ser._id)\r\n        );\r\n\r\n        const itemsWqtyprice = items.map((item: any, index: any) => {\r\n          const {\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n          } = item;\r\n          const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n          return {\r\n            ...serv,\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n            index,\r\n            itemprice: item.itemPrice,\r\n            itemqty: item.qty,\r\n            itemtotal: item.total,\r\n            // itemtotalcost: item.qty * serv.cost,\r\n          };\r\n        });\r\n        const finalItems = _(itemsWqtyprice)\r\n          .groupBy(\"_id\")\r\n          .map((array, key) => ({\r\n            _id: array[0]._id,\r\n            name: array[0].name,\r\n            nameAr: array[0].nameAr,\r\n            categoryId: array[0].categoryId,\r\n            categoryName: array[0].categoryName,\r\n            categoryNameAr: array[0].categoryNameAr,\r\n            departmentId: array[0].departmentId,\r\n            departmentName: array[0].departmentName,\r\n            departmentNameAr: array[0].departmentNameAr,\r\n            departmentColor: array[0].departmentColor,\r\n            employeeId: array[0].employeeId,\r\n            employeeName: array[0].employeeName,\r\n            employeeNameAr: array[0].employeeNameAr,\r\n            employeeColor: array[0].employeeColor,\r\n            autoNo: array[0].autoNo,\r\n            docNo: array[0].docNo,\r\n            cost: array[0].cost,\r\n            itemType: array[0].itemType,\r\n            index: array[0].index,\r\n            itemprice: array[0].itemprice,\r\n            itemqty: _.sumBy(array, \"itemqty\"),\r\n            itemtotal: _.sumBy(array, \"itemtotal\"),\r\n          }))\r\n          .orderBy(\"index\")\r\n          .value();\r\n        setItemsList(finalItems);\r\n      }\r\n    }\r\n  }, [itemsData, open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const variables = { taskId: row.id };\r\n      getItems({ variables });\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setEvList([]);\r\n    setValue(0);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const viewtotal = total ? total : amount;\r\n  const title = `${words.task} : ${row?.title}`;\r\n  console.log(totalDiscount);\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      alrt={{}}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      onlyclose\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n              }}\r\n            >\r\n              <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n\r\n              {row && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <TabPanel value={value} index={0}>\r\n                    <EventsCustomer\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      customers={customers}\r\n                      servicesproducts={servicesproducts}\r\n                      isEditor={isEditor}\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      theme={theme}\r\n                      isNew={isNew}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></EventsCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                    <InvoicesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      company={company}\r\n                      servicesproducts={servicesproducts}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></InvoicesCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                    <ReceiptCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ReceiptCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={3}>\r\n                    <ExpensesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ExpensesCustomer>\r\n                  </TabPanel>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      marginLeft: 20,\r\n                      marginRight: 20,\r\n                    }}\r\n                  >\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(viewtotal)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {progress}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n                      <Box>\r\n                        <Typography style={{ fontSize: 14 }}>\r\n                          {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", fontSize: 14 }}\r\n                        >\r\n                          {moneyFormat(totalinvoiced)}\r\n                        </Typography>\r\n                      </Box>\r\n                      {totalDiscount > 0 && (\r\n                        <Box style={{ marginLeft: 20, marginRight: 20 }}>\r\n                          <Typography style={{ fontSize: 14 }}>\r\n                            {isRTL ? \"الحسومات\" : \"Total Discounts\"}\r\n                          </Typography>\r\n                          <Typography\r\n                            style={{ fontWeight: \"bold\", fontSize: 14 }}\r\n                          >\r\n                            {moneyFormat(totalDiscount)}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalpaid)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.red[500] }}\r\n                      >\r\n                        {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.red[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(totalinvoiced - totalpaid - totalDiscount)}\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(toatlExpenses)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.blue[500] }}\r\n                      >\r\n                        {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.blue[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(\r\n                          totalinvoiced - toatlExpenses - totalDiscount\r\n                        )}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          {row && (\r\n            <Grid item xs={1}>\r\n              <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n                <Tabs\r\n                  orientation=\"vertical\"\r\n                  variant=\"scrollable\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"items\"\r\n                  className={classes.tabs}\r\n                >\r\n                  {taskManamentTabs.map((item: any) => {\r\n                    return (\r\n                      <Tab\r\n                        style={{\r\n                          backgroundColor:\r\n                            value === item.id ? \"#eee\" : undefined,\r\n                        }}\r\n                        label={isRTL ? item.nameAr : item.name}\r\n                        {...a11yProps(item.id)}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Tabs>\r\n              </Box>\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  margin: 7,\r\n                  padding: 8,\r\n                  borderRadius: 5,\r\n                  alignItems: \"flex-start\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    marginTop: 10,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  {row.title}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.customer}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.customerNameAr : row.customerName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.employee}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.employeeNameAr : row.employeeName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.department}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.departmentNameAr : row.departmentName}\r\n                </Typography>\r\n              </Box>\r\n              <Box style={{ padding: 10, marginTop: 20 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.newInvoice}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {row && (\r\n          <PopupTaskAppointment\r\n            open={openEvent}\r\n            onClose={() => setOpenEvent(false)}\r\n            row={null}\r\n            isNew={true}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            setEvList={setEvList}\r\n          ></PopupTaskAppointment>\r\n        )}\r\n        {row && (\r\n          <PopupTaskInvoice\r\n            open={openInvoice}\r\n            onClose={() => setOpenInvoice(false)}\r\n            task={row}\r\n            customers={customers}\r\n            services={servicesproducts}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            theme={theme}\r\n            items={itemsList}\r\n          ></PopupTaskInvoice>\r\n        )}\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  TableColumnVisibility,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \".\";\r\nimport {\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n} from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"./colorFormat\";\r\nimport { AlertLocal } from \"../components\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport PopupTask from \"../pubups/PopupTask\";\r\nimport createTask from \"../graphql/mutation/createTask\";\r\nimport updateTask from \"../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../hooks\";\r\nimport { errorAlert, errorDeleteAlert } from \"./helpers\";\r\nimport { TableComponent } from \"./TableComponent\";\r\nimport PopupTaskView from \"../pubups/PopupTaskView\";\r\nimport useTasks from \"../hooks/useTasks\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function TasksCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n  value,\r\n  name,\r\n  id,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const { tasks } = useTasks();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getTasks\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <TableColumnVisibility\r\n          columnExtensions={tableColumnVisibilityColumnExtensions}\r\n          defaultHiddenColumnNames={[\r\n            col.department.name,\r\n            col.evQty.name,\r\n            col.toatlExpenses.name,\r\n            col.start.name,\r\n            col.end.name,\r\n          ]}\r\n        />\r\n        <DataTypeProvider\r\n          for={[\"title\"]}\r\n          formatterComponent={(props: any) =>\r\n            nameLinkFormat({ ...props, setItem, setOpenItem })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"start\", \"end\"]}\r\n          formatterComponent={createdAtFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"due\"]}\r\n          formatterComponent={dueAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n          formatterComponent={currencyFormatterEmpty}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"totalinvoiced\"]}\r\n          formatterComponent={invoiceReceiptFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"income\"]}\r\n          formatterComponent={incomeAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"tasktype\"]}\r\n          formatterComponent={taskNameFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"progress\"]}\r\n          formatterComponent={progressFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addTask} editAction={editTask}>\r\n          <PopupTask\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            addCustomer={addCustomer}\r\n            editCustomer={editCustomer}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            isEditor={isEditor}\r\n            refresh={refresh}\r\n          ></PopupTask>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n      {item && (\r\n        <PopupTaskView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n          refresh={refresh}\r\n          addAction={addTask}\r\n          editAction={editTask}\r\n        ></PopupTaskView>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupCustomerView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalDiscount = row?.totalDiscount ? row.totalDiscount : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.customer} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalinvoiced)}\r\n                      </Typography>\r\n                    </Box>\r\n                    {totalDiscount > 0 && (\r\n                      <Box style={{ marginLeft: 20, marginRight: 20 }}>\r\n                        <Typography style={{ fontSize: 14 }}>\r\n                          {isRTL ? \"الحسومات\" : \"Total Discounts\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", fontSize: 14 }}\r\n                        >\r\n                          {moneyFormat(totalDiscount)}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid - totalDiscount)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(\r\n                        totalinvoiced - toatlExpenses - totalDiscount\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomerView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport {\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Customers(props: any) {\r\n  const { isRTL, words, menuitem, isEditor, theme, company, servicesproducts } =\r\n    props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [rows, setRows] = useState([]);\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.address },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getCustomers, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getCustomers,\r\n        variables: { isRTL },\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getCustomers\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    loadTasks({ isRTL });\r\n  }, []);\r\n\r\n  const [addCustomer] = useMutation(createCustomer, refresQuery);\r\n  const [editCustomer] = useMutation(updateCustomer, refresQuery);\r\n  const [removeCustomer] = useMutation(deleteCustomer, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getCustomers?.data) {\r\n      const { data } = tasksData.data.getCustomers;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"email\", \"address\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupCustomerView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { TableComponent } from \"../reports/SalesReport\";\r\nimport { colors } from \"@material-ui/core\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert, Loading } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  fade,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { tafkeet } from \"../common/helpers\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n      setTasktitle(row?.title);\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n      taskvalue={taskvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (dep: any) => dep.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  marginTop: 5,\r\n                  backgroundColor: fade(colors.grey[400], 0.2),\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 180, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: fade(colors.grey[400], 0.2),\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <Typography\r\n                style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n              >\r\n                {words.total} : {moneyFormat(totals.amount)}\r\n              </Typography>\r\n              {totals?.amount && (\r\n                <Typography style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                  {tafkeet(totals.amount)}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          onCloseAppoint={onClose}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupDepartmentView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalDiscount = row?.totalDiscount ? row.totalDiscount : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.department} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalinvoiced)}\r\n                      </Typography>\r\n                    </Box>\r\n                    {totalDiscount > 0 && (\r\n                      <Box style={{ marginLeft: 20, marginRight: 20 }}>\r\n                        <Typography style={{ fontSize: 14 }}>\r\n                          {isRTL ? \"الحسومات\" : \"Total Discounts\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", fontSize: 14 }}\r\n                        >\r\n                          {moneyFormat(totalDiscount)}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid - totalDiscount)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(\r\n                        totalinvoiced - toatlExpenses - totalDiscount\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDepartmentView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupEmployeeView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalDiscount = row?.totalDiscount ? row.totalDiscount : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.employee} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalinvoiced)}\r\n                      </Typography>\r\n                    </Box>\r\n                    {totalDiscount > 0 && (\r\n                      <Box style={{ marginLeft: 20, marginRight: 20 }}>\r\n                        <Typography style={{ fontSize: 14 }}>\r\n                          {isRTL ? \"الحسومات\" : \"Total Discounts\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", fontSize: 14 }}\r\n                        >\r\n                          {moneyFormat(totalDiscount)}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid - totalDiscount)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(\r\n                        totalinvoiced - toatlExpenses - totalDiscount\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployeeView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n  nameLinkFormat,\r\n  taskIdLinkFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  colors,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [due, setDue] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.createdAt,\r\n    col.startDate,\r\n    col.fromto,\r\n    col.customer,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [openTaskItem, setOpenTaskItem] = useState(false);\r\n  const [openCustomerItem, setOpenCustomerItem] = useState(false);\r\n  const [openEmployeeItem, setOpenEmployeeItem] = useState(false);\r\n  const [openDepartmentItem, setOpenDepartmentItem] = useState(false);\r\n\r\n  const onCloseTaskItem = () => {\r\n    setOpenTaskItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseCustomerItem = () => {\r\n    setOpenCustomerItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseEmployeeItem = () => {\r\n    setOpenEmployeeItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseDepartmentItem = () => {\r\n    setOpenDepartmentItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n\r\n  const setEmployeeItem = (data: any) => {\r\n    const empl = employees.filter((em: any) => em._id === data.employeeId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"employee\");\r\n    }\r\n  };\r\n  const setDepartmentItem = (data: any) => {\r\n    const empl = departments.filter(\r\n      (em: any) => em._id === data.departmentId\r\n    )?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"department\");\r\n    }\r\n  };\r\n  const setCustomerItem = (data: any) => {\r\n    const empl = customers.filter((em: any) => em._id === data.customerId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"customer\");\r\n    }\r\n  };\r\n\r\n  const { tasks } = useTasks();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n  const { employees, addEmployee, editEmployee } = useEmployees();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n      due,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end, due]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  useEffect(() => {\r\n    if (name === \"department\") {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"employee\") {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"customer\") {\r\n      console.log(\"customer\", item);\r\n\r\n      if (customers && customers.length > 0) {\r\n        const opened = customers.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments, employees, customers]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.startDate.name, togglingEnabled: false },\r\n    { columnName: col.fromto.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              opacity: due ? 0.5 : undefined,\r\n              pointerEvents: due ? \"none\" : undefined,\r\n            }}\r\n          >\r\n            <DateNavigatorReports\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              currentDate={currentDate}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentViewNameChange={currentViewNameChange}\r\n              endDate={endDate}\r\n              endDateChange={endDateChange}\r\n              views={[1, 7, 30, 365, 1000]}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              color={colors.blue[700]}\r\n              bgcolor={colors.blue[50]}\r\n            ></DateNavigatorReports>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              padding: 0,\r\n              margin: 0,\r\n              backgroundColor: colors.blue[50],\r\n              paddingRight: 10,\r\n              marginLeft: 40,\r\n              marginRight: 40,\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={{ padding: 7 }}\r\n                  checked={due}\r\n                  onChange={() => setDue(!due)}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography\r\n                  style={{ color: colors.blue[700] }}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {isRTL ? \"المواعيد المتأخرة\" : \"Due Appointments\"}\r\n                </Typography>\r\n              }\r\n              style={{ fontSize: 14 }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            columnExtensions={tableColumnVisibilityColumnExtensions}\r\n            defaultHiddenColumnNames={[\r\n              col.createdAt.name,\r\n              col.status.name,\r\n              col.docNo.name,\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"startDate\", \"createdAt\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdLinkFormat({\r\n                ...props,\r\n                tasks,\r\n                setItem,\r\n                setOpenItem: setOpenTaskItem,\r\n                setName,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeeNameAr\", \"employeeName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setEmployeeItem,\r\n                setOpenItem: setOpenEmployeeItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentNameAr\", \"departmentName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setDepartmentItem,\r\n                setOpenItem: setOpenDepartmentItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"customerNameAr\", \"customerName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setCustomerItem,\r\n                setOpenItem: setOpenCustomerItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 110,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n        <PopupDepartmentView\r\n          open={openDepartmentItem}\r\n          onClose={onCloseDepartmentItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n        <PopupEmployeeView\r\n          open={openEmployeeItem}\r\n          onClose={onCloseEmployeeItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n        <PopupTaskView\r\n          open={openTaskItem}\r\n          onClose={onCloseTaskItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n        ></PopupTaskView>\r\n        <PopupCustomerView\r\n          open={openCustomerItem}\r\n          onClose={onCloseCustomerItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SummaryState,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  currencyFormatterEmpty,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport _ from \"lodash\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amount,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {}, [rows]);\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      const isCredit = accvalue?.[0]?.accType === 2;\r\n      let credit: any;\r\n      let debit: any;\r\n      if (amount < 0) {\r\n        credit = isCredit ? 0 : -amount;\r\n        debit = isCredit ? -amount : 0;\r\n      } else {\r\n        credit = isCredit ? amount : 0;\r\n        debit = isCredit ? 0 : amount;\r\n      }\r\n\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n        credit,\r\n        debit,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    const sum = _.sumBy(updatedRows, \"amount\");\r\n\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n            }}\r\n          >\r\n            <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n              <FilterSelectCkeckBox\r\n                options={tasks}\r\n                value={taskvalue?.[0]}\r\n                setValue={setTaskvalueDispatch}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"task\"\r\n                nomulti\r\n                width={250}\r\n              ></FilterSelectCkeckBox>\r\n            </Box>\r\n            <FilterSelectCkeckBox\r\n              options={mainaccounts}\r\n              value={accvalue?.[0]}\r\n              setValue={setAccvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"account\"\r\n              nomulti\r\n              width={250}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          {accvalue && accvalue.length > 0 && (\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n                minWidth: 120,\r\n                marginRight: 90,\r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n                {currencyFormatter({ value: total })}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            <SummaryState totalItems={totalSummaryItems} />\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              defaultHiddenColumnNames={[col.amount.name]}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 9\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={customers}\r\n              value={custvalue?.[0]}\r\n              setValue={setCustvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"customer\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              minWidth: 120,\r\n              marginRight: 90,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <FilterSelectCkeckBox\r\n              options={tasks}\r\n              value={taskvalue?.[0]}\r\n              setValue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"task\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments } from \"../hooks\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n  resKind,\r\n  resType,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      resKind,\r\n      resType,\r\n      color,\r\n      info,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter(\r\n                (dep: any) => dep.depType === resType\r\n              )}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport useOResoursesTech from \"../../hooks/useOResoursesTech\";\r\n\r\nexport default function Resourses({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useOResoursesTech();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupResourses resKind={2} resType={2}></PopupResourses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resKind: 2, resType: 2 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 2, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 2, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 2, resType: 2 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={8}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginBottom: -15 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اداري\" : \"Managment\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={3}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}></Grid>\r\n                <Grid item xs={8}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport {\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, colors } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    col.createdAt,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n  const {\r\n    state: { currentDate, currentViewName, endDate },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.deepPurple[400]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            color={colors.deepPurple[700]}\r\n            bgcolor={colors.deepPurple[50]}\r\n          ></DateNavigatorReports>\r\n          <Box style={{}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setOpenGantt(true)}\r\n            >\r\n              {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            <SearchState />\r\n\r\n            <IntegratedSorting />\r\n            <IntegratedFiltering />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n              tableComponent={TableComponent}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              defaultHiddenColumnNames={[\r\n                col.createdAt.name,\r\n                col.department.name,\r\n                col.evQty.name,\r\n                col.toatlExpenses.name,\r\n                col.start.name,\r\n                col.end.name,\r\n              ]}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"title\"]}\r\n              formatterComponent={(props: any) =>\r\n                nameLinkFormat({ ...props, setItem, setOpenItem })\r\n              }\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\", \"createdAt\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"due\"]}\r\n              formatterComponent={dueAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"totalinvoiced\"]}\r\n              formatterComponent={invoiceReceiptFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"income\"]}\r\n              formatterComponent={incomeAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n                refresh={refresh}\r\n                startrange={start}\r\n                endrange={end}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n          {alrt.show && (\r\n            <AlertLocal\r\n              isRTL={isRTL}\r\n              type={alrt?.type}\r\n              msg={alrt?.msg}\r\n              top\r\n            ></AlertLocal>\r\n          )}\r\n          {item && (\r\n            <PopupTaskView\r\n              open={openItem}\r\n              onClose={onCloseItem}\r\n              item={item}\r\n              tasks={rows}\r\n              isNew={false}\r\n              theme={theme}\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              addCustomer={addCustomer}\r\n              editCustomer={editCustomer}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              isEditor={isEditor}\r\n              refresh={refresh}\r\n              startrange={start}\r\n              endrange={end}\r\n              addAction={addTask}\r\n              editAction={editTask}\r\n            ></PopupTaskView>\r\n          )}\r\n        </Paper>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportDocuments(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportDocuments(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        opType\r\n        taskId\r\n        branch\r\n        time\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const DocumentsReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default DocumentsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  documentTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportDocuments from \"../../graphql/query/getReportDocuments\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function DocumentsReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportDocuments, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(DocumentsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportDocuments\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          types: inActiveColumns(\"types\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={[]}\r\n              setServicevalue={() => null}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n              zIndex: 115,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={documentTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initDocumentsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const documentsReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const ServicesReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default ServicesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportServices(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportServices(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportServices from \"../../graphql/query/getReportServices\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function ServicesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportServices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(ServicesReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportServices\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"total\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"total\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initServicesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const servicesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  daysoffFormatter,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { useCustomers, useDepartments } from \"../../hooks\";\r\n\r\nexport default function ManageEmployees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  servicesproducts,\r\n  company,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResourses();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [employees]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid\r\n          rows={employees.filter((em: any) => em.resType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\r\n              \"email\",\r\n              \"info\",\r\n              \"phone\",\r\n              \"daysoff\",\r\n              \"avatar\",\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee resKind={1} resType={1}></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupEmployeeView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resKind: 1, resType: 1 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 1, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 1, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 1, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\n\r\nexport default function ManageDepartments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  company,\r\n  servicesproducts,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { customers } = useCustomers();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid\r\n          rows={departments.filter((em: any) => em.depType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"avatar\", \"depType\", \"desc\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment depType={1}></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupDepartmentView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n    employees,\r\n    departments,\r\n    customers,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport EmployeesAppoints from \"./Employees\";\r\n\r\nconst EmployeesCalendar = (props: any) => {\r\n  const [state, setstate] = useState([]);\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const emps = employees.filter((em: any) => em.resType === 1);\r\n      setstate(emps);\r\n    }\r\n  }, [employees]);\r\n\r\n  return (\r\n    <EmployeesAppoints\r\n      {...props}\r\n      employees={state}\r\n      departments={departments}\r\n      customers={customers}\r\n    ></EmployeesAppoints>\r\n  );\r\n};\r\n\r\nexport default EmployeesCalendar;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupResoursesView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalDiscount = row?.totalDiscount ? row.totalDiscount : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.resourses} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalinvoiced)}\r\n                      </Typography>\r\n                    </Box>\r\n                    {totalDiscount > 0 && (\r\n                      <Box style={{ marginLeft: 20, marginRight: 20 }}>\r\n                        <Typography style={{ fontSize: 14 }}>\r\n                          {isRTL ? \"الحسومات\" : \"Total Discounts\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          style={{ fontWeight: \"bold\", fontSize: 14 }}\r\n                        >\r\n                          {moneyFormat(totalDiscount)}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid - totalDiscount)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(\r\n                        totalinvoiced - toatlExpenses - totalDiscount\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResoursesView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  daysoffFormatter,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { useCustomers, useDepartments } from \"../../hooks\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResoursesView from \"../../pubups/PopupResoursesView\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\n\r\nexport default function ManageResourses({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  servicesproducts,\r\n  company,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useOResourses();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [employees]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid\r\n          rows={employees.filter((em: any) => em.resType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"info\", \"avatar\"]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupResourses resKind={2} resType={1}></PopupResourses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupResoursesView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupResoursesView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resKind: 2, resType: 1 },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 2, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 2, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resKind: 2, resType: 1 } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport MainCalendar from \"../calendar/MainCalendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport { useBranches, useServices, useSuppliers } from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport DocumentsReport from \"../reports/DocumentsReport\";\r\nimport {\r\n  documentsReportReducer,\r\n  initDocumentsReportContext,\r\n} from \"../../contexts/documentsReport/documentsReducer\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\nimport ServicesReport from \"../reports/ServicesReport\";\r\nimport {\r\n  initServicesReportContext,\r\n  servicesReportReducer,\r\n} from \"../../contexts/servicesReport/servicesReducer\";\r\nimport ManageEmployees from \"../adds/ManageEmployees\";\r\nimport ManageDepartments from \"../adds/ManageDepartments\";\r\nimport EmployeesCalendar from \"../calendar/EmployeesCalendar\";\r\nimport ManageResourses from \"../adds/ManageResourses\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [documentsStore, documentsDispatch] = useReducer(\r\n    documentsReportReducer,\r\n    initDocumentsReportContext\r\n  );\r\n  const [servicesStore, servicesDispatch] = useReducer(\r\n    servicesReportReducer,\r\n    initServicesReportContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesCalendar>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n                isEditor={isEditor}\r\n                company={company}\r\n                servicesproducts={services}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <Departments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Departments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/managedepartments\"\r\n            component={() => (\r\n              <ManageDepartments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageDepartments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <Employees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Employees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/manageemployees\"\r\n            component={() => (\r\n              <ManageEmployees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageEmployees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <Resourses\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Resourses>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/manageresourses\"\r\n            component={() => (\r\n              <ManageResourses\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageResourses>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/docreports\"\r\n            component={() => (\r\n              <DocumentsReportContext.Provider\r\n                value={{\r\n                  state: documentsStore,\r\n                  dispatch: documentsDispatch,\r\n                }}\r\n              >\r\n                <DocumentsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></DocumentsReport>\r\n              </DocumentsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/servicesreports\"\r\n            component={() => (\r\n              <ServicesReportContext.Provider\r\n                value={{\r\n                  state: servicesStore,\r\n                  dispatch: servicesDispatch,\r\n                }}\r\n              >\r\n                <ServicesReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></ServicesReport>\r\n              </ServicesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable import/first */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nrequire(\"dotenv\").config();\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/first */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}